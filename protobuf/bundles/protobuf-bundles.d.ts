type Long = protobuf.Long;

/** Namespace com. */
declare namespace com {

    /** Namespace message. */
    namespace message {

        /** Properties of a C_GET_ABI_HELL_INFO. */
        interface IC_GET_ABI_HELL_INFO {
        }

        /** Represents a C_GET_ABI_HELL_INFO. */
        class C_GET_ABI_HELL_INFO implements IC_GET_ABI_HELL_INFO {

            /**
             * Constructs a new C_GET_ABI_HELL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ABI_HELL_INFO);

            /**
             * Encodes the specified C_GET_ABI_HELL_INFO message. Does not implicitly {@link com.message.C_GET_ABI_HELL_INFO.verify|verify} messages.
             * @param message C_GET_ABI_HELL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ABI_HELL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ABI_HELL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ABI_HELL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ABI_HELL_INFO;
        }

        /** Properties of a S_GET_ABI_HELL_INFO. */
        interface IS_GET_ABI_HELL_INFO {

            /** S_GET_ABI_HELL_INFO playTimes */
            playTimes?: (number|null);

            /** S_GET_ABI_HELL_INFO currInstanceid */
            currInstanceid?: (number|null);

            /** S_GET_ABI_HELL_INFO currLayer */
            currLayer?: (number|null);

            /** S_GET_ABI_HELL_INFO hadPlayIds */
            hadPlayIds?: (string|null);

            /** S_GET_ABI_HELL_INFO currMonster */
            currMonster?: (string|null);

            /** S_GET_ABI_HELL_INFO allDatas */
            allDatas?: (com.message.IABI_HELL_PLAYER[]|null);

            /** S_GET_ABI_HELL_INFO boxRewardNum */
            boxRewardNum?: (number|null);

            /** S_GET_ABI_HELL_INFO serverId */
            serverId?: (number|null);

            /** S_GET_ABI_HELL_INFO buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_GET_ABI_HELL_INFO. */
        class S_GET_ABI_HELL_INFO implements IS_GET_ABI_HELL_INFO {

            /**
             * Constructs a new S_GET_ABI_HELL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ABI_HELL_INFO);

            /** S_GET_ABI_HELL_INFO playTimes. */
            public playTimes: number;

            /** S_GET_ABI_HELL_INFO currInstanceid. */
            public currInstanceid: number;

            /** S_GET_ABI_HELL_INFO currLayer. */
            public currLayer: number;

            /** S_GET_ABI_HELL_INFO hadPlayIds. */
            public hadPlayIds: string;

            /** S_GET_ABI_HELL_INFO currMonster. */
            public currMonster: string;

            /** S_GET_ABI_HELL_INFO allDatas. */
            public allDatas: com.message.IABI_HELL_PLAYER[];

            /** S_GET_ABI_HELL_INFO boxRewardNum. */
            public boxRewardNum: number;

            /** S_GET_ABI_HELL_INFO serverId. */
            public serverId: number;

            /** S_GET_ABI_HELL_INFO buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_GET_ABI_HELL_INFO message. Does not implicitly {@link com.message.S_GET_ABI_HELL_INFO.verify|verify} messages.
             * @param message S_GET_ABI_HELL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ABI_HELL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ABI_HELL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ABI_HELL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ABI_HELL_INFO;
        }

        /** Properties of a ABI_HELL_PLAYER. */
        interface IABI_HELL_PLAYER {

            /** ABI_HELL_PLAYER serverId */
            serverId?: (number|null);

            /** ABI_HELL_PLAYER playerId */
            playerId?: (number|Long|null);

            /** ABI_HELL_PLAYER nickName */
            nickName?: (string|null);

            /** ABI_HELL_PLAYER fightValue */
            fightValue?: (number|Long|null);

            /** ABI_HELL_PLAYER layerIndex */
            layerIndex?: (number|null);
        }

        /** Represents a ABI_HELL_PLAYER. */
        class ABI_HELL_PLAYER implements IABI_HELL_PLAYER {

            /**
             * Constructs a new ABI_HELL_PLAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IABI_HELL_PLAYER);

            /** ABI_HELL_PLAYER serverId. */
            public serverId: number;

            /** ABI_HELL_PLAYER playerId. */
            public playerId: (number|Long);

            /** ABI_HELL_PLAYER nickName. */
            public nickName: string;

            /** ABI_HELL_PLAYER fightValue. */
            public fightValue: (number|Long);

            /** ABI_HELL_PLAYER layerIndex. */
            public layerIndex: number;

            /**
             * Encodes the specified ABI_HELL_PLAYER message. Does not implicitly {@link com.message.ABI_HELL_PLAYER.verify|verify} messages.
             * @param message ABI_HELL_PLAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IABI_HELL_PLAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ABI_HELL_PLAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ABI_HELL_PLAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ABI_HELL_PLAYER;
        }

        /** Properties of a C_GET_ABI_BOX_REWARD. */
        interface IC_GET_ABI_BOX_REWARD {

            /** C_GET_ABI_BOX_REWARD boxId */
            boxId?: (number|null);

            /** C_GET_ABI_BOX_REWARD rewardNum */
            rewardNum?: (number|null);
        }

        /** Represents a C_GET_ABI_BOX_REWARD. */
        class C_GET_ABI_BOX_REWARD implements IC_GET_ABI_BOX_REWARD {

            /**
             * Constructs a new C_GET_ABI_BOX_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ABI_BOX_REWARD);

            /** C_GET_ABI_BOX_REWARD boxId. */
            public boxId: number;

            /** C_GET_ABI_BOX_REWARD rewardNum. */
            public rewardNum: number;

            /**
             * Encodes the specified C_GET_ABI_BOX_REWARD message. Does not implicitly {@link com.message.C_GET_ABI_BOX_REWARD.verify|verify} messages.
             * @param message C_GET_ABI_BOX_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ABI_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ABI_BOX_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ABI_BOX_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ABI_BOX_REWARD;
        }

        /** Properties of a S_GET_ABI_BOX_REWARD. */
        interface IS_GET_ABI_BOX_REWARD {

            /** S_GET_ABI_BOX_REWARD boxId */
            boxId?: (number|null);

            /** S_GET_ABI_BOX_REWARD rewardNum */
            rewardNum?: (number|null);

            /** S_GET_ABI_BOX_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_ABI_BOX_REWARD. */
        class S_GET_ABI_BOX_REWARD implements IS_GET_ABI_BOX_REWARD {

            /**
             * Constructs a new S_GET_ABI_BOX_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ABI_BOX_REWARD);

            /** S_GET_ABI_BOX_REWARD boxId. */
            public boxId: number;

            /** S_GET_ABI_BOX_REWARD rewardNum. */
            public rewardNum: number;

            /** S_GET_ABI_BOX_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_ABI_BOX_REWARD message. Does not implicitly {@link com.message.S_GET_ABI_BOX_REWARD.verify|verify} messages.
             * @param message S_GET_ABI_BOX_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ABI_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ABI_BOX_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ABI_BOX_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ABI_BOX_REWARD;
        }

        /** Properties of a C_GET_ABI_HELL_NEXT. */
        interface IC_GET_ABI_HELL_NEXT {

            /** C_GET_ABI_HELL_NEXT nextLayer */
            nextLayer?: (number|null);
        }

        /** Represents a C_GET_ABI_HELL_NEXT. */
        class C_GET_ABI_HELL_NEXT implements IC_GET_ABI_HELL_NEXT {

            /**
             * Constructs a new C_GET_ABI_HELL_NEXT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ABI_HELL_NEXT);

            /** C_GET_ABI_HELL_NEXT nextLayer. */
            public nextLayer: number;

            /**
             * Encodes the specified C_GET_ABI_HELL_NEXT message. Does not implicitly {@link com.message.C_GET_ABI_HELL_NEXT.verify|verify} messages.
             * @param message C_GET_ABI_HELL_NEXT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ABI_HELL_NEXT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ABI_HELL_NEXT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ABI_HELL_NEXT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ABI_HELL_NEXT;
        }

        /** Properties of a S_GET_ABI_HELL_NEXT. */
        interface IS_GET_ABI_HELL_NEXT {

            /** S_GET_ABI_HELL_NEXT playTimes */
            playTimes?: (number|null);

            /** S_GET_ABI_HELL_NEXT currInstanceid */
            currInstanceid?: (number|null);

            /** S_GET_ABI_HELL_NEXT currLayer */
            currLayer?: (number|null);

            /** S_GET_ABI_HELL_NEXT allDatas */
            allDatas?: (com.message.IABI_HELL_PLAYER[]|null);
        }

        /** Represents a S_GET_ABI_HELL_NEXT. */
        class S_GET_ABI_HELL_NEXT implements IS_GET_ABI_HELL_NEXT {

            /**
             * Constructs a new S_GET_ABI_HELL_NEXT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ABI_HELL_NEXT);

            /** S_GET_ABI_HELL_NEXT playTimes. */
            public playTimes: number;

            /** S_GET_ABI_HELL_NEXT currInstanceid. */
            public currInstanceid: number;

            /** S_GET_ABI_HELL_NEXT currLayer. */
            public currLayer: number;

            /** S_GET_ABI_HELL_NEXT allDatas. */
            public allDatas: com.message.IABI_HELL_PLAYER[];

            /**
             * Encodes the specified S_GET_ABI_HELL_NEXT message. Does not implicitly {@link com.message.S_GET_ABI_HELL_NEXT.verify|verify} messages.
             * @param message S_GET_ABI_HELL_NEXT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ABI_HELL_NEXT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ABI_HELL_NEXT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ABI_HELL_NEXT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ABI_HELL_NEXT;
        }

        /** Properties of a C_GET_ABI_BUY_TIMES. */
        interface IC_GET_ABI_BUY_TIMES {

            /** C_GET_ABI_BUY_TIMES buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a C_GET_ABI_BUY_TIMES. */
        class C_GET_ABI_BUY_TIMES implements IC_GET_ABI_BUY_TIMES {

            /**
             * Constructs a new C_GET_ABI_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ABI_BUY_TIMES);

            /** C_GET_ABI_BUY_TIMES buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified C_GET_ABI_BUY_TIMES message. Does not implicitly {@link com.message.C_GET_ABI_BUY_TIMES.verify|verify} messages.
             * @param message C_GET_ABI_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ABI_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ABI_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ABI_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ABI_BUY_TIMES;
        }

        /** Properties of a S_GET_ABI_BUY_TIMES. */
        interface IS_GET_ABI_BUY_TIMES {

            /** S_GET_ABI_BUY_TIMES buyTimes */
            buyTimes?: (number|null);

            /** S_GET_ABI_BUY_TIMES playTimes */
            playTimes?: (number|null);
        }

        /** Represents a S_GET_ABI_BUY_TIMES. */
        class S_GET_ABI_BUY_TIMES implements IS_GET_ABI_BUY_TIMES {

            /**
             * Constructs a new S_GET_ABI_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ABI_BUY_TIMES);

            /** S_GET_ABI_BUY_TIMES buyTimes. */
            public buyTimes: number;

            /** S_GET_ABI_BUY_TIMES playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified S_GET_ABI_BUY_TIMES message. Does not implicitly {@link com.message.S_GET_ABI_BUY_TIMES.verify|verify} messages.
             * @param message S_GET_ABI_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ABI_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ABI_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ABI_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ABI_BUY_TIMES;
        }

        /** Properties of an IntIntMapMsg. */
        interface IIntIntMapMsg {

            /** IntIntMapMsg key */
            key?: (number|null);

            /** IntIntMapMsg value */
            value?: (number|null);
        }

        /** Represents an IntIntMapMsg. */
        class IntIntMapMsg implements IIntIntMapMsg {

            /**
             * Constructs a new IntIntMapMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IIntIntMapMsg);

            /** IntIntMapMsg key. */
            public key: number;

            /** IntIntMapMsg value. */
            public value: number;

            /**
             * Encodes the specified IntIntMapMsg message. Does not implicitly {@link com.message.IntIntMapMsg.verify|verify} messages.
             * @param message IntIntMapMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IIntIntMapMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an IntIntMapMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IntIntMapMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.IntIntMapMsg;
        }

        /** Properties of a StringIntMapMsg. */
        interface IStringIntMapMsg {

            /** StringIntMapMsg key */
            key?: (string|null);

            /** StringIntMapMsg value */
            value?: (number|null);
        }

        /** Represents a StringIntMapMsg. */
        class StringIntMapMsg implements IStringIntMapMsg {

            /**
             * Constructs a new StringIntMapMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IStringIntMapMsg);

            /** StringIntMapMsg key. */
            public key: string;

            /** StringIntMapMsg value. */
            public value: number;

            /**
             * Encodes the specified StringIntMapMsg message. Does not implicitly {@link com.message.StringIntMapMsg.verify|verify} messages.
             * @param message StringIntMapMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IStringIntMapMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a StringIntMapMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns StringIntMapMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.StringIntMapMsg;
        }

        /** Properties of an IntLongMapMsg. */
        interface IIntLongMapMsg {

            /** IntLongMapMsg key */
            key?: (number|null);

            /** IntLongMapMsg value */
            value?: (number|Long|null);
        }

        /** Represents an IntLongMapMsg. */
        class IntLongMapMsg implements IIntLongMapMsg {

            /**
             * Constructs a new IntLongMapMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IIntLongMapMsg);

            /** IntLongMapMsg key. */
            public key: number;

            /** IntLongMapMsg value. */
            public value: (number|Long);

            /**
             * Encodes the specified IntLongMapMsg message. Does not implicitly {@link com.message.IntLongMapMsg.verify|verify} messages.
             * @param message IntLongMapMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IIntLongMapMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an IntLongMapMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IntLongMapMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.IntLongMapMsg;
        }

        /** Properties of an IntFloatMapMsg. */
        interface IIntFloatMapMsg {

            /** IntFloatMapMsg key */
            key?: (number|null);

            /** IntFloatMapMsg value */
            value?: (number|null);
        }

        /** Represents an IntFloatMapMsg. */
        class IntFloatMapMsg implements IIntFloatMapMsg {

            /**
             * Constructs a new IntFloatMapMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IIntFloatMapMsg);

            /** IntFloatMapMsg key. */
            public key: number;

            /** IntFloatMapMsg value. */
            public value: number;

            /**
             * Encodes the specified IntFloatMapMsg message. Does not implicitly {@link com.message.IntFloatMapMsg.verify|verify} messages.
             * @param message IntFloatMapMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IIntFloatMapMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an IntFloatMapMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns IntFloatMapMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.IntFloatMapMsg;
        }

        /** Properties of an ItemMsg. */
        interface IItemMsg {

            /** ItemMsg itemId */
            itemId?: (number|null);

            /** ItemMsg num */
            num?: (number|null);
        }

        /** Represents an ItemMsg. */
        class ItemMsg implements IItemMsg {

            /**
             * Constructs a new ItemMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IItemMsg);

            /** ItemMsg itemId. */
            public itemId: number;

            /** ItemMsg num. */
            public num: number;

            /**
             * Encodes the specified ItemMsg message. Does not implicitly {@link com.message.ItemMsg.verify|verify} messages.
             * @param message ItemMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IItemMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ItemMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ItemMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ItemMsg;
        }

        /** Properties of an ItemListMsg. */
        interface IItemListMsg {

            /** ItemListMsg list */
            list?: (com.message.IItemMsg[]|null);
        }

        /** Represents an ItemListMsg. */
        class ItemListMsg implements IItemListMsg {

            /**
             * Constructs a new ItemListMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IItemListMsg);

            /** ItemListMsg list. */
            public list: com.message.IItemMsg[];

            /**
             * Encodes the specified ItemListMsg message. Does not implicitly {@link com.message.ItemListMsg.verify|verify} messages.
             * @param message ItemListMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IItemListMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ItemListMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ItemListMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ItemListMsg;
        }

        /** Properties of a C_GET_ACHIEVEMENT_INFO. */
        interface IC_GET_ACHIEVEMENT_INFO {

            /** C_GET_ACHIEVEMENT_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_ACHIEVEMENT_INFO. */
        class C_GET_ACHIEVEMENT_INFO implements IC_GET_ACHIEVEMENT_INFO {

            /**
             * Constructs a new C_GET_ACHIEVEMENT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ACHIEVEMENT_INFO);

            /** C_GET_ACHIEVEMENT_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_ACHIEVEMENT_INFO message. Does not implicitly {@link com.message.C_GET_ACHIEVEMENT_INFO.verify|verify} messages.
             * @param message C_GET_ACHIEVEMENT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ACHIEVEMENT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ACHIEVEMENT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ACHIEVEMENT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ACHIEVEMENT_INFO;
        }

        /** Properties of a S_GET_ACHIEVEMENT_INFO. */
        interface IS_GET_ACHIEVEMENT_INFO {

            /** S_GET_ACHIEVEMENT_INFO achieveId */
            achieveId?: (number[]|null);

            /** S_GET_ACHIEVEMENT_INFO info */
            info?: (com.message.IACHIEVEMENT_INFO[]|null);

            /** S_GET_ACHIEVEMENT_INFO type */
            type?: (number|null);
        }

        /** Represents a S_GET_ACHIEVEMENT_INFO. */
        class S_GET_ACHIEVEMENT_INFO implements IS_GET_ACHIEVEMENT_INFO {

            /**
             * Constructs a new S_GET_ACHIEVEMENT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ACHIEVEMENT_INFO);

            /** S_GET_ACHIEVEMENT_INFO achieveId. */
            public achieveId: number[];

            /** S_GET_ACHIEVEMENT_INFO info. */
            public info: com.message.IACHIEVEMENT_INFO[];

            /** S_GET_ACHIEVEMENT_INFO type. */
            public type: number;

            /**
             * Encodes the specified S_GET_ACHIEVEMENT_INFO message. Does not implicitly {@link com.message.S_GET_ACHIEVEMENT_INFO.verify|verify} messages.
             * @param message S_GET_ACHIEVEMENT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ACHIEVEMENT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ACHIEVEMENT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ACHIEVEMENT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ACHIEVEMENT_INFO;
        }

        /** Properties of a ACHIEVEMENT_INFO. */
        interface IACHIEVEMENT_INFO {

            /** ACHIEVEMENT_INFO id */
            id?: (number|null);

            /** ACHIEVEMENT_INFO value */
            value?: (number|Long|null);
        }

        /** Represents a ACHIEVEMENT_INFO. */
        class ACHIEVEMENT_INFO implements IACHIEVEMENT_INFO {

            /**
             * Constructs a new ACHIEVEMENT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IACHIEVEMENT_INFO);

            /** ACHIEVEMENT_INFO id. */
            public id: number;

            /** ACHIEVEMENT_INFO value. */
            public value: (number|Long);

            /**
             * Encodes the specified ACHIEVEMENT_INFO message. Does not implicitly {@link com.message.ACHIEVEMENT_INFO.verify|verify} messages.
             * @param message ACHIEVEMENT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IACHIEVEMENT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ACHIEVEMENT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ACHIEVEMENT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ACHIEVEMENT_INFO;
        }

        /** Properties of a S_CHANGE_ACHIEVEMENT_INFO. */
        interface IS_CHANGE_ACHIEVEMENT_INFO {

            /** S_CHANGE_ACHIEVEMENT_INFO id */
            id?: (number|null);

            /** S_CHANGE_ACHIEVEMENT_INFO value */
            value?: (number|Long|null);
        }

        /** Represents a S_CHANGE_ACHIEVEMENT_INFO. */
        class S_CHANGE_ACHIEVEMENT_INFO implements IS_CHANGE_ACHIEVEMENT_INFO {

            /**
             * Constructs a new S_CHANGE_ACHIEVEMENT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CHANGE_ACHIEVEMENT_INFO);

            /** S_CHANGE_ACHIEVEMENT_INFO id. */
            public id: number;

            /** S_CHANGE_ACHIEVEMENT_INFO value. */
            public value: (number|Long);

            /**
             * Encodes the specified S_CHANGE_ACHIEVEMENT_INFO message. Does not implicitly {@link com.message.S_CHANGE_ACHIEVEMENT_INFO.verify|verify} messages.
             * @param message S_CHANGE_ACHIEVEMENT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CHANGE_ACHIEVEMENT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CHANGE_ACHIEVEMENT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CHANGE_ACHIEVEMENT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CHANGE_ACHIEVEMENT_INFO;
        }

        /** Properties of a C_GET_ACHIEVEMENT_REWARD. */
        interface IC_GET_ACHIEVEMENT_REWARD {

            /** C_GET_ACHIEVEMENT_REWARD id */
            id?: (number|null);

            /** C_GET_ACHIEVEMENT_REWARD type */
            type?: (number|null);
        }

        /** Represents a C_GET_ACHIEVEMENT_REWARD. */
        class C_GET_ACHIEVEMENT_REWARD implements IC_GET_ACHIEVEMENT_REWARD {

            /**
             * Constructs a new C_GET_ACHIEVEMENT_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ACHIEVEMENT_REWARD);

            /** C_GET_ACHIEVEMENT_REWARD id. */
            public id: number;

            /** C_GET_ACHIEVEMENT_REWARD type. */
            public type: number;

            /**
             * Encodes the specified C_GET_ACHIEVEMENT_REWARD message. Does not implicitly {@link com.message.C_GET_ACHIEVEMENT_REWARD.verify|verify} messages.
             * @param message C_GET_ACHIEVEMENT_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ACHIEVEMENT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ACHIEVEMENT_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ACHIEVEMENT_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ACHIEVEMENT_REWARD;
        }

        /** Properties of a S_GET_ACHIEVEMENT_REWARD. */
        interface IS_GET_ACHIEVEMENT_REWARD {

            /** S_GET_ACHIEVEMENT_REWARD id */
            id?: (number|null);

            /** S_GET_ACHIEVEMENT_REWARD type */
            type?: (number|null);

            /** S_GET_ACHIEVEMENT_REWARD achievementPoints */
            achievementPoints?: (number|null);
        }

        /** Represents a S_GET_ACHIEVEMENT_REWARD. */
        class S_GET_ACHIEVEMENT_REWARD implements IS_GET_ACHIEVEMENT_REWARD {

            /**
             * Constructs a new S_GET_ACHIEVEMENT_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ACHIEVEMENT_REWARD);

            /** S_GET_ACHIEVEMENT_REWARD id. */
            public id: number;

            /** S_GET_ACHIEVEMENT_REWARD type. */
            public type: number;

            /** S_GET_ACHIEVEMENT_REWARD achievementPoints. */
            public achievementPoints: number;

            /**
             * Encodes the specified S_GET_ACHIEVEMENT_REWARD message. Does not implicitly {@link com.message.S_GET_ACHIEVEMENT_REWARD.verify|verify} messages.
             * @param message S_GET_ACHIEVEMENT_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ACHIEVEMENT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ACHIEVEMENT_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ACHIEVEMENT_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ACHIEVEMENT_REWARD;
        }

        /** Properties of a S_PUSH_ACHIEVEMENT_INFO. */
        interface IS_PUSH_ACHIEVEMENT_INFO {

            /** S_PUSH_ACHIEVEMENT_INFO datas */
            datas?: (com.message.IACHIEVEMENT_DATA[]|null);

            /** S_PUSH_ACHIEVEMENT_INFO achievementPoints */
            achievementPoints?: (number|null);

            /** S_PUSH_ACHIEVEMENT_INFO rewardPoints */
            rewardPoints?: (string|null);
        }

        /** Represents a S_PUSH_ACHIEVEMENT_INFO. */
        class S_PUSH_ACHIEVEMENT_INFO implements IS_PUSH_ACHIEVEMENT_INFO {

            /**
             * Constructs a new S_PUSH_ACHIEVEMENT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_PUSH_ACHIEVEMENT_INFO);

            /** S_PUSH_ACHIEVEMENT_INFO datas. */
            public datas: com.message.IACHIEVEMENT_DATA[];

            /** S_PUSH_ACHIEVEMENT_INFO achievementPoints. */
            public achievementPoints: number;

            /** S_PUSH_ACHIEVEMENT_INFO rewardPoints. */
            public rewardPoints: string;

            /**
             * Encodes the specified S_PUSH_ACHIEVEMENT_INFO message. Does not implicitly {@link com.message.S_PUSH_ACHIEVEMENT_INFO.verify|verify} messages.
             * @param message S_PUSH_ACHIEVEMENT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_PUSH_ACHIEVEMENT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_PUSH_ACHIEVEMENT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_PUSH_ACHIEVEMENT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_PUSH_ACHIEVEMENT_INFO;
        }

        /** Properties of a ACHIEVEMENT_DATA. */
        interface IACHIEVEMENT_DATA {

            /** ACHIEVEMENT_DATA achieveId */
            achieveId?: (number[]|null);

            /** ACHIEVEMENT_DATA info */
            info?: (com.message.IACHIEVEMENT_INFO[]|null);

            /** ACHIEVEMENT_DATA type */
            type?: (number|null);
        }

        /** Represents a ACHIEVEMENT_DATA. */
        class ACHIEVEMENT_DATA implements IACHIEVEMENT_DATA {

            /**
             * Constructs a new ACHIEVEMENT_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IACHIEVEMENT_DATA);

            /** ACHIEVEMENT_DATA achieveId. */
            public achieveId: number[];

            /** ACHIEVEMENT_DATA info. */
            public info: com.message.IACHIEVEMENT_INFO[];

            /** ACHIEVEMENT_DATA type. */
            public type: number;

            /**
             * Encodes the specified ACHIEVEMENT_DATA message. Does not implicitly {@link com.message.ACHIEVEMENT_DATA.verify|verify} messages.
             * @param message ACHIEVEMENT_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IACHIEVEMENT_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ACHIEVEMENT_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ACHIEVEMENT_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ACHIEVEMENT_DATA;
        }

        /** Properties of a C_GET_ACHIEVEMENT_POINT_REWARD. */
        interface IC_GET_ACHIEVEMENT_POINT_REWARD {

            /** C_GET_ACHIEVEMENT_POINT_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_GET_ACHIEVEMENT_POINT_REWARD. */
        class C_GET_ACHIEVEMENT_POINT_REWARD implements IC_GET_ACHIEVEMENT_POINT_REWARD {

            /**
             * Constructs a new C_GET_ACHIEVEMENT_POINT_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ACHIEVEMENT_POINT_REWARD);

            /** C_GET_ACHIEVEMENT_POINT_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_GET_ACHIEVEMENT_POINT_REWARD message. Does not implicitly {@link com.message.C_GET_ACHIEVEMENT_POINT_REWARD.verify|verify} messages.
             * @param message C_GET_ACHIEVEMENT_POINT_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ACHIEVEMENT_POINT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ACHIEVEMENT_POINT_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ACHIEVEMENT_POINT_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ACHIEVEMENT_POINT_REWARD;
        }

        /** Properties of a S_GET_ACHIEVEMENT_POINT_REWARD. */
        interface IS_GET_ACHIEVEMENT_POINT_REWARD {

            /** S_GET_ACHIEVEMENT_POINT_REWARD achievementPoints */
            achievementPoints?: (number|null);

            /** S_GET_ACHIEVEMENT_POINT_REWARD rewardPoints */
            rewardPoints?: (string|null);
        }

        /** Represents a S_GET_ACHIEVEMENT_POINT_REWARD. */
        class S_GET_ACHIEVEMENT_POINT_REWARD implements IS_GET_ACHIEVEMENT_POINT_REWARD {

            /**
             * Constructs a new S_GET_ACHIEVEMENT_POINT_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ACHIEVEMENT_POINT_REWARD);

            /** S_GET_ACHIEVEMENT_POINT_REWARD achievementPoints. */
            public achievementPoints: number;

            /** S_GET_ACHIEVEMENT_POINT_REWARD rewardPoints. */
            public rewardPoints: string;

            /**
             * Encodes the specified S_GET_ACHIEVEMENT_POINT_REWARD message. Does not implicitly {@link com.message.S_GET_ACHIEVEMENT_POINT_REWARD.verify|verify} messages.
             * @param message S_GET_ACHIEVEMENT_POINT_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ACHIEVEMENT_POINT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ACHIEVEMENT_POINT_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ACHIEVEMENT_POINT_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ACHIEVEMENT_POINT_REWARD;
        }

        /** Properties of a C_GET_OPACTIVE_INFO. */
        interface IC_GET_OPACTIVE_INFO {

            /** C_GET_OPACTIVE_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_OPACTIVE_INFO. */
        class C_GET_OPACTIVE_INFO implements IC_GET_OPACTIVE_INFO {

            /**
             * Constructs a new C_GET_OPACTIVE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_OPACTIVE_INFO);

            /** C_GET_OPACTIVE_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_OPACTIVE_INFO message. Does not implicitly {@link com.message.C_GET_OPACTIVE_INFO.verify|verify} messages.
             * @param message C_GET_OPACTIVE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_OPACTIVE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_OPACTIVE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_OPACTIVE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_OPACTIVE_INFO;
        }

        /** Properties of a S_GET_OPACTIVE_INFO. */
        interface IS_GET_OPACTIVE_INFO {

            /** S_GET_OPACTIVE_INFO type */
            type?: (number|null);

            /** S_GET_OPACTIVE_INFO startTime */
            startTime?: (number|Long|null);

            /** S_GET_OPACTIVE_INFO endTime */
            endTime?: (number|Long|null);
        }

        /** Represents a S_GET_OPACTIVE_INFO. */
        class S_GET_OPACTIVE_INFO implements IS_GET_OPACTIVE_INFO {

            /**
             * Constructs a new S_GET_OPACTIVE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_OPACTIVE_INFO);

            /** S_GET_OPACTIVE_INFO type. */
            public type: number;

            /** S_GET_OPACTIVE_INFO startTime. */
            public startTime: (number|Long);

            /** S_GET_OPACTIVE_INFO endTime. */
            public endTime: (number|Long);

            /**
             * Encodes the specified S_GET_OPACTIVE_INFO message. Does not implicitly {@link com.message.S_GET_OPACTIVE_INFO.verify|verify} messages.
             * @param message S_GET_OPACTIVE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_OPACTIVE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_OPACTIVE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_OPACTIVE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_OPACTIVE_INFO;
        }

        /** Properties of a S_SEND_OPACTIVE_CHANGE. */
        interface IS_SEND_OPACTIVE_CHANGE {

            /** S_SEND_OPACTIVE_CHANGE type */
            type?: (number|null);

            /** S_SEND_OPACTIVE_CHANGE startTime */
            startTime?: (number|Long|null);

            /** S_SEND_OPACTIVE_CHANGE endTime */
            endTime?: (number|Long|null);
        }

        /** Represents a S_SEND_OPACTIVE_CHANGE. */
        class S_SEND_OPACTIVE_CHANGE implements IS_SEND_OPACTIVE_CHANGE {

            /**
             * Constructs a new S_SEND_OPACTIVE_CHANGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SEND_OPACTIVE_CHANGE);

            /** S_SEND_OPACTIVE_CHANGE type. */
            public type: number;

            /** S_SEND_OPACTIVE_CHANGE startTime. */
            public startTime: (number|Long);

            /** S_SEND_OPACTIVE_CHANGE endTime. */
            public endTime: (number|Long);

            /**
             * Encodes the specified S_SEND_OPACTIVE_CHANGE message. Does not implicitly {@link com.message.S_SEND_OPACTIVE_CHANGE.verify|verify} messages.
             * @param message S_SEND_OPACTIVE_CHANGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SEND_OPACTIVE_CHANGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SEND_OPACTIVE_CHANGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SEND_OPACTIVE_CHANGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SEND_OPACTIVE_CHANGE;
        }

        /** Properties of a C_GET_OPACTIVE_TABLE. */
        interface IC_GET_OPACTIVE_TABLE {

            /** C_GET_OPACTIVE_TABLE type */
            type?: (number|null);
        }

        /** Represents a C_GET_OPACTIVE_TABLE. */
        class C_GET_OPACTIVE_TABLE implements IC_GET_OPACTIVE_TABLE {

            /**
             * Constructs a new C_GET_OPACTIVE_TABLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_OPACTIVE_TABLE);

            /** C_GET_OPACTIVE_TABLE type. */
            public type: number;

            /**
             * Encodes the specified C_GET_OPACTIVE_TABLE message. Does not implicitly {@link com.message.C_GET_OPACTIVE_TABLE.verify|verify} messages.
             * @param message C_GET_OPACTIVE_TABLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_OPACTIVE_TABLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_OPACTIVE_TABLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_OPACTIVE_TABLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_OPACTIVE_TABLE;
        }

        /** Properties of a S_GET_OPACTIVE_TABLE. */
        interface IS_GET_OPACTIVE_TABLE {

            /** S_GET_OPACTIVE_TABLE type */
            type?: (number|null);

            /** S_GET_OPACTIVE_TABLE refreshTime */
            refreshTime?: (number|Long|null);

            /** S_GET_OPACTIVE_TABLE tableVos */
            tableVos?: (com.message.IOPACTIVE_TABLE_VO[]|null);
        }

        /** Represents a S_GET_OPACTIVE_TABLE. */
        class S_GET_OPACTIVE_TABLE implements IS_GET_OPACTIVE_TABLE {

            /**
             * Constructs a new S_GET_OPACTIVE_TABLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_OPACTIVE_TABLE);

            /** S_GET_OPACTIVE_TABLE type. */
            public type: number;

            /** S_GET_OPACTIVE_TABLE refreshTime. */
            public refreshTime: (number|Long);

            /** S_GET_OPACTIVE_TABLE tableVos. */
            public tableVos: com.message.IOPACTIVE_TABLE_VO[];

            /**
             * Encodes the specified S_GET_OPACTIVE_TABLE message. Does not implicitly {@link com.message.S_GET_OPACTIVE_TABLE.verify|verify} messages.
             * @param message S_GET_OPACTIVE_TABLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_OPACTIVE_TABLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_OPACTIVE_TABLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_OPACTIVE_TABLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_OPACTIVE_TABLE;
        }

        /** Properties of a OPACTIVE_TABLE_VO. */
        interface IOPACTIVE_TABLE_VO {

            /** OPACTIVE_TABLE_VO id */
            id?: (number|null);

            /** OPACTIVE_TABLE_VO target1 */
            target1?: (number|Long|null);

            /** OPACTIVE_TABLE_VO target2 */
            target2?: (number|null);

            /** OPACTIVE_TABLE_VO reward */
            reward?: (string|null);
        }

        /** Represents a OPACTIVE_TABLE_VO. */
        class OPACTIVE_TABLE_VO implements IOPACTIVE_TABLE_VO {

            /**
             * Constructs a new OPACTIVE_TABLE_VO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IOPACTIVE_TABLE_VO);

            /** OPACTIVE_TABLE_VO id. */
            public id: number;

            /** OPACTIVE_TABLE_VO target1. */
            public target1: (number|Long);

            /** OPACTIVE_TABLE_VO target2. */
            public target2: number;

            /** OPACTIVE_TABLE_VO reward. */
            public reward: string;

            /**
             * Encodes the specified OPACTIVE_TABLE_VO message. Does not implicitly {@link com.message.OPACTIVE_TABLE_VO.verify|verify} messages.
             * @param message OPACTIVE_TABLE_VO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IOPACTIVE_TABLE_VO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a OPACTIVE_TABLE_VO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OPACTIVE_TABLE_VO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.OPACTIVE_TABLE_VO;
        }

        /** Properties of a C_GET_OPACTIVE_TYPE_INFO. */
        interface IC_GET_OPACTIVE_TYPE_INFO {

            /** C_GET_OPACTIVE_TYPE_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_OPACTIVE_TYPE_INFO. */
        class C_GET_OPACTIVE_TYPE_INFO implements IC_GET_OPACTIVE_TYPE_INFO {

            /**
             * Constructs a new C_GET_OPACTIVE_TYPE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_OPACTIVE_TYPE_INFO);

            /** C_GET_OPACTIVE_TYPE_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_OPACTIVE_TYPE_INFO message. Does not implicitly {@link com.message.C_GET_OPACTIVE_TYPE_INFO.verify|verify} messages.
             * @param message C_GET_OPACTIVE_TYPE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_OPACTIVE_TYPE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_OPACTIVE_TYPE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_OPACTIVE_TYPE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_OPACTIVE_TYPE_INFO;
        }

        /** Properties of a S_GET_OPACTIVE_TYPE_INFO. */
        interface IS_GET_OPACTIVE_TYPE_INFO {

            /** S_GET_OPACTIVE_TYPE_INFO type */
            type?: (number|null);

            /** S_GET_OPACTIVE_TYPE_INFO infos */
            infos?: (com.message.IOPACTIVE_INFO_VO[]|null);
        }

        /** Represents a S_GET_OPACTIVE_TYPE_INFO. */
        class S_GET_OPACTIVE_TYPE_INFO implements IS_GET_OPACTIVE_TYPE_INFO {

            /**
             * Constructs a new S_GET_OPACTIVE_TYPE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_OPACTIVE_TYPE_INFO);

            /** S_GET_OPACTIVE_TYPE_INFO type. */
            public type: number;

            /** S_GET_OPACTIVE_TYPE_INFO infos. */
            public infos: com.message.IOPACTIVE_INFO_VO[];

            /**
             * Encodes the specified S_GET_OPACTIVE_TYPE_INFO message. Does not implicitly {@link com.message.S_GET_OPACTIVE_TYPE_INFO.verify|verify} messages.
             * @param message S_GET_OPACTIVE_TYPE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_OPACTIVE_TYPE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_OPACTIVE_TYPE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_OPACTIVE_TYPE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_OPACTIVE_TYPE_INFO;
        }

        /** Properties of a OPACTIVE_INFO_VO. */
        interface IOPACTIVE_INFO_VO {

            /** OPACTIVE_INFO_VO id */
            id?: (number|null);

            /** OPACTIVE_INFO_VO target1 */
            target1?: (number|null);

            /** OPACTIVE_INFO_VO target2 */
            target2?: (number|null);

            /** OPACTIVE_INFO_VO hasGet */
            hasGet?: (boolean|null);
        }

        /** Represents a OPACTIVE_INFO_VO. */
        class OPACTIVE_INFO_VO implements IOPACTIVE_INFO_VO {

            /**
             * Constructs a new OPACTIVE_INFO_VO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IOPACTIVE_INFO_VO);

            /** OPACTIVE_INFO_VO id. */
            public id: number;

            /** OPACTIVE_INFO_VO target1. */
            public target1: number;

            /** OPACTIVE_INFO_VO target2. */
            public target2: number;

            /** OPACTIVE_INFO_VO hasGet. */
            public hasGet: boolean;

            /**
             * Encodes the specified OPACTIVE_INFO_VO message. Does not implicitly {@link com.message.OPACTIVE_INFO_VO.verify|verify} messages.
             * @param message OPACTIVE_INFO_VO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IOPACTIVE_INFO_VO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a OPACTIVE_INFO_VO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OPACTIVE_INFO_VO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.OPACTIVE_INFO_VO;
        }

        /** Properties of a C_GET_OPACTIVE_REWARD. */
        interface IC_GET_OPACTIVE_REWARD {

            /** C_GET_OPACTIVE_REWARD type */
            type?: (number|null);

            /** C_GET_OPACTIVE_REWARD id */
            id?: (number|null);
        }

        /** Represents a C_GET_OPACTIVE_REWARD. */
        class C_GET_OPACTIVE_REWARD implements IC_GET_OPACTIVE_REWARD {

            /**
             * Constructs a new C_GET_OPACTIVE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_OPACTIVE_REWARD);

            /** C_GET_OPACTIVE_REWARD type. */
            public type: number;

            /** C_GET_OPACTIVE_REWARD id. */
            public id: number;

            /**
             * Encodes the specified C_GET_OPACTIVE_REWARD message. Does not implicitly {@link com.message.C_GET_OPACTIVE_REWARD.verify|verify} messages.
             * @param message C_GET_OPACTIVE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_OPACTIVE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_OPACTIVE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_OPACTIVE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_OPACTIVE_REWARD;
        }

        /** Properties of a S_GET_OPACTIVE_REWARD. */
        interface IS_GET_OPACTIVE_REWARD {

            /** S_GET_OPACTIVE_REWARD type */
            type?: (number|null);

            /** S_GET_OPACTIVE_REWARD id */
            id?: (number|null);

            /** S_GET_OPACTIVE_REWARD reward */
            reward?: (string|null);
        }

        /** Represents a S_GET_OPACTIVE_REWARD. */
        class S_GET_OPACTIVE_REWARD implements IS_GET_OPACTIVE_REWARD {

            /**
             * Constructs a new S_GET_OPACTIVE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_OPACTIVE_REWARD);

            /** S_GET_OPACTIVE_REWARD type. */
            public type: number;

            /** S_GET_OPACTIVE_REWARD id. */
            public id: number;

            /** S_GET_OPACTIVE_REWARD reward. */
            public reward: string;

            /**
             * Encodes the specified S_GET_OPACTIVE_REWARD message. Does not implicitly {@link com.message.S_GET_OPACTIVE_REWARD.verify|verify} messages.
             * @param message S_GET_OPACTIVE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_OPACTIVE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_OPACTIVE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_OPACTIVE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_OPACTIVE_REWARD;
        }

        /** Properties of a C_OPACTIVE_LOG. */
        interface IC_OPACTIVE_LOG {

            /** C_OPACTIVE_LOG type */
            type?: (number|null);
        }

        /** Represents a C_OPACTIVE_LOG. */
        class C_OPACTIVE_LOG implements IC_OPACTIVE_LOG {

            /**
             * Constructs a new C_OPACTIVE_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OPACTIVE_LOG);

            /** C_OPACTIVE_LOG type. */
            public type: number;

            /**
             * Encodes the specified C_OPACTIVE_LOG message. Does not implicitly {@link com.message.C_OPACTIVE_LOG.verify|verify} messages.
             * @param message C_OPACTIVE_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OPACTIVE_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OPACTIVE_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OPACTIVE_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OPACTIVE_LOG;
        }

        /** Properties of a S_OPACTIVE_LOG. */
        interface IS_OPACTIVE_LOG {

            /** S_OPACTIVE_LOG type */
            type?: (number|null);

            /** S_OPACTIVE_LOG logInfo */
            logInfo?: (com.message.IOPACTIVE_LOG_INFO[]|null);
        }

        /** Represents a S_OPACTIVE_LOG. */
        class S_OPACTIVE_LOG implements IS_OPACTIVE_LOG {

            /**
             * Constructs a new S_OPACTIVE_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OPACTIVE_LOG);

            /** S_OPACTIVE_LOG type. */
            public type: number;

            /** S_OPACTIVE_LOG logInfo. */
            public logInfo: com.message.IOPACTIVE_LOG_INFO[];

            /**
             * Encodes the specified S_OPACTIVE_LOG message. Does not implicitly {@link com.message.S_OPACTIVE_LOG.verify|verify} messages.
             * @param message S_OPACTIVE_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OPACTIVE_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OPACTIVE_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OPACTIVE_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OPACTIVE_LOG;
        }

        /** Properties of a OPACTIVE_LOG_INFO. */
        interface IOPACTIVE_LOG_INFO {

            /** OPACTIVE_LOG_INFO playerId */
            playerId?: (number|Long|null);

            /** OPACTIVE_LOG_INFO nickName */
            nickName?: (string|null);

            /** OPACTIVE_LOG_INFO rewardIds */
            rewardIds?: (string|null);
        }

        /** Represents a OPACTIVE_LOG_INFO. */
        class OPACTIVE_LOG_INFO implements IOPACTIVE_LOG_INFO {

            /**
             * Constructs a new OPACTIVE_LOG_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IOPACTIVE_LOG_INFO);

            /** OPACTIVE_LOG_INFO playerId. */
            public playerId: (number|Long);

            /** OPACTIVE_LOG_INFO nickName. */
            public nickName: string;

            /** OPACTIVE_LOG_INFO rewardIds. */
            public rewardIds: string;

            /**
             * Encodes the specified OPACTIVE_LOG_INFO message. Does not implicitly {@link com.message.OPACTIVE_LOG_INFO.verify|verify} messages.
             * @param message OPACTIVE_LOG_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IOPACTIVE_LOG_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a OPACTIVE_LOG_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OPACTIVE_LOG_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.OPACTIVE_LOG_INFO;
        }

        /** Properties of a C_OP_LUCKY_HUNT. */
        interface IC_OP_LUCKY_HUNT {

            /** C_OP_LUCKY_HUNT times */
            times?: (number|null);
        }

        /** Represents a C_OP_LUCKY_HUNT. */
        class C_OP_LUCKY_HUNT implements IC_OP_LUCKY_HUNT {

            /**
             * Constructs a new C_OP_LUCKY_HUNT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OP_LUCKY_HUNT);

            /** C_OP_LUCKY_HUNT times. */
            public times: number;

            /**
             * Encodes the specified C_OP_LUCKY_HUNT message. Does not implicitly {@link com.message.C_OP_LUCKY_HUNT.verify|verify} messages.
             * @param message C_OP_LUCKY_HUNT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OP_LUCKY_HUNT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OP_LUCKY_HUNT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OP_LUCKY_HUNT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OP_LUCKY_HUNT;
        }

        /** Properties of a S_OP_LUCKY_HUNT. */
        interface IS_OP_LUCKY_HUNT {

            /** S_OP_LUCKY_HUNT id */
            id?: (number|null);

            /** S_OP_LUCKY_HUNT rewardIds */
            rewardIds?: (string|null);

            /** S_OP_LUCKY_HUNT freeTimes */
            freeTimes?: (number|null);
        }

        /** Represents a S_OP_LUCKY_HUNT. */
        class S_OP_LUCKY_HUNT implements IS_OP_LUCKY_HUNT {

            /**
             * Constructs a new S_OP_LUCKY_HUNT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OP_LUCKY_HUNT);

            /** S_OP_LUCKY_HUNT id. */
            public id: number;

            /** S_OP_LUCKY_HUNT rewardIds. */
            public rewardIds: string;

            /** S_OP_LUCKY_HUNT freeTimes. */
            public freeTimes: number;

            /**
             * Encodes the specified S_OP_LUCKY_HUNT message. Does not implicitly {@link com.message.S_OP_LUCKY_HUNT.verify|verify} messages.
             * @param message S_OP_LUCKY_HUNT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OP_LUCKY_HUNT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OP_LUCKY_HUNT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OP_LUCKY_HUNT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OP_LUCKY_HUNT;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_INFO. */
        interface IC_GET_TOP_RANK_PLAY_INFO {
        }

        /** Represents a C_GET_TOP_RANK_PLAY_INFO. */
        class C_GET_TOP_RANK_PLAY_INFO implements IC_GET_TOP_RANK_PLAY_INFO {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_INFO);

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_INFO message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_INFO.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_INFO;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_INFO. */
        interface IS_GET_TOP_RANK_PLAY_INFO {

            /** S_GET_TOP_RANK_PLAY_INFO championType */
            championType?: (number|null);

            /** S_GET_TOP_RANK_PLAY_INFO isWorship */
            isWorship?: (number|null);

            /** S_GET_TOP_RANK_PLAY_INFO isJoin */
            isJoin?: (number|null);

            /** S_GET_TOP_RANK_PLAY_INFO rankData */
            rankData?: (com.message.IRankPlayerMsg[]|null);

            /** S_GET_TOP_RANK_PLAY_INFO selfType */
            selfType?: (number|null);

            /** S_GET_TOP_RANK_PLAY_INFO championList */
            championList?: (number[]|null);

            /** S_GET_TOP_RANK_PLAY_INFO lastChampionList */
            lastChampionList?: (number[]|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_INFO. */
        class S_GET_TOP_RANK_PLAY_INFO implements IS_GET_TOP_RANK_PLAY_INFO {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_INFO);

            /** S_GET_TOP_RANK_PLAY_INFO championType. */
            public championType: number;

            /** S_GET_TOP_RANK_PLAY_INFO isWorship. */
            public isWorship: number;

            /** S_GET_TOP_RANK_PLAY_INFO isJoin. */
            public isJoin: number;

            /** S_GET_TOP_RANK_PLAY_INFO rankData. */
            public rankData: com.message.IRankPlayerMsg[];

            /** S_GET_TOP_RANK_PLAY_INFO selfType. */
            public selfType: number;

            /** S_GET_TOP_RANK_PLAY_INFO championList. */
            public championList: number[];

            /** S_GET_TOP_RANK_PLAY_INFO lastChampionList. */
            public lastChampionList: number[];

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_INFO message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_INFO.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_INFO;
        }

        /** Properties of a RankPlayerMsg. */
        interface IRankPlayerMsg {

            /** RankPlayerMsg playerId */
            playerId?: (number|Long|null);

            /** RankPlayerMsg playerName */
            playerName?: (string|null);

            /** RankPlayerMsg heroId */
            heroId?: (number|Long|null);

            /** RankPlayerMsg level */
            level?: (number|null);

            /** RankPlayerMsg power */
            power?: (number|Long|null);

            /** RankPlayerMsg serverId */
            serverId?: (number|null);

            /** RankPlayerMsg imageDressMsg */
            imageDressMsg?: (com.message.IImageDressMsg[]|null);

            /** RankPlayerMsg heroQuality */
            heroQuality?: (number|null);

            /** RankPlayerMsg totalTimes */
            totalTimes?: (number|Long|null);

            /** RankPlayerMsg useTile */
            useTile?: (number|null);

            /** RankPlayerMsg useHeadFrame */
            useHeadFrame?: (number|null);
        }

        /** Represents a RankPlayerMsg. */
        class RankPlayerMsg implements IRankPlayerMsg {

            /**
             * Constructs a new RankPlayerMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IRankPlayerMsg);

            /** RankPlayerMsg playerId. */
            public playerId: (number|Long);

            /** RankPlayerMsg playerName. */
            public playerName: string;

            /** RankPlayerMsg heroId. */
            public heroId: (number|Long);

            /** RankPlayerMsg level. */
            public level: number;

            /** RankPlayerMsg power. */
            public power: (number|Long);

            /** RankPlayerMsg serverId. */
            public serverId: number;

            /** RankPlayerMsg imageDressMsg. */
            public imageDressMsg: com.message.IImageDressMsg[];

            /** RankPlayerMsg heroQuality. */
            public heroQuality: number;

            /** RankPlayerMsg totalTimes. */
            public totalTimes: (number|Long);

            /** RankPlayerMsg useTile. */
            public useTile: number;

            /** RankPlayerMsg useHeadFrame. */
            public useHeadFrame: number;

            /**
             * Encodes the specified RankPlayerMsg message. Does not implicitly {@link com.message.RankPlayerMsg.verify|verify} messages.
             * @param message RankPlayerMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IRankPlayerMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RankPlayerMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RankPlayerMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.RankPlayerMsg;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_WORSHIP. */
        interface IC_GET_TOP_RANK_PLAY_WORSHIP {
        }

        /** Represents a C_GET_TOP_RANK_PLAY_WORSHIP. */
        class C_GET_TOP_RANK_PLAY_WORSHIP implements IC_GET_TOP_RANK_PLAY_WORSHIP {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_WORSHIP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_WORSHIP);

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_WORSHIP message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_WORSHIP.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_WORSHIP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_WORSHIP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_WORSHIP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_WORSHIP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_WORSHIP;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_WORSHIP. */
        interface IS_GET_TOP_RANK_PLAY_WORSHIP {

            /** S_GET_TOP_RANK_PLAY_WORSHIP isWorship */
            isWorship?: (number|null);

            /** S_GET_TOP_RANK_PLAY_WORSHIP rewardList */
            rewardList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_WORSHIP. */
        class S_GET_TOP_RANK_PLAY_WORSHIP implements IS_GET_TOP_RANK_PLAY_WORSHIP {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_WORSHIP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_WORSHIP);

            /** S_GET_TOP_RANK_PLAY_WORSHIP isWorship. */
            public isWorship: number;

            /** S_GET_TOP_RANK_PLAY_WORSHIP rewardList. */
            public rewardList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_WORSHIP message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_WORSHIP.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_WORSHIP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_WORSHIP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_WORSHIP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_WORSHIP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_WORSHIP;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_WARRECORD. */
        interface IC_GET_TOP_RANK_PLAY_WARRECORD {
        }

        /** Represents a C_GET_TOP_RANK_PLAY_WARRECORD. */
        class C_GET_TOP_RANK_PLAY_WARRECORD implements IC_GET_TOP_RANK_PLAY_WARRECORD {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_WARRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_WARRECORD);

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_WARRECORD message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_WARRECORD.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_WARRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_WARRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_WARRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_WARRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_WARRECORD;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_WARRECORD. */
        interface IS_GET_TOP_RANK_PLAY_WARRECORD {

            /** S_GET_TOP_RANK_PLAY_WARRECORD records */
            records?: (com.message.IJOIN_WAR_REPORT[]|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_WARRECORD. */
        class S_GET_TOP_RANK_PLAY_WARRECORD implements IS_GET_TOP_RANK_PLAY_WARRECORD {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_WARRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_WARRECORD);

            /** S_GET_TOP_RANK_PLAY_WARRECORD records. */
            public records: com.message.IJOIN_WAR_REPORT[];

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_WARRECORD message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_WARRECORD.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_WARRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_WARRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_WARRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_WARRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_WARRECORD;
        }

        /** Properties of a JOIN_WAR_REPORT. */
        interface IJOIN_WAR_REPORT {

            /** JOIN_WAR_REPORT recordId */
            recordId?: (string|null);

            /** JOIN_WAR_REPORT battleType */
            battleType?: (number|null);

            /** JOIN_WAR_REPORT battleId */
            battleId?: (number|null);

            /** JOIN_WAR_REPORT targetPlayerId */
            targetPlayerId?: (number|Long|null);

            /** JOIN_WAR_REPORT targetNickName */
            targetNickName?: (string|null);

            /** JOIN_WAR_REPORT winResult */
            winResult?: (number|null);
        }

        /** Represents a JOIN_WAR_REPORT. */
        class JOIN_WAR_REPORT implements IJOIN_WAR_REPORT {

            /**
             * Constructs a new JOIN_WAR_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IJOIN_WAR_REPORT);

            /** JOIN_WAR_REPORT recordId. */
            public recordId: string;

            /** JOIN_WAR_REPORT battleType. */
            public battleType: number;

            /** JOIN_WAR_REPORT battleId. */
            public battleId: number;

            /** JOIN_WAR_REPORT targetPlayerId. */
            public targetPlayerId: (number|Long);

            /** JOIN_WAR_REPORT targetNickName. */
            public targetNickName: string;

            /** JOIN_WAR_REPORT winResult. */
            public winResult: number;

            /**
             * Encodes the specified JOIN_WAR_REPORT message. Does not implicitly {@link com.message.JOIN_WAR_REPORT.verify|verify} messages.
             * @param message JOIN_WAR_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IJOIN_WAR_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a JOIN_WAR_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns JOIN_WAR_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.JOIN_WAR_REPORT;
        }

        /** Properties of a S_GET_TOP_RANK_PUSH_RECORD. */
        interface IS_GET_TOP_RANK_PUSH_RECORD {

            /** S_GET_TOP_RANK_PUSH_RECORD records */
            records?: (com.message.IJOIN_WAR_REPORT|null);
        }

        /** Represents a S_GET_TOP_RANK_PUSH_RECORD. */
        class S_GET_TOP_RANK_PUSH_RECORD implements IS_GET_TOP_RANK_PUSH_RECORD {

            /**
             * Constructs a new S_GET_TOP_RANK_PUSH_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PUSH_RECORD);

            /** S_GET_TOP_RANK_PUSH_RECORD records. */
            public records?: (com.message.IJOIN_WAR_REPORT|null);

            /**
             * Encodes the specified S_GET_TOP_RANK_PUSH_RECORD message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PUSH_RECORD.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PUSH_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PUSH_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PUSH_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PUSH_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PUSH_RECORD;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_FORMATION. */
        interface IC_GET_TOP_RANK_PLAY_FORMATION {
        }

        /** Represents a C_GET_TOP_RANK_PLAY_FORMATION. */
        class C_GET_TOP_RANK_PLAY_FORMATION implements IC_GET_TOP_RANK_PLAY_FORMATION {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_FORMATION);

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_FORMATION message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_FORMATION.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_FORMATION;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_FORMATION. */
        interface IS_GET_TOP_RANK_PLAY_FORMATION {

            /** S_GET_TOP_RANK_PLAY_FORMATION heroIds */
            heroIds?: (number[]|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_FORMATION. */
        class S_GET_TOP_RANK_PLAY_FORMATION implements IS_GET_TOP_RANK_PLAY_FORMATION {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_FORMATION);

            /** S_GET_TOP_RANK_PLAY_FORMATION heroIds. */
            public heroIds: number[];

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_FORMATION message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_FORMATION.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_FORMATION;
        }

        /** Properties of a C_UPDATE_TOP_RANK_PLAY_FORMATION. */
        interface IC_UPDATE_TOP_RANK_PLAY_FORMATION {

            /** C_UPDATE_TOP_RANK_PLAY_FORMATION heroIds */
            heroIds?: (number[]|null);
        }

        /** Represents a C_UPDATE_TOP_RANK_PLAY_FORMATION. */
        class C_UPDATE_TOP_RANK_PLAY_FORMATION implements IC_UPDATE_TOP_RANK_PLAY_FORMATION {

            /**
             * Constructs a new C_UPDATE_TOP_RANK_PLAY_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_UPDATE_TOP_RANK_PLAY_FORMATION);

            /** C_UPDATE_TOP_RANK_PLAY_FORMATION heroIds. */
            public heroIds: number[];

            /**
             * Encodes the specified C_UPDATE_TOP_RANK_PLAY_FORMATION message. Does not implicitly {@link com.message.C_UPDATE_TOP_RANK_PLAY_FORMATION.verify|verify} messages.
             * @param message C_UPDATE_TOP_RANK_PLAY_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_UPDATE_TOP_RANK_PLAY_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_UPDATE_TOP_RANK_PLAY_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_UPDATE_TOP_RANK_PLAY_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_UPDATE_TOP_RANK_PLAY_FORMATION;
        }

        /** Properties of a S_UPDATE_TOP_RANK_PLAY_FORMATION. */
        interface IS_UPDATE_TOP_RANK_PLAY_FORMATION {

            /** S_UPDATE_TOP_RANK_PLAY_FORMATION heroIds */
            heroIds?: (number[]|null);
        }

        /** Represents a S_UPDATE_TOP_RANK_PLAY_FORMATION. */
        class S_UPDATE_TOP_RANK_PLAY_FORMATION implements IS_UPDATE_TOP_RANK_PLAY_FORMATION {

            /**
             * Constructs a new S_UPDATE_TOP_RANK_PLAY_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPDATE_TOP_RANK_PLAY_FORMATION);

            /** S_UPDATE_TOP_RANK_PLAY_FORMATION heroIds. */
            public heroIds: number[];

            /**
             * Encodes the specified S_UPDATE_TOP_RANK_PLAY_FORMATION message. Does not implicitly {@link com.message.S_UPDATE_TOP_RANK_PLAY_FORMATION.verify|verify} messages.
             * @param message S_UPDATE_TOP_RANK_PLAY_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPDATE_TOP_RANK_PLAY_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPDATE_TOP_RANK_PLAY_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPDATE_TOP_RANK_PLAY_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPDATE_TOP_RANK_PLAY_FORMATION;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_APPLY. */
        interface IC_GET_TOP_RANK_PLAY_APPLY {
        }

        /** Represents a C_GET_TOP_RANK_PLAY_APPLY. */
        class C_GET_TOP_RANK_PLAY_APPLY implements IC_GET_TOP_RANK_PLAY_APPLY {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_APPLY);

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_APPLY message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_APPLY.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_APPLY;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_APPLY. */
        interface IS_GET_TOP_RANK_PLAY_APPLY {

            /** S_GET_TOP_RANK_PLAY_APPLY isWorship */
            isWorship?: (number|null);

            /** S_GET_TOP_RANK_PLAY_APPLY isJoin */
            isJoin?: (number|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_APPLY. */
        class S_GET_TOP_RANK_PLAY_APPLY implements IS_GET_TOP_RANK_PLAY_APPLY {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_APPLY);

            /** S_GET_TOP_RANK_PLAY_APPLY isWorship. */
            public isWorship: number;

            /** S_GET_TOP_RANK_PLAY_APPLY isJoin. */
            public isJoin: number;

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_APPLY message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_APPLY.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_APPLY;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_WIN. */
        interface IC_GET_TOP_RANK_PLAY_WIN {

            /** C_GET_TOP_RANK_PLAY_WIN championType */
            championType?: (number|null);

            /** C_GET_TOP_RANK_PLAY_WIN teamId */
            teamId?: (number|null);
        }

        /** Represents a C_GET_TOP_RANK_PLAY_WIN. */
        class C_GET_TOP_RANK_PLAY_WIN implements IC_GET_TOP_RANK_PLAY_WIN {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_WIN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_WIN);

            /** C_GET_TOP_RANK_PLAY_WIN championType. */
            public championType: number;

            /** C_GET_TOP_RANK_PLAY_WIN teamId. */
            public teamId: number;

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_WIN message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_WIN.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_WIN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_WIN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_WIN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_WIN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_WIN;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_WIN. */
        interface IS_GET_TOP_RANK_PLAY_WIN {

            /** S_GET_TOP_RANK_PLAY_WIN championType */
            championType?: (number|null);

            /** S_GET_TOP_RANK_PLAY_WIN teamId */
            teamId?: (number|null);

            /** S_GET_TOP_RANK_PLAY_WIN datas */
            datas?: (com.message.IWIN_PLAYER_DATA[]|null);

            /** S_GET_TOP_RANK_PLAY_WIN selfTeamId */
            selfTeamId?: (number|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_WIN. */
        class S_GET_TOP_RANK_PLAY_WIN implements IS_GET_TOP_RANK_PLAY_WIN {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_WIN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_WIN);

            /** S_GET_TOP_RANK_PLAY_WIN championType. */
            public championType: number;

            /** S_GET_TOP_RANK_PLAY_WIN teamId. */
            public teamId: number;

            /** S_GET_TOP_RANK_PLAY_WIN datas. */
            public datas: com.message.IWIN_PLAYER_DATA[];

            /** S_GET_TOP_RANK_PLAY_WIN selfTeamId. */
            public selfTeamId: number;

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_WIN message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_WIN.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_WIN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_WIN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_WIN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_WIN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_WIN;
        }

        /** Properties of a WIN_PLAYER_DATA. */
        interface IWIN_PLAYER_DATA {

            /** WIN_PLAYER_DATA playerId */
            playerId?: (number|Long|null);

            /** WIN_PLAYER_DATA playerName */
            playerName?: (string|null);

            /** WIN_PLAYER_DATA heroId */
            heroId?: (number|Long|null);

            /** WIN_PLAYER_DATA level */
            level?: (number|null);

            /** WIN_PLAYER_DATA power */
            power?: (number|Long|null);

            /** WIN_PLAYER_DATA serverId */
            serverId?: (number|null);

            /** WIN_PLAYER_DATA heroQuality */
            heroQuality?: (number|null);

            /** WIN_PLAYER_DATA posId */
            posId?: (number|null);

            /** WIN_PLAYER_DATA useHeadFrame */
            useHeadFrame?: (number|null);
        }

        /** Represents a WIN_PLAYER_DATA. */
        class WIN_PLAYER_DATA implements IWIN_PLAYER_DATA {

            /**
             * Constructs a new WIN_PLAYER_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IWIN_PLAYER_DATA);

            /** WIN_PLAYER_DATA playerId. */
            public playerId: (number|Long);

            /** WIN_PLAYER_DATA playerName. */
            public playerName: string;

            /** WIN_PLAYER_DATA heroId. */
            public heroId: (number|Long);

            /** WIN_PLAYER_DATA level. */
            public level: number;

            /** WIN_PLAYER_DATA power. */
            public power: (number|Long);

            /** WIN_PLAYER_DATA serverId. */
            public serverId: number;

            /** WIN_PLAYER_DATA heroQuality. */
            public heroQuality: number;

            /** WIN_PLAYER_DATA posId. */
            public posId: number;

            /** WIN_PLAYER_DATA useHeadFrame. */
            public useHeadFrame: number;

            /**
             * Encodes the specified WIN_PLAYER_DATA message. Does not implicitly {@link com.message.WIN_PLAYER_DATA.verify|verify} messages.
             * @param message WIN_PLAYER_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IWIN_PLAYER_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WIN_PLAYER_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WIN_PLAYER_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.WIN_PLAYER_DATA;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_GUESS. */
        interface IC_GET_TOP_RANK_PLAY_GUESS {

            /** C_GET_TOP_RANK_PLAY_GUESS guessType */
            guessType?: (number|null);

            /** C_GET_TOP_RANK_PLAY_GUESS winPlayerId */
            winPlayerId?: (number|Long|null);

            /** C_GET_TOP_RANK_PLAY_GUESS guessId */
            guessId?: (number|null);

            /** C_GET_TOP_RANK_PLAY_GUESS championType */
            championType?: (number|null);
        }

        /** Represents a C_GET_TOP_RANK_PLAY_GUESS. */
        class C_GET_TOP_RANK_PLAY_GUESS implements IC_GET_TOP_RANK_PLAY_GUESS {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_GUESS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_GUESS);

            /** C_GET_TOP_RANK_PLAY_GUESS guessType. */
            public guessType: number;

            /** C_GET_TOP_RANK_PLAY_GUESS winPlayerId. */
            public winPlayerId: (number|Long);

            /** C_GET_TOP_RANK_PLAY_GUESS guessId. */
            public guessId: number;

            /** C_GET_TOP_RANK_PLAY_GUESS championType. */
            public championType: number;

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_GUESS message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_GUESS.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_GUESS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_GUESS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_GUESS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_GUESS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_GUESS;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_GUESS. */
        interface IS_GET_TOP_RANK_PLAY_GUESS {

            /** S_GET_TOP_RANK_PLAY_GUESS guessType */
            guessType?: (number|null);

            /** S_GET_TOP_RANK_PLAY_GUESS winPlayerId */
            winPlayerId?: (number|Long|null);

            /** S_GET_TOP_RANK_PLAY_GUESS guessId */
            guessId?: (number|null);

            /** S_GET_TOP_RANK_PLAY_GUESS championType */
            championType?: (number|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_GUESS. */
        class S_GET_TOP_RANK_PLAY_GUESS implements IS_GET_TOP_RANK_PLAY_GUESS {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_GUESS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_GUESS);

            /** S_GET_TOP_RANK_PLAY_GUESS guessType. */
            public guessType: number;

            /** S_GET_TOP_RANK_PLAY_GUESS winPlayerId. */
            public winPlayerId: (number|Long);

            /** S_GET_TOP_RANK_PLAY_GUESS guessId. */
            public guessId: number;

            /** S_GET_TOP_RANK_PLAY_GUESS championType. */
            public championType: number;

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_GUESS message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_GUESS.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_GUESS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_GUESS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_GUESS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_GUESS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_GUESS;
        }

        /** Properties of a C_GET_TOP_RANK_GUESS_RECORD. */
        interface IC_GET_TOP_RANK_GUESS_RECORD {
        }

        /** Represents a C_GET_TOP_RANK_GUESS_RECORD. */
        class C_GET_TOP_RANK_GUESS_RECORD implements IC_GET_TOP_RANK_GUESS_RECORD {

            /**
             * Constructs a new C_GET_TOP_RANK_GUESS_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_GUESS_RECORD);

            /**
             * Encodes the specified C_GET_TOP_RANK_GUESS_RECORD message. Does not implicitly {@link com.message.C_GET_TOP_RANK_GUESS_RECORD.verify|verify} messages.
             * @param message C_GET_TOP_RANK_GUESS_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_GUESS_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_GUESS_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_GUESS_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_GUESS_RECORD;
        }

        /** Properties of a S_GET_TOP_RANK_GUESS_RECORD. */
        interface IS_GET_TOP_RANK_GUESS_RECORD {

            /** S_GET_TOP_RANK_GUESS_RECORD records */
            records?: (com.message.IGUESS_RECORD[]|null);
        }

        /** Represents a S_GET_TOP_RANK_GUESS_RECORD. */
        class S_GET_TOP_RANK_GUESS_RECORD implements IS_GET_TOP_RANK_GUESS_RECORD {

            /**
             * Constructs a new S_GET_TOP_RANK_GUESS_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_GUESS_RECORD);

            /** S_GET_TOP_RANK_GUESS_RECORD records. */
            public records: com.message.IGUESS_RECORD[];

            /**
             * Encodes the specified S_GET_TOP_RANK_GUESS_RECORD message. Does not implicitly {@link com.message.S_GET_TOP_RANK_GUESS_RECORD.verify|verify} messages.
             * @param message S_GET_TOP_RANK_GUESS_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_GUESS_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_GUESS_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_GUESS_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_GUESS_RECORD;
        }

        /** Properties of a GUESS_RECORD. */
        interface IGUESS_RECORD {

            /** GUESS_RECORD guessId */
            guessId?: (number|null);

            /** GUESS_RECORD guessType */
            guessType?: (number|null);

            /** GUESS_RECORD winPlayerId */
            winPlayerId?: (number|Long|null);

            /** GUESS_RECORD result */
            result?: (number|null);

            /** GUESS_RECORD championType */
            championType?: (number|null);

            /** GUESS_RECORD teamId */
            teamId?: (number|null);

            /** GUESS_RECORD nickName */
            nickName?: (string|null);

            /** GUESS_RECORD fightValue */
            fightValue?: (number|Long|null);

            /** GUESS_RECORD level */
            level?: (number|null);

            /** GUESS_RECORD serverId */
            serverId?: (number|null);

            /** GUESS_RECORD heroQuality */
            heroQuality?: (number|null);

            /** GUESS_RECORD useHeadFrame */
            useHeadFrame?: (number|null);

            /** GUESS_RECORD heroId */
            heroId?: (number|null);
        }

        /** Represents a GUESS_RECORD. */
        class GUESS_RECORD implements IGUESS_RECORD {

            /**
             * Constructs a new GUESS_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGUESS_RECORD);

            /** GUESS_RECORD guessId. */
            public guessId: number;

            /** GUESS_RECORD guessType. */
            public guessType: number;

            /** GUESS_RECORD winPlayerId. */
            public winPlayerId: (number|Long);

            /** GUESS_RECORD result. */
            public result: number;

            /** GUESS_RECORD championType. */
            public championType: number;

            /** GUESS_RECORD teamId. */
            public teamId: number;

            /** GUESS_RECORD nickName. */
            public nickName: string;

            /** GUESS_RECORD fightValue. */
            public fightValue: (number|Long);

            /** GUESS_RECORD level. */
            public level: number;

            /** GUESS_RECORD serverId. */
            public serverId: number;

            /** GUESS_RECORD heroQuality. */
            public heroQuality: number;

            /** GUESS_RECORD useHeadFrame. */
            public useHeadFrame: number;

            /** GUESS_RECORD heroId. */
            public heroId: number;

            /**
             * Encodes the specified GUESS_RECORD message. Does not implicitly {@link com.message.GUESS_RECORD.verify|verify} messages.
             * @param message GUESS_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGUESS_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GUESS_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GUESS_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GUESS_RECORD;
        }

        /** Properties of a C_GET_TOP_RANK_PLAY_CHAMPION. */
        interface IC_GET_TOP_RANK_PLAY_CHAMPION {

            /** C_GET_TOP_RANK_PLAY_CHAMPION championType */
            championType?: (number|null);
        }

        /** Represents a C_GET_TOP_RANK_PLAY_CHAMPION. */
        class C_GET_TOP_RANK_PLAY_CHAMPION implements IC_GET_TOP_RANK_PLAY_CHAMPION {

            /**
             * Constructs a new C_GET_TOP_RANK_PLAY_CHAMPION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_PLAY_CHAMPION);

            /** C_GET_TOP_RANK_PLAY_CHAMPION championType. */
            public championType: number;

            /**
             * Encodes the specified C_GET_TOP_RANK_PLAY_CHAMPION message. Does not implicitly {@link com.message.C_GET_TOP_RANK_PLAY_CHAMPION.verify|verify} messages.
             * @param message C_GET_TOP_RANK_PLAY_CHAMPION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_PLAY_CHAMPION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_PLAY_CHAMPION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_PLAY_CHAMPION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_PLAY_CHAMPION;
        }

        /** Properties of a S_GET_TOP_RANK_PLAY_CHAMPION. */
        interface IS_GET_TOP_RANK_PLAY_CHAMPION {

            /** S_GET_TOP_RANK_PLAY_CHAMPION championType */
            championType?: (number|null);

            /** S_GET_TOP_RANK_PLAY_CHAMPION datas */
            datas?: (com.message.IWIN_PLAYER_DATA[]|null);
        }

        /** Represents a S_GET_TOP_RANK_PLAY_CHAMPION. */
        class S_GET_TOP_RANK_PLAY_CHAMPION implements IS_GET_TOP_RANK_PLAY_CHAMPION {

            /**
             * Constructs a new S_GET_TOP_RANK_PLAY_CHAMPION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_PLAY_CHAMPION);

            /** S_GET_TOP_RANK_PLAY_CHAMPION championType. */
            public championType: number;

            /** S_GET_TOP_RANK_PLAY_CHAMPION datas. */
            public datas: com.message.IWIN_PLAYER_DATA[];

            /**
             * Encodes the specified S_GET_TOP_RANK_PLAY_CHAMPION message. Does not implicitly {@link com.message.S_GET_TOP_RANK_PLAY_CHAMPION.verify|verify} messages.
             * @param message S_GET_TOP_RANK_PLAY_CHAMPION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_PLAY_CHAMPION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_PLAY_CHAMPION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_PLAY_CHAMPION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_PLAY_CHAMPION;
        }

        /** Properties of a C_GET_TOP_RANK_BATTLE. */
        interface IC_GET_TOP_RANK_BATTLE {

            /** C_GET_TOP_RANK_BATTLE targetPlayerId */
            targetPlayerId?: (number|Long|null);

            /** C_GET_TOP_RANK_BATTLE battleType */
            battleType?: (number|null);

            /** C_GET_TOP_RANK_BATTLE posId */
            posId?: (number|null);
        }

        /** Represents a C_GET_TOP_RANK_BATTLE. */
        class C_GET_TOP_RANK_BATTLE implements IC_GET_TOP_RANK_BATTLE {

            /**
             * Constructs a new C_GET_TOP_RANK_BATTLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_BATTLE);

            /** C_GET_TOP_RANK_BATTLE targetPlayerId. */
            public targetPlayerId: (number|Long);

            /** C_GET_TOP_RANK_BATTLE battleType. */
            public battleType: number;

            /** C_GET_TOP_RANK_BATTLE posId. */
            public posId: number;

            /**
             * Encodes the specified C_GET_TOP_RANK_BATTLE message. Does not implicitly {@link com.message.C_GET_TOP_RANK_BATTLE.verify|verify} messages.
             * @param message C_GET_TOP_RANK_BATTLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_BATTLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_BATTLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_BATTLE;
        }

        /** Properties of a S_GET_TOP_RANK_BATTLE. */
        interface IS_GET_TOP_RANK_BATTLE {

            /** S_GET_TOP_RANK_BATTLE battleType */
            battleType?: (number|null);

            /** S_GET_TOP_RANK_BATTLE posId */
            posId?: (number|null);

            /** S_GET_TOP_RANK_BATTLE records */
            records?: (com.message.IBATTBLE_RECORD[]|null);
        }

        /** Represents a S_GET_TOP_RANK_BATTLE. */
        class S_GET_TOP_RANK_BATTLE implements IS_GET_TOP_RANK_BATTLE {

            /**
             * Constructs a new S_GET_TOP_RANK_BATTLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_BATTLE);

            /** S_GET_TOP_RANK_BATTLE battleType. */
            public battleType: number;

            /** S_GET_TOP_RANK_BATTLE posId. */
            public posId: number;

            /** S_GET_TOP_RANK_BATTLE records. */
            public records: com.message.IBATTBLE_RECORD[];

            /**
             * Encodes the specified S_GET_TOP_RANK_BATTLE message. Does not implicitly {@link com.message.S_GET_TOP_RANK_BATTLE.verify|verify} messages.
             * @param message S_GET_TOP_RANK_BATTLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_BATTLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_BATTLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_BATTLE;
        }

        /** Properties of a BATTBLE_RECORD. */
        interface IBATTBLE_RECORD {

            /** BATTBLE_RECORD playerId */
            playerId?: (number|Long|null);

            /** BATTBLE_RECORD targetId */
            targetId?: (number|Long|null);

            /** BATTBLE_RECORD battleId */
            battleId?: (string|null);

            /** BATTBLE_RECORD winPlayerId */
            winPlayerId?: (number|Long|null);
        }

        /** Represents a BATTBLE_RECORD. */
        class BATTBLE_RECORD implements IBATTBLE_RECORD {

            /**
             * Constructs a new BATTBLE_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBATTBLE_RECORD);

            /** BATTBLE_RECORD playerId. */
            public playerId: (number|Long);

            /** BATTBLE_RECORD targetId. */
            public targetId: (number|Long);

            /** BATTBLE_RECORD battleId. */
            public battleId: string;

            /** BATTBLE_RECORD winPlayerId. */
            public winPlayerId: (number|Long);

            /**
             * Encodes the specified BATTBLE_RECORD message. Does not implicitly {@link com.message.BATTBLE_RECORD.verify|verify} messages.
             * @param message BATTBLE_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBATTBLE_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BATTBLE_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BATTBLE_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BATTBLE_RECORD;
        }

        /** Properties of a C_GET_TOP_RANK_WARREPORT. */
        interface IC_GET_TOP_RANK_WARREPORT {

            /** C_GET_TOP_RANK_WARREPORT battleId */
            battleId?: (string|null);
        }

        /** Represents a C_GET_TOP_RANK_WARREPORT. */
        class C_GET_TOP_RANK_WARREPORT implements IC_GET_TOP_RANK_WARREPORT {

            /**
             * Constructs a new C_GET_TOP_RANK_WARREPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOP_RANK_WARREPORT);

            /** C_GET_TOP_RANK_WARREPORT battleId. */
            public battleId: string;

            /**
             * Encodes the specified C_GET_TOP_RANK_WARREPORT message. Does not implicitly {@link com.message.C_GET_TOP_RANK_WARREPORT.verify|verify} messages.
             * @param message C_GET_TOP_RANK_WARREPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOP_RANK_WARREPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOP_RANK_WARREPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOP_RANK_WARREPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOP_RANK_WARREPORT;
        }

        /** Properties of a S_GET_TOP_RANK_WARREPORT. */
        interface IS_GET_TOP_RANK_WARREPORT {

            /** S_GET_TOP_RANK_WARREPORT reportData */
            reportData?: (com.message.ICHAMPION_WAR_REPORT|null);
        }

        /** Represents a S_GET_TOP_RANK_WARREPORT. */
        class S_GET_TOP_RANK_WARREPORT implements IS_GET_TOP_RANK_WARREPORT {

            /**
             * Constructs a new S_GET_TOP_RANK_WARREPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOP_RANK_WARREPORT);

            /** S_GET_TOP_RANK_WARREPORT reportData. */
            public reportData?: (com.message.ICHAMPION_WAR_REPORT|null);

            /**
             * Encodes the specified S_GET_TOP_RANK_WARREPORT message. Does not implicitly {@link com.message.S_GET_TOP_RANK_WARREPORT.verify|verify} messages.
             * @param message S_GET_TOP_RANK_WARREPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOP_RANK_WARREPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOP_RANK_WARREPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOP_RANK_WARREPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOP_RANK_WARREPORT;
        }

        /** Properties of a CHAMPION_WAR_REPORT. */
        interface ICHAMPION_WAR_REPORT {

            /** CHAMPION_WAR_REPORT myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CHAMPION_WAR_REPORT enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** CHAMPION_WAR_REPORT fighterRoundMsg */
            fighterRoundMsg?: (com.message.IFighterRoundMsg[]|null);

            /** CHAMPION_WAR_REPORT roundNum */
            roundNum?: (number|null);

            /** CHAMPION_WAR_REPORT winPlayerId */
            winPlayerId?: (number|Long|null);
        }

        /** Represents a CHAMPION_WAR_REPORT. */
        class CHAMPION_WAR_REPORT implements ICHAMPION_WAR_REPORT {

            /**
             * Constructs a new CHAMPION_WAR_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICHAMPION_WAR_REPORT);

            /** CHAMPION_WAR_REPORT myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CHAMPION_WAR_REPORT enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** CHAMPION_WAR_REPORT fighterRoundMsg. */
            public fighterRoundMsg: com.message.IFighterRoundMsg[];

            /** CHAMPION_WAR_REPORT roundNum. */
            public roundNum: number;

            /** CHAMPION_WAR_REPORT winPlayerId. */
            public winPlayerId: (number|Long);

            /**
             * Encodes the specified CHAMPION_WAR_REPORT message. Does not implicitly {@link com.message.CHAMPION_WAR_REPORT.verify|verify} messages.
             * @param message CHAMPION_WAR_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICHAMPION_WAR_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CHAMPION_WAR_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CHAMPION_WAR_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CHAMPION_WAR_REPORT;
        }

        /** Properties of a CROSS_C_GET_TOP_RANK_INFO. */
        interface ICROSS_C_GET_TOP_RANK_INFO {

            /** CROSS_C_GET_TOP_RANK_INFO playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_TOP_RANK_INFO. */
        class CROSS_C_GET_TOP_RANK_INFO implements ICROSS_C_GET_TOP_RANK_INFO {

            /**
             * Constructs a new CROSS_C_GET_TOP_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TOP_RANK_INFO);

            /** CROSS_C_GET_TOP_RANK_INFO playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_TOP_RANK_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_TOP_RANK_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_TOP_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TOP_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TOP_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TOP_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TOP_RANK_INFO;
        }

        /** Properties of a CROSS_S_GET_TOP_RANK_INFO. */
        interface ICROSS_S_GET_TOP_RANK_INFO {

            /** CROSS_S_GET_TOP_RANK_INFO championType */
            championType?: (number|null);

            /** CROSS_S_GET_TOP_RANK_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_TOP_RANK_INFO rankData */
            rankData?: (com.message.IRankPlayerMsg[]|null);

            /** CROSS_S_GET_TOP_RANK_INFO seasonList */
            seasonList?: (number[]|null);

            /** CROSS_S_GET_TOP_RANK_INFO lastList */
            lastList?: (number[]|null);
        }

        /** Represents a CROSS_S_GET_TOP_RANK_INFO. */
        class CROSS_S_GET_TOP_RANK_INFO implements ICROSS_S_GET_TOP_RANK_INFO {

            /**
             * Constructs a new CROSS_S_GET_TOP_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TOP_RANK_INFO);

            /** CROSS_S_GET_TOP_RANK_INFO championType. */
            public championType: number;

            /** CROSS_S_GET_TOP_RANK_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_TOP_RANK_INFO rankData. */
            public rankData: com.message.IRankPlayerMsg[];

            /** CROSS_S_GET_TOP_RANK_INFO seasonList. */
            public seasonList: number[];

            /** CROSS_S_GET_TOP_RANK_INFO lastList. */
            public lastList: number[];

            /**
             * Encodes the specified CROSS_S_GET_TOP_RANK_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_TOP_RANK_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_TOP_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TOP_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TOP_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TOP_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TOP_RANK_INFO;
        }

        /** Properties of a CROSS_C_TOP_RANK_WORSHIP. */
        interface ICROSS_C_TOP_RANK_WORSHIP {

            /** CROSS_C_TOP_RANK_WORSHIP playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_TOP_RANK_WORSHIP. */
        class CROSS_C_TOP_RANK_WORSHIP implements ICROSS_C_TOP_RANK_WORSHIP {

            /**
             * Constructs a new CROSS_C_TOP_RANK_WORSHIP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_TOP_RANK_WORSHIP);

            /** CROSS_C_TOP_RANK_WORSHIP playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_TOP_RANK_WORSHIP message. Does not implicitly {@link com.message.CROSS_C_TOP_RANK_WORSHIP.verify|verify} messages.
             * @param message CROSS_C_TOP_RANK_WORSHIP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_TOP_RANK_WORSHIP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_TOP_RANK_WORSHIP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_TOP_RANK_WORSHIP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_TOP_RANK_WORSHIP;
        }

        /** Properties of a CROSS_S_TOP_RANK_WORSHIP. */
        interface ICROSS_S_TOP_RANK_WORSHIP {

            /** CROSS_S_TOP_RANK_WORSHIP playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_TOP_RANK_WORSHIP totalTimes */
            totalTimes?: (number|Long|null);
        }

        /** Represents a CROSS_S_TOP_RANK_WORSHIP. */
        class CROSS_S_TOP_RANK_WORSHIP implements ICROSS_S_TOP_RANK_WORSHIP {

            /**
             * Constructs a new CROSS_S_TOP_RANK_WORSHIP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_TOP_RANK_WORSHIP);

            /** CROSS_S_TOP_RANK_WORSHIP playerId. */
            public playerId: (number|Long);

            /** CROSS_S_TOP_RANK_WORSHIP totalTimes. */
            public totalTimes: (number|Long);

            /**
             * Encodes the specified CROSS_S_TOP_RANK_WORSHIP message. Does not implicitly {@link com.message.CROSS_S_TOP_RANK_WORSHIP.verify|verify} messages.
             * @param message CROSS_S_TOP_RANK_WORSHIP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_TOP_RANK_WORSHIP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_TOP_RANK_WORSHIP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_TOP_RANK_WORSHIP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_TOP_RANK_WORSHIP;
        }

        /** Properties of a CROSS_C_TOP_RANK_APPLY. */
        interface ICROSS_C_TOP_RANK_APPLY {

            /** CROSS_C_TOP_RANK_APPLY playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_TOP_RANK_APPLY playerLevel */
            playerLevel?: (number|null);

            /** CROSS_C_TOP_RANK_APPLY serverId */
            serverId?: (number|null);
        }

        /** Represents a CROSS_C_TOP_RANK_APPLY. */
        class CROSS_C_TOP_RANK_APPLY implements ICROSS_C_TOP_RANK_APPLY {

            /**
             * Constructs a new CROSS_C_TOP_RANK_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_TOP_RANK_APPLY);

            /** CROSS_C_TOP_RANK_APPLY playerId. */
            public playerId: (number|Long);

            /** CROSS_C_TOP_RANK_APPLY playerLevel. */
            public playerLevel: number;

            /** CROSS_C_TOP_RANK_APPLY serverId. */
            public serverId: number;

            /**
             * Encodes the specified CROSS_C_TOP_RANK_APPLY message. Does not implicitly {@link com.message.CROSS_C_TOP_RANK_APPLY.verify|verify} messages.
             * @param message CROSS_C_TOP_RANK_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_TOP_RANK_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_TOP_RANK_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_TOP_RANK_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_TOP_RANK_APPLY;
        }

        /** Properties of a CROSS_S_TOP_RANK_APPLY. */
        interface ICROSS_S_TOP_RANK_APPLY {

            /** CROSS_S_TOP_RANK_APPLY playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_TOP_RANK_APPLY totalApply */
            totalApply?: (number|null);
        }

        /** Represents a CROSS_S_TOP_RANK_APPLY. */
        class CROSS_S_TOP_RANK_APPLY implements ICROSS_S_TOP_RANK_APPLY {

            /**
             * Constructs a new CROSS_S_TOP_RANK_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_TOP_RANK_APPLY);

            /** CROSS_S_TOP_RANK_APPLY playerId. */
            public playerId: (number|Long);

            /** CROSS_S_TOP_RANK_APPLY totalApply. */
            public totalApply: number;

            /**
             * Encodes the specified CROSS_S_TOP_RANK_APPLY message. Does not implicitly {@link com.message.CROSS_S_TOP_RANK_APPLY.verify|verify} messages.
             * @param message CROSS_S_TOP_RANK_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_TOP_RANK_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_TOP_RANK_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_TOP_RANK_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_TOP_RANK_APPLY;
        }

        /** Properties of a CROSS_C_GET_TOP_RANK_WARRECORD. */
        interface ICROSS_C_GET_TOP_RANK_WARRECORD {

            /** CROSS_C_GET_TOP_RANK_WARRECORD playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_TOP_RANK_WARRECORD. */
        class CROSS_C_GET_TOP_RANK_WARRECORD implements ICROSS_C_GET_TOP_RANK_WARRECORD {

            /**
             * Constructs a new CROSS_C_GET_TOP_RANK_WARRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TOP_RANK_WARRECORD);

            /** CROSS_C_GET_TOP_RANK_WARRECORD playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_TOP_RANK_WARRECORD message. Does not implicitly {@link com.message.CROSS_C_GET_TOP_RANK_WARRECORD.verify|verify} messages.
             * @param message CROSS_C_GET_TOP_RANK_WARRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TOP_RANK_WARRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TOP_RANK_WARRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TOP_RANK_WARRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TOP_RANK_WARRECORD;
        }

        /** Properties of a CROSS_S_GET_TOP_RANK_WARRECORD. */
        interface ICROSS_S_GET_TOP_RANK_WARRECORD {

            /** CROSS_S_GET_TOP_RANK_WARRECORD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_TOP_RANK_WARRECORD records */
            records?: (com.message.IJOIN_WAR_REPORT|null);
        }

        /** Represents a CROSS_S_GET_TOP_RANK_WARRECORD. */
        class CROSS_S_GET_TOP_RANK_WARRECORD implements ICROSS_S_GET_TOP_RANK_WARRECORD {

            /**
             * Constructs a new CROSS_S_GET_TOP_RANK_WARRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TOP_RANK_WARRECORD);

            /** CROSS_S_GET_TOP_RANK_WARRECORD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_TOP_RANK_WARRECORD records. */
            public records?: (com.message.IJOIN_WAR_REPORT|null);

            /**
             * Encodes the specified CROSS_S_GET_TOP_RANK_WARRECORD message. Does not implicitly {@link com.message.CROSS_S_GET_TOP_RANK_WARRECORD.verify|verify} messages.
             * @param message CROSS_S_GET_TOP_RANK_WARRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TOP_RANK_WARRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TOP_RANK_WARRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TOP_RANK_WARRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TOP_RANK_WARRECORD;
        }

        /** Properties of a CROSS_C_GET_TOP_RANK_WIN. */
        interface ICROSS_C_GET_TOP_RANK_WIN {

            /** CROSS_C_GET_TOP_RANK_WIN championType */
            championType?: (number|null);

            /** CROSS_C_GET_TOP_RANK_WIN teamId */
            teamId?: (number|null);

            /** CROSS_C_GET_TOP_RANK_WIN playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_TOP_RANK_WIN. */
        class CROSS_C_GET_TOP_RANK_WIN implements ICROSS_C_GET_TOP_RANK_WIN {

            /**
             * Constructs a new CROSS_C_GET_TOP_RANK_WIN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TOP_RANK_WIN);

            /** CROSS_C_GET_TOP_RANK_WIN championType. */
            public championType: number;

            /** CROSS_C_GET_TOP_RANK_WIN teamId. */
            public teamId: number;

            /** CROSS_C_GET_TOP_RANK_WIN playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_TOP_RANK_WIN message. Does not implicitly {@link com.message.CROSS_C_GET_TOP_RANK_WIN.verify|verify} messages.
             * @param message CROSS_C_GET_TOP_RANK_WIN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TOP_RANK_WIN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TOP_RANK_WIN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TOP_RANK_WIN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TOP_RANK_WIN;
        }

        /** Properties of a CROSS_S_GET_TOP_RANK_WIN. */
        interface ICROSS_S_GET_TOP_RANK_WIN {

            /** CROSS_S_GET_TOP_RANK_WIN championType */
            championType?: (number|null);

            /** CROSS_S_GET_TOP_RANK_WIN teamId */
            teamId?: (number|null);

            /** CROSS_S_GET_TOP_RANK_WIN playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_TOP_RANK_WIN datas */
            datas?: (com.message.IWIN_PLAYER_DATA[]|null);

            /** CROSS_S_GET_TOP_RANK_WIN selfTeamId */
            selfTeamId?: (number|null);
        }

        /** Represents a CROSS_S_GET_TOP_RANK_WIN. */
        class CROSS_S_GET_TOP_RANK_WIN implements ICROSS_S_GET_TOP_RANK_WIN {

            /**
             * Constructs a new CROSS_S_GET_TOP_RANK_WIN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TOP_RANK_WIN);

            /** CROSS_S_GET_TOP_RANK_WIN championType. */
            public championType: number;

            /** CROSS_S_GET_TOP_RANK_WIN teamId. */
            public teamId: number;

            /** CROSS_S_GET_TOP_RANK_WIN playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_TOP_RANK_WIN datas. */
            public datas: com.message.IWIN_PLAYER_DATA[];

            /** CROSS_S_GET_TOP_RANK_WIN selfTeamId. */
            public selfTeamId: number;

            /**
             * Encodes the specified CROSS_S_GET_TOP_RANK_WIN message. Does not implicitly {@link com.message.CROSS_S_GET_TOP_RANK_WIN.verify|verify} messages.
             * @param message CROSS_S_GET_TOP_RANK_WIN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TOP_RANK_WIN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TOP_RANK_WIN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TOP_RANK_WIN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TOP_RANK_WIN;
        }

        /** Properties of a CROSS_C_GET_TOP_RANK_CHAMPION. */
        interface ICROSS_C_GET_TOP_RANK_CHAMPION {

            /** CROSS_C_GET_TOP_RANK_CHAMPION championType */
            championType?: (number|null);

            /** CROSS_C_GET_TOP_RANK_CHAMPION playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_TOP_RANK_CHAMPION. */
        class CROSS_C_GET_TOP_RANK_CHAMPION implements ICROSS_C_GET_TOP_RANK_CHAMPION {

            /**
             * Constructs a new CROSS_C_GET_TOP_RANK_CHAMPION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TOP_RANK_CHAMPION);

            /** CROSS_C_GET_TOP_RANK_CHAMPION championType. */
            public championType: number;

            /** CROSS_C_GET_TOP_RANK_CHAMPION playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_TOP_RANK_CHAMPION message. Does not implicitly {@link com.message.CROSS_C_GET_TOP_RANK_CHAMPION.verify|verify} messages.
             * @param message CROSS_C_GET_TOP_RANK_CHAMPION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TOP_RANK_CHAMPION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TOP_RANK_CHAMPION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TOP_RANK_CHAMPION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TOP_RANK_CHAMPION;
        }

        /** Properties of a CROSS_S_GET_TOP_RANK_CHAMPION. */
        interface ICROSS_S_GET_TOP_RANK_CHAMPION {

            /** CROSS_S_GET_TOP_RANK_CHAMPION championType */
            championType?: (number|null);

            /** CROSS_S_GET_TOP_RANK_CHAMPION datas */
            datas?: (com.message.IWIN_PLAYER_DATA[]|null);

            /** CROSS_S_GET_TOP_RANK_CHAMPION playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GET_TOP_RANK_CHAMPION. */
        class CROSS_S_GET_TOP_RANK_CHAMPION implements ICROSS_S_GET_TOP_RANK_CHAMPION {

            /**
             * Constructs a new CROSS_S_GET_TOP_RANK_CHAMPION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TOP_RANK_CHAMPION);

            /** CROSS_S_GET_TOP_RANK_CHAMPION championType. */
            public championType: number;

            /** CROSS_S_GET_TOP_RANK_CHAMPION datas. */
            public datas: com.message.IWIN_PLAYER_DATA[];

            /** CROSS_S_GET_TOP_RANK_CHAMPION playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GET_TOP_RANK_CHAMPION message. Does not implicitly {@link com.message.CROSS_S_GET_TOP_RANK_CHAMPION.verify|verify} messages.
             * @param message CROSS_S_GET_TOP_RANK_CHAMPION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TOP_RANK_CHAMPION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TOP_RANK_CHAMPION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TOP_RANK_CHAMPION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TOP_RANK_CHAMPION;
        }

        /** Properties of a CROSS_C_GET_TOP_RANK_BATTLE. */
        interface ICROSS_C_GET_TOP_RANK_BATTLE {

            /** CROSS_C_GET_TOP_RANK_BATTLE targetPlayerId */
            targetPlayerId?: (number|Long|null);

            /** CROSS_C_GET_TOP_RANK_BATTLE battleType */
            battleType?: (number|null);

            /** CROSS_C_GET_TOP_RANK_BATTLE posId */
            posId?: (number|null);

            /** CROSS_C_GET_TOP_RANK_BATTLE playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_TOP_RANK_BATTLE. */
        class CROSS_C_GET_TOP_RANK_BATTLE implements ICROSS_C_GET_TOP_RANK_BATTLE {

            /**
             * Constructs a new CROSS_C_GET_TOP_RANK_BATTLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TOP_RANK_BATTLE);

            /** CROSS_C_GET_TOP_RANK_BATTLE targetPlayerId. */
            public targetPlayerId: (number|Long);

            /** CROSS_C_GET_TOP_RANK_BATTLE battleType. */
            public battleType: number;

            /** CROSS_C_GET_TOP_RANK_BATTLE posId. */
            public posId: number;

            /** CROSS_C_GET_TOP_RANK_BATTLE playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_TOP_RANK_BATTLE message. Does not implicitly {@link com.message.CROSS_C_GET_TOP_RANK_BATTLE.verify|verify} messages.
             * @param message CROSS_C_GET_TOP_RANK_BATTLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TOP_RANK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TOP_RANK_BATTLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TOP_RANK_BATTLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TOP_RANK_BATTLE;
        }

        /** Properties of a CROSS_S_GET_TOP_RANK_BATTLE. */
        interface ICROSS_S_GET_TOP_RANK_BATTLE {

            /** CROSS_S_GET_TOP_RANK_BATTLE battleType */
            battleType?: (number|null);

            /** CROSS_S_GET_TOP_RANK_BATTLE posId */
            posId?: (number|null);

            /** CROSS_S_GET_TOP_RANK_BATTLE records */
            records?: (com.message.IBATTBLE_RECORD[]|null);

            /** CROSS_S_GET_TOP_RANK_BATTLE playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GET_TOP_RANK_BATTLE. */
        class CROSS_S_GET_TOP_RANK_BATTLE implements ICROSS_S_GET_TOP_RANK_BATTLE {

            /**
             * Constructs a new CROSS_S_GET_TOP_RANK_BATTLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TOP_RANK_BATTLE);

            /** CROSS_S_GET_TOP_RANK_BATTLE battleType. */
            public battleType: number;

            /** CROSS_S_GET_TOP_RANK_BATTLE posId. */
            public posId: number;

            /** CROSS_S_GET_TOP_RANK_BATTLE records. */
            public records: com.message.IBATTBLE_RECORD[];

            /** CROSS_S_GET_TOP_RANK_BATTLE playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GET_TOP_RANK_BATTLE message. Does not implicitly {@link com.message.CROSS_S_GET_TOP_RANK_BATTLE.verify|verify} messages.
             * @param message CROSS_S_GET_TOP_RANK_BATTLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TOP_RANK_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TOP_RANK_BATTLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TOP_RANK_BATTLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TOP_RANK_BATTLE;
        }

        /** Properties of a CROSS_C_GET_TOP_RANK_WARREPORT. */
        interface ICROSS_C_GET_TOP_RANK_WARREPORT {

            /** CROSS_C_GET_TOP_RANK_WARREPORT battleId */
            battleId?: (string|null);

            /** CROSS_C_GET_TOP_RANK_WARREPORT playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_TOP_RANK_WARREPORT. */
        class CROSS_C_GET_TOP_RANK_WARREPORT implements ICROSS_C_GET_TOP_RANK_WARREPORT {

            /**
             * Constructs a new CROSS_C_GET_TOP_RANK_WARREPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TOP_RANK_WARREPORT);

            /** CROSS_C_GET_TOP_RANK_WARREPORT battleId. */
            public battleId: string;

            /** CROSS_C_GET_TOP_RANK_WARREPORT playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_TOP_RANK_WARREPORT message. Does not implicitly {@link com.message.CROSS_C_GET_TOP_RANK_WARREPORT.verify|verify} messages.
             * @param message CROSS_C_GET_TOP_RANK_WARREPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TOP_RANK_WARREPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TOP_RANK_WARREPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TOP_RANK_WARREPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TOP_RANK_WARREPORT;
        }

        /** Properties of a CROSS_S_GET_TOP_RANK_WARREPORT. */
        interface ICROSS_S_GET_TOP_RANK_WARREPORT {

            /** CROSS_S_GET_TOP_RANK_WARREPORT reportData */
            reportData?: (com.message.ICHAMPION_WAR_REPORT|null);

            /** CROSS_S_GET_TOP_RANK_WARREPORT playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GET_TOP_RANK_WARREPORT. */
        class CROSS_S_GET_TOP_RANK_WARREPORT implements ICROSS_S_GET_TOP_RANK_WARREPORT {

            /**
             * Constructs a new CROSS_S_GET_TOP_RANK_WARREPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TOP_RANK_WARREPORT);

            /** CROSS_S_GET_TOP_RANK_WARREPORT reportData. */
            public reportData?: (com.message.ICHAMPION_WAR_REPORT|null);

            /** CROSS_S_GET_TOP_RANK_WARREPORT playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GET_TOP_RANK_WARREPORT message. Does not implicitly {@link com.message.CROSS_S_GET_TOP_RANK_WARREPORT.verify|verify} messages.
             * @param message CROSS_S_GET_TOP_RANK_WARREPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TOP_RANK_WARREPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TOP_RANK_WARREPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TOP_RANK_WARREPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TOP_RANK_WARREPORT;
        }

        /** Properties of a CROSS_S_TOP_RANK_CHAMPION_ID. */
        interface ICROSS_S_TOP_RANK_CHAMPION_ID {

            /** CROSS_S_TOP_RANK_CHAMPION_ID championType */
            championType?: (number|null);

            /** CROSS_S_TOP_RANK_CHAMPION_ID playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_TOP_RANK_CHAMPION_ID. */
        class CROSS_S_TOP_RANK_CHAMPION_ID implements ICROSS_S_TOP_RANK_CHAMPION_ID {

            /**
             * Constructs a new CROSS_S_TOP_RANK_CHAMPION_ID.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_TOP_RANK_CHAMPION_ID);

            /** CROSS_S_TOP_RANK_CHAMPION_ID championType. */
            public championType: number;

            /** CROSS_S_TOP_RANK_CHAMPION_ID playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_TOP_RANK_CHAMPION_ID message. Does not implicitly {@link com.message.CROSS_S_TOP_RANK_CHAMPION_ID.verify|verify} messages.
             * @param message CROSS_S_TOP_RANK_CHAMPION_ID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_TOP_RANK_CHAMPION_ID, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_TOP_RANK_CHAMPION_ID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_TOP_RANK_CHAMPION_ID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_TOP_RANK_CHAMPION_ID;
        }

        /** Properties of a CROSS_C_GET_TOP_RANK_GUESS. */
        interface ICROSS_C_GET_TOP_RANK_GUESS {

            /** CROSS_C_GET_TOP_RANK_GUESS guessType */
            guessType?: (number|null);

            /** CROSS_C_GET_TOP_RANK_GUESS winPlayerId */
            winPlayerId?: (number|Long|null);

            /** CROSS_C_GET_TOP_RANK_GUESS guessId */
            guessId?: (number|null);

            /** CROSS_C_GET_TOP_RANK_GUESS championType */
            championType?: (number|null);

            /** CROSS_C_GET_TOP_RANK_GUESS playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_TOP_RANK_GUESS. */
        class CROSS_C_GET_TOP_RANK_GUESS implements ICROSS_C_GET_TOP_RANK_GUESS {

            /**
             * Constructs a new CROSS_C_GET_TOP_RANK_GUESS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TOP_RANK_GUESS);

            /** CROSS_C_GET_TOP_RANK_GUESS guessType. */
            public guessType: number;

            /** CROSS_C_GET_TOP_RANK_GUESS winPlayerId. */
            public winPlayerId: (number|Long);

            /** CROSS_C_GET_TOP_RANK_GUESS guessId. */
            public guessId: number;

            /** CROSS_C_GET_TOP_RANK_GUESS championType. */
            public championType: number;

            /** CROSS_C_GET_TOP_RANK_GUESS playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_TOP_RANK_GUESS message. Does not implicitly {@link com.message.CROSS_C_GET_TOP_RANK_GUESS.verify|verify} messages.
             * @param message CROSS_C_GET_TOP_RANK_GUESS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TOP_RANK_GUESS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TOP_RANK_GUESS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TOP_RANK_GUESS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TOP_RANK_GUESS;
        }

        /** Properties of a CROSS_S_GET_TOP_RANK_GUESS. */
        interface ICROSS_S_GET_TOP_RANK_GUESS {

            /** CROSS_S_GET_TOP_RANK_GUESS guessType */
            guessType?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS winPlayerId */
            winPlayerId?: (number|Long|null);

            /** CROSS_S_GET_TOP_RANK_GUESS guessId */
            guessId?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS championType */
            championType?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_TOP_RANK_GUESS result */
            result?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS teamId */
            teamId?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS fightValue */
            fightValue?: (number|Long|null);

            /** CROSS_S_GET_TOP_RANK_GUESS level */
            level?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS serverId */
            serverId?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS heroQuality */
            heroQuality?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS useHeadFrame */
            useHeadFrame?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS heroId */
            heroId?: (number|null);

            /** CROSS_S_GET_TOP_RANK_GUESS nickName */
            nickName?: (string|null);

            /** CROSS_S_GET_TOP_RANK_GUESS posId */
            posId?: (number|null);
        }

        /** Represents a CROSS_S_GET_TOP_RANK_GUESS. */
        class CROSS_S_GET_TOP_RANK_GUESS implements ICROSS_S_GET_TOP_RANK_GUESS {

            /**
             * Constructs a new CROSS_S_GET_TOP_RANK_GUESS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TOP_RANK_GUESS);

            /** CROSS_S_GET_TOP_RANK_GUESS guessType. */
            public guessType: number;

            /** CROSS_S_GET_TOP_RANK_GUESS winPlayerId. */
            public winPlayerId: (number|Long);

            /** CROSS_S_GET_TOP_RANK_GUESS guessId. */
            public guessId: number;

            /** CROSS_S_GET_TOP_RANK_GUESS championType. */
            public championType: number;

            /** CROSS_S_GET_TOP_RANK_GUESS playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_TOP_RANK_GUESS result. */
            public result: number;

            /** CROSS_S_GET_TOP_RANK_GUESS teamId. */
            public teamId: number;

            /** CROSS_S_GET_TOP_RANK_GUESS fightValue. */
            public fightValue: (number|Long);

            /** CROSS_S_GET_TOP_RANK_GUESS level. */
            public level: number;

            /** CROSS_S_GET_TOP_RANK_GUESS serverId. */
            public serverId: number;

            /** CROSS_S_GET_TOP_RANK_GUESS heroQuality. */
            public heroQuality: number;

            /** CROSS_S_GET_TOP_RANK_GUESS useHeadFrame. */
            public useHeadFrame: number;

            /** CROSS_S_GET_TOP_RANK_GUESS heroId. */
            public heroId: number;

            /** CROSS_S_GET_TOP_RANK_GUESS nickName. */
            public nickName: string;

            /** CROSS_S_GET_TOP_RANK_GUESS posId. */
            public posId: number;

            /**
             * Encodes the specified CROSS_S_GET_TOP_RANK_GUESS message. Does not implicitly {@link com.message.CROSS_S_GET_TOP_RANK_GUESS.verify|verify} messages.
             * @param message CROSS_S_GET_TOP_RANK_GUESS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TOP_RANK_GUESS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TOP_RANK_GUESS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TOP_RANK_GUESS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TOP_RANK_GUESS;
        }

        /** Properties of a CROSS_S_SEND_TOP_RANK_GUESS. */
        interface ICROSS_S_SEND_TOP_RANK_GUESS {

            /** CROSS_S_SEND_TOP_RANK_GUESS championType */
            championType?: (number|null);

            /** CROSS_S_SEND_TOP_RANK_GUESS teamId */
            teamId?: (number|null);

            /** CROSS_S_SEND_TOP_RANK_GUESS guessId */
            guessId?: (number|null);

            /** CROSS_S_SEND_TOP_RANK_GUESS guessType */
            guessType?: (number|null);

            /** CROSS_S_SEND_TOP_RANK_GUESS winPlayerId */
            winPlayerId?: (number|Long|null);

            /** CROSS_S_SEND_TOP_RANK_GUESS posId */
            posId?: (number|null);
        }

        /** Represents a CROSS_S_SEND_TOP_RANK_GUESS. */
        class CROSS_S_SEND_TOP_RANK_GUESS implements ICROSS_S_SEND_TOP_RANK_GUESS {

            /**
             * Constructs a new CROSS_S_SEND_TOP_RANK_GUESS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SEND_TOP_RANK_GUESS);

            /** CROSS_S_SEND_TOP_RANK_GUESS championType. */
            public championType: number;

            /** CROSS_S_SEND_TOP_RANK_GUESS teamId. */
            public teamId: number;

            /** CROSS_S_SEND_TOP_RANK_GUESS guessId. */
            public guessId: number;

            /** CROSS_S_SEND_TOP_RANK_GUESS guessType. */
            public guessType: number;

            /** CROSS_S_SEND_TOP_RANK_GUESS winPlayerId. */
            public winPlayerId: (number|Long);

            /** CROSS_S_SEND_TOP_RANK_GUESS posId. */
            public posId: number;

            /**
             * Encodes the specified CROSS_S_SEND_TOP_RANK_GUESS message. Does not implicitly {@link com.message.CROSS_S_SEND_TOP_RANK_GUESS.verify|verify} messages.
             * @param message CROSS_S_SEND_TOP_RANK_GUESS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SEND_TOP_RANK_GUESS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SEND_TOP_RANK_GUESS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SEND_TOP_RANK_GUESS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SEND_TOP_RANK_GUESS;
        }

        /** Properties of a CROSS_S_SEND_TOP_RANK_RANK. */
        interface ICROSS_S_SEND_TOP_RANK_RANK {

            /** CROSS_S_SEND_TOP_RANK_RANK championType */
            championType?: (number|null);

            /** CROSS_S_SEND_TOP_RANK_RANK playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_SEND_TOP_RANK_RANK rank */
            rank?: (number|null);
        }

        /** Represents a CROSS_S_SEND_TOP_RANK_RANK. */
        class CROSS_S_SEND_TOP_RANK_RANK implements ICROSS_S_SEND_TOP_RANK_RANK {

            /**
             * Constructs a new CROSS_S_SEND_TOP_RANK_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SEND_TOP_RANK_RANK);

            /** CROSS_S_SEND_TOP_RANK_RANK championType. */
            public championType: number;

            /** CROSS_S_SEND_TOP_RANK_RANK playerId. */
            public playerId: (number|Long);

            /** CROSS_S_SEND_TOP_RANK_RANK rank. */
            public rank: number;

            /**
             * Encodes the specified CROSS_S_SEND_TOP_RANK_RANK message. Does not implicitly {@link com.message.CROSS_S_SEND_TOP_RANK_RANK.verify|verify} messages.
             * @param message CROSS_S_SEND_TOP_RANK_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SEND_TOP_RANK_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SEND_TOP_RANK_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SEND_TOP_RANK_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SEND_TOP_RANK_RANK;
        }

        /** Properties of a FighterPropertyMsg. */
        interface IFighterPropertyMsg {

            /** FighterPropertyMsg hp */
            hp?: (number|Long|null);

            /** FighterPropertyMsg hpMax */
            hpMax?: (number|Long|null);

            /** FighterPropertyMsg attack */
            attack?: (number|null);

            /** FighterPropertyMsg defence */
            defence?: (number|null);

            /** FighterPropertyMsg speed */
            speed?: (number|null);

            /** FighterPropertyMsg hit */
            hit?: (number|null);

            /** FighterPropertyMsg dodge */
            dodge?: (number|null);

            /** FighterPropertyMsg crit */
            crit?: (number|null);

            /** FighterPropertyMsg critDeffence */
            critDeffence?: (number|null);

            /** FighterPropertyMsg dunt */
            dunt?: (number|null);

            /** FighterPropertyMsg block */
            block?: (number|null);

            /** FighterPropertyMsg pvpHurt */
            pvpHurt?: (number|null);

            /** FighterPropertyMsg pvpAvoidHurt */
            pvpAvoidHurt?: (number|null);
        }

        /** Represents a FighterPropertyMsg. */
        class FighterPropertyMsg implements IFighterPropertyMsg {

            /**
             * Constructs a new FighterPropertyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterPropertyMsg);

            /** FighterPropertyMsg hp. */
            public hp: (number|Long);

            /** FighterPropertyMsg hpMax. */
            public hpMax: (number|Long);

            /** FighterPropertyMsg attack. */
            public attack: number;

            /** FighterPropertyMsg defence. */
            public defence: number;

            /** FighterPropertyMsg speed. */
            public speed: number;

            /** FighterPropertyMsg hit. */
            public hit: number;

            /** FighterPropertyMsg dodge. */
            public dodge: number;

            /** FighterPropertyMsg crit. */
            public crit: number;

            /** FighterPropertyMsg critDeffence. */
            public critDeffence: number;

            /** FighterPropertyMsg dunt. */
            public dunt: number;

            /** FighterPropertyMsg block. */
            public block: number;

            /** FighterPropertyMsg pvpHurt. */
            public pvpHurt: number;

            /** FighterPropertyMsg pvpAvoidHurt. */
            public pvpAvoidHurt: number;

            /**
             * Encodes the specified FighterPropertyMsg message. Does not implicitly {@link com.message.FighterPropertyMsg.verify|verify} messages.
             * @param message FighterPropertyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterPropertyMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterPropertyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterPropertyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterPropertyMsg;
        }

        /** Properties of a FighterAttrMsg. */
        interface IFighterAttrMsg {

            /** FighterAttrMsg hp */
            hp?: (number|Long|null);

            /** FighterAttrMsg hpMax */
            hpMax?: (number|Long|null);

            /** FighterAttrMsg fireEnergy */
            fireEnergy?: (number|null);

            /** FighterAttrMsg maxFireEnergy */
            maxFireEnergy?: (number|null);

            /** FighterAttrMsg attack */
            attack?: (number|null);

            /** FighterAttrMsg defence */
            defence?: (number|null);

            /** FighterAttrMsg level */
            level?: (number|null);

            /** FighterAttrMsg hit */
            hit?: (number|null);

            /** FighterAttrMsg dodge */
            dodge?: (number|null);

            /** FighterAttrMsg crit */
            crit?: (number|null);

            /** FighterAttrMsg critDeffence */
            critDeffence?: (number|null);

            /** FighterAttrMsg critHurt */
            critHurt?: (number|null);

            /** FighterAttrMsg critMultRate */
            critMultRate?: (number|null);

            /** FighterAttrMsg critDefRate */
            critDefRate?: (number|null);

            /** FighterAttrMsg critRate */
            critRate?: (number|null);

            /** FighterAttrMsg dodgeRate */
            dodgeRate?: (number|null);

            /** FighterAttrMsg hitRate */
            hitRate?: (number|null);

            /** FighterAttrMsg speed */
            speed?: (number|null);

            /** FighterAttrMsg pvpAvoidHurtAllRate */
            pvpAvoidHurtAllRate?: (number|null);

            /** FighterAttrMsg pvpHurtAllRate */
            pvpHurtAllRate?: (number|null);

            /** FighterAttrMsg blockAllRate */
            blockAllRate?: (number|null);

            /** FighterAttrMsg duntAllRate */
            duntAllRate?: (number|null);

            /** FighterAttrMsg speedAllRate */
            speedAllRate?: (number|null);

            /** FighterAttrMsg critDeffenceAllRate */
            critDeffenceAllRate?: (number|null);

            /** FighterAttrMsg critAllRate */
            critAllRate?: (number|null);

            /** FighterAttrMsg dodgeAllRate */
            dodgeAllRate?: (number|null);

            /** FighterAttrMsg hitAllRate */
            hitAllRate?: (number|null);

            /** FighterAttrMsg defenceAllRate */
            defenceAllRate?: (number|null);

            /** FighterAttrMsg attackAllRate */
            attackAllRate?: (number|null);

            /** FighterAttrMsg hpAllRate */
            hpAllRate?: (number|null);

            /** FighterAttrMsg pvpAvoidHurt */
            pvpAvoidHurt?: (number|null);

            /** FighterAttrMsg pvpHurt */
            pvpHurt?: (number|null);

            /** FighterAttrMsg avoidHurtRate */
            avoidHurtRate?: (number|null);

            /** FighterAttrMsg hurtRate */
            hurtRate?: (number|null);

            /** FighterAttrMsg block */
            block?: (number|null);

            /** FighterAttrMsg dunt */
            dunt?: (number|null);

            /** FighterAttrMsg heartHurt */
            heartHurt?: (number|null);

            /** FighterAttrMsg heartDefRate */
            heartDefRate?: (number|null);

            /** FighterAttrMsg heartMultRate */
            heartMultRate?: (number|null);

            /** FighterAttrMsg heartRate */
            heartRate?: (number|null);
        }

        /** Represents a FighterAttrMsg. */
        class FighterAttrMsg implements IFighterAttrMsg {

            /**
             * Constructs a new FighterAttrMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterAttrMsg);

            /** FighterAttrMsg hp. */
            public hp: (number|Long);

            /** FighterAttrMsg hpMax. */
            public hpMax: (number|Long);

            /** FighterAttrMsg fireEnergy. */
            public fireEnergy: number;

            /** FighterAttrMsg maxFireEnergy. */
            public maxFireEnergy: number;

            /** FighterAttrMsg attack. */
            public attack: number;

            /** FighterAttrMsg defence. */
            public defence: number;

            /** FighterAttrMsg level. */
            public level: number;

            /** FighterAttrMsg hit. */
            public hit: number;

            /** FighterAttrMsg dodge. */
            public dodge: number;

            /** FighterAttrMsg crit. */
            public crit: number;

            /** FighterAttrMsg critDeffence. */
            public critDeffence: number;

            /** FighterAttrMsg critHurt. */
            public critHurt: number;

            /** FighterAttrMsg critMultRate. */
            public critMultRate: number;

            /** FighterAttrMsg critDefRate. */
            public critDefRate: number;

            /** FighterAttrMsg critRate. */
            public critRate: number;

            /** FighterAttrMsg dodgeRate. */
            public dodgeRate: number;

            /** FighterAttrMsg hitRate. */
            public hitRate: number;

            /** FighterAttrMsg speed. */
            public speed: number;

            /** FighterAttrMsg pvpAvoidHurtAllRate. */
            public pvpAvoidHurtAllRate: number;

            /** FighterAttrMsg pvpHurtAllRate. */
            public pvpHurtAllRate: number;

            /** FighterAttrMsg blockAllRate. */
            public blockAllRate: number;

            /** FighterAttrMsg duntAllRate. */
            public duntAllRate: number;

            /** FighterAttrMsg speedAllRate. */
            public speedAllRate: number;

            /** FighterAttrMsg critDeffenceAllRate. */
            public critDeffenceAllRate: number;

            /** FighterAttrMsg critAllRate. */
            public critAllRate: number;

            /** FighterAttrMsg dodgeAllRate. */
            public dodgeAllRate: number;

            /** FighterAttrMsg hitAllRate. */
            public hitAllRate: number;

            /** FighterAttrMsg defenceAllRate. */
            public defenceAllRate: number;

            /** FighterAttrMsg attackAllRate. */
            public attackAllRate: number;

            /** FighterAttrMsg hpAllRate. */
            public hpAllRate: number;

            /** FighterAttrMsg pvpAvoidHurt. */
            public pvpAvoidHurt: number;

            /** FighterAttrMsg pvpHurt. */
            public pvpHurt: number;

            /** FighterAttrMsg avoidHurtRate. */
            public avoidHurtRate: number;

            /** FighterAttrMsg hurtRate. */
            public hurtRate: number;

            /** FighterAttrMsg block. */
            public block: number;

            /** FighterAttrMsg dunt. */
            public dunt: number;

            /** FighterAttrMsg heartHurt. */
            public heartHurt: number;

            /** FighterAttrMsg heartDefRate. */
            public heartDefRate: number;

            /** FighterAttrMsg heartMultRate. */
            public heartMultRate: number;

            /** FighterAttrMsg heartRate. */
            public heartRate: number;

            /**
             * Encodes the specified FighterAttrMsg message. Does not implicitly {@link com.message.FighterAttrMsg.verify|verify} messages.
             * @param message FighterAttrMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterAttrMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterAttrMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterAttrMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterAttrMsg;
        }

        /** Properties of a FighterBuffMsg. */
        interface IFighterBuffMsg {

            /** FighterBuffMsg buffId */
            buffId?: (number|null);

            /** FighterBuffMsg startRound */
            startRound?: (number|null);
        }

        /** Represents a FighterBuffMsg. */
        class FighterBuffMsg implements IFighterBuffMsg {

            /**
             * Constructs a new FighterBuffMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterBuffMsg);

            /** FighterBuffMsg buffId. */
            public buffId: number;

            /** FighterBuffMsg startRound. */
            public startRound: number;

            /**
             * Encodes the specified FighterBuffMsg message. Does not implicitly {@link com.message.FighterBuffMsg.verify|verify} messages.
             * @param message FighterBuffMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterBuffMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterBuffMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterBuffMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterBuffMsg;
        }

        /** Properties of a FighterSkillMsg. */
        interface IFighterSkillMsg {

            /** FighterSkillMsg skillId */
            skillId?: (number|null);

            /** FighterSkillMsg skillType */
            skillType?: (number|null);

            /** FighterSkillMsg seq */
            seq?: (number|null);

            /** FighterSkillMsg subType */
            subType?: (number|null);
        }

        /** Represents a FighterSkillMsg. */
        class FighterSkillMsg implements IFighterSkillMsg {

            /**
             * Constructs a new FighterSkillMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterSkillMsg);

            /** FighterSkillMsg skillId. */
            public skillId: number;

            /** FighterSkillMsg skillType. */
            public skillType: number;

            /** FighterSkillMsg seq. */
            public seq: number;

            /** FighterSkillMsg subType. */
            public subType: number;

            /**
             * Encodes the specified FighterSkillMsg message. Does not implicitly {@link com.message.FighterSkillMsg.verify|verify} messages.
             * @param message FighterSkillMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterSkillMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterSkillMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterSkillMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterSkillMsg;
        }

        /** Properties of a FighterPassiveSkillMsg. */
        interface IFighterPassiveSkillMsg {

            /** FighterPassiveSkillMsg skillId */
            skillId?: (number|null);

            /** FighterPassiveSkillMsg triggerTime */
            triggerTime?: (number|null);

            /** FighterPassiveSkillMsg seq */
            seq?: (number|null);
        }

        /** Represents a FighterPassiveSkillMsg. */
        class FighterPassiveSkillMsg implements IFighterPassiveSkillMsg {

            /**
             * Constructs a new FighterPassiveSkillMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterPassiveSkillMsg);

            /** FighterPassiveSkillMsg skillId. */
            public skillId: number;

            /** FighterPassiveSkillMsg triggerTime. */
            public triggerTime: number;

            /** FighterPassiveSkillMsg seq. */
            public seq: number;

            /**
             * Encodes the specified FighterPassiveSkillMsg message. Does not implicitly {@link com.message.FighterPassiveSkillMsg.verify|verify} messages.
             * @param message FighterPassiveSkillMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterPassiveSkillMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterPassiveSkillMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterPassiveSkillMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterPassiveSkillMsg;
        }

        /** Properties of a BattlePlayerMsg. */
        interface IBattlePlayerMsg {

            /** BattlePlayerMsg playerMsg */
            playerMsg?: (com.message.IBasePlayerMsg|null);

            /** BattlePlayerMsg fighters */
            fighters?: (com.message.IBattleFormationMsg[]|null);

            /** BattlePlayerMsg blessBattleMsg */
            blessBattleMsg?: (com.message.IBlessBattleInfoMsg|null);
        }

        /** Represents a BattlePlayerMsg. */
        class BattlePlayerMsg implements IBattlePlayerMsg {

            /**
             * Constructs a new BattlePlayerMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBattlePlayerMsg);

            /** BattlePlayerMsg playerMsg. */
            public playerMsg?: (com.message.IBasePlayerMsg|null);

            /** BattlePlayerMsg fighters. */
            public fighters: com.message.IBattleFormationMsg[];

            /** BattlePlayerMsg blessBattleMsg. */
            public blessBattleMsg?: (com.message.IBlessBattleInfoMsg|null);

            /**
             * Encodes the specified BattlePlayerMsg message. Does not implicitly {@link com.message.BattlePlayerMsg.verify|verify} messages.
             * @param message BattlePlayerMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBattlePlayerMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BattlePlayerMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BattlePlayerMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BattlePlayerMsg;
        }

        /** Properties of a BlessBattleInfoMsg. */
        interface IBlessBattleInfoMsg {

            /** BlessBattleInfoMsg fighter */
            fighter?: (com.message.IBattleFormationMsg|null);

            /** BlessBattleInfoMsg skills */
            skills?: (com.message.IFighterSkillMsg[]|null);

            /** BlessBattleInfoMsg playerFightVal */
            playerFightVal?: (number|Long|null);
        }

        /** Represents a BlessBattleInfoMsg. */
        class BlessBattleInfoMsg implements IBlessBattleInfoMsg {

            /**
             * Constructs a new BlessBattleInfoMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBlessBattleInfoMsg);

            /** BlessBattleInfoMsg fighter. */
            public fighter?: (com.message.IBattleFormationMsg|null);

            /** BlessBattleInfoMsg skills. */
            public skills: com.message.IFighterSkillMsg[];

            /** BlessBattleInfoMsg playerFightVal. */
            public playerFightVal: (number|Long);

            /**
             * Encodes the specified BlessBattleInfoMsg message. Does not implicitly {@link com.message.BlessBattleInfoMsg.verify|verify} messages.
             * @param message BlessBattleInfoMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBlessBattleInfoMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BlessBattleInfoMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlessBattleInfoMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BlessBattleInfoMsg;
        }

        /** Properties of a BattleFormationMsg. */
        interface IBattleFormationMsg {

            /** BattleFormationMsg fighterId */
            fighterId?: (number|null);

            /** BattleFormationMsg pos */
            pos?: (number|null);

            /** BattleFormationMsg heroId */
            heroId?: (number|null);

            /** BattleFormationMsg monsterId */
            monsterId?: (number|null);

            /** BattleFormationMsg property */
            property?: (com.message.IFighterAttrMsg|null);

            /** BattleFormationMsg heroLevel */
            heroLevel?: (number|null);

            /** BattleFormationMsg imageDressMsg */
            imageDressMsg?: (com.message.IImageDressMsg[]|null);

            /** BattleFormationMsg playerId */
            playerId?: (number|Long|null);

            /** BattleFormationMsg buffs */
            buffs?: (com.message.IFighterBuffMsg[]|null);

            /** BattleFormationMsg skills */
            skills?: (com.message.IFighterSkillMsg[]|null);

            /** BattleFormationMsg passvieSkills */
            passvieSkills?: (com.message.IFighterPassiveSkillMsg[]|null);

            /** BattleFormationMsg heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a BattleFormationMsg. */
        class BattleFormationMsg implements IBattleFormationMsg {

            /**
             * Constructs a new BattleFormationMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBattleFormationMsg);

            /** BattleFormationMsg fighterId. */
            public fighterId: number;

            /** BattleFormationMsg pos. */
            public pos: number;

            /** BattleFormationMsg heroId. */
            public heroId: number;

            /** BattleFormationMsg monsterId. */
            public monsterId: number;

            /** BattleFormationMsg property. */
            public property?: (com.message.IFighterAttrMsg|null);

            /** BattleFormationMsg heroLevel. */
            public heroLevel: number;

            /** BattleFormationMsg imageDressMsg. */
            public imageDressMsg: com.message.IImageDressMsg[];

            /** BattleFormationMsg playerId. */
            public playerId: (number|Long);

            /** BattleFormationMsg buffs. */
            public buffs: com.message.IFighterBuffMsg[];

            /** BattleFormationMsg skills. */
            public skills: com.message.IFighterSkillMsg[];

            /** BattleFormationMsg passvieSkills. */
            public passvieSkills: com.message.IFighterPassiveSkillMsg[];

            /** BattleFormationMsg heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified BattleFormationMsg message. Does not implicitly {@link com.message.BattleFormationMsg.verify|verify} messages.
             * @param message BattleFormationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBattleFormationMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BattleFormationMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BattleFormationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BattleFormationMsg;
        }

        /** Properties of a FighterRoundMsg. */
        interface IFighterRoundMsg {

            /** FighterRoundMsg round */
            round?: (number|null);

            /** FighterRoundMsg subRoundList */
            subRoundList?: (com.message.IFighterSubRoundMsg[]|null);
        }

        /** Represents a FighterRoundMsg. */
        class FighterRoundMsg implements IFighterRoundMsg {

            /**
             * Constructs a new FighterRoundMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterRoundMsg);

            /** FighterRoundMsg round. */
            public round: number;

            /** FighterRoundMsg subRoundList. */
            public subRoundList: com.message.IFighterSubRoundMsg[];

            /**
             * Encodes the specified FighterRoundMsg message. Does not implicitly {@link com.message.FighterRoundMsg.verify|verify} messages.
             * @param message FighterRoundMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterRoundMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterRoundMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterRoundMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterRoundMsg;
        }

        /** Properties of a FighterSubRoundMsg. */
        interface IFighterSubRoundMsg {

            /** FighterSubRoundMsg fighterId */
            fighterId?: (number|null);

            /** FighterSubRoundMsg beginState */
            beginState?: (com.message.IFighterStateMsg|null);

            /** FighterSubRoundMsg skillId */
            skillId?: (number|null);

            /** FighterSubRoundMsg passiveSkillId */
            passiveSkillId?: (number|null);

            /** FighterSubRoundMsg targetList */
            targetList?: (com.message.ITargetFighterMsg[]|null);

            /** FighterSubRoundMsg upSkillId */
            upSkillId?: (number[]|null);

            /** FighterSubRoundMsg upPassiveSkillId */
            upPassiveSkillId?: (number[]|null);

            /** FighterSubRoundMsg endState */
            endState?: (com.message.IFighterStateMsg|null);
        }

        /** Represents a FighterSubRoundMsg. */
        class FighterSubRoundMsg implements IFighterSubRoundMsg {

            /**
             * Constructs a new FighterSubRoundMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterSubRoundMsg);

            /** FighterSubRoundMsg fighterId. */
            public fighterId: number;

            /** FighterSubRoundMsg beginState. */
            public beginState?: (com.message.IFighterStateMsg|null);

            /** FighterSubRoundMsg skillId. */
            public skillId: number;

            /** FighterSubRoundMsg passiveSkillId. */
            public passiveSkillId: number;

            /** FighterSubRoundMsg targetList. */
            public targetList: com.message.ITargetFighterMsg[];

            /** FighterSubRoundMsg upSkillId. */
            public upSkillId: number[];

            /** FighterSubRoundMsg upPassiveSkillId. */
            public upPassiveSkillId: number[];

            /** FighterSubRoundMsg endState. */
            public endState?: (com.message.IFighterStateMsg|null);

            /**
             * Encodes the specified FighterSubRoundMsg message. Does not implicitly {@link com.message.FighterSubRoundMsg.verify|verify} messages.
             * @param message FighterSubRoundMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterSubRoundMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterSubRoundMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterSubRoundMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterSubRoundMsg;
        }

        /** Properties of a TargetFighterMsg. */
        interface ITargetFighterMsg {

            /** TargetFighterMsg fighterId */
            fighterId?: (number|null);

            /** TargetFighterMsg beginState */
            beginState?: (com.message.IFighterStateMsg|null);

            /** TargetFighterMsg beHurtMsg */
            beHurtMsg?: (com.message.IBeHurtMsg|null);

            /** TargetFighterMsg endState */
            endState?: (com.message.IFighterStateMsg|null);
        }

        /** Represents a TargetFighterMsg. */
        class TargetFighterMsg implements ITargetFighterMsg {

            /**
             * Constructs a new TargetFighterMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITargetFighterMsg);

            /** TargetFighterMsg fighterId. */
            public fighterId: number;

            /** TargetFighterMsg beginState. */
            public beginState?: (com.message.IFighterStateMsg|null);

            /** TargetFighterMsg beHurtMsg. */
            public beHurtMsg?: (com.message.IBeHurtMsg|null);

            /** TargetFighterMsg endState. */
            public endState?: (com.message.IFighterStateMsg|null);

            /**
             * Encodes the specified TargetFighterMsg message. Does not implicitly {@link com.message.TargetFighterMsg.verify|verify} messages.
             * @param message TargetFighterMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITargetFighterMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TargetFighterMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TargetFighterMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TargetFighterMsg;
        }

        /** Properties of a BeHurtMsg. */
        interface IBeHurtMsg {

            /** BeHurtMsg type */
            type?: (com.message.HurtType|null);

            /** BeHurtMsg value */
            value?: (number|null);
        }

        /** Represents a BeHurtMsg. */
        class BeHurtMsg implements IBeHurtMsg {

            /**
             * Constructs a new BeHurtMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBeHurtMsg);

            /** BeHurtMsg type. */
            public type: com.message.HurtType;

            /** BeHurtMsg value. */
            public value: number;

            /**
             * Encodes the specified BeHurtMsg message. Does not implicitly {@link com.message.BeHurtMsg.verify|verify} messages.
             * @param message BeHurtMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBeHurtMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BeHurtMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BeHurtMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BeHurtMsg;
        }

        /** Properties of a FighterStateMsg. */
        interface IFighterStateMsg {

            /** FighterStateMsg property */
            property?: (com.message.IFighterAttrMsg|null);

            /** FighterStateMsg buffs */
            buffs?: (com.message.IFighterBuffMsg[]|null);
        }

        /** Represents a FighterStateMsg. */
        class FighterStateMsg implements IFighterStateMsg {

            /**
             * Constructs a new FighterStateMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFighterStateMsg);

            /** FighterStateMsg property. */
            public property?: (com.message.IFighterAttrMsg|null);

            /** FighterStateMsg buffs. */
            public buffs: com.message.IFighterBuffMsg[];

            /**
             * Encodes the specified FighterStateMsg message. Does not implicitly {@link com.message.FighterStateMsg.verify|verify} messages.
             * @param message FighterStateMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFighterStateMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FighterStateMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FighterStateMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FighterStateMsg;
        }

        /** HurtType enum. */
        enum HurtType {
            NONE = 0,
            HEART_BIT = 1,
            DODGE = 2,
            CRIT = 3,
            BASE_HIT = 4,
            TREATMENT = 5
        }

        /** Properties of a PlayerPropertyMsg. */
        interface IPlayerPropertyMsg {

            /** PlayerPropertyMsg playerId */
            playerId?: (number|Long|null);

            /** PlayerPropertyMsg level */
            level?: (number|null);

            /** PlayerPropertyMsg exp */
            exp?: (number|Long|null);

            /** PlayerPropertyMsg diamond */
            diamond?: (number|Long|null);

            /** PlayerPropertyMsg money */
            money?: (number|Long|null);

            /** PlayerPropertyMsg vipLevel */
            vipLevel?: (number|null);

            /** PlayerPropertyMsg guildDonate */
            guildDonate?: (number|Long|null);

            /** PlayerPropertyMsg honor */
            honor?: (number|null);

            /** PlayerPropertyMsg demonScore */
            demonScore?: (number|null);

            /** PlayerPropertyMsg practice */
            practice?: (number|null);

            /** PlayerPropertyMsg fightVal */
            fightVal?: (number|Long|null);

            /** PlayerPropertyMsg expPool */
            expPool?: (number|Long|null);

            /** PlayerPropertyMsg bindDiamond */
            bindDiamond?: (number|null);

            /** PlayerPropertyMsg towerChip */
            towerChip?: (number|null);

            /** PlayerPropertyMsg heroQuality */
            heroQuality?: (number|null);

            /** PlayerPropertyMsg nanTianGateScore */
            nanTianGateScore?: (number|null);

            /** PlayerPropertyMsg xianJing */
            xianJing?: (number|null);

            /** PlayerPropertyMsg friendScore */
            friendScore?: (number|null);

            /** PlayerPropertyMsg aBiHellScore */
            aBiHellScore?: (number|null);

            /** PlayerPropertyMsg heroSol */
            heroSol?: (number|Long|null);
        }

        /** Represents a PlayerPropertyMsg. */
        class PlayerPropertyMsg implements IPlayerPropertyMsg {

            /**
             * Constructs a new PlayerPropertyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerPropertyMsg);

            /** PlayerPropertyMsg playerId. */
            public playerId: (number|Long);

            /** PlayerPropertyMsg level. */
            public level: number;

            /** PlayerPropertyMsg exp. */
            public exp: (number|Long);

            /** PlayerPropertyMsg diamond. */
            public diamond: (number|Long);

            /** PlayerPropertyMsg money. */
            public money: (number|Long);

            /** PlayerPropertyMsg vipLevel. */
            public vipLevel: number;

            /** PlayerPropertyMsg guildDonate. */
            public guildDonate: (number|Long);

            /** PlayerPropertyMsg honor. */
            public honor: number;

            /** PlayerPropertyMsg demonScore. */
            public demonScore: number;

            /** PlayerPropertyMsg practice. */
            public practice: number;

            /** PlayerPropertyMsg fightVal. */
            public fightVal: (number|Long);

            /** PlayerPropertyMsg expPool. */
            public expPool: (number|Long);

            /** PlayerPropertyMsg bindDiamond. */
            public bindDiamond: number;

            /** PlayerPropertyMsg towerChip. */
            public towerChip: number;

            /** PlayerPropertyMsg heroQuality. */
            public heroQuality: number;

            /** PlayerPropertyMsg nanTianGateScore. */
            public nanTianGateScore: number;

            /** PlayerPropertyMsg xianJing. */
            public xianJing: number;

            /** PlayerPropertyMsg friendScore. */
            public friendScore: number;

            /** PlayerPropertyMsg aBiHellScore. */
            public aBiHellScore: number;

            /** PlayerPropertyMsg heroSol. */
            public heroSol: (number|Long);

            /**
             * Encodes the specified PlayerPropertyMsg message. Does not implicitly {@link com.message.PlayerPropertyMsg.verify|verify} messages.
             * @param message PlayerPropertyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerPropertyMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerPropertyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerPropertyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerPropertyMsg;
        }

        /** Properties of a PlayerExtMsg. */
        interface IPlayerExtMsg {

            /** PlayerExtMsg onlineTime */
            onlineTime?: (number|Long|null);

            /** PlayerExtMsg curHangupIntId */
            curHangupIntId?: (number|null);

            /** PlayerExtMsg imageDressMsg */
            imageDressMsg?: (com.message.IImageDressMsg[]|null);

            /** PlayerExtMsg defeatNum */
            defeatNum?: (number|null);

            /** PlayerExtMsg dayOnlineTime */
            dayOnlineTime?: (number|Long|null);

            /** PlayerExtMsg monthRechargeValue */
            monthRechargeValue?: (number|Long|null);

            /** PlayerExtMsg passHellInsId */
            passHellInsId?: (number|null);

            /** PlayerExtMsg zhenFaType */
            zhenFaType?: (number|null);

            /** PlayerExtMsg chapterId */
            chapterId?: (number|null);

            /** PlayerExtMsg heroChallengeId */
            heroChallengeId?: (number|null);
        }

        /** Represents a PlayerExtMsg. */
        class PlayerExtMsg implements IPlayerExtMsg {

            /**
             * Constructs a new PlayerExtMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerExtMsg);

            /** PlayerExtMsg onlineTime. */
            public onlineTime: (number|Long);

            /** PlayerExtMsg curHangupIntId. */
            public curHangupIntId: number;

            /** PlayerExtMsg imageDressMsg. */
            public imageDressMsg: com.message.IImageDressMsg[];

            /** PlayerExtMsg defeatNum. */
            public defeatNum: number;

            /** PlayerExtMsg dayOnlineTime. */
            public dayOnlineTime: (number|Long);

            /** PlayerExtMsg monthRechargeValue. */
            public monthRechargeValue: (number|Long);

            /** PlayerExtMsg passHellInsId. */
            public passHellInsId: number;

            /** PlayerExtMsg zhenFaType. */
            public zhenFaType: number;

            /** PlayerExtMsg chapterId. */
            public chapterId: number;

            /** PlayerExtMsg heroChallengeId. */
            public heroChallengeId: number;

            /**
             * Encodes the specified PlayerExtMsg message. Does not implicitly {@link com.message.PlayerExtMsg.verify|verify} messages.
             * @param message PlayerExtMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerExtMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerExtMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerExtMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerExtMsg;
        }

        /** Properties of an ImageDressMsg. */
        interface IImageDressMsg {

            /** ImageDressMsg type */
            type?: (number|null);

            /** ImageDressMsg imageId */
            imageId?: (number|null);
        }

        /** Represents an ImageDressMsg. */
        class ImageDressMsg implements IImageDressMsg {

            /**
             * Constructs a new ImageDressMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IImageDressMsg);

            /** ImageDressMsg type. */
            public type: number;

            /** ImageDressMsg imageId. */
            public imageId: number;

            /**
             * Encodes the specified ImageDressMsg message. Does not implicitly {@link com.message.ImageDressMsg.verify|verify} messages.
             * @param message ImageDressMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IImageDressMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ImageDressMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ImageDressMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ImageDressMsg;
        }

        /** Properties of a BasePlayerMsg. */
        interface IBasePlayerMsg {

            /** BasePlayerMsg playerId */
            playerId?: (number|Long|null);

            /** BasePlayerMsg playerName */
            playerName?: (string|null);

            /** BasePlayerMsg heroId */
            heroId?: (number|Long|null);

            /** BasePlayerMsg level */
            level?: (number|null);

            /** BasePlayerMsg power */
            power?: (number|Long|null);

            /** BasePlayerMsg serverId */
            serverId?: (number|null);

            /** BasePlayerMsg imageDressMsg */
            imageDressMsg?: (com.message.IImageDressMsg[]|null);

            /** BasePlayerMsg heroQuality */
            heroQuality?: (number|null);

            /** BasePlayerMsg useTitle */
            useTitle?: (number|null);

            /** BasePlayerMsg useHeadFrame */
            useHeadFrame?: (number|null);

            /** BasePlayerMsg zhenFaType */
            zhenFaType?: (number|null);
        }

        /** Represents a BasePlayerMsg. */
        class BasePlayerMsg implements IBasePlayerMsg {

            /**
             * Constructs a new BasePlayerMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBasePlayerMsg);

            /** BasePlayerMsg playerId. */
            public playerId: (number|Long);

            /** BasePlayerMsg playerName. */
            public playerName: string;

            /** BasePlayerMsg heroId. */
            public heroId: (number|Long);

            /** BasePlayerMsg level. */
            public level: number;

            /** BasePlayerMsg power. */
            public power: (number|Long);

            /** BasePlayerMsg serverId. */
            public serverId: number;

            /** BasePlayerMsg imageDressMsg. */
            public imageDressMsg: com.message.IImageDressMsg[];

            /** BasePlayerMsg heroQuality. */
            public heroQuality: number;

            /** BasePlayerMsg useTitle. */
            public useTitle: number;

            /** BasePlayerMsg useHeadFrame. */
            public useHeadFrame: number;

            /** BasePlayerMsg zhenFaType. */
            public zhenFaType: number;

            /**
             * Encodes the specified BasePlayerMsg message. Does not implicitly {@link com.message.BasePlayerMsg.verify|verify} messages.
             * @param message BasePlayerMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBasePlayerMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BasePlayerMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BasePlayerMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BasePlayerMsg;
        }

        /** Properties of a C_GET_ALL_HIGH_INFO. */
        interface IC_GET_ALL_HIGH_INFO {
        }

        /** Represents a C_GET_ALL_HIGH_INFO. */
        class C_GET_ALL_HIGH_INFO implements IC_GET_ALL_HIGH_INFO {

            /**
             * Constructs a new C_GET_ALL_HIGH_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ALL_HIGH_INFO);

            /**
             * Encodes the specified C_GET_ALL_HIGH_INFO message. Does not implicitly {@link com.message.C_GET_ALL_HIGH_INFO.verify|verify} messages.
             * @param message C_GET_ALL_HIGH_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ALL_HIGH_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ALL_HIGH_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ALL_HIGH_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ALL_HIGH_INFO;
        }

        /** Properties of a S_GET_ALL_HIGH_INFO. */
        interface IS_GET_ALL_HIGH_INFO {

            /** S_GET_ALL_HIGH_INFO highCount */
            highCount?: (number|null);

            /** S_GET_ALL_HIGH_INFO hadItemIds */
            hadItemIds?: (string|null);

            /** S_GET_ALL_HIGH_INFO hadTaskIds */
            hadTaskIds?: (string|null);

            /** S_GET_ALL_HIGH_INFO taskData */
            taskData?: (com.message.IALL_HIGH_TASK_INFO[]|null);
        }

        /** Represents a S_GET_ALL_HIGH_INFO. */
        class S_GET_ALL_HIGH_INFO implements IS_GET_ALL_HIGH_INFO {

            /**
             * Constructs a new S_GET_ALL_HIGH_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ALL_HIGH_INFO);

            /** S_GET_ALL_HIGH_INFO highCount. */
            public highCount: number;

            /** S_GET_ALL_HIGH_INFO hadItemIds. */
            public hadItemIds: string;

            /** S_GET_ALL_HIGH_INFO hadTaskIds. */
            public hadTaskIds: string;

            /** S_GET_ALL_HIGH_INFO taskData. */
            public taskData: com.message.IALL_HIGH_TASK_INFO[];

            /**
             * Encodes the specified S_GET_ALL_HIGH_INFO message. Does not implicitly {@link com.message.S_GET_ALL_HIGH_INFO.verify|verify} messages.
             * @param message S_GET_ALL_HIGH_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ALL_HIGH_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ALL_HIGH_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ALL_HIGH_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ALL_HIGH_INFO;
        }

        /** Properties of a C_ALL_HIGH_TASK_REWARD. */
        interface IC_ALL_HIGH_TASK_REWARD {

            /** C_ALL_HIGH_TASK_REWARD taskId */
            taskId?: (number|null);
        }

        /** Represents a C_ALL_HIGH_TASK_REWARD. */
        class C_ALL_HIGH_TASK_REWARD implements IC_ALL_HIGH_TASK_REWARD {

            /**
             * Constructs a new C_ALL_HIGH_TASK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ALL_HIGH_TASK_REWARD);

            /** C_ALL_HIGH_TASK_REWARD taskId. */
            public taskId: number;

            /**
             * Encodes the specified C_ALL_HIGH_TASK_REWARD message. Does not implicitly {@link com.message.C_ALL_HIGH_TASK_REWARD.verify|verify} messages.
             * @param message C_ALL_HIGH_TASK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ALL_HIGH_TASK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ALL_HIGH_TASK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ALL_HIGH_TASK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ALL_HIGH_TASK_REWARD;
        }

        /** Properties of a S_ALL_HIGH_TASK_REWARD. */
        interface IS_ALL_HIGH_TASK_REWARD {

            /** S_ALL_HIGH_TASK_REWARD taskId */
            taskId?: (number|null);

            /** S_ALL_HIGH_TASK_REWARD highCount */
            highCount?: (number|null);

            /** S_ALL_HIGH_TASK_REWARD hadTaskIds */
            hadTaskIds?: (string|null);
        }

        /** Represents a S_ALL_HIGH_TASK_REWARD. */
        class S_ALL_HIGH_TASK_REWARD implements IS_ALL_HIGH_TASK_REWARD {

            /**
             * Constructs a new S_ALL_HIGH_TASK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ALL_HIGH_TASK_REWARD);

            /** S_ALL_HIGH_TASK_REWARD taskId. */
            public taskId: number;

            /** S_ALL_HIGH_TASK_REWARD highCount. */
            public highCount: number;

            /** S_ALL_HIGH_TASK_REWARD hadTaskIds. */
            public hadTaskIds: string;

            /**
             * Encodes the specified S_ALL_HIGH_TASK_REWARD message. Does not implicitly {@link com.message.S_ALL_HIGH_TASK_REWARD.verify|verify} messages.
             * @param message S_ALL_HIGH_TASK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ALL_HIGH_TASK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ALL_HIGH_TASK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ALL_HIGH_TASK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ALL_HIGH_TASK_REWARD;
        }

        /** Properties of a C_ALL_HIGH_REWARD. */
        interface IC_ALL_HIGH_REWARD {

            /** C_ALL_HIGH_REWARD rewardIndex */
            rewardIndex?: (number|null);
        }

        /** Represents a C_ALL_HIGH_REWARD. */
        class C_ALL_HIGH_REWARD implements IC_ALL_HIGH_REWARD {

            /**
             * Constructs a new C_ALL_HIGH_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ALL_HIGH_REWARD);

            /** C_ALL_HIGH_REWARD rewardIndex. */
            public rewardIndex: number;

            /**
             * Encodes the specified C_ALL_HIGH_REWARD message. Does not implicitly {@link com.message.C_ALL_HIGH_REWARD.verify|verify} messages.
             * @param message C_ALL_HIGH_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ALL_HIGH_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ALL_HIGH_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ALL_HIGH_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ALL_HIGH_REWARD;
        }

        /** Properties of a S_ALL_HIGH_REWARD. */
        interface IS_ALL_HIGH_REWARD {

            /** S_ALL_HIGH_REWARD highCount */
            highCount?: (number|null);

            /** S_ALL_HIGH_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_ALL_HIGH_REWARD rewardIndex */
            rewardIndex?: (number|null);

            /** S_ALL_HIGH_REWARD hadItemIds */
            hadItemIds?: (string|null);
        }

        /** Represents a S_ALL_HIGH_REWARD. */
        class S_ALL_HIGH_REWARD implements IS_ALL_HIGH_REWARD {

            /**
             * Constructs a new S_ALL_HIGH_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ALL_HIGH_REWARD);

            /** S_ALL_HIGH_REWARD highCount. */
            public highCount: number;

            /** S_ALL_HIGH_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_ALL_HIGH_REWARD rewardIndex. */
            public rewardIndex: number;

            /** S_ALL_HIGH_REWARD hadItemIds. */
            public hadItemIds: string;

            /**
             * Encodes the specified S_ALL_HIGH_REWARD message. Does not implicitly {@link com.message.S_ALL_HIGH_REWARD.verify|verify} messages.
             * @param message S_ALL_HIGH_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ALL_HIGH_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ALL_HIGH_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ALL_HIGH_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ALL_HIGH_REWARD;
        }

        /** Properties of a S_PUSH_ALL_HIGH_TASK. */
        interface IS_PUSH_ALL_HIGH_TASK {

            /** S_PUSH_ALL_HIGH_TASK taskData */
            taskData?: (com.message.IALL_HIGH_TASK_INFO|null);
        }

        /** Represents a S_PUSH_ALL_HIGH_TASK. */
        class S_PUSH_ALL_HIGH_TASK implements IS_PUSH_ALL_HIGH_TASK {

            /**
             * Constructs a new S_PUSH_ALL_HIGH_TASK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_PUSH_ALL_HIGH_TASK);

            /** S_PUSH_ALL_HIGH_TASK taskData. */
            public taskData?: (com.message.IALL_HIGH_TASK_INFO|null);

            /**
             * Encodes the specified S_PUSH_ALL_HIGH_TASK message. Does not implicitly {@link com.message.S_PUSH_ALL_HIGH_TASK.verify|verify} messages.
             * @param message S_PUSH_ALL_HIGH_TASK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_PUSH_ALL_HIGH_TASK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_PUSH_ALL_HIGH_TASK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_PUSH_ALL_HIGH_TASK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_PUSH_ALL_HIGH_TASK;
        }

        /** Properties of a ALL_HIGH_TASK_INFO. */
        interface IALL_HIGH_TASK_INFO {

            /** ALL_HIGH_TASK_INFO id */
            id?: (number|null);

            /** ALL_HIGH_TASK_INFO value */
            value?: (number|null);
        }

        /** Represents a ALL_HIGH_TASK_INFO. */
        class ALL_HIGH_TASK_INFO implements IALL_HIGH_TASK_INFO {

            /**
             * Constructs a new ALL_HIGH_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IALL_HIGH_TASK_INFO);

            /** ALL_HIGH_TASK_INFO id. */
            public id: number;

            /** ALL_HIGH_TASK_INFO value. */
            public value: number;

            /**
             * Encodes the specified ALL_HIGH_TASK_INFO message. Does not implicitly {@link com.message.ALL_HIGH_TASK_INFO.verify|verify} messages.
             * @param message ALL_HIGH_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IALL_HIGH_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ALL_HIGH_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ALL_HIGH_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ALL_HIGH_TASK_INFO;
        }

        /** Properties of a C_GET_ANSWER_ACT_INFO. */
        interface IC_GET_ANSWER_ACT_INFO {

            /** C_GET_ANSWER_ACT_INFO id */
            id?: (number|null);
        }

        /** Represents a C_GET_ANSWER_ACT_INFO. */
        class C_GET_ANSWER_ACT_INFO implements IC_GET_ANSWER_ACT_INFO {

            /**
             * Constructs a new C_GET_ANSWER_ACT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ANSWER_ACT_INFO);

            /** C_GET_ANSWER_ACT_INFO id. */
            public id: number;

            /**
             * Encodes the specified C_GET_ANSWER_ACT_INFO message. Does not implicitly {@link com.message.C_GET_ANSWER_ACT_INFO.verify|verify} messages.
             * @param message C_GET_ANSWER_ACT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ANSWER_ACT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ANSWER_ACT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ANSWER_ACT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ANSWER_ACT_INFO;
        }

        /** Properties of a S_GET_ANSWER_ACT_INFO. */
        interface IS_GET_ANSWER_ACT_INFO {

            /** S_GET_ANSWER_ACT_INFO actInfo */
            actInfo?: (com.message.IAnswerActMsg|null);

            /** S_GET_ANSWER_ACT_INFO answerInfo */
            answerInfo?: (com.message.IAnswerMsg|null);

            /** S_GET_ANSWER_ACT_INFO myRankMsg */
            myRankMsg?: (com.message.IAnswerRankMsg|null);

            /** S_GET_ANSWER_ACT_INFO answerRankMsg */
            answerRankMsg?: (com.message.IAnswerRankMsg[]|null);
        }

        /** Represents a S_GET_ANSWER_ACT_INFO. */
        class S_GET_ANSWER_ACT_INFO implements IS_GET_ANSWER_ACT_INFO {

            /**
             * Constructs a new S_GET_ANSWER_ACT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ANSWER_ACT_INFO);

            /** S_GET_ANSWER_ACT_INFO actInfo. */
            public actInfo?: (com.message.IAnswerActMsg|null);

            /** S_GET_ANSWER_ACT_INFO answerInfo. */
            public answerInfo?: (com.message.IAnswerMsg|null);

            /** S_GET_ANSWER_ACT_INFO myRankMsg. */
            public myRankMsg?: (com.message.IAnswerRankMsg|null);

            /** S_GET_ANSWER_ACT_INFO answerRankMsg. */
            public answerRankMsg: com.message.IAnswerRankMsg[];

            /**
             * Encodes the specified S_GET_ANSWER_ACT_INFO message. Does not implicitly {@link com.message.S_GET_ANSWER_ACT_INFO.verify|verify} messages.
             * @param message S_GET_ANSWER_ACT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ANSWER_ACT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ANSWER_ACT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ANSWER_ACT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ANSWER_ACT_INFO;
        }

        /** Properties of an AnswerRankMsg. */
        interface IAnswerRankMsg {

            /** AnswerRankMsg playerId */
            playerId?: (number|Long|null);

            /** AnswerRankMsg name */
            name?: (string|null);

            /** AnswerRankMsg score */
            score?: (number|null);

            /** AnswerRankMsg rank */
            rank?: (number|null);
        }

        /** Represents an AnswerRankMsg. */
        class AnswerRankMsg implements IAnswerRankMsg {

            /**
             * Constructs a new AnswerRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IAnswerRankMsg);

            /** AnswerRankMsg playerId. */
            public playerId: (number|Long);

            /** AnswerRankMsg name. */
            public name: string;

            /** AnswerRankMsg score. */
            public score: number;

            /** AnswerRankMsg rank. */
            public rank: number;

            /**
             * Encodes the specified AnswerRankMsg message. Does not implicitly {@link com.message.AnswerRankMsg.verify|verify} messages.
             * @param message AnswerRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IAnswerRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an AnswerRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AnswerRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.AnswerRankMsg;
        }

        /** Properties of an AnswerActMsg. */
        interface IAnswerActMsg {

            /** AnswerActMsg startTime */
            startTime?: (number|Long|null);

            /** AnswerActMsg endTime */
            endTime?: (number|Long|null);
        }

        /** Represents an AnswerActMsg. */
        class AnswerActMsg implements IAnswerActMsg {

            /**
             * Constructs a new AnswerActMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IAnswerActMsg);

            /** AnswerActMsg startTime. */
            public startTime: (number|Long);

            /** AnswerActMsg endTime. */
            public endTime: (number|Long);

            /**
             * Encodes the specified AnswerActMsg message. Does not implicitly {@link com.message.AnswerActMsg.verify|verify} messages.
             * @param message AnswerActMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IAnswerActMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an AnswerActMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AnswerActMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.AnswerActMsg;
        }

        /** Properties of an AnswerMsg. */
        interface IAnswerMsg {

            /** AnswerMsg id */
            id?: (number|null);

            /** AnswerMsg subjectId */
            subjectId?: (number|null);

            /** AnswerMsg endTime */
            endTime?: (number|Long|null);
        }

        /** Represents an AnswerMsg. */
        class AnswerMsg implements IAnswerMsg {

            /**
             * Constructs a new AnswerMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IAnswerMsg);

            /** AnswerMsg id. */
            public id: number;

            /** AnswerMsg subjectId. */
            public subjectId: number;

            /** AnswerMsg endTime. */
            public endTime: (number|Long);

            /**
             * Encodes the specified AnswerMsg message. Does not implicitly {@link com.message.AnswerMsg.verify|verify} messages.
             * @param message AnswerMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IAnswerMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an AnswerMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AnswerMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.AnswerMsg;
        }

        /** Properties of a C_ANSWER_SUBJECT. */
        interface IC_ANSWER_SUBJECT {

            /** C_ANSWER_SUBJECT id */
            id?: (number|null);

            /** C_ANSWER_SUBJECT answer */
            answer?: (string|null);
        }

        /** Represents a C_ANSWER_SUBJECT. */
        class C_ANSWER_SUBJECT implements IC_ANSWER_SUBJECT {

            /**
             * Constructs a new C_ANSWER_SUBJECT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ANSWER_SUBJECT);

            /** C_ANSWER_SUBJECT id. */
            public id: number;

            /** C_ANSWER_SUBJECT answer. */
            public answer: string;

            /**
             * Encodes the specified C_ANSWER_SUBJECT message. Does not implicitly {@link com.message.C_ANSWER_SUBJECT.verify|verify} messages.
             * @param message C_ANSWER_SUBJECT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ANSWER_SUBJECT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ANSWER_SUBJECT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ANSWER_SUBJECT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ANSWER_SUBJECT;
        }

        /** Properties of a S_ANSWER_SUBJECT. */
        interface IS_ANSWER_SUBJECT {

            /** S_ANSWER_SUBJECT id */
            id?: (number|null);

            /** S_ANSWER_SUBJECT subjectId */
            subjectId?: (number|null);

            /** S_ANSWER_SUBJECT right */
            right?: (number|null);

            /** S_ANSWER_SUBJECT score */
            score?: (number|null);
        }

        /** Represents a S_ANSWER_SUBJECT. */
        class S_ANSWER_SUBJECT implements IS_ANSWER_SUBJECT {

            /**
             * Constructs a new S_ANSWER_SUBJECT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ANSWER_SUBJECT);

            /** S_ANSWER_SUBJECT id. */
            public id: number;

            /** S_ANSWER_SUBJECT subjectId. */
            public subjectId: number;

            /** S_ANSWER_SUBJECT right. */
            public right: number;

            /** S_ANSWER_SUBJECT score. */
            public score: number;

            /**
             * Encodes the specified S_ANSWER_SUBJECT message. Does not implicitly {@link com.message.S_ANSWER_SUBJECT.verify|verify} messages.
             * @param message S_ANSWER_SUBJECT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ANSWER_SUBJECT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ANSWER_SUBJECT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ANSWER_SUBJECT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ANSWER_SUBJECT;
        }

        /** Properties of a C_GET_ARENA_INFO. */
        interface IC_GET_ARENA_INFO {
        }

        /** Represents a C_GET_ARENA_INFO. */
        class C_GET_ARENA_INFO implements IC_GET_ARENA_INFO {

            /**
             * Constructs a new C_GET_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ARENA_INFO);

            /**
             * Encodes the specified C_GET_ARENA_INFO message. Does not implicitly {@link com.message.C_GET_ARENA_INFO.verify|verify} messages.
             * @param message C_GET_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ARENA_INFO;
        }

        /** Properties of a S_GET_ARENA_INFO. */
        interface IS_GET_ARENA_INFO {

            /** S_GET_ARENA_INFO players */
            players?: (com.message.IARENA_INFO[]|null);

            /** S_GET_ARENA_INFO nears */
            nears?: (com.message.IARENA_INFO[]|null);

            /** S_GET_ARENA_INFO time */
            time?: (number|Long|null);

            /** S_GET_ARENA_INFO challengeTimes */
            challengeTimes?: (number|null);

            /** S_GET_ARENA_INFO refreshTimes */
            refreshTimes?: (number|null);

            /** S_GET_ARENA_INFO rank */
            rank?: (number|null);

            /** S_GET_ARENA_INFO dayReward */
            dayReward?: (boolean|null);

            /** S_GET_ARENA_INFO highRank */
            highRank?: (number|null);

            /** S_GET_ARENA_INFO hithRankReward */
            hithRankReward?: (string|null);

            /** S_GET_ARENA_INFO buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_GET_ARENA_INFO. */
        class S_GET_ARENA_INFO implements IS_GET_ARENA_INFO {

            /**
             * Constructs a new S_GET_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ARENA_INFO);

            /** S_GET_ARENA_INFO players. */
            public players: com.message.IARENA_INFO[];

            /** S_GET_ARENA_INFO nears. */
            public nears: com.message.IARENA_INFO[];

            /** S_GET_ARENA_INFO time. */
            public time: (number|Long);

            /** S_GET_ARENA_INFO challengeTimes. */
            public challengeTimes: number;

            /** S_GET_ARENA_INFO refreshTimes. */
            public refreshTimes: number;

            /** S_GET_ARENA_INFO rank. */
            public rank: number;

            /** S_GET_ARENA_INFO dayReward. */
            public dayReward: boolean;

            /** S_GET_ARENA_INFO highRank. */
            public highRank: number;

            /** S_GET_ARENA_INFO hithRankReward. */
            public hithRankReward: string;

            /** S_GET_ARENA_INFO buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_GET_ARENA_INFO message. Does not implicitly {@link com.message.S_GET_ARENA_INFO.verify|verify} messages.
             * @param message S_GET_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ARENA_INFO;
        }

        /** Properties of a ARENA_INFO. */
        interface IARENA_INFO {

            /** ARENA_INFO player */
            player?: (com.message.IBattlePlayerMsg|null);

            /** ARENA_INFO rank */
            rank?: (number|null);
        }

        /** Represents a ARENA_INFO. */
        class ARENA_INFO implements IARENA_INFO {

            /**
             * Constructs a new ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IARENA_INFO);

            /** ARENA_INFO player. */
            public player?: (com.message.IBattlePlayerMsg|null);

            /** ARENA_INFO rank. */
            public rank: number;

            /**
             * Encodes the specified ARENA_INFO message. Does not implicitly {@link com.message.ARENA_INFO.verify|verify} messages.
             * @param message ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ARENA_INFO;
        }

        /** Properties of a C_REFRESH_ARENA_INFO. */
        interface IC_REFRESH_ARENA_INFO {
        }

        /** Represents a C_REFRESH_ARENA_INFO. */
        class C_REFRESH_ARENA_INFO implements IC_REFRESH_ARENA_INFO {

            /**
             * Constructs a new C_REFRESH_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REFRESH_ARENA_INFO);

            /**
             * Encodes the specified C_REFRESH_ARENA_INFO message. Does not implicitly {@link com.message.C_REFRESH_ARENA_INFO.verify|verify} messages.
             * @param message C_REFRESH_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REFRESH_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REFRESH_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REFRESH_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REFRESH_ARENA_INFO;
        }

        /** Properties of a S_REFRESH_ARENA_INFO. */
        interface IS_REFRESH_ARENA_INFO {

            /** S_REFRESH_ARENA_INFO refreshTimes */
            refreshTimes?: (number|null);
        }

        /** Represents a S_REFRESH_ARENA_INFO. */
        class S_REFRESH_ARENA_INFO implements IS_REFRESH_ARENA_INFO {

            /**
             * Constructs a new S_REFRESH_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REFRESH_ARENA_INFO);

            /** S_REFRESH_ARENA_INFO refreshTimes. */
            public refreshTimes: number;

            /**
             * Encodes the specified S_REFRESH_ARENA_INFO message. Does not implicitly {@link com.message.S_REFRESH_ARENA_INFO.verify|verify} messages.
             * @param message S_REFRESH_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REFRESH_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REFRESH_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REFRESH_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REFRESH_ARENA_INFO;
        }

        /** Properties of a C_GET_ARENA_REWARD. */
        interface IC_GET_ARENA_REWARD {

            /** C_GET_ARENA_REWARD rewardType */
            rewardType?: (number|null);

            /** C_GET_ARENA_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_GET_ARENA_REWARD. */
        class C_GET_ARENA_REWARD implements IC_GET_ARENA_REWARD {

            /**
             * Constructs a new C_GET_ARENA_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ARENA_REWARD);

            /** C_GET_ARENA_REWARD rewardType. */
            public rewardType: number;

            /** C_GET_ARENA_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_GET_ARENA_REWARD message. Does not implicitly {@link com.message.C_GET_ARENA_REWARD.verify|verify} messages.
             * @param message C_GET_ARENA_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ARENA_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ARENA_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ARENA_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ARENA_REWARD;
        }

        /** Properties of a S_GET_ARENA_REWARD. */
        interface IS_GET_ARENA_REWARD {

            /** S_GET_ARENA_REWARD dayReward */
            dayReward?: (boolean|null);

            /** S_GET_ARENA_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_GET_ARENA_REWARD rewardId */
            rewardId?: (number|null);

            /** S_GET_ARENA_REWARD hithRankReward */
            hithRankReward?: (string|null);
        }

        /** Represents a S_GET_ARENA_REWARD. */
        class S_GET_ARENA_REWARD implements IS_GET_ARENA_REWARD {

            /**
             * Constructs a new S_GET_ARENA_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ARENA_REWARD);

            /** S_GET_ARENA_REWARD dayReward. */
            public dayReward: boolean;

            /** S_GET_ARENA_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_GET_ARENA_REWARD rewardId. */
            public rewardId: number;

            /** S_GET_ARENA_REWARD hithRankReward. */
            public hithRankReward: string;

            /**
             * Encodes the specified S_GET_ARENA_REWARD message. Does not implicitly {@link com.message.S_GET_ARENA_REWARD.verify|verify} messages.
             * @param message S_GET_ARENA_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ARENA_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ARENA_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ARENA_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ARENA_REWARD;
        }

        /** Properties of a C_GET_ARENA_LOG. */
        interface IC_GET_ARENA_LOG {
        }

        /** Represents a C_GET_ARENA_LOG. */
        class C_GET_ARENA_LOG implements IC_GET_ARENA_LOG {

            /**
             * Constructs a new C_GET_ARENA_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ARENA_LOG);

            /**
             * Encodes the specified C_GET_ARENA_LOG message. Does not implicitly {@link com.message.C_GET_ARENA_LOG.verify|verify} messages.
             * @param message C_GET_ARENA_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ARENA_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ARENA_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ARENA_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ARENA_LOG;
        }

        /** Properties of a S_GET_ARENA_LOG. */
        interface IS_GET_ARENA_LOG {

            /** S_GET_ARENA_LOG logInfo */
            logInfo?: (com.message.IARENA_LOG_INFO[]|null);
        }

        /** Represents a S_GET_ARENA_LOG. */
        class S_GET_ARENA_LOG implements IS_GET_ARENA_LOG {

            /**
             * Constructs a new S_GET_ARENA_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ARENA_LOG);

            /** S_GET_ARENA_LOG logInfo. */
            public logInfo: com.message.IARENA_LOG_INFO[];

            /**
             * Encodes the specified S_GET_ARENA_LOG message. Does not implicitly {@link com.message.S_GET_ARENA_LOG.verify|verify} messages.
             * @param message S_GET_ARENA_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ARENA_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ARENA_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ARENA_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ARENA_LOG;
        }

        /** Properties of a ARENA_LOG_INFO. */
        interface IARENA_LOG_INFO {

            /** ARENA_LOG_INFO rank */
            rank?: (number|null);

            /** ARENA_LOG_INFO enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** ARENA_LOG_INFO isWin */
            isWin?: (boolean|null);
        }

        /** Represents a ARENA_LOG_INFO. */
        class ARENA_LOG_INFO implements IARENA_LOG_INFO {

            /**
             * Constructs a new ARENA_LOG_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IARENA_LOG_INFO);

            /** ARENA_LOG_INFO rank. */
            public rank: number;

            /** ARENA_LOG_INFO enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** ARENA_LOG_INFO isWin. */
            public isWin: boolean;

            /**
             * Encodes the specified ARENA_LOG_INFO message. Does not implicitly {@link com.message.ARENA_LOG_INFO.verify|verify} messages.
             * @param message ARENA_LOG_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IARENA_LOG_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ARENA_LOG_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ARENA_LOG_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ARENA_LOG_INFO;
        }

        /** Properties of a S_ARENA_BE_CHALLENGE. */
        interface IS_ARENA_BE_CHALLENGE {
        }

        /** Represents a S_ARENA_BE_CHALLENGE. */
        class S_ARENA_BE_CHALLENGE implements IS_ARENA_BE_CHALLENGE {

            /**
             * Constructs a new S_ARENA_BE_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ARENA_BE_CHALLENGE);

            /**
             * Encodes the specified S_ARENA_BE_CHALLENGE message. Does not implicitly {@link com.message.S_ARENA_BE_CHALLENGE.verify|verify} messages.
             * @param message S_ARENA_BE_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ARENA_BE_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ARENA_BE_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ARENA_BE_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ARENA_BE_CHALLENGE;
        }

        /** Properties of a S_ARENA_SWEEP. */
        interface IS_ARENA_SWEEP {

            /** S_ARENA_SWEEP times */
            times?: (number|null);
        }

        /** Represents a S_ARENA_SWEEP. */
        class S_ARENA_SWEEP implements IS_ARENA_SWEEP {

            /**
             * Constructs a new S_ARENA_SWEEP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ARENA_SWEEP);

            /** S_ARENA_SWEEP times. */
            public times: number;

            /**
             * Encodes the specified S_ARENA_SWEEP message. Does not implicitly {@link com.message.S_ARENA_SWEEP.verify|verify} messages.
             * @param message S_ARENA_SWEEP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ARENA_SWEEP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ARENA_SWEEP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ARENA_SWEEP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ARENA_SWEEP;
        }

        /** Properties of a C_ARENA_BUY_CHALLENGE. */
        interface IC_ARENA_BUY_CHALLENGE {

            /** C_ARENA_BUY_CHALLENGE buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a C_ARENA_BUY_CHALLENGE. */
        class C_ARENA_BUY_CHALLENGE implements IC_ARENA_BUY_CHALLENGE {

            /**
             * Constructs a new C_ARENA_BUY_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ARENA_BUY_CHALLENGE);

            /** C_ARENA_BUY_CHALLENGE buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified C_ARENA_BUY_CHALLENGE message. Does not implicitly {@link com.message.C_ARENA_BUY_CHALLENGE.verify|verify} messages.
             * @param message C_ARENA_BUY_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ARENA_BUY_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ARENA_BUY_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ARENA_BUY_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ARENA_BUY_CHALLENGE;
        }

        /** Properties of a S_ARENA_BUY_CHALLENGE. */
        interface IS_ARENA_BUY_CHALLENGE {

            /** S_ARENA_BUY_CHALLENGE buyTimes */
            buyTimes?: (number|null);

            /** S_ARENA_BUY_CHALLENGE challengeTimes */
            challengeTimes?: (number|null);
        }

        /** Represents a S_ARENA_BUY_CHALLENGE. */
        class S_ARENA_BUY_CHALLENGE implements IS_ARENA_BUY_CHALLENGE {

            /**
             * Constructs a new S_ARENA_BUY_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ARENA_BUY_CHALLENGE);

            /** S_ARENA_BUY_CHALLENGE buyTimes. */
            public buyTimes: number;

            /** S_ARENA_BUY_CHALLENGE challengeTimes. */
            public challengeTimes: number;

            /**
             * Encodes the specified S_ARENA_BUY_CHALLENGE message. Does not implicitly {@link com.message.S_ARENA_BUY_CHALLENGE.verify|verify} messages.
             * @param message S_ARENA_BUY_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ARENA_BUY_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ARENA_BUY_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ARENA_BUY_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ARENA_BUY_CHALLENGE;
        }

        /** Properties of an EquipMsg. */
        interface IEquipMsg {

            /** EquipMsg strongExp */
            strongExp?: (number|null);

            /** EquipMsg strongLevel */
            strongLevel?: (number|null);
        }

        /** Represents an EquipMsg. */
        class EquipMsg implements IEquipMsg {

            /**
             * Constructs a new EquipMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IEquipMsg);

            /** EquipMsg strongExp. */
            public strongExp: number;

            /** EquipMsg strongLevel. */
            public strongLevel: number;

            /**
             * Encodes the specified EquipMsg message. Does not implicitly {@link com.message.EquipMsg.verify|verify} messages.
             * @param message EquipMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IEquipMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an EquipMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EquipMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.EquipMsg;
        }

        /** Properties of an AnneMsg. */
        interface IAnneMsg {

            /** AnneMsg anneLevel */
            anneLevel?: (number|null);
        }

        /** Represents an AnneMsg. */
        class AnneMsg implements IAnneMsg {

            /**
             * Constructs a new AnneMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IAnneMsg);

            /** AnneMsg anneLevel. */
            public anneLevel: number;

            /**
             * Encodes the specified AnneMsg message. Does not implicitly {@link com.message.AnneMsg.verify|verify} messages.
             * @param message AnneMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IAnneMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an AnneMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AnneMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.AnneMsg;
        }

        /** Properties of a BackpackGoodsMsg. */
        interface IBackpackGoodsMsg {

            /** BackpackGoodsMsg playerId */
            playerId?: (number|Long|null);

            /** BackpackGoodsMsg goodsId */
            goodsId?: (number|Long|null);

            /** BackpackGoodsMsg itemId */
            itemId?: (number|null);

            /** BackpackGoodsMsg num */
            num?: (number|null);

            /** BackpackGoodsMsg gridIndex */
            gridIndex?: (number|null);

            /** BackpackGoodsMsg location */
            location?: (number|null);

            /** BackpackGoodsMsg equipInfo */
            equipInfo?: (com.message.IEquipMsg|null);

            /** BackpackGoodsMsg anneMsg */
            anneMsg?: (com.message.IAnneMsg|null);
        }

        /** Represents a BackpackGoodsMsg. */
        class BackpackGoodsMsg implements IBackpackGoodsMsg {

            /**
             * Constructs a new BackpackGoodsMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBackpackGoodsMsg);

            /** BackpackGoodsMsg playerId. */
            public playerId: (number|Long);

            /** BackpackGoodsMsg goodsId. */
            public goodsId: (number|Long);

            /** BackpackGoodsMsg itemId. */
            public itemId: number;

            /** BackpackGoodsMsg num. */
            public num: number;

            /** BackpackGoodsMsg gridIndex. */
            public gridIndex: number;

            /** BackpackGoodsMsg location. */
            public location: number;

            /** BackpackGoodsMsg equipInfo. */
            public equipInfo?: (com.message.IEquipMsg|null);

            /** BackpackGoodsMsg anneMsg. */
            public anneMsg?: (com.message.IAnneMsg|null);

            /**
             * Encodes the specified BackpackGoodsMsg message. Does not implicitly {@link com.message.BackpackGoodsMsg.verify|verify} messages.
             * @param message BackpackGoodsMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBackpackGoodsMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BackpackGoodsMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BackpackGoodsMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BackpackGoodsMsg;
        }

        /** Properties of a S_SYNC_PLAYER_BACKPACK. */
        interface IS_SYNC_PLAYER_BACKPACK {

            /** S_SYNC_PLAYER_BACKPACK backpack */
            backpack?: (com.message.IPlayerBackpackMsg|null);
        }

        /** Represents a S_SYNC_PLAYER_BACKPACK. */
        class S_SYNC_PLAYER_BACKPACK implements IS_SYNC_PLAYER_BACKPACK {

            /**
             * Constructs a new S_SYNC_PLAYER_BACKPACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_PLAYER_BACKPACK);

            /** S_SYNC_PLAYER_BACKPACK backpack. */
            public backpack?: (com.message.IPlayerBackpackMsg|null);

            /**
             * Encodes the specified S_SYNC_PLAYER_BACKPACK message. Does not implicitly {@link com.message.S_SYNC_PLAYER_BACKPACK.verify|verify} messages.
             * @param message S_SYNC_PLAYER_BACKPACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_PLAYER_BACKPACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_PLAYER_BACKPACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_PLAYER_BACKPACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_PLAYER_BACKPACK;
        }

        /** Properties of a C_USE_BACKPACK_ITEM. */
        interface IC_USE_BACKPACK_ITEM {

            /** C_USE_BACKPACK_ITEM goodsId */
            goodsId?: (number|Long|null);

            /** C_USE_BACKPACK_ITEM num */
            num?: (number|null);

            /** C_USE_BACKPACK_ITEM params */
            params?: (number|null);
        }

        /** Represents a C_USE_BACKPACK_ITEM. */
        class C_USE_BACKPACK_ITEM implements IC_USE_BACKPACK_ITEM {

            /**
             * Constructs a new C_USE_BACKPACK_ITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_USE_BACKPACK_ITEM);

            /** C_USE_BACKPACK_ITEM goodsId. */
            public goodsId: (number|Long);

            /** C_USE_BACKPACK_ITEM num. */
            public num: number;

            /** C_USE_BACKPACK_ITEM params. */
            public params: number;

            /**
             * Encodes the specified C_USE_BACKPACK_ITEM message. Does not implicitly {@link com.message.C_USE_BACKPACK_ITEM.verify|verify} messages.
             * @param message C_USE_BACKPACK_ITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_USE_BACKPACK_ITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_USE_BACKPACK_ITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_USE_BACKPACK_ITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_USE_BACKPACK_ITEM;
        }

        /** Properties of a S_USE_BACKPACK_ITEM. */
        interface IS_USE_BACKPACK_ITEM {

            /** S_USE_BACKPACK_ITEM goodsId */
            goodsId?: (number|Long|null);

            /** S_USE_BACKPACK_ITEM itemId */
            itemId?: (number|null);

            /** S_USE_BACKPACK_ITEM num */
            num?: (number|null);

            /** S_USE_BACKPACK_ITEM gridIndex */
            gridIndex?: (number|null);

            /** S_USE_BACKPACK_ITEM itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_USE_BACKPACK_ITEM. */
        class S_USE_BACKPACK_ITEM implements IS_USE_BACKPACK_ITEM {

            /**
             * Constructs a new S_USE_BACKPACK_ITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_USE_BACKPACK_ITEM);

            /** S_USE_BACKPACK_ITEM goodsId. */
            public goodsId: (number|Long);

            /** S_USE_BACKPACK_ITEM itemId. */
            public itemId: number;

            /** S_USE_BACKPACK_ITEM num. */
            public num: number;

            /** S_USE_BACKPACK_ITEM gridIndex. */
            public gridIndex: number;

            /** S_USE_BACKPACK_ITEM itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_USE_BACKPACK_ITEM message. Does not implicitly {@link com.message.S_USE_BACKPACK_ITEM.verify|verify} messages.
             * @param message S_USE_BACKPACK_ITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_USE_BACKPACK_ITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_USE_BACKPACK_ITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_USE_BACKPACK_ITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_USE_BACKPACK_ITEM;
        }

        /** Properties of a C_TIDY_BACKPACK. */
        interface IC_TIDY_BACKPACK {
        }

        /** Represents a C_TIDY_BACKPACK. */
        class C_TIDY_BACKPACK implements IC_TIDY_BACKPACK {

            /**
             * Constructs a new C_TIDY_BACKPACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TIDY_BACKPACK);

            /**
             * Encodes the specified C_TIDY_BACKPACK message. Does not implicitly {@link com.message.C_TIDY_BACKPACK.verify|verify} messages.
             * @param message C_TIDY_BACKPACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TIDY_BACKPACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TIDY_BACKPACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TIDY_BACKPACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TIDY_BACKPACK;
        }

        /** Properties of a S_TIDY_BACKPACK. */
        interface IS_TIDY_BACKPACK {

            /** S_TIDY_BACKPACK backpack */
            backpack?: (com.message.IPlayerBackpackMsg|null);
        }

        /** Represents a S_TIDY_BACKPACK. */
        class S_TIDY_BACKPACK implements IS_TIDY_BACKPACK {

            /**
             * Constructs a new S_TIDY_BACKPACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TIDY_BACKPACK);

            /** S_TIDY_BACKPACK backpack. */
            public backpack?: (com.message.IPlayerBackpackMsg|null);

            /**
             * Encodes the specified S_TIDY_BACKPACK message. Does not implicitly {@link com.message.S_TIDY_BACKPACK.verify|verify} messages.
             * @param message S_TIDY_BACKPACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TIDY_BACKPACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TIDY_BACKPACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TIDY_BACKPACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TIDY_BACKPACK;
        }

        /** Properties of a C_OPEN_BACKPACK_GRID. */
        interface IC_OPEN_BACKPACK_GRID {

            /** C_OPEN_BACKPACK_GRID openNum */
            openNum?: (number|null);

            /** C_OPEN_BACKPACK_GRID freeNum */
            freeNum?: (number|null);
        }

        /** Represents a C_OPEN_BACKPACK_GRID. */
        class C_OPEN_BACKPACK_GRID implements IC_OPEN_BACKPACK_GRID {

            /**
             * Constructs a new C_OPEN_BACKPACK_GRID.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OPEN_BACKPACK_GRID);

            /** C_OPEN_BACKPACK_GRID openNum. */
            public openNum: number;

            /** C_OPEN_BACKPACK_GRID freeNum. */
            public freeNum: number;

            /**
             * Encodes the specified C_OPEN_BACKPACK_GRID message. Does not implicitly {@link com.message.C_OPEN_BACKPACK_GRID.verify|verify} messages.
             * @param message C_OPEN_BACKPACK_GRID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OPEN_BACKPACK_GRID, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OPEN_BACKPACK_GRID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OPEN_BACKPACK_GRID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OPEN_BACKPACK_GRID;
        }

        /** Properties of a S_OPEN_BACKPACK_GRID. */
        interface IS_OPEN_BACKPACK_GRID {

            /** S_OPEN_BACKPACK_GRID backpackSize */
            backpackSize?: (number|null);
        }

        /** Represents a S_OPEN_BACKPACK_GRID. */
        class S_OPEN_BACKPACK_GRID implements IS_OPEN_BACKPACK_GRID {

            /**
             * Constructs a new S_OPEN_BACKPACK_GRID.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OPEN_BACKPACK_GRID);

            /** S_OPEN_BACKPACK_GRID backpackSize. */
            public backpackSize: number;

            /**
             * Encodes the specified S_OPEN_BACKPACK_GRID message. Does not implicitly {@link com.message.S_OPEN_BACKPACK_GRID.verify|verify} messages.
             * @param message S_OPEN_BACKPACK_GRID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OPEN_BACKPACK_GRID, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OPEN_BACKPACK_GRID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OPEN_BACKPACK_GRID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OPEN_BACKPACK_GRID;
        }

        /** Properties of a PlayerBackpackMsg. */
        interface IPlayerBackpackMsg {

            /** PlayerBackpackMsg goodsList */
            goodsList?: (com.message.IBackpackGoodsMsg[]|null);

            /** PlayerBackpackMsg size */
            size?: (number|null);
        }

        /** Represents a PlayerBackpackMsg. */
        class PlayerBackpackMsg implements IPlayerBackpackMsg {

            /**
             * Constructs a new PlayerBackpackMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerBackpackMsg);

            /** PlayerBackpackMsg goodsList. */
            public goodsList: com.message.IBackpackGoodsMsg[];

            /** PlayerBackpackMsg size. */
            public size: number;

            /**
             * Encodes the specified PlayerBackpackMsg message. Does not implicitly {@link com.message.PlayerBackpackMsg.verify|verify} messages.
             * @param message PlayerBackpackMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerBackpackMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerBackpackMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerBackpackMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerBackpackMsg;
        }

        /** Properties of a C_GOODS_BREAK. */
        interface IC_GOODS_BREAK {

            /** C_GOODS_BREAK goodsIds */
            goodsIds?: ((number|Long)[]|null);
        }

        /** Represents a C_GOODS_BREAK. */
        class C_GOODS_BREAK implements IC_GOODS_BREAK {

            /**
             * Constructs a new C_GOODS_BREAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GOODS_BREAK);

            /** C_GOODS_BREAK goodsIds. */
            public goodsIds: (number|Long)[];

            /**
             * Encodes the specified C_GOODS_BREAK message. Does not implicitly {@link com.message.C_GOODS_BREAK.verify|verify} messages.
             * @param message C_GOODS_BREAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GOODS_BREAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GOODS_BREAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GOODS_BREAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GOODS_BREAK;
        }

        /** Properties of a S_GOODS_BREAK. */
        interface IS_GOODS_BREAK {

            /** S_GOODS_BREAK itemGroup */
            itemGroup?: (com.message.IItemGroup[]|null);
        }

        /** Represents a S_GOODS_BREAK. */
        class S_GOODS_BREAK implements IS_GOODS_BREAK {

            /**
             * Constructs a new S_GOODS_BREAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GOODS_BREAK);

            /** S_GOODS_BREAK itemGroup. */
            public itemGroup: com.message.IItemGroup[];

            /**
             * Encodes the specified S_GOODS_BREAK message. Does not implicitly {@link com.message.S_GOODS_BREAK.verify|verify} messages.
             * @param message S_GOODS_BREAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GOODS_BREAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GOODS_BREAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GOODS_BREAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GOODS_BREAK;
        }

        /** Properties of a C_GOODS_MERGE. */
        interface IC_GOODS_MERGE {

            /** C_GOODS_MERGE id */
            id?: (number|null);

            /** C_GOODS_MERGE itemId */
            itemId?: (number[]|null);
        }

        /** Represents a C_GOODS_MERGE. */
        class C_GOODS_MERGE implements IC_GOODS_MERGE {

            /**
             * Constructs a new C_GOODS_MERGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GOODS_MERGE);

            /** C_GOODS_MERGE id. */
            public id: number;

            /** C_GOODS_MERGE itemId. */
            public itemId: number[];

            /**
             * Encodes the specified C_GOODS_MERGE message. Does not implicitly {@link com.message.C_GOODS_MERGE.verify|verify} messages.
             * @param message C_GOODS_MERGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GOODS_MERGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GOODS_MERGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GOODS_MERGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GOODS_MERGE;
        }

        /** Properties of a S_GOODS_MERGE. */
        interface IS_GOODS_MERGE {

            /** S_GOODS_MERGE itemGroup */
            itemGroup?: (com.message.IItemGroup|null);
        }

        /** Represents a S_GOODS_MERGE. */
        class S_GOODS_MERGE implements IS_GOODS_MERGE {

            /**
             * Constructs a new S_GOODS_MERGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GOODS_MERGE);

            /** S_GOODS_MERGE itemGroup. */
            public itemGroup?: (com.message.IItemGroup|null);

            /**
             * Encodes the specified S_GOODS_MERGE message. Does not implicitly {@link com.message.S_GOODS_MERGE.verify|verify} messages.
             * @param message S_GOODS_MERGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GOODS_MERGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GOODS_MERGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GOODS_MERGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GOODS_MERGE;
        }

        /** Properties of an ItemGroup. */
        interface IItemGroup {

            /** ItemGroup itemId */
            itemId?: (number|null);

            /** ItemGroup itemNum */
            itemNum?: (number|null);
        }

        /** Represents an ItemGroup. */
        class ItemGroup implements IItemGroup {

            /**
             * Constructs a new ItemGroup.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IItemGroup);

            /** ItemGroup itemId. */
            public itemId: number;

            /** ItemGroup itemNum. */
            public itemNum: number;

            /**
             * Encodes the specified ItemGroup message. Does not implicitly {@link com.message.ItemGroup.verify|verify} messages.
             * @param message ItemGroup message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IItemGroup, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ItemGroup message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ItemGroup
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ItemGroup;
        }

        /** Properties of a C_GOODS_SPLIT_MERGE. */
        interface IC_GOODS_SPLIT_MERGE {

            /** C_GOODS_SPLIT_MERGE id */
            id?: (number|null);

            /** C_GOODS_SPLIT_MERGE numbers */
            numbers?: (number|null);
        }

        /** Represents a C_GOODS_SPLIT_MERGE. */
        class C_GOODS_SPLIT_MERGE implements IC_GOODS_SPLIT_MERGE {

            /**
             * Constructs a new C_GOODS_SPLIT_MERGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GOODS_SPLIT_MERGE);

            /** C_GOODS_SPLIT_MERGE id. */
            public id: number;

            /** C_GOODS_SPLIT_MERGE numbers. */
            public numbers: number;

            /**
             * Encodes the specified C_GOODS_SPLIT_MERGE message. Does not implicitly {@link com.message.C_GOODS_SPLIT_MERGE.verify|verify} messages.
             * @param message C_GOODS_SPLIT_MERGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GOODS_SPLIT_MERGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GOODS_SPLIT_MERGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GOODS_SPLIT_MERGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GOODS_SPLIT_MERGE;
        }

        /** Properties of a S_GOODS_SPLIT_MERGE. */
        interface IS_GOODS_SPLIT_MERGE {

            /** S_GOODS_SPLIT_MERGE itemGroup */
            itemGroup?: (com.message.IItemGroup|null);
        }

        /** Represents a S_GOODS_SPLIT_MERGE. */
        class S_GOODS_SPLIT_MERGE implements IS_GOODS_SPLIT_MERGE {

            /**
             * Constructs a new S_GOODS_SPLIT_MERGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GOODS_SPLIT_MERGE);

            /** S_GOODS_SPLIT_MERGE itemGroup. */
            public itemGroup?: (com.message.IItemGroup|null);

            /**
             * Encodes the specified S_GOODS_SPLIT_MERGE message. Does not implicitly {@link com.message.S_GOODS_SPLIT_MERGE.verify|verify} messages.
             * @param message S_GOODS_SPLIT_MERGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GOODS_SPLIT_MERGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GOODS_SPLIT_MERGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GOODS_SPLIT_MERGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GOODS_SPLIT_MERGE;
        }

        /** Properties of a C_GET_BLESS_INFO. */
        interface IC_GET_BLESS_INFO {

            /** C_GET_BLESS_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_BLESS_INFO. */
        class C_GET_BLESS_INFO implements IC_GET_BLESS_INFO {

            /**
             * Constructs a new C_GET_BLESS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_BLESS_INFO);

            /** C_GET_BLESS_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_BLESS_INFO message. Does not implicitly {@link com.message.C_GET_BLESS_INFO.verify|verify} messages.
             * @param message C_GET_BLESS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_BLESS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_BLESS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_BLESS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_BLESS_INFO;
        }

        /** Properties of a S_GET_BLESS_INFO. */
        interface IS_GET_BLESS_INFO {

            /** S_GET_BLESS_INFO type */
            type?: (number|null);

            /** S_GET_BLESS_INFO blessInfo */
            blessInfo?: (com.message.IBlessMsg|null);
        }

        /** Represents a S_GET_BLESS_INFO. */
        class S_GET_BLESS_INFO implements IS_GET_BLESS_INFO {

            /**
             * Constructs a new S_GET_BLESS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_BLESS_INFO);

            /** S_GET_BLESS_INFO type. */
            public type: number;

            /** S_GET_BLESS_INFO blessInfo. */
            public blessInfo?: (com.message.IBlessMsg|null);

            /**
             * Encodes the specified S_GET_BLESS_INFO message. Does not implicitly {@link com.message.S_GET_BLESS_INFO.verify|verify} messages.
             * @param message S_GET_BLESS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_BLESS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_BLESS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_BLESS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_BLESS_INFO;
        }

        /** Properties of a S_GET_BLESS_OTHER_INFO. */
        interface IS_GET_BLESS_OTHER_INFO {

            /** S_GET_BLESS_OTHER_INFO type */
            type?: (number|null);

            /** S_GET_BLESS_OTHER_INFO stage */
            stage?: (number|null);

            /** S_GET_BLESS_OTHER_INFO others */
            others?: (com.message.IBlessOtherOneMsg[]|null);
        }

        /** Represents a S_GET_BLESS_OTHER_INFO. */
        class S_GET_BLESS_OTHER_INFO implements IS_GET_BLESS_OTHER_INFO {

            /**
             * Constructs a new S_GET_BLESS_OTHER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_BLESS_OTHER_INFO);

            /** S_GET_BLESS_OTHER_INFO type. */
            public type: number;

            /** S_GET_BLESS_OTHER_INFO stage. */
            public stage: number;

            /** S_GET_BLESS_OTHER_INFO others. */
            public others: com.message.IBlessOtherOneMsg[];

            /**
             * Encodes the specified S_GET_BLESS_OTHER_INFO message. Does not implicitly {@link com.message.S_GET_BLESS_OTHER_INFO.verify|verify} messages.
             * @param message S_GET_BLESS_OTHER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_BLESS_OTHER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_BLESS_OTHER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_BLESS_OTHER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_BLESS_OTHER_INFO;
        }

        /** Properties of a BlessOtherOneMsg. */
        interface IBlessOtherOneMsg {

            /** BlessOtherOneMsg part */
            part?: (number|null);

            /** BlessOtherOneMsg level */
            level?: (number|null);

            /** BlessOtherOneMsg bless */
            bless?: (number|null);
        }

        /** Represents a BlessOtherOneMsg. */
        class BlessOtherOneMsg implements IBlessOtherOneMsg {

            /**
             * Constructs a new BlessOtherOneMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBlessOtherOneMsg);

            /** BlessOtherOneMsg part. */
            public part: number;

            /** BlessOtherOneMsg level. */
            public level: number;

            /** BlessOtherOneMsg bless. */
            public bless: number;

            /**
             * Encodes the specified BlessOtherOneMsg message. Does not implicitly {@link com.message.BlessOtherOneMsg.verify|verify} messages.
             * @param message BlessOtherOneMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBlessOtherOneMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BlessOtherOneMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlessOtherOneMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BlessOtherOneMsg;
        }

        /** Properties of a BlessSkillMsg. */
        interface IBlessSkillMsg {

            /** BlessSkillMsg type */
            type?: (number|null);

            /** BlessSkillMsg skillId */
            skillId?: (number|null);
        }

        /** Represents a BlessSkillMsg. */
        class BlessSkillMsg implements IBlessSkillMsg {

            /**
             * Constructs a new BlessSkillMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBlessSkillMsg);

            /** BlessSkillMsg type. */
            public type: number;

            /** BlessSkillMsg skillId. */
            public skillId: number;

            /**
             * Encodes the specified BlessSkillMsg message. Does not implicitly {@link com.message.BlessSkillMsg.verify|verify} messages.
             * @param message BlessSkillMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBlessSkillMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BlessSkillMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlessSkillMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BlessSkillMsg;
        }

        /** Properties of a BlessPillMsg. */
        interface IBlessPillMsg {

            /** BlessPillMsg pillType */
            pillType?: (number|null);

            /** BlessPillMsg value */
            value?: (number|null);
        }

        /** Represents a BlessPillMsg. */
        class BlessPillMsg implements IBlessPillMsg {

            /**
             * Constructs a new BlessPillMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBlessPillMsg);

            /** BlessPillMsg pillType. */
            public pillType: number;

            /** BlessPillMsg value. */
            public value: number;

            /**
             * Encodes the specified BlessPillMsg message. Does not implicitly {@link com.message.BlessPillMsg.verify|verify} messages.
             * @param message BlessPillMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBlessPillMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BlessPillMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlessPillMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BlessPillMsg;
        }

        /** Properties of an EquipmentFormationInfo. */
        interface IEquipmentFormationInfo {

            /** EquipmentFormationInfo eSlotType */
            eSlotType?: ({ [k: string]: com.message.IEquipmentInfoForType }|null);
        }

        /** Represents an EquipmentFormationInfo. */
        class EquipmentFormationInfo implements IEquipmentFormationInfo {

            /**
             * Constructs a new EquipmentFormationInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IEquipmentFormationInfo);

            /** EquipmentFormationInfo eSlotType. */
            public eSlotType: { [k: string]: com.message.IEquipmentInfoForType };

            /**
             * Encodes the specified EquipmentFormationInfo message. Does not implicitly {@link com.message.EquipmentFormationInfo.verify|verify} messages.
             * @param message EquipmentFormationInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IEquipmentFormationInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an EquipmentFormationInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EquipmentFormationInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.EquipmentFormationInfo;
        }

        /** Properties of an EquipmentInfoForType. */
        interface IEquipmentInfoForType {

            /** EquipmentInfoForType eSlotinfo */
            eSlotinfo?: (com.message.IBlessEquipMsg[]|null);
        }

        /** Represents an EquipmentInfoForType. */
        class EquipmentInfoForType implements IEquipmentInfoForType {

            /**
             * Constructs a new EquipmentInfoForType.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IEquipmentInfoForType);

            /** EquipmentInfoForType eSlotinfo. */
            public eSlotinfo: com.message.IBlessEquipMsg[];

            /**
             * Encodes the specified EquipmentInfoForType message. Does not implicitly {@link com.message.EquipmentInfoForType.verify|verify} messages.
             * @param message EquipmentInfoForType message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IEquipmentInfoForType, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an EquipmentInfoForType message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EquipmentInfoForType
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.EquipmentInfoForType;
        }

        /** Properties of a BlessEquipMsg. */
        interface IBlessEquipMsg {

            /** BlessEquipMsg equipId */
            equipId?: (number|Long|null);

            /** BlessEquipMsg equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** BlessEquipMsg itemId */
            itemId?: (number|null);
        }

        /** Represents a BlessEquipMsg. */
        class BlessEquipMsg implements IBlessEquipMsg {

            /**
             * Constructs a new BlessEquipMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBlessEquipMsg);

            /** BlessEquipMsg equipId. */
            public equipId: (number|Long);

            /** BlessEquipMsg equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** BlessEquipMsg itemId. */
            public itemId: number;

            /**
             * Encodes the specified BlessEquipMsg message. Does not implicitly {@link com.message.BlessEquipMsg.verify|verify} messages.
             * @param message BlessEquipMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBlessEquipMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BlessEquipMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlessEquipMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BlessEquipMsg;
        }

        /** Properties of a BlessMsg. */
        interface IBlessMsg {

            /** BlessMsg star */
            star?: (number|null);

            /** BlessMsg bless */
            bless?: (number|null);

            /** BlessMsg blessSkillMsg */
            blessSkillMsg?: (com.message.IBlessSkillMsg[]|null);

            /** BlessMsg blessPillMsg */
            blessPillMsg?: (com.message.IBlessPillMsg[]|null);

            /** BlessMsg blessEquipMsg */
            blessEquipMsg?: (com.message.IEquipmentFormationInfo|null);

            /** BlessMsg imageId */
            imageId?: (number|null);

            /** BlessMsg fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a BlessMsg. */
        class BlessMsg implements IBlessMsg {

            /**
             * Constructs a new BlessMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBlessMsg);

            /** BlessMsg star. */
            public star: number;

            /** BlessMsg bless. */
            public bless: number;

            /** BlessMsg blessSkillMsg. */
            public blessSkillMsg: com.message.IBlessSkillMsg[];

            /** BlessMsg blessPillMsg. */
            public blessPillMsg: com.message.IBlessPillMsg[];

            /** BlessMsg blessEquipMsg. */
            public blessEquipMsg?: (com.message.IEquipmentFormationInfo|null);

            /** BlessMsg imageId. */
            public imageId: number;

            /** BlessMsg fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified BlessMsg message. Does not implicitly {@link com.message.BlessMsg.verify|verify} messages.
             * @param message BlessMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBlessMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BlessMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BlessMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BlessMsg;
        }

        /** Properties of a C_BLESS_STAR_UP. */
        interface IC_BLESS_STAR_UP {

            /** C_BLESS_STAR_UP type */
            type?: (number|null);

            /** C_BLESS_STAR_UP autoBuy */
            autoBuy?: (boolean|null);
        }

        /** Represents a C_BLESS_STAR_UP. */
        class C_BLESS_STAR_UP implements IC_BLESS_STAR_UP {

            /**
             * Constructs a new C_BLESS_STAR_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BLESS_STAR_UP);

            /** C_BLESS_STAR_UP type. */
            public type: number;

            /** C_BLESS_STAR_UP autoBuy. */
            public autoBuy: boolean;

            /**
             * Encodes the specified C_BLESS_STAR_UP message. Does not implicitly {@link com.message.C_BLESS_STAR_UP.verify|verify} messages.
             * @param message C_BLESS_STAR_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BLESS_STAR_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BLESS_STAR_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BLESS_STAR_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BLESS_STAR_UP;
        }

        /** Properties of a S_BLESS_STAR_UP. */
        interface IS_BLESS_STAR_UP {

            /** S_BLESS_STAR_UP type */
            type?: (number|null);

            /** S_BLESS_STAR_UP star */
            star?: (number|null);

            /** S_BLESS_STAR_UP bless */
            bless?: (number|null);

            /** S_BLESS_STAR_UP fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a S_BLESS_STAR_UP. */
        class S_BLESS_STAR_UP implements IS_BLESS_STAR_UP {

            /**
             * Constructs a new S_BLESS_STAR_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BLESS_STAR_UP);

            /** S_BLESS_STAR_UP type. */
            public type: number;

            /** S_BLESS_STAR_UP star. */
            public star: number;

            /** S_BLESS_STAR_UP bless. */
            public bless: number;

            /** S_BLESS_STAR_UP fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified S_BLESS_STAR_UP message. Does not implicitly {@link com.message.S_BLESS_STAR_UP.verify|verify} messages.
             * @param message S_BLESS_STAR_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BLESS_STAR_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BLESS_STAR_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BLESS_STAR_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BLESS_STAR_UP;
        }

        /** Properties of a C_BLESS_EAT_PILL. */
        interface IC_BLESS_EAT_PILL {

            /** C_BLESS_EAT_PILL type */
            type?: (number|null);

            /** C_BLESS_EAT_PILL pillType */
            pillType?: (number|null);
        }

        /** Represents a C_BLESS_EAT_PILL. */
        class C_BLESS_EAT_PILL implements IC_BLESS_EAT_PILL {

            /**
             * Constructs a new C_BLESS_EAT_PILL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BLESS_EAT_PILL);

            /** C_BLESS_EAT_PILL type. */
            public type: number;

            /** C_BLESS_EAT_PILL pillType. */
            public pillType: number;

            /**
             * Encodes the specified C_BLESS_EAT_PILL message. Does not implicitly {@link com.message.C_BLESS_EAT_PILL.verify|verify} messages.
             * @param message C_BLESS_EAT_PILL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BLESS_EAT_PILL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BLESS_EAT_PILL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BLESS_EAT_PILL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BLESS_EAT_PILL;
        }

        /** Properties of a S_BLESS_EAT_PILL. */
        interface IS_BLESS_EAT_PILL {

            /** S_BLESS_EAT_PILL type */
            type?: (number|null);

            /** S_BLESS_EAT_PILL blessPillMsg */
            blessPillMsg?: (com.message.IBlessPillMsg|null);

            /** S_BLESS_EAT_PILL fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a S_BLESS_EAT_PILL. */
        class S_BLESS_EAT_PILL implements IS_BLESS_EAT_PILL {

            /**
             * Constructs a new S_BLESS_EAT_PILL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BLESS_EAT_PILL);

            /** S_BLESS_EAT_PILL type. */
            public type: number;

            /** S_BLESS_EAT_PILL blessPillMsg. */
            public blessPillMsg?: (com.message.IBlessPillMsg|null);

            /** S_BLESS_EAT_PILL fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified S_BLESS_EAT_PILL message. Does not implicitly {@link com.message.S_BLESS_EAT_PILL.verify|verify} messages.
             * @param message S_BLESS_EAT_PILL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BLESS_EAT_PILL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BLESS_EAT_PILL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BLESS_EAT_PILL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BLESS_EAT_PILL;
        }

        /** Properties of a C_BLESS_OTHER_UP. */
        interface IC_BLESS_OTHER_UP {

            /** C_BLESS_OTHER_UP type */
            type?: (number|null);

            /** C_BLESS_OTHER_UP part */
            part?: (number|null);
        }

        /** Represents a C_BLESS_OTHER_UP. */
        class C_BLESS_OTHER_UP implements IC_BLESS_OTHER_UP {

            /**
             * Constructs a new C_BLESS_OTHER_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BLESS_OTHER_UP);

            /** C_BLESS_OTHER_UP type. */
            public type: number;

            /** C_BLESS_OTHER_UP part. */
            public part: number;

            /**
             * Encodes the specified C_BLESS_OTHER_UP message. Does not implicitly {@link com.message.C_BLESS_OTHER_UP.verify|verify} messages.
             * @param message C_BLESS_OTHER_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BLESS_OTHER_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BLESS_OTHER_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BLESS_OTHER_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BLESS_OTHER_UP;
        }

        /** Properties of a S_BLESS_OTHER_UP. */
        interface IS_BLESS_OTHER_UP {

            /** S_BLESS_OTHER_UP type */
            type?: (number|null);

            /** S_BLESS_OTHER_UP part */
            part?: (number|null);

            /** S_BLESS_OTHER_UP level */
            level?: (number|null);

            /** S_BLESS_OTHER_UP stage */
            stage?: (number|null);

            /** S_BLESS_OTHER_UP bless */
            bless?: (number|null);
        }

        /** Represents a S_BLESS_OTHER_UP. */
        class S_BLESS_OTHER_UP implements IS_BLESS_OTHER_UP {

            /**
             * Constructs a new S_BLESS_OTHER_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BLESS_OTHER_UP);

            /** S_BLESS_OTHER_UP type. */
            public type: number;

            /** S_BLESS_OTHER_UP part. */
            public part: number;

            /** S_BLESS_OTHER_UP level. */
            public level: number;

            /** S_BLESS_OTHER_UP stage. */
            public stage: number;

            /** S_BLESS_OTHER_UP bless. */
            public bless: number;

            /**
             * Encodes the specified S_BLESS_OTHER_UP message. Does not implicitly {@link com.message.S_BLESS_OTHER_UP.verify|verify} messages.
             * @param message S_BLESS_OTHER_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BLESS_OTHER_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BLESS_OTHER_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BLESS_OTHER_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BLESS_OTHER_UP;
        }

        /** Properties of a C_GET_BLESS_ACTIVITY_INFO. */
        interface IC_GET_BLESS_ACTIVITY_INFO {

            /** C_GET_BLESS_ACTIVITY_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_BLESS_ACTIVITY_INFO. */
        class C_GET_BLESS_ACTIVITY_INFO implements IC_GET_BLESS_ACTIVITY_INFO {

            /**
             * Constructs a new C_GET_BLESS_ACTIVITY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_BLESS_ACTIVITY_INFO);

            /** C_GET_BLESS_ACTIVITY_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_BLESS_ACTIVITY_INFO message. Does not implicitly {@link com.message.C_GET_BLESS_ACTIVITY_INFO.verify|verify} messages.
             * @param message C_GET_BLESS_ACTIVITY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_BLESS_ACTIVITY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_BLESS_ACTIVITY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_BLESS_ACTIVITY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_BLESS_ACTIVITY_INFO;
        }

        /** Properties of a S_GET_BLESS_ACTIVITY_INFO. */
        interface IS_GET_BLESS_ACTIVITY_INFO {

            /** S_GET_BLESS_ACTIVITY_INFO type */
            type?: (number|null);

            /** S_GET_BLESS_ACTIVITY_INFO overTime */
            overTime?: (number|null);
        }

        /** Represents a S_GET_BLESS_ACTIVITY_INFO. */
        class S_GET_BLESS_ACTIVITY_INFO implements IS_GET_BLESS_ACTIVITY_INFO {

            /**
             * Constructs a new S_GET_BLESS_ACTIVITY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_BLESS_ACTIVITY_INFO);

            /** S_GET_BLESS_ACTIVITY_INFO type. */
            public type: number;

            /** S_GET_BLESS_ACTIVITY_INFO overTime. */
            public overTime: number;

            /**
             * Encodes the specified S_GET_BLESS_ACTIVITY_INFO message. Does not implicitly {@link com.message.S_GET_BLESS_ACTIVITY_INFO.verify|verify} messages.
             * @param message S_GET_BLESS_ACTIVITY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_BLESS_ACTIVITY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_BLESS_ACTIVITY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_BLESS_ACTIVITY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_BLESS_ACTIVITY_INFO;
        }

        /** Properties of a C_BLESS_ACTIVITY_BUY. */
        interface IC_BLESS_ACTIVITY_BUY {

            /** C_BLESS_ACTIVITY_BUY type */
            type?: (number|null);
        }

        /** Represents a C_BLESS_ACTIVITY_BUY. */
        class C_BLESS_ACTIVITY_BUY implements IC_BLESS_ACTIVITY_BUY {

            /**
             * Constructs a new C_BLESS_ACTIVITY_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BLESS_ACTIVITY_BUY);

            /** C_BLESS_ACTIVITY_BUY type. */
            public type: number;

            /**
             * Encodes the specified C_BLESS_ACTIVITY_BUY message. Does not implicitly {@link com.message.C_BLESS_ACTIVITY_BUY.verify|verify} messages.
             * @param message C_BLESS_ACTIVITY_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BLESS_ACTIVITY_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BLESS_ACTIVITY_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BLESS_ACTIVITY_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BLESS_ACTIVITY_BUY;
        }

        /** Properties of a S_BLESS_ACTIVITY_BUY. */
        interface IS_BLESS_ACTIVITY_BUY {

            /** S_BLESS_ACTIVITY_BUY type */
            type?: (number|null);

            /** S_BLESS_ACTIVITY_BUY overTime */
            overTime?: (number|null);

            /** S_BLESS_ACTIVITY_BUY itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_BLESS_ACTIVITY_BUY. */
        class S_BLESS_ACTIVITY_BUY implements IS_BLESS_ACTIVITY_BUY {

            /**
             * Constructs a new S_BLESS_ACTIVITY_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BLESS_ACTIVITY_BUY);

            /** S_BLESS_ACTIVITY_BUY type. */
            public type: number;

            /** S_BLESS_ACTIVITY_BUY overTime. */
            public overTime: number;

            /** S_BLESS_ACTIVITY_BUY itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_BLESS_ACTIVITY_BUY message. Does not implicitly {@link com.message.S_BLESS_ACTIVITY_BUY.verify|verify} messages.
             * @param message S_BLESS_ACTIVITY_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BLESS_ACTIVITY_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BLESS_ACTIVITY_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BLESS_ACTIVITY_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BLESS_ACTIVITY_BUY;
        }

        /** Properties of a S_BLESS_ACTIVITY_PUSH. */
        interface IS_BLESS_ACTIVITY_PUSH {

            /** S_BLESS_ACTIVITY_PUSH type */
            type?: (number|null);

            /** S_BLESS_ACTIVITY_PUSH overTime */
            overTime?: (number|null);
        }

        /** Represents a S_BLESS_ACTIVITY_PUSH. */
        class S_BLESS_ACTIVITY_PUSH implements IS_BLESS_ACTIVITY_PUSH {

            /**
             * Constructs a new S_BLESS_ACTIVITY_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BLESS_ACTIVITY_PUSH);

            /** S_BLESS_ACTIVITY_PUSH type. */
            public type: number;

            /** S_BLESS_ACTIVITY_PUSH overTime. */
            public overTime: number;

            /**
             * Encodes the specified S_BLESS_ACTIVITY_PUSH message. Does not implicitly {@link com.message.S_BLESS_ACTIVITY_PUSH.verify|verify} messages.
             * @param message S_BLESS_ACTIVITY_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BLESS_ACTIVITY_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BLESS_ACTIVITY_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BLESS_ACTIVITY_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BLESS_ACTIVITY_PUSH;
        }

        /** Properties of a C_CHECK_CDK_INFO. */
        interface IC_CHECK_CDK_INFO {

            /** C_CHECK_CDK_INFO cdKeyCode */
            cdKeyCode?: (string|null);
        }

        /** Represents a C_CHECK_CDK_INFO. */
        class C_CHECK_CDK_INFO implements IC_CHECK_CDK_INFO {

            /**
             * Constructs a new C_CHECK_CDK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CHECK_CDK_INFO);

            /** C_CHECK_CDK_INFO cdKeyCode. */
            public cdKeyCode: string;

            /**
             * Encodes the specified C_CHECK_CDK_INFO message. Does not implicitly {@link com.message.C_CHECK_CDK_INFO.verify|verify} messages.
             * @param message C_CHECK_CDK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CHECK_CDK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CHECK_CDK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CHECK_CDK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CHECK_CDK_INFO;
        }

        /** Properties of a S_CHECK_CDK_INFO. */
        interface IS_CHECK_CDK_INFO {

            /** S_CHECK_CDK_INFO result */
            result?: (number|null);

            /** S_CHECK_CDK_INFO msg */
            msg?: (string|null);

            /** S_CHECK_CDK_INFO rewardId */
            rewardId?: (number|null);
        }

        /** Represents a S_CHECK_CDK_INFO. */
        class S_CHECK_CDK_INFO implements IS_CHECK_CDK_INFO {

            /**
             * Constructs a new S_CHECK_CDK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CHECK_CDK_INFO);

            /** S_CHECK_CDK_INFO result. */
            public result: number;

            /** S_CHECK_CDK_INFO msg. */
            public msg: string;

            /** S_CHECK_CDK_INFO rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified S_CHECK_CDK_INFO message. Does not implicitly {@link com.message.S_CHECK_CDK_INFO.verify|verify} messages.
             * @param message S_CHECK_CDK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CHECK_CDK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CHECK_CDK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CHECK_CDK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CHECK_CDK_INFO;
        }

        /** Properties of a C_GET_CDK_REWARD. */
        interface IC_GET_CDK_REWARD {

            /** C_GET_CDK_REWARD cdKeyCode */
            cdKeyCode?: (string|null);
        }

        /** Represents a C_GET_CDK_REWARD. */
        class C_GET_CDK_REWARD implements IC_GET_CDK_REWARD {

            /**
             * Constructs a new C_GET_CDK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CDK_REWARD);

            /** C_GET_CDK_REWARD cdKeyCode. */
            public cdKeyCode: string;

            /**
             * Encodes the specified C_GET_CDK_REWARD message. Does not implicitly {@link com.message.C_GET_CDK_REWARD.verify|verify} messages.
             * @param message C_GET_CDK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CDK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CDK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CDK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CDK_REWARD;
        }

        /** Properties of a S_GET_CDK_REWARD. */
        interface IS_GET_CDK_REWARD {

            /** S_GET_CDK_REWARD result */
            result?: (number|null);

            /** S_GET_CDK_REWARD msg */
            msg?: (string|null);

            /** S_GET_CDK_REWARD rewardId */
            rewardId?: (number|null);

            /** S_GET_CDK_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_CDK_REWARD. */
        class S_GET_CDK_REWARD implements IS_GET_CDK_REWARD {

            /**
             * Constructs a new S_GET_CDK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CDK_REWARD);

            /** S_GET_CDK_REWARD result. */
            public result: number;

            /** S_GET_CDK_REWARD msg. */
            public msg: string;

            /** S_GET_CDK_REWARD rewardId. */
            public rewardId: number;

            /** S_GET_CDK_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_CDK_REWARD message. Does not implicitly {@link com.message.S_GET_CDK_REWARD.verify|verify} messages.
             * @param message S_GET_CDK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CDK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CDK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CDK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CDK_REWARD;
        }

        /** Properties of a C_SEND_CHAT_INFO. */
        interface IC_SEND_CHAT_INFO {

            /** C_SEND_CHAT_INFO type */
            type?: (number|null);

            /** C_SEND_CHAT_INFO chatInfo */
            chatInfo?: (string|null);

            /** C_SEND_CHAT_INFO targetId */
            targetId?: (number|Long|null);
        }

        /** Represents a C_SEND_CHAT_INFO. */
        class C_SEND_CHAT_INFO implements IC_SEND_CHAT_INFO {

            /**
             * Constructs a new C_SEND_CHAT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SEND_CHAT_INFO);

            /** C_SEND_CHAT_INFO type. */
            public type: number;

            /** C_SEND_CHAT_INFO chatInfo. */
            public chatInfo: string;

            /** C_SEND_CHAT_INFO targetId. */
            public targetId: (number|Long);

            /**
             * Encodes the specified C_SEND_CHAT_INFO message. Does not implicitly {@link com.message.C_SEND_CHAT_INFO.verify|verify} messages.
             * @param message C_SEND_CHAT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SEND_CHAT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SEND_CHAT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SEND_CHAT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SEND_CHAT_INFO;
        }

        /** Properties of a S_SEND_CHAT_INFO. */
        interface IS_SEND_CHAT_INFO {

            /** S_SEND_CHAT_INFO type */
            type?: (number|null);

            /** S_SEND_CHAT_INFO chatTime */
            chatTime?: (number|Long|null);

            /** S_SEND_CHAT_INFO chatInfo */
            chatInfo?: (string|null);

            /** S_SEND_CHAT_INFO linkId */
            linkId?: (number|null);

            /** S_SEND_CHAT_INFO roleInfo */
            roleInfo?: (com.message.IRoleInfo|null);

            /** S_SEND_CHAT_INFO channel */
            channel?: (number[]|null);

            /** S_SEND_CHAT_INFO noticeId */
            noticeId?: (number|null);

            /** S_SEND_CHAT_INFO noticeParam */
            noticeParam?: (string[]|null);
        }

        /** Represents a S_SEND_CHAT_INFO. */
        class S_SEND_CHAT_INFO implements IS_SEND_CHAT_INFO {

            /**
             * Constructs a new S_SEND_CHAT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SEND_CHAT_INFO);

            /** S_SEND_CHAT_INFO type. */
            public type: number;

            /** S_SEND_CHAT_INFO chatTime. */
            public chatTime: (number|Long);

            /** S_SEND_CHAT_INFO chatInfo. */
            public chatInfo: string;

            /** S_SEND_CHAT_INFO linkId. */
            public linkId: number;

            /** S_SEND_CHAT_INFO roleInfo. */
            public roleInfo?: (com.message.IRoleInfo|null);

            /** S_SEND_CHAT_INFO channel. */
            public channel: number[];

            /** S_SEND_CHAT_INFO noticeId. */
            public noticeId: number;

            /** S_SEND_CHAT_INFO noticeParam. */
            public noticeParam: string[];

            /**
             * Encodes the specified S_SEND_CHAT_INFO message. Does not implicitly {@link com.message.S_SEND_CHAT_INFO.verify|verify} messages.
             * @param message S_SEND_CHAT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SEND_CHAT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SEND_CHAT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SEND_CHAT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SEND_CHAT_INFO;
        }

        /** ChatType enum. */
        enum ChatType {
            NONE = 0,
            SYSTEM_NOTICE = 1,
            WORLD_CHAT = 2,
            TEAM_CHAT = 3,
            PRIV_CHAT = 4,
            GUILD_CHAT = 5,
            CROSS_CHAT = 6
        }

        /** Properties of a RoleInfo. */
        interface IRoleInfo {

            /** RoleInfo roleId */
            roleId?: (number|Long|null);

            /** RoleInfo roleName */
            roleName?: (string|null);

            /** RoleInfo vipLevel */
            vipLevel?: (number|null);

            /** RoleInfo level */
            level?: (number|null);

            /** RoleInfo guild */
            guild?: (number|Long|null);

            /** RoleInfo guildName */
            guildName?: (string|null);

            /** RoleInfo heroId */
            heroId?: (number|null);

            /** RoleInfo heroQuality */
            heroQuality?: (number|null);

            /** RoleInfo useTitle */
            useTitle?: (number|null);

            /** RoleInfo useHeadFrame */
            useHeadFrame?: (number|null);

            /** RoleInfo useChatBubble */
            useChatBubble?: (number|null);

            /** RoleInfo isGm */
            isGm?: (number|null);

            /** RoleInfo userName */
            userName?: (string|null);

            /** RoleInfo gameSite */
            gameSite?: (string|null);
        }

        /** Represents a RoleInfo. */
        class RoleInfo implements IRoleInfo {

            /**
             * Constructs a new RoleInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IRoleInfo);

            /** RoleInfo roleId. */
            public roleId: (number|Long);

            /** RoleInfo roleName. */
            public roleName: string;

            /** RoleInfo vipLevel. */
            public vipLevel: number;

            /** RoleInfo level. */
            public level: number;

            /** RoleInfo guild. */
            public guild: (number|Long);

            /** RoleInfo guildName. */
            public guildName: string;

            /** RoleInfo heroId. */
            public heroId: number;

            /** RoleInfo heroQuality. */
            public heroQuality: number;

            /** RoleInfo useTitle. */
            public useTitle: number;

            /** RoleInfo useHeadFrame. */
            public useHeadFrame: number;

            /** RoleInfo useChatBubble. */
            public useChatBubble: number;

            /** RoleInfo isGm. */
            public isGm: number;

            /** RoleInfo userName. */
            public userName: string;

            /** RoleInfo gameSite. */
            public gameSite: string;

            /**
             * Encodes the specified RoleInfo message. Does not implicitly {@link com.message.RoleInfo.verify|verify} messages.
             * @param message RoleInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IRoleInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RoleInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RoleInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.RoleInfo;
        }

        /** ChatChannel enum. */
        enum ChatChannel {
            CHAT_BOX = 0,
            HORSE_LAMP = 1
        }

        /** Properties of a CROSS_C_SEND_CHAT_INFO. */
        interface ICROSS_C_SEND_CHAT_INFO {

            /** CROSS_C_SEND_CHAT_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_SEND_CHAT_INFO chatInfo */
            chatInfo?: (string|null);

            /** CROSS_C_SEND_CHAT_INFO linkId */
            linkId?: (number|null);

            /** CROSS_C_SEND_CHAT_INFO roleInfo */
            roleInfo?: (com.message.IRoleInfo|null);

            /** CROSS_C_SEND_CHAT_INFO channel */
            channel?: (number[]|null);
        }

        /** Represents a CROSS_C_SEND_CHAT_INFO. */
        class CROSS_C_SEND_CHAT_INFO implements ICROSS_C_SEND_CHAT_INFO {

            /**
             * Constructs a new CROSS_C_SEND_CHAT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SEND_CHAT_INFO);

            /** CROSS_C_SEND_CHAT_INFO serverId. */
            public serverId: number;

            /** CROSS_C_SEND_CHAT_INFO chatInfo. */
            public chatInfo: string;

            /** CROSS_C_SEND_CHAT_INFO linkId. */
            public linkId: number;

            /** CROSS_C_SEND_CHAT_INFO roleInfo. */
            public roleInfo?: (com.message.IRoleInfo|null);

            /** CROSS_C_SEND_CHAT_INFO channel. */
            public channel: number[];

            /**
             * Encodes the specified CROSS_C_SEND_CHAT_INFO message. Does not implicitly {@link com.message.CROSS_C_SEND_CHAT_INFO.verify|verify} messages.
             * @param message CROSS_C_SEND_CHAT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SEND_CHAT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SEND_CHAT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SEND_CHAT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SEND_CHAT_INFO;
        }

        /** Properties of a CROSS_S_SEND_CHAT_INFO. */
        interface ICROSS_S_SEND_CHAT_INFO {

            /** CROSS_S_SEND_CHAT_INFO chatTime */
            chatTime?: (number|Long|null);

            /** CROSS_S_SEND_CHAT_INFO chatInfo */
            chatInfo?: (string|null);

            /** CROSS_S_SEND_CHAT_INFO linkId */
            linkId?: (number|null);

            /** CROSS_S_SEND_CHAT_INFO roleInfo */
            roleInfo?: (com.message.IRoleInfo|null);

            /** CROSS_S_SEND_CHAT_INFO channel */
            channel?: (number[]|null);

            /** CROSS_S_SEND_CHAT_INFO serverId */
            serverId?: (number|null);
        }

        /** Represents a CROSS_S_SEND_CHAT_INFO. */
        class CROSS_S_SEND_CHAT_INFO implements ICROSS_S_SEND_CHAT_INFO {

            /**
             * Constructs a new CROSS_S_SEND_CHAT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SEND_CHAT_INFO);

            /** CROSS_S_SEND_CHAT_INFO chatTime. */
            public chatTime: (number|Long);

            /** CROSS_S_SEND_CHAT_INFO chatInfo. */
            public chatInfo: string;

            /** CROSS_S_SEND_CHAT_INFO linkId. */
            public linkId: number;

            /** CROSS_S_SEND_CHAT_INFO roleInfo. */
            public roleInfo?: (com.message.IRoleInfo|null);

            /** CROSS_S_SEND_CHAT_INFO channel. */
            public channel: number[];

            /** CROSS_S_SEND_CHAT_INFO serverId. */
            public serverId: number;

            /**
             * Encodes the specified CROSS_S_SEND_CHAT_INFO message. Does not implicitly {@link com.message.CROSS_S_SEND_CHAT_INFO.verify|verify} messages.
             * @param message CROSS_S_SEND_CHAT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SEND_CHAT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SEND_CHAT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SEND_CHAT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SEND_CHAT_INFO;
        }

        /** Properties of a C_CHAT_TIMES_INFO. */
        interface IC_CHAT_TIMES_INFO {

            /** C_CHAT_TIMES_INFO type */
            type?: (number|null);
        }

        /** Represents a C_CHAT_TIMES_INFO. */
        class C_CHAT_TIMES_INFO implements IC_CHAT_TIMES_INFO {

            /**
             * Constructs a new C_CHAT_TIMES_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CHAT_TIMES_INFO);

            /** C_CHAT_TIMES_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_CHAT_TIMES_INFO message. Does not implicitly {@link com.message.C_CHAT_TIMES_INFO.verify|verify} messages.
             * @param message C_CHAT_TIMES_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CHAT_TIMES_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CHAT_TIMES_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CHAT_TIMES_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CHAT_TIMES_INFO;
        }

        /** Properties of a S_CHAT_TIMES_INFO. */
        interface IS_CHAT_TIMES_INFO {

            /** S_CHAT_TIMES_INFO type */
            type?: (number|null);

            /** S_CHAT_TIMES_INFO hadTimes */
            hadTimes?: (number|null);
        }

        /** Represents a S_CHAT_TIMES_INFO. */
        class S_CHAT_TIMES_INFO implements IS_CHAT_TIMES_INFO {

            /**
             * Constructs a new S_CHAT_TIMES_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CHAT_TIMES_INFO);

            /** S_CHAT_TIMES_INFO type. */
            public type: number;

            /** S_CHAT_TIMES_INFO hadTimes. */
            public hadTimes: number;

            /**
             * Encodes the specified S_CHAT_TIMES_INFO message. Does not implicitly {@link com.message.S_CHAT_TIMES_INFO.verify|verify} messages.
             * @param message S_CHAT_TIMES_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CHAT_TIMES_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CHAT_TIMES_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CHAT_TIMES_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CHAT_TIMES_INFO;
        }

        /** Properties of a C_GET_CONVOY_INFO. */
        interface IC_GET_CONVOY_INFO {
        }

        /** Represents a C_GET_CONVOY_INFO. */
        class C_GET_CONVOY_INFO implements IC_GET_CONVOY_INFO {

            /**
             * Constructs a new C_GET_CONVOY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CONVOY_INFO);

            /**
             * Encodes the specified C_GET_CONVOY_INFO message. Does not implicitly {@link com.message.C_GET_CONVOY_INFO.verify|verify} messages.
             * @param message C_GET_CONVOY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CONVOY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CONVOY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CONVOY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CONVOY_INFO;
        }

        /** Properties of a S_GET_CONVOY_INFO. */
        interface IS_GET_CONVOY_INFO {

            /** S_GET_CONVOY_INFO convoyRankMsg */
            convoyRankMsg?: (com.message.IConvoyRankMsg[]|null);

            /** S_GET_CONVOY_INFO convoyMsg */
            convoyMsg?: (com.message.IConvoyMsg|null);
        }

        /** Represents a S_GET_CONVOY_INFO. */
        class S_GET_CONVOY_INFO implements IS_GET_CONVOY_INFO {

            /**
             * Constructs a new S_GET_CONVOY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CONVOY_INFO);

            /** S_GET_CONVOY_INFO convoyRankMsg. */
            public convoyRankMsg: com.message.IConvoyRankMsg[];

            /** S_GET_CONVOY_INFO convoyMsg. */
            public convoyMsg?: (com.message.IConvoyMsg|null);

            /**
             * Encodes the specified S_GET_CONVOY_INFO message. Does not implicitly {@link com.message.S_GET_CONVOY_INFO.verify|verify} messages.
             * @param message S_GET_CONVOY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CONVOY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CONVOY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CONVOY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CONVOY_INFO;
        }

        /** Properties of a ConvoyMsg. */
        interface IConvoyMsg {

            /** ConvoyMsg convoyId */
            convoyId?: (number|null);

            /** ConvoyMsg endTime */
            endTime?: (number|Long|null);

            /** ConvoyMsg convoyCount */
            convoyCount?: (number|null);

            /** ConvoyMsg robCount */
            robCount?: (number|null);

            /** ConvoyMsg beRobCount */
            beRobCount?: (number|null);

            /** ConvoyMsg isDoubleReward */
            isDoubleReward?: (boolean|null);
        }

        /** Represents a ConvoyMsg. */
        class ConvoyMsg implements IConvoyMsg {

            /**
             * Constructs a new ConvoyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IConvoyMsg);

            /** ConvoyMsg convoyId. */
            public convoyId: number;

            /** ConvoyMsg endTime. */
            public endTime: (number|Long);

            /** ConvoyMsg convoyCount. */
            public convoyCount: number;

            /** ConvoyMsg robCount. */
            public robCount: number;

            /** ConvoyMsg beRobCount. */
            public beRobCount: number;

            /** ConvoyMsg isDoubleReward. */
            public isDoubleReward: boolean;

            /**
             * Encodes the specified ConvoyMsg message. Does not implicitly {@link com.message.ConvoyMsg.verify|verify} messages.
             * @param message ConvoyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IConvoyMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ConvoyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConvoyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ConvoyMsg;
        }

        /** Properties of a ConvoyRankMsg. */
        interface IConvoyRankMsg {

            /** ConvoyRankMsg playerId */
            playerId?: (number|Long|null);

            /** ConvoyRankMsg playerName */
            playerName?: (string|null);

            /** ConvoyRankMsg playerHeroId */
            playerHeroId?: (number|null);

            /** ConvoyRankMsg convoyId */
            convoyId?: (number|null);

            /** ConvoyRankMsg beRobCount */
            beRobCount?: (number|null);

            /** ConvoyRankMsg endTime */
            endTime?: (number|Long|null);
        }

        /** Represents a ConvoyRankMsg. */
        class ConvoyRankMsg implements IConvoyRankMsg {

            /**
             * Constructs a new ConvoyRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IConvoyRankMsg);

            /** ConvoyRankMsg playerId. */
            public playerId: (number|Long);

            /** ConvoyRankMsg playerName. */
            public playerName: string;

            /** ConvoyRankMsg playerHeroId. */
            public playerHeroId: number;

            /** ConvoyRankMsg convoyId. */
            public convoyId: number;

            /** ConvoyRankMsg beRobCount. */
            public beRobCount: number;

            /** ConvoyRankMsg endTime. */
            public endTime: (number|Long);

            /**
             * Encodes the specified ConvoyRankMsg message. Does not implicitly {@link com.message.ConvoyRankMsg.verify|verify} messages.
             * @param message ConvoyRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IConvoyRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ConvoyRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConvoyRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ConvoyRankMsg;
        }

        /** Properties of a C_CONVOY_STAR. */
        interface IC_CONVOY_STAR {
        }

        /** Represents a C_CONVOY_STAR. */
        class C_CONVOY_STAR implements IC_CONVOY_STAR {

            /**
             * Constructs a new C_CONVOY_STAR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CONVOY_STAR);

            /**
             * Encodes the specified C_CONVOY_STAR message. Does not implicitly {@link com.message.C_CONVOY_STAR.verify|verify} messages.
             * @param message C_CONVOY_STAR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CONVOY_STAR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CONVOY_STAR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CONVOY_STAR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CONVOY_STAR;
        }

        /** Properties of a S_CONVOY_STAR. */
        interface IS_CONVOY_STAR {

            /** S_CONVOY_STAR convoyMsg */
            convoyMsg?: (com.message.IConvoyMsg|null);
        }

        /** Represents a S_CONVOY_STAR. */
        class S_CONVOY_STAR implements IS_CONVOY_STAR {

            /**
             * Constructs a new S_CONVOY_STAR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CONVOY_STAR);

            /** S_CONVOY_STAR convoyMsg. */
            public convoyMsg?: (com.message.IConvoyMsg|null);

            /**
             * Encodes the specified S_CONVOY_STAR message. Does not implicitly {@link com.message.S_CONVOY_STAR.verify|verify} messages.
             * @param message S_CONVOY_STAR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CONVOY_STAR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CONVOY_STAR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CONVOY_STAR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CONVOY_STAR;
        }

        /** Properties of a C_GET_CONVOY_REWARD. */
        interface IC_GET_CONVOY_REWARD {
        }

        /** Represents a C_GET_CONVOY_REWARD. */
        class C_GET_CONVOY_REWARD implements IC_GET_CONVOY_REWARD {

            /**
             * Constructs a new C_GET_CONVOY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CONVOY_REWARD);

            /**
             * Encodes the specified C_GET_CONVOY_REWARD message. Does not implicitly {@link com.message.C_GET_CONVOY_REWARD.verify|verify} messages.
             * @param message C_GET_CONVOY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CONVOY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CONVOY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CONVOY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CONVOY_REWARD;
        }

        /** Properties of a S_GET_CONVOY_REWARD. */
        interface IS_GET_CONVOY_REWARD {

            /** S_GET_CONVOY_REWARD convoyMsg */
            convoyMsg?: (com.message.IConvoyMsg|null);

            /** S_GET_CONVOY_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_GET_CONVOY_REWARD. */
        class S_GET_CONVOY_REWARD implements IS_GET_CONVOY_REWARD {

            /**
             * Constructs a new S_GET_CONVOY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CONVOY_REWARD);

            /** S_GET_CONVOY_REWARD convoyMsg. */
            public convoyMsg?: (com.message.IConvoyMsg|null);

            /** S_GET_CONVOY_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_GET_CONVOY_REWARD message. Does not implicitly {@link com.message.S_GET_CONVOY_REWARD.verify|verify} messages.
             * @param message S_GET_CONVOY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CONVOY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CONVOY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CONVOY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CONVOY_REWARD;
        }

        /** Properties of a C_CONVOY_REFRESH. */
        interface IC_CONVOY_REFRESH {

            /** C_CONVOY_REFRESH type */
            type?: (number|null);
        }

        /** Represents a C_CONVOY_REFRESH. */
        class C_CONVOY_REFRESH implements IC_CONVOY_REFRESH {

            /**
             * Constructs a new C_CONVOY_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CONVOY_REFRESH);

            /** C_CONVOY_REFRESH type. */
            public type: number;

            /**
             * Encodes the specified C_CONVOY_REFRESH message. Does not implicitly {@link com.message.C_CONVOY_REFRESH.verify|verify} messages.
             * @param message C_CONVOY_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CONVOY_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CONVOY_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CONVOY_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CONVOY_REFRESH;
        }

        /** Properties of a S_CONVOY_REFRESH. */
        interface IS_CONVOY_REFRESH {

            /** S_CONVOY_REFRESH convoyMsg */
            convoyMsg?: (com.message.IConvoyMsg|null);
        }

        /** Represents a S_CONVOY_REFRESH. */
        class S_CONVOY_REFRESH implements IS_CONVOY_REFRESH {

            /**
             * Constructs a new S_CONVOY_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CONVOY_REFRESH);

            /** S_CONVOY_REFRESH convoyMsg. */
            public convoyMsg?: (com.message.IConvoyMsg|null);

            /**
             * Encodes the specified S_CONVOY_REFRESH message. Does not implicitly {@link com.message.S_CONVOY_REFRESH.verify|verify} messages.
             * @param message S_CONVOY_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CONVOY_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CONVOY_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CONVOY_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CONVOY_REFRESH;
        }

        /** Properties of a C_GET_CONVOY_LOG. */
        interface IC_GET_CONVOY_LOG {
        }

        /** Represents a C_GET_CONVOY_LOG. */
        class C_GET_CONVOY_LOG implements IC_GET_CONVOY_LOG {

            /**
             * Constructs a new C_GET_CONVOY_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CONVOY_LOG);

            /**
             * Encodes the specified C_GET_CONVOY_LOG message. Does not implicitly {@link com.message.C_GET_CONVOY_LOG.verify|verify} messages.
             * @param message C_GET_CONVOY_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CONVOY_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CONVOY_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CONVOY_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CONVOY_LOG;
        }

        /** Properties of a S_GET_CONVOY_LOG. */
        interface IS_GET_CONVOY_LOG {

            /** S_GET_CONVOY_LOG logList */
            logList?: (com.message.IConvoyLogMsg[]|null);
        }

        /** Represents a S_GET_CONVOY_LOG. */
        class S_GET_CONVOY_LOG implements IS_GET_CONVOY_LOG {

            /**
             * Constructs a new S_GET_CONVOY_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CONVOY_LOG);

            /** S_GET_CONVOY_LOG logList. */
            public logList: com.message.IConvoyLogMsg[];

            /**
             * Encodes the specified S_GET_CONVOY_LOG message. Does not implicitly {@link com.message.S_GET_CONVOY_LOG.verify|verify} messages.
             * @param message S_GET_CONVOY_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CONVOY_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CONVOY_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CONVOY_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CONVOY_LOG;
        }

        /** Properties of a ConvoyLogMsg. */
        interface IConvoyLogMsg {

            /** ConvoyLogMsg playerId */
            playerId?: (number|Long|null);

            /** ConvoyLogMsg name */
            name?: (string|null);

            /** ConvoyLogMsg targetId */
            targetId?: (number|Long|null);

            /** ConvoyLogMsg targetName */
            targetName?: (string|null);

            /** ConvoyLogMsg type */
            type?: (number|null);

            /** ConvoyLogMsg logTime */
            logTime?: (number|Long|null);

            /** ConvoyLogMsg info */
            info?: (string|null);

            /** ConvoyLogMsg operate */
            operate?: (number|null);
        }

        /** Represents a ConvoyLogMsg. */
        class ConvoyLogMsg implements IConvoyLogMsg {

            /**
             * Constructs a new ConvoyLogMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IConvoyLogMsg);

            /** ConvoyLogMsg playerId. */
            public playerId: (number|Long);

            /** ConvoyLogMsg name. */
            public name: string;

            /** ConvoyLogMsg targetId. */
            public targetId: (number|Long);

            /** ConvoyLogMsg targetName. */
            public targetName: string;

            /** ConvoyLogMsg type. */
            public type: number;

            /** ConvoyLogMsg logTime. */
            public logTime: (number|Long);

            /** ConvoyLogMsg info. */
            public info: string;

            /** ConvoyLogMsg operate. */
            public operate: number;

            /**
             * Encodes the specified ConvoyLogMsg message. Does not implicitly {@link com.message.ConvoyLogMsg.verify|verify} messages.
             * @param message ConvoyLogMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IConvoyLogMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ConvoyLogMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ConvoyLogMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ConvoyLogMsg;
        }

        /** Properties of a CROSS_C_SERVER_REGISTER. */
        interface ICROSS_C_SERVER_REGISTER {

            /** CROSS_C_SERVER_REGISTER serverId */
            serverId?: (number|null);

            /** CROSS_C_SERVER_REGISTER platName */
            platName?: (string|null);

            /** CROSS_C_SERVER_REGISTER mergeServerIds */
            mergeServerIds?: (string|null);
        }

        /** Represents a CROSS_C_SERVER_REGISTER. */
        class CROSS_C_SERVER_REGISTER implements ICROSS_C_SERVER_REGISTER {

            /**
             * Constructs a new CROSS_C_SERVER_REGISTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SERVER_REGISTER);

            /** CROSS_C_SERVER_REGISTER serverId. */
            public serverId: number;

            /** CROSS_C_SERVER_REGISTER platName. */
            public platName: string;

            /** CROSS_C_SERVER_REGISTER mergeServerIds. */
            public mergeServerIds: string;

            /**
             * Encodes the specified CROSS_C_SERVER_REGISTER message. Does not implicitly {@link com.message.CROSS_C_SERVER_REGISTER.verify|verify} messages.
             * @param message CROSS_C_SERVER_REGISTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SERVER_REGISTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SERVER_REGISTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SERVER_REGISTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SERVER_REGISTER;
        }

        /** Properties of a CROSS_S_SERVER_REGISTER. */
        interface ICROSS_S_SERVER_REGISTER {

            /** CROSS_S_SERVER_REGISTER serverId */
            serverId?: (number|null);
        }

        /** Represents a CROSS_S_SERVER_REGISTER. */
        class CROSS_S_SERVER_REGISTER implements ICROSS_S_SERVER_REGISTER {

            /**
             * Constructs a new CROSS_S_SERVER_REGISTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SERVER_REGISTER);

            /** CROSS_S_SERVER_REGISTER serverId. */
            public serverId: number;

            /**
             * Encodes the specified CROSS_S_SERVER_REGISTER message. Does not implicitly {@link com.message.CROSS_S_SERVER_REGISTER.verify|verify} messages.
             * @param message CROSS_S_SERVER_REGISTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SERVER_REGISTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SERVER_REGISTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SERVER_REGISTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SERVER_REGISTER;
        }

        /** Properties of a CROSS_C_HEART_BEAT. */
        interface ICROSS_C_HEART_BEAT {
        }

        /** Represents a CROSS_C_HEART_BEAT. */
        class CROSS_C_HEART_BEAT implements ICROSS_C_HEART_BEAT {

            /**
             * Constructs a new CROSS_C_HEART_BEAT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_HEART_BEAT);

            /**
             * Encodes the specified CROSS_C_HEART_BEAT message. Does not implicitly {@link com.message.CROSS_C_HEART_BEAT.verify|verify} messages.
             * @param message CROSS_C_HEART_BEAT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_HEART_BEAT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_HEART_BEAT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_HEART_BEAT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_HEART_BEAT;
        }

        /** Properties of a CROSS_S_HEART_BEAT. */
        interface ICROSS_S_HEART_BEAT {
        }

        /** Represents a CROSS_S_HEART_BEAT. */
        class CROSS_S_HEART_BEAT implements ICROSS_S_HEART_BEAT {

            /**
             * Constructs a new CROSS_S_HEART_BEAT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_HEART_BEAT);

            /**
             * Encodes the specified CROSS_S_HEART_BEAT message. Does not implicitly {@link com.message.CROSS_S_HEART_BEAT.verify|verify} messages.
             * @param message CROSS_S_HEART_BEAT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_HEART_BEAT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_HEART_BEAT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_HEART_BEAT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_HEART_BEAT;
        }

        /** Properties of a CROSS_C_SERVER_PUSH. */
        interface ICROSS_C_SERVER_PUSH {

            /** CROSS_C_SERVER_PUSH serverId */
            serverId?: (number|null);
        }

        /** Represents a CROSS_C_SERVER_PUSH. */
        class CROSS_C_SERVER_PUSH implements ICROSS_C_SERVER_PUSH {

            /**
             * Constructs a new CROSS_C_SERVER_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SERVER_PUSH);

            /** CROSS_C_SERVER_PUSH serverId. */
            public serverId: number;

            /**
             * Encodes the specified CROSS_C_SERVER_PUSH message. Does not implicitly {@link com.message.CROSS_C_SERVER_PUSH.verify|verify} messages.
             * @param message CROSS_C_SERVER_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SERVER_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SERVER_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SERVER_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SERVER_PUSH;
        }

        /** Properties of a CROSS_S_SERVER_PUSH. */
        interface ICROSS_S_SERVER_PUSH {

            /** CROSS_S_SERVER_PUSH serverId */
            serverId?: (number|null);

            /** CROSS_S_SERVER_PUSH sendRankData */
            sendRankData?: (number|null);
        }

        /** Represents a CROSS_S_SERVER_PUSH. */
        class CROSS_S_SERVER_PUSH implements ICROSS_S_SERVER_PUSH {

            /**
             * Constructs a new CROSS_S_SERVER_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SERVER_PUSH);

            /** CROSS_S_SERVER_PUSH serverId. */
            public serverId: number;

            /** CROSS_S_SERVER_PUSH sendRankData. */
            public sendRankData: number;

            /**
             * Encodes the specified CROSS_S_SERVER_PUSH message. Does not implicitly {@link com.message.CROSS_S_SERVER_PUSH.verify|verify} messages.
             * @param message CROSS_S_SERVER_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SERVER_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SERVER_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SERVER_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SERVER_PUSH;
        }

        /** Properties of a CROSS_C_HTTP_DATA. */
        interface ICROSS_C_HTTP_DATA {

            /** CROSS_C_HTTP_DATA serverId */
            serverId?: (number|null);

            /** CROSS_C_HTTP_DATA platName */
            platName?: (string|null);

            /** CROSS_C_HTTP_DATA httpType */
            httpType?: (number|null);

            /** CROSS_C_HTTP_DATA httpData */
            httpData?: (string|null);
        }

        /** Represents a CROSS_C_HTTP_DATA. */
        class CROSS_C_HTTP_DATA implements ICROSS_C_HTTP_DATA {

            /**
             * Constructs a new CROSS_C_HTTP_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_HTTP_DATA);

            /** CROSS_C_HTTP_DATA serverId. */
            public serverId: number;

            /** CROSS_C_HTTP_DATA platName. */
            public platName: string;

            /** CROSS_C_HTTP_DATA httpType. */
            public httpType: number;

            /** CROSS_C_HTTP_DATA httpData. */
            public httpData: string;

            /**
             * Encodes the specified CROSS_C_HTTP_DATA message. Does not implicitly {@link com.message.CROSS_C_HTTP_DATA.verify|verify} messages.
             * @param message CROSS_C_HTTP_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_HTTP_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_HTTP_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_HTTP_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_HTTP_DATA;
        }

        /** Properties of a C_GET_CROSS_BOSS_NEW_INFO. */
        interface IC_GET_CROSS_BOSS_NEW_INFO {
        }

        /** Represents a C_GET_CROSS_BOSS_NEW_INFO. */
        class C_GET_CROSS_BOSS_NEW_INFO implements IC_GET_CROSS_BOSS_NEW_INFO {

            /**
             * Constructs a new C_GET_CROSS_BOSS_NEW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CROSS_BOSS_NEW_INFO);

            /**
             * Encodes the specified C_GET_CROSS_BOSS_NEW_INFO message. Does not implicitly {@link com.message.C_GET_CROSS_BOSS_NEW_INFO.verify|verify} messages.
             * @param message C_GET_CROSS_BOSS_NEW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CROSS_BOSS_NEW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CROSS_BOSS_NEW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CROSS_BOSS_NEW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CROSS_BOSS_NEW_INFO;
        }

        /** Properties of a S_GET_CROSS_BOSS_NEW_INFO. */
        interface IS_GET_CROSS_BOSS_NEW_INFO {

            /** S_GET_CROSS_BOSS_NEW_INFO playerBossMsg */
            playerBossMsg?: (com.message.IPlayerCrossBossMsg|null);
        }

        /** Represents a S_GET_CROSS_BOSS_NEW_INFO. */
        class S_GET_CROSS_BOSS_NEW_INFO implements IS_GET_CROSS_BOSS_NEW_INFO {

            /**
             * Constructs a new S_GET_CROSS_BOSS_NEW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CROSS_BOSS_NEW_INFO);

            /** S_GET_CROSS_BOSS_NEW_INFO playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerCrossBossMsg|null);

            /**
             * Encodes the specified S_GET_CROSS_BOSS_NEW_INFO message. Does not implicitly {@link com.message.S_GET_CROSS_BOSS_NEW_INFO.verify|verify} messages.
             * @param message S_GET_CROSS_BOSS_NEW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CROSS_BOSS_NEW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CROSS_BOSS_NEW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CROSS_BOSS_NEW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CROSS_BOSS_NEW_INFO;
        }

        /** Properties of a C_GET_CROSS_BOSS_NEW_RECORD. */
        interface IC_GET_CROSS_BOSS_NEW_RECORD {

            /** C_GET_CROSS_BOSS_NEW_RECORD chapterId */
            chapterId?: (number|null);
        }

        /** Represents a C_GET_CROSS_BOSS_NEW_RECORD. */
        class C_GET_CROSS_BOSS_NEW_RECORD implements IC_GET_CROSS_BOSS_NEW_RECORD {

            /**
             * Constructs a new C_GET_CROSS_BOSS_NEW_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CROSS_BOSS_NEW_RECORD);

            /** C_GET_CROSS_BOSS_NEW_RECORD chapterId. */
            public chapterId: number;

            /**
             * Encodes the specified C_GET_CROSS_BOSS_NEW_RECORD message. Does not implicitly {@link com.message.C_GET_CROSS_BOSS_NEW_RECORD.verify|verify} messages.
             * @param message C_GET_CROSS_BOSS_NEW_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CROSS_BOSS_NEW_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CROSS_BOSS_NEW_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CROSS_BOSS_NEW_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CROSS_BOSS_NEW_RECORD;
        }

        /** Properties of a S_GET_CROSS_BOSS_NEW_RECORD. */
        interface IS_GET_CROSS_BOSS_NEW_RECORD {

            /** S_GET_CROSS_BOSS_NEW_RECORD chapterId */
            chapterId?: (number|null);

            /** S_GET_CROSS_BOSS_NEW_RECORD bossMsg */
            bossMsg?: (com.message.ICrossBossMsg[]|null);

            /** S_GET_CROSS_BOSS_NEW_RECORD bossKillMsg */
            bossKillMsg?: (com.message.ICrossBossKillMsg[]|null);

            /** S_GET_CROSS_BOSS_NEW_RECORD myAscBossId */
            myAscBossId?: (number|null);
        }

        /** Represents a S_GET_CROSS_BOSS_NEW_RECORD. */
        class S_GET_CROSS_BOSS_NEW_RECORD implements IS_GET_CROSS_BOSS_NEW_RECORD {

            /**
             * Constructs a new S_GET_CROSS_BOSS_NEW_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CROSS_BOSS_NEW_RECORD);

            /** S_GET_CROSS_BOSS_NEW_RECORD chapterId. */
            public chapterId: number;

            /** S_GET_CROSS_BOSS_NEW_RECORD bossMsg. */
            public bossMsg: com.message.ICrossBossMsg[];

            /** S_GET_CROSS_BOSS_NEW_RECORD bossKillMsg. */
            public bossKillMsg: com.message.ICrossBossKillMsg[];

            /** S_GET_CROSS_BOSS_NEW_RECORD myAscBossId. */
            public myAscBossId: number;

            /**
             * Encodes the specified S_GET_CROSS_BOSS_NEW_RECORD message. Does not implicitly {@link com.message.S_GET_CROSS_BOSS_NEW_RECORD.verify|verify} messages.
             * @param message S_GET_CROSS_BOSS_NEW_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CROSS_BOSS_NEW_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CROSS_BOSS_NEW_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CROSS_BOSS_NEW_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CROSS_BOSS_NEW_RECORD;
        }

        /** Properties of a PlayerCrossBossMsg. */
        interface IPlayerCrossBossMsg {

            /** PlayerCrossBossMsg acsCount */
            acsCount?: (number|null);

            /** PlayerCrossBossMsg findTimes */
            findTimes?: (number|null);

            /** PlayerCrossBossMsg addFindTime */
            addFindTime?: (number|Long|null);
        }

        /** Represents a PlayerCrossBossMsg. */
        class PlayerCrossBossMsg implements IPlayerCrossBossMsg {

            /**
             * Constructs a new PlayerCrossBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerCrossBossMsg);

            /** PlayerCrossBossMsg acsCount. */
            public acsCount: number;

            /** PlayerCrossBossMsg findTimes. */
            public findTimes: number;

            /** PlayerCrossBossMsg addFindTime. */
            public addFindTime: (number|Long);

            /**
             * Encodes the specified PlayerCrossBossMsg message. Does not implicitly {@link com.message.PlayerCrossBossMsg.verify|verify} messages.
             * @param message PlayerCrossBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerCrossBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerCrossBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerCrossBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerCrossBossMsg;
        }

        /** Properties of a CrossBossMsg. */
        interface ICrossBossMsg {

            /** CrossBossMsg bossId */
            bossId?: (number|null);

            /** CrossBossMsg bossHp */
            bossHp?: (number|Long|null);

            /** CrossBossMsg bossMaxHp */
            bossMaxHp?: (number|Long|null);

            /** CrossBossMsg runTime */
            runTime?: (number|Long|null);

            /** CrossBossMsg nextStartTime */
            nextStartTime?: (number|Long|null);

            /** CrossBossMsg damageRankMg */
            damageRankMg?: (com.message.ICroosBossDamageRankMsg[]|null);
        }

        /** Represents a CrossBossMsg. */
        class CrossBossMsg implements ICrossBossMsg {

            /**
             * Constructs a new CrossBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICrossBossMsg);

            /** CrossBossMsg bossId. */
            public bossId: number;

            /** CrossBossMsg bossHp. */
            public bossHp: (number|Long);

            /** CrossBossMsg bossMaxHp. */
            public bossMaxHp: (number|Long);

            /** CrossBossMsg runTime. */
            public runTime: (number|Long);

            /** CrossBossMsg nextStartTime. */
            public nextStartTime: (number|Long);

            /** CrossBossMsg damageRankMg. */
            public damageRankMg: com.message.ICroosBossDamageRankMsg[];

            /**
             * Encodes the specified CrossBossMsg message. Does not implicitly {@link com.message.CrossBossMsg.verify|verify} messages.
             * @param message CrossBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICrossBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CrossBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrossBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CrossBossMsg;
        }

        /** Properties of a CrossBossKillMsg. */
        interface ICrossBossKillMsg {

            /** CrossBossKillMsg bossId */
            bossId?: (number|null);

            /** CrossBossKillMsg playerId */
            playerId?: (number|Long|null);

            /** CrossBossKillMsg playerName */
            playerName?: (string|null);

            /** CrossBossKillMsg killTime */
            killTime?: (number|Long|null);
        }

        /** Represents a CrossBossKillMsg. */
        class CrossBossKillMsg implements ICrossBossKillMsg {

            /**
             * Constructs a new CrossBossKillMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICrossBossKillMsg);

            /** CrossBossKillMsg bossId. */
            public bossId: number;

            /** CrossBossKillMsg playerId. */
            public playerId: (number|Long);

            /** CrossBossKillMsg playerName. */
            public playerName: string;

            /** CrossBossKillMsg killTime. */
            public killTime: (number|Long);

            /**
             * Encodes the specified CrossBossKillMsg message. Does not implicitly {@link com.message.CrossBossKillMsg.verify|verify} messages.
             * @param message CrossBossKillMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICrossBossKillMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CrossBossKillMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrossBossKillMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CrossBossKillMsg;
        }

        /** Properties of a CrossLittleMsg. */
        interface ICrossLittleMsg {

            /** CrossLittleMsg instanceId */
            instanceId?: (number|null);

            /** CrossLittleMsg littleHp */
            littleHp?: (number|Long|null);

            /** CrossLittleMsg littleMaxHp */
            littleMaxHp?: (number|Long|null);
        }

        /** Represents a CrossLittleMsg. */
        class CrossLittleMsg implements ICrossLittleMsg {

            /**
             * Constructs a new CrossLittleMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICrossLittleMsg);

            /** CrossLittleMsg instanceId. */
            public instanceId: number;

            /** CrossLittleMsg littleHp. */
            public littleHp: (number|Long);

            /** CrossLittleMsg littleMaxHp. */
            public littleMaxHp: (number|Long);

            /**
             * Encodes the specified CrossLittleMsg message. Does not implicitly {@link com.message.CrossLittleMsg.verify|verify} messages.
             * @param message CrossLittleMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICrossLittleMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CrossLittleMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrossLittleMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CrossLittleMsg;
        }

        /** Properties of a CroosBossDamageRankMsg. */
        interface ICroosBossDamageRankMsg {

            /** CroosBossDamageRankMsg rank */
            rank?: (number|null);

            /** CroosBossDamageRankMsg playerId */
            playerId?: (number|Long|null);

            /** CroosBossDamageRankMsg playerName */
            playerName?: (string|null);

            /** CroosBossDamageRankMsg damage */
            damage?: (number|Long|null);

            /** CroosBossDamageRankMsg serverId */
            serverId?: (number|null);
        }

        /** Represents a CroosBossDamageRankMsg. */
        class CroosBossDamageRankMsg implements ICroosBossDamageRankMsg {

            /**
             * Constructs a new CroosBossDamageRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICroosBossDamageRankMsg);

            /** CroosBossDamageRankMsg rank. */
            public rank: number;

            /** CroosBossDamageRankMsg playerId. */
            public playerId: (number|Long);

            /** CroosBossDamageRankMsg playerName. */
            public playerName: string;

            /** CroosBossDamageRankMsg damage. */
            public damage: (number|Long);

            /** CroosBossDamageRankMsg serverId. */
            public serverId: number;

            /**
             * Encodes the specified CroosBossDamageRankMsg message. Does not implicitly {@link com.message.CroosBossDamageRankMsg.verify|verify} messages.
             * @param message CroosBossDamageRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICroosBossDamageRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CroosBossDamageRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CroosBossDamageRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CroosBossDamageRankMsg;
        }

        /** Properties of a C_GET_CROSS_BOSS_NEW_FIND. */
        interface IC_GET_CROSS_BOSS_NEW_FIND {

            /** C_GET_CROSS_BOSS_NEW_FIND chapterId */
            chapterId?: (number|null);
        }

        /** Represents a C_GET_CROSS_BOSS_NEW_FIND. */
        class C_GET_CROSS_BOSS_NEW_FIND implements IC_GET_CROSS_BOSS_NEW_FIND {

            /**
             * Constructs a new C_GET_CROSS_BOSS_NEW_FIND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CROSS_BOSS_NEW_FIND);

            /** C_GET_CROSS_BOSS_NEW_FIND chapterId. */
            public chapterId: number;

            /**
             * Encodes the specified C_GET_CROSS_BOSS_NEW_FIND message. Does not implicitly {@link com.message.C_GET_CROSS_BOSS_NEW_FIND.verify|verify} messages.
             * @param message C_GET_CROSS_BOSS_NEW_FIND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CROSS_BOSS_NEW_FIND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CROSS_BOSS_NEW_FIND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CROSS_BOSS_NEW_FIND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CROSS_BOSS_NEW_FIND;
        }

        /** Properties of a S_GET_CROSS_BOSS_NEW_FIND. */
        interface IS_GET_CROSS_BOSS_NEW_FIND {

            /** S_GET_CROSS_BOSS_NEW_FIND chapterId */
            chapterId?: (number|null);

            /** S_GET_CROSS_BOSS_NEW_FIND bossMsg */
            bossMsg?: (com.message.ICrossBossMsg|null);

            /** S_GET_CROSS_BOSS_NEW_FIND instanceId */
            instanceId?: (number|null);

            /** S_GET_CROSS_BOSS_NEW_FIND littleMsg */
            littleMsg?: (com.message.ICrossLittleMsg|null);

            /** S_GET_CROSS_BOSS_NEW_FIND playerBossMsg */
            playerBossMsg?: (com.message.IPlayerCrossBossMsg|null);
        }

        /** Represents a S_GET_CROSS_BOSS_NEW_FIND. */
        class S_GET_CROSS_BOSS_NEW_FIND implements IS_GET_CROSS_BOSS_NEW_FIND {

            /**
             * Constructs a new S_GET_CROSS_BOSS_NEW_FIND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CROSS_BOSS_NEW_FIND);

            /** S_GET_CROSS_BOSS_NEW_FIND chapterId. */
            public chapterId: number;

            /** S_GET_CROSS_BOSS_NEW_FIND bossMsg. */
            public bossMsg?: (com.message.ICrossBossMsg|null);

            /** S_GET_CROSS_BOSS_NEW_FIND instanceId. */
            public instanceId: number;

            /** S_GET_CROSS_BOSS_NEW_FIND littleMsg. */
            public littleMsg?: (com.message.ICrossLittleMsg|null);

            /** S_GET_CROSS_BOSS_NEW_FIND playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerCrossBossMsg|null);

            /**
             * Encodes the specified S_GET_CROSS_BOSS_NEW_FIND message. Does not implicitly {@link com.message.S_GET_CROSS_BOSS_NEW_FIND.verify|verify} messages.
             * @param message S_GET_CROSS_BOSS_NEW_FIND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CROSS_BOSS_NEW_FIND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CROSS_BOSS_NEW_FIND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CROSS_BOSS_NEW_FIND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CROSS_BOSS_NEW_FIND;
        }

        /** Properties of a C_GET_CROSS_BOSS_ONE_INFO. */
        interface IC_GET_CROSS_BOSS_ONE_INFO {

            /** C_GET_CROSS_BOSS_ONE_INFO instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_GET_CROSS_BOSS_ONE_INFO. */
        class C_GET_CROSS_BOSS_ONE_INFO implements IC_GET_CROSS_BOSS_ONE_INFO {

            /**
             * Constructs a new C_GET_CROSS_BOSS_ONE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CROSS_BOSS_ONE_INFO);

            /** C_GET_CROSS_BOSS_ONE_INFO instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_GET_CROSS_BOSS_ONE_INFO message. Does not implicitly {@link com.message.C_GET_CROSS_BOSS_ONE_INFO.verify|verify} messages.
             * @param message C_GET_CROSS_BOSS_ONE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CROSS_BOSS_ONE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CROSS_BOSS_ONE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CROSS_BOSS_ONE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CROSS_BOSS_ONE_INFO;
        }

        /** Properties of a S_GET_CROSS_BOSS_ONE_INFO. */
        interface IS_GET_CROSS_BOSS_ONE_INFO {

            /** S_GET_CROSS_BOSS_ONE_INFO bossMsg */
            bossMsg?: (com.message.ICrossBossMsg|null);

            /** S_GET_CROSS_BOSS_ONE_INFO instanceId */
            instanceId?: (number|null);

            /** S_GET_CROSS_BOSS_ONE_INFO littleMsg */
            littleMsg?: (com.message.ICrossLittleMsg|null);

            /** S_GET_CROSS_BOSS_ONE_INFO playerBossMsg */
            playerBossMsg?: (com.message.IPlayerCrossBossMsg|null);
        }

        /** Represents a S_GET_CROSS_BOSS_ONE_INFO. */
        class S_GET_CROSS_BOSS_ONE_INFO implements IS_GET_CROSS_BOSS_ONE_INFO {

            /**
             * Constructs a new S_GET_CROSS_BOSS_ONE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CROSS_BOSS_ONE_INFO);

            /** S_GET_CROSS_BOSS_ONE_INFO bossMsg. */
            public bossMsg?: (com.message.ICrossBossMsg|null);

            /** S_GET_CROSS_BOSS_ONE_INFO instanceId. */
            public instanceId: number;

            /** S_GET_CROSS_BOSS_ONE_INFO littleMsg. */
            public littleMsg?: (com.message.ICrossLittleMsg|null);

            /** S_GET_CROSS_BOSS_ONE_INFO playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerCrossBossMsg|null);

            /**
             * Encodes the specified S_GET_CROSS_BOSS_ONE_INFO message. Does not implicitly {@link com.message.S_GET_CROSS_BOSS_ONE_INFO.verify|verify} messages.
             * @param message S_GET_CROSS_BOSS_ONE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CROSS_BOSS_ONE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CROSS_BOSS_ONE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CROSS_BOSS_ONE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CROSS_BOSS_ONE_INFO;
        }

        /** Properties of a C_GET_CROSS_BOSS_NEW_EXIT. */
        interface IC_GET_CROSS_BOSS_NEW_EXIT {
        }

        /** Represents a C_GET_CROSS_BOSS_NEW_EXIT. */
        class C_GET_CROSS_BOSS_NEW_EXIT implements IC_GET_CROSS_BOSS_NEW_EXIT {

            /**
             * Constructs a new C_GET_CROSS_BOSS_NEW_EXIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CROSS_BOSS_NEW_EXIT);

            /**
             * Encodes the specified C_GET_CROSS_BOSS_NEW_EXIT message. Does not implicitly {@link com.message.C_GET_CROSS_BOSS_NEW_EXIT.verify|verify} messages.
             * @param message C_GET_CROSS_BOSS_NEW_EXIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CROSS_BOSS_NEW_EXIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CROSS_BOSS_NEW_EXIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CROSS_BOSS_NEW_EXIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CROSS_BOSS_NEW_EXIT;
        }

        /** Properties of a S_GET_CROSS_BOSS_NEW_EXIT. */
        interface IS_GET_CROSS_BOSS_NEW_EXIT {
        }

        /** Represents a S_GET_CROSS_BOSS_NEW_EXIT. */
        class S_GET_CROSS_BOSS_NEW_EXIT implements IS_GET_CROSS_BOSS_NEW_EXIT {

            /**
             * Constructs a new S_GET_CROSS_BOSS_NEW_EXIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CROSS_BOSS_NEW_EXIT);

            /**
             * Encodes the specified S_GET_CROSS_BOSS_NEW_EXIT message. Does not implicitly {@link com.message.S_GET_CROSS_BOSS_NEW_EXIT.verify|verify} messages.
             * @param message S_GET_CROSS_BOSS_NEW_EXIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CROSS_BOSS_NEW_EXIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CROSS_BOSS_NEW_EXIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CROSS_BOSS_NEW_EXIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CROSS_BOSS_NEW_EXIT;
        }

        /** Properties of a S_SYNC_CROSS_BOSS_KILL. */
        interface IS_SYNC_CROSS_BOSS_KILL {

            /** S_SYNC_CROSS_BOSS_KILL chapterId */
            chapterId?: (number|null);

            /** S_SYNC_CROSS_BOSS_KILL instanceId */
            instanceId?: (number|null);
        }

        /** Represents a S_SYNC_CROSS_BOSS_KILL. */
        class S_SYNC_CROSS_BOSS_KILL implements IS_SYNC_CROSS_BOSS_KILL {

            /**
             * Constructs a new S_SYNC_CROSS_BOSS_KILL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_CROSS_BOSS_KILL);

            /** S_SYNC_CROSS_BOSS_KILL chapterId. */
            public chapterId: number;

            /** S_SYNC_CROSS_BOSS_KILL instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified S_SYNC_CROSS_BOSS_KILL message. Does not implicitly {@link com.message.S_SYNC_CROSS_BOSS_KILL.verify|verify} messages.
             * @param message S_SYNC_CROSS_BOSS_KILL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_CROSS_BOSS_KILL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_CROSS_BOSS_KILL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_CROSS_BOSS_KILL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_CROSS_BOSS_KILL;
        }

        /** Properties of a CROSS_C_CROSS_BOSS_NEW_RECORD. */
        interface ICROSS_C_CROSS_BOSS_NEW_RECORD {

            /** CROSS_C_CROSS_BOSS_NEW_RECORD chapterId */
            chapterId?: (number|null);

            /** CROSS_C_CROSS_BOSS_NEW_RECORD playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_CROSS_BOSS_NEW_RECORD. */
        class CROSS_C_CROSS_BOSS_NEW_RECORD implements ICROSS_C_CROSS_BOSS_NEW_RECORD {

            /**
             * Constructs a new CROSS_C_CROSS_BOSS_NEW_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_CROSS_BOSS_NEW_RECORD);

            /** CROSS_C_CROSS_BOSS_NEW_RECORD chapterId. */
            public chapterId: number;

            /** CROSS_C_CROSS_BOSS_NEW_RECORD playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_CROSS_BOSS_NEW_RECORD message. Does not implicitly {@link com.message.CROSS_C_CROSS_BOSS_NEW_RECORD.verify|verify} messages.
             * @param message CROSS_C_CROSS_BOSS_NEW_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_CROSS_BOSS_NEW_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_CROSS_BOSS_NEW_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_CROSS_BOSS_NEW_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_CROSS_BOSS_NEW_RECORD;
        }

        /** Properties of a CROSS_S_CROSS_BOSS_NEW_RECORD. */
        interface ICROSS_S_CROSS_BOSS_NEW_RECORD {

            /** CROSS_S_CROSS_BOSS_NEW_RECORD chapterId */
            chapterId?: (number|null);

            /** CROSS_S_CROSS_BOSS_NEW_RECORD bossMsg */
            bossMsg?: (com.message.ICrossBossMsg[]|null);

            /** CROSS_S_CROSS_BOSS_NEW_RECORD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_CROSS_BOSS_NEW_RECORD bossKillMsg */
            bossKillMsg?: (com.message.ICrossBossKillMsg[]|null);

            /** CROSS_S_CROSS_BOSS_NEW_RECORD myAscBossId */
            myAscBossId?: (number|null);
        }

        /** Represents a CROSS_S_CROSS_BOSS_NEW_RECORD. */
        class CROSS_S_CROSS_BOSS_NEW_RECORD implements ICROSS_S_CROSS_BOSS_NEW_RECORD {

            /**
             * Constructs a new CROSS_S_CROSS_BOSS_NEW_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_CROSS_BOSS_NEW_RECORD);

            /** CROSS_S_CROSS_BOSS_NEW_RECORD chapterId. */
            public chapterId: number;

            /** CROSS_S_CROSS_BOSS_NEW_RECORD bossMsg. */
            public bossMsg: com.message.ICrossBossMsg[];

            /** CROSS_S_CROSS_BOSS_NEW_RECORD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_CROSS_BOSS_NEW_RECORD bossKillMsg. */
            public bossKillMsg: com.message.ICrossBossKillMsg[];

            /** CROSS_S_CROSS_BOSS_NEW_RECORD myAscBossId. */
            public myAscBossId: number;

            /**
             * Encodes the specified CROSS_S_CROSS_BOSS_NEW_RECORD message. Does not implicitly {@link com.message.CROSS_S_CROSS_BOSS_NEW_RECORD.verify|verify} messages.
             * @param message CROSS_S_CROSS_BOSS_NEW_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_CROSS_BOSS_NEW_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_CROSS_BOSS_NEW_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_CROSS_BOSS_NEW_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_CROSS_BOSS_NEW_RECORD;
        }

        /** Properties of a CROSS_C_CROSS_BOSS_NEW_FIND. */
        interface ICROSS_C_CROSS_BOSS_NEW_FIND {

            /** CROSS_C_CROSS_BOSS_NEW_FIND chapterId */
            chapterId?: (number|null);

            /** CROSS_C_CROSS_BOSS_NEW_FIND playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_CROSS_BOSS_NEW_FIND. */
        class CROSS_C_CROSS_BOSS_NEW_FIND implements ICROSS_C_CROSS_BOSS_NEW_FIND {

            /**
             * Constructs a new CROSS_C_CROSS_BOSS_NEW_FIND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_CROSS_BOSS_NEW_FIND);

            /** CROSS_C_CROSS_BOSS_NEW_FIND chapterId. */
            public chapterId: number;

            /** CROSS_C_CROSS_BOSS_NEW_FIND playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_CROSS_BOSS_NEW_FIND message. Does not implicitly {@link com.message.CROSS_C_CROSS_BOSS_NEW_FIND.verify|verify} messages.
             * @param message CROSS_C_CROSS_BOSS_NEW_FIND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_CROSS_BOSS_NEW_FIND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_CROSS_BOSS_NEW_FIND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_CROSS_BOSS_NEW_FIND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_CROSS_BOSS_NEW_FIND;
        }

        /** Properties of a CROSS_S_CROSS_BOSS_NEW_FIND. */
        interface ICROSS_S_CROSS_BOSS_NEW_FIND {

            /** CROSS_S_CROSS_BOSS_NEW_FIND chapterId */
            chapterId?: (number|null);

            /** CROSS_S_CROSS_BOSS_NEW_FIND playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_CROSS_BOSS_NEW_FIND bossMsg */
            bossMsg?: (com.message.ICrossBossMsg|null);

            /** CROSS_S_CROSS_BOSS_NEW_FIND instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_S_CROSS_BOSS_NEW_FIND. */
        class CROSS_S_CROSS_BOSS_NEW_FIND implements ICROSS_S_CROSS_BOSS_NEW_FIND {

            /**
             * Constructs a new CROSS_S_CROSS_BOSS_NEW_FIND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_CROSS_BOSS_NEW_FIND);

            /** CROSS_S_CROSS_BOSS_NEW_FIND chapterId. */
            public chapterId: number;

            /** CROSS_S_CROSS_BOSS_NEW_FIND playerId. */
            public playerId: (number|Long);

            /** CROSS_S_CROSS_BOSS_NEW_FIND bossMsg. */
            public bossMsg?: (com.message.ICrossBossMsg|null);

            /** CROSS_S_CROSS_BOSS_NEW_FIND instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_S_CROSS_BOSS_NEW_FIND message. Does not implicitly {@link com.message.CROSS_S_CROSS_BOSS_NEW_FIND.verify|verify} messages.
             * @param message CROSS_S_CROSS_BOSS_NEW_FIND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_CROSS_BOSS_NEW_FIND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_CROSS_BOSS_NEW_FIND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_CROSS_BOSS_NEW_FIND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_CROSS_BOSS_NEW_FIND;
        }

        /** Properties of a CROSS_C_CROSS_BOSS_ONE_INFO. */
        interface ICROSS_C_CROSS_BOSS_ONE_INFO {

            /** CROSS_C_CROSS_BOSS_ONE_INFO instanceId */
            instanceId?: (number|null);

            /** CROSS_C_CROSS_BOSS_ONE_INFO playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_CROSS_BOSS_ONE_INFO. */
        class CROSS_C_CROSS_BOSS_ONE_INFO implements ICROSS_C_CROSS_BOSS_ONE_INFO {

            /**
             * Constructs a new CROSS_C_CROSS_BOSS_ONE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_CROSS_BOSS_ONE_INFO);

            /** CROSS_C_CROSS_BOSS_ONE_INFO instanceId. */
            public instanceId: number;

            /** CROSS_C_CROSS_BOSS_ONE_INFO playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_CROSS_BOSS_ONE_INFO message. Does not implicitly {@link com.message.CROSS_C_CROSS_BOSS_ONE_INFO.verify|verify} messages.
             * @param message CROSS_C_CROSS_BOSS_ONE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_CROSS_BOSS_ONE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_CROSS_BOSS_ONE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_CROSS_BOSS_ONE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_CROSS_BOSS_ONE_INFO;
        }

        /** Properties of a CROSS_S_CROSS_BOSS_ONE_INFO. */
        interface ICROSS_S_CROSS_BOSS_ONE_INFO {

            /** CROSS_S_CROSS_BOSS_ONE_INFO instanceId */
            instanceId?: (number|null);

            /** CROSS_S_CROSS_BOSS_ONE_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_CROSS_BOSS_ONE_INFO bossMsg */
            bossMsg?: (com.message.ICrossBossMsg|null);
        }

        /** Represents a CROSS_S_CROSS_BOSS_ONE_INFO. */
        class CROSS_S_CROSS_BOSS_ONE_INFO implements ICROSS_S_CROSS_BOSS_ONE_INFO {

            /**
             * Constructs a new CROSS_S_CROSS_BOSS_ONE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_CROSS_BOSS_ONE_INFO);

            /** CROSS_S_CROSS_BOSS_ONE_INFO instanceId. */
            public instanceId: number;

            /** CROSS_S_CROSS_BOSS_ONE_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_CROSS_BOSS_ONE_INFO bossMsg. */
            public bossMsg?: (com.message.ICrossBossMsg|null);

            /**
             * Encodes the specified CROSS_S_CROSS_BOSS_ONE_INFO message. Does not implicitly {@link com.message.CROSS_S_CROSS_BOSS_ONE_INFO.verify|verify} messages.
             * @param message CROSS_S_CROSS_BOSS_ONE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_CROSS_BOSS_ONE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_CROSS_BOSS_ONE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_CROSS_BOSS_ONE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_CROSS_BOSS_ONE_INFO;
        }

        /** Properties of a CROSS_S_CROSS_BOSS_NEW_REFRESH. */
        interface ICROSS_S_CROSS_BOSS_NEW_REFRESH {

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH instanceId */
            instanceId?: (number|null);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH belongPlayerId */
            belongPlayerId?: (number|Long|null);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH nickName */
            nickName?: (string|null);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH leaveTime */
            leaveTime?: (number|null);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH bossLeaveHp */
            bossLeaveHp?: (number|Long|null);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH bossMaxHp */
            bossMaxHp?: (number|Long|null);
        }

        /** Represents a CROSS_S_CROSS_BOSS_NEW_REFRESH. */
        class CROSS_S_CROSS_BOSS_NEW_REFRESH implements ICROSS_S_CROSS_BOSS_NEW_REFRESH {

            /**
             * Constructs a new CROSS_S_CROSS_BOSS_NEW_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_CROSS_BOSS_NEW_REFRESH);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH instanceId. */
            public instanceId: number;

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH playerId. */
            public playerId: (number|Long);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH belongPlayerId. */
            public belongPlayerId: (number|Long);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH nickName. */
            public nickName: string;

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH leaveTime. */
            public leaveTime: number;

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH bossLeaveHp. */
            public bossLeaveHp: (number|Long);

            /** CROSS_S_CROSS_BOSS_NEW_REFRESH bossMaxHp. */
            public bossMaxHp: (number|Long);

            /**
             * Encodes the specified CROSS_S_CROSS_BOSS_NEW_REFRESH message. Does not implicitly {@link com.message.CROSS_S_CROSS_BOSS_NEW_REFRESH.verify|verify} messages.
             * @param message CROSS_S_CROSS_BOSS_NEW_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_CROSS_BOSS_NEW_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_CROSS_BOSS_NEW_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_CROSS_BOSS_NEW_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_CROSS_BOSS_NEW_REFRESH;
        }

        /** Properties of a CROSS_S_CROSS_BOSS_DEATH. */
        interface ICROSS_S_CROSS_BOSS_DEATH {

            /** CROSS_S_CROSS_BOSS_DEATH playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_CROSS_BOSS_DEATH instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_S_CROSS_BOSS_DEATH. */
        class CROSS_S_CROSS_BOSS_DEATH implements ICROSS_S_CROSS_BOSS_DEATH {

            /**
             * Constructs a new CROSS_S_CROSS_BOSS_DEATH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_CROSS_BOSS_DEATH);

            /** CROSS_S_CROSS_BOSS_DEATH playerId. */
            public playerId: (number|Long);

            /** CROSS_S_CROSS_BOSS_DEATH instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_S_CROSS_BOSS_DEATH message. Does not implicitly {@link com.message.CROSS_S_CROSS_BOSS_DEATH.verify|verify} messages.
             * @param message CROSS_S_CROSS_BOSS_DEATH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_CROSS_BOSS_DEATH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_CROSS_BOSS_DEATH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_CROSS_BOSS_DEATH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_CROSS_BOSS_DEATH;
        }

        /** Properties of a CROSS_S_SYNC_CROSS_BOSS_REFRESH. */
        interface ICROSS_S_SYNC_CROSS_BOSS_REFRESH {

            /** CROSS_S_SYNC_CROSS_BOSS_REFRESH type */
            type?: (number|null);

            /** CROSS_S_SYNC_CROSS_BOSS_REFRESH instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_S_SYNC_CROSS_BOSS_REFRESH. */
        class CROSS_S_SYNC_CROSS_BOSS_REFRESH implements ICROSS_S_SYNC_CROSS_BOSS_REFRESH {

            /**
             * Constructs a new CROSS_S_SYNC_CROSS_BOSS_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SYNC_CROSS_BOSS_REFRESH);

            /** CROSS_S_SYNC_CROSS_BOSS_REFRESH type. */
            public type: number;

            /** CROSS_S_SYNC_CROSS_BOSS_REFRESH instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_S_SYNC_CROSS_BOSS_REFRESH message. Does not implicitly {@link com.message.CROSS_S_SYNC_CROSS_BOSS_REFRESH.verify|verify} messages.
             * @param message CROSS_S_SYNC_CROSS_BOSS_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SYNC_CROSS_BOSS_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SYNC_CROSS_BOSS_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SYNC_CROSS_BOSS_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SYNC_CROSS_BOSS_REFRESH;
        }

        /** Properties of a CROSS_S_SYNC_CROSS_BOSS_KILL. */
        interface ICROSS_S_SYNC_CROSS_BOSS_KILL {

            /** CROSS_S_SYNC_CROSS_BOSS_KILL chapterId */
            chapterId?: (number|null);

            /** CROSS_S_SYNC_CROSS_BOSS_KILL instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_S_SYNC_CROSS_BOSS_KILL. */
        class CROSS_S_SYNC_CROSS_BOSS_KILL implements ICROSS_S_SYNC_CROSS_BOSS_KILL {

            /**
             * Constructs a new CROSS_S_SYNC_CROSS_BOSS_KILL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SYNC_CROSS_BOSS_KILL);

            /** CROSS_S_SYNC_CROSS_BOSS_KILL chapterId. */
            public chapterId: number;

            /** CROSS_S_SYNC_CROSS_BOSS_KILL instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_S_SYNC_CROSS_BOSS_KILL message. Does not implicitly {@link com.message.CROSS_S_SYNC_CROSS_BOSS_KILL.verify|verify} messages.
             * @param message CROSS_S_SYNC_CROSS_BOSS_KILL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SYNC_CROSS_BOSS_KILL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SYNC_CROSS_BOSS_KILL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SYNC_CROSS_BOSS_KILL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SYNC_CROSS_BOSS_KILL;
        }

        /** Properties of a C_GET_DAILY_TASK_BOSS_INFO. */
        interface IC_GET_DAILY_TASK_BOSS_INFO {
        }

        /** Represents a C_GET_DAILY_TASK_BOSS_INFO. */
        class C_GET_DAILY_TASK_BOSS_INFO implements IC_GET_DAILY_TASK_BOSS_INFO {

            /**
             * Constructs a new C_GET_DAILY_TASK_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_DAILY_TASK_BOSS_INFO);

            /**
             * Encodes the specified C_GET_DAILY_TASK_BOSS_INFO message. Does not implicitly {@link com.message.C_GET_DAILY_TASK_BOSS_INFO.verify|verify} messages.
             * @param message C_GET_DAILY_TASK_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_DAILY_TASK_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_DAILY_TASK_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_DAILY_TASK_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_DAILY_TASK_BOSS_INFO;
        }

        /** Properties of a S_GET_DAILY_TASK_BOSS_INFO. */
        interface IS_GET_DAILY_TASK_BOSS_INFO {

            /** S_GET_DAILY_TASK_BOSS_INFO bossMsg */
            bossMsg?: (com.message.IDailyBossMsg[]|null);

            /** S_GET_DAILY_TASK_BOSS_INFO playerBossMsg */
            playerBossMsg?: (com.message.IPlayerDailyBossMsg|null);
        }

        /** Represents a S_GET_DAILY_TASK_BOSS_INFO. */
        class S_GET_DAILY_TASK_BOSS_INFO implements IS_GET_DAILY_TASK_BOSS_INFO {

            /**
             * Constructs a new S_GET_DAILY_TASK_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_DAILY_TASK_BOSS_INFO);

            /** S_GET_DAILY_TASK_BOSS_INFO bossMsg. */
            public bossMsg: com.message.IDailyBossMsg[];

            /** S_GET_DAILY_TASK_BOSS_INFO playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerDailyBossMsg|null);

            /**
             * Encodes the specified S_GET_DAILY_TASK_BOSS_INFO message. Does not implicitly {@link com.message.S_GET_DAILY_TASK_BOSS_INFO.verify|verify} messages.
             * @param message S_GET_DAILY_TASK_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_DAILY_TASK_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_DAILY_TASK_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_DAILY_TASK_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_DAILY_TASK_BOSS_INFO;
        }

        /** Properties of a PlayerDailyBossMsg. */
        interface IPlayerDailyBossMsg {

            /** PlayerDailyBossMsg playerId */
            playerId?: (number|Long|null);

            /** PlayerDailyBossMsg playCount */
            playCount?: (number|null);

            /** PlayerDailyBossMsg addCountTime */
            addCountTime?: (number|Long|null);

            /** PlayerDailyBossMsg qualityId */
            qualityId?: (number[]|null);

            /** PlayerDailyBossMsg challengeBossAll */
            challengeBossAll?: (number|null);

            /** PlayerDailyBossMsg nextBossRefreshTime */
            nextBossRefreshTime?: (number|Long|null);

            /** PlayerDailyBossMsg freeRefreshTime */
            freeRefreshTime?: (number|null);
        }

        /** Represents a PlayerDailyBossMsg. */
        class PlayerDailyBossMsg implements IPlayerDailyBossMsg {

            /**
             * Constructs a new PlayerDailyBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerDailyBossMsg);

            /** PlayerDailyBossMsg playerId. */
            public playerId: (number|Long);

            /** PlayerDailyBossMsg playCount. */
            public playCount: number;

            /** PlayerDailyBossMsg addCountTime. */
            public addCountTime: (number|Long);

            /** PlayerDailyBossMsg qualityId. */
            public qualityId: number[];

            /** PlayerDailyBossMsg challengeBossAll. */
            public challengeBossAll: number;

            /** PlayerDailyBossMsg nextBossRefreshTime. */
            public nextBossRefreshTime: (number|Long);

            /** PlayerDailyBossMsg freeRefreshTime. */
            public freeRefreshTime: number;

            /**
             * Encodes the specified PlayerDailyBossMsg message. Does not implicitly {@link com.message.PlayerDailyBossMsg.verify|verify} messages.
             * @param message PlayerDailyBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerDailyBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerDailyBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerDailyBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerDailyBossMsg;
        }

        /** Properties of a DailyBossMsg. */
        interface IDailyBossMsg {

            /** DailyBossMsg bossId */
            bossId?: (number|Long|null);

            /** DailyBossMsg playerHeroId */
            playerHeroId?: (number|null);

            /** DailyBossMsg name */
            name?: (string|null);

            /** DailyBossMsg level */
            level?: (number|null);

            /** DailyBossMsg high */
            high?: (number|null);

            /** DailyBossMsg bossKill */
            bossKill?: (number|null);

            /** DailyBossMsg fight */
            fight?: (number|Long|null);

            /** DailyBossMsg heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a DailyBossMsg. */
        class DailyBossMsg implements IDailyBossMsg {

            /**
             * Constructs a new DailyBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IDailyBossMsg);

            /** DailyBossMsg bossId. */
            public bossId: (number|Long);

            /** DailyBossMsg playerHeroId. */
            public playerHeroId: number;

            /** DailyBossMsg name. */
            public name: string;

            /** DailyBossMsg level. */
            public level: number;

            /** DailyBossMsg high. */
            public high: number;

            /** DailyBossMsg bossKill. */
            public bossKill: number;

            /** DailyBossMsg fight. */
            public fight: (number|Long);

            /** DailyBossMsg heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified DailyBossMsg message. Does not implicitly {@link com.message.DailyBossMsg.verify|verify} messages.
             * @param message DailyBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IDailyBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DailyBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DailyBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.DailyBossMsg;
        }

        /** Properties of a C_DAILY_TASK_BOSS_CHALLENGE. */
        interface IC_DAILY_TASK_BOSS_CHALLENGE {

            /** C_DAILY_TASK_BOSS_CHALLENGE qualityId */
            qualityId?: (number|null);

            /** C_DAILY_TASK_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a C_DAILY_TASK_BOSS_CHALLENGE. */
        class C_DAILY_TASK_BOSS_CHALLENGE implements IC_DAILY_TASK_BOSS_CHALLENGE {

            /**
             * Constructs a new C_DAILY_TASK_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAILY_TASK_BOSS_CHALLENGE);

            /** C_DAILY_TASK_BOSS_CHALLENGE qualityId. */
            public qualityId: number;

            /** C_DAILY_TASK_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified C_DAILY_TASK_BOSS_CHALLENGE message. Does not implicitly {@link com.message.C_DAILY_TASK_BOSS_CHALLENGE.verify|verify} messages.
             * @param message C_DAILY_TASK_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAILY_TASK_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAILY_TASK_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAILY_TASK_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAILY_TASK_BOSS_CHALLENGE;
        }

        /** Properties of a S_DAILY_TASK_BOSS_CHALLENGE. */
        interface IS_DAILY_TASK_BOSS_CHALLENGE {

            /** S_DAILY_TASK_BOSS_CHALLENGE qualityId */
            qualityId?: (number|null);

            /** S_DAILY_TASK_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a S_DAILY_TASK_BOSS_CHALLENGE. */
        class S_DAILY_TASK_BOSS_CHALLENGE implements IS_DAILY_TASK_BOSS_CHALLENGE {

            /**
             * Constructs a new S_DAILY_TASK_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAILY_TASK_BOSS_CHALLENGE);

            /** S_DAILY_TASK_BOSS_CHALLENGE qualityId. */
            public qualityId: number;

            /** S_DAILY_TASK_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified S_DAILY_TASK_BOSS_CHALLENGE message. Does not implicitly {@link com.message.S_DAILY_TASK_BOSS_CHALLENGE.verify|verify} messages.
             * @param message S_DAILY_TASK_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAILY_TASK_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAILY_TASK_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAILY_TASK_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAILY_TASK_BOSS_CHALLENGE;
        }

        /** Properties of a C_DAILY_TASK_BOSS_CHALLENGE_ALL. */
        interface IC_DAILY_TASK_BOSS_CHALLENGE_ALL {

            /** C_DAILY_TASK_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a C_DAILY_TASK_BOSS_CHALLENGE_ALL. */
        class C_DAILY_TASK_BOSS_CHALLENGE_ALL implements IC_DAILY_TASK_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new C_DAILY_TASK_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAILY_TASK_BOSS_CHALLENGE_ALL);

            /** C_DAILY_TASK_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified C_DAILY_TASK_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.C_DAILY_TASK_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message C_DAILY_TASK_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAILY_TASK_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAILY_TASK_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAILY_TASK_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAILY_TASK_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a S_DAILY_TASK_BOSS_CHALLENGE_ALL. */
        interface IS_DAILY_TASK_BOSS_CHALLENGE_ALL {

            /** S_DAILY_TASK_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a S_DAILY_TASK_BOSS_CHALLENGE_ALL. */
        class S_DAILY_TASK_BOSS_CHALLENGE_ALL implements IS_DAILY_TASK_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new S_DAILY_TASK_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAILY_TASK_BOSS_CHALLENGE_ALL);

            /** S_DAILY_TASK_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified S_DAILY_TASK_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.S_DAILY_TASK_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message S_DAILY_TASK_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAILY_TASK_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAILY_TASK_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAILY_TASK_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAILY_TASK_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a C_DAILY_TASK_REFRESH. */
        interface IC_DAILY_TASK_REFRESH {

            /** C_DAILY_TASK_REFRESH type */
            type?: (number|null);
        }

        /** Represents a C_DAILY_TASK_REFRESH. */
        class C_DAILY_TASK_REFRESH implements IC_DAILY_TASK_REFRESH {

            /**
             * Constructs a new C_DAILY_TASK_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAILY_TASK_REFRESH);

            /** C_DAILY_TASK_REFRESH type. */
            public type: number;

            /**
             * Encodes the specified C_DAILY_TASK_REFRESH message. Does not implicitly {@link com.message.C_DAILY_TASK_REFRESH.verify|verify} messages.
             * @param message C_DAILY_TASK_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAILY_TASK_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAILY_TASK_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAILY_TASK_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAILY_TASK_REFRESH;
        }

        /** Properties of a S_DAILY_TASK_REFRESH. */
        interface IS_DAILY_TASK_REFRESH {

            /** S_DAILY_TASK_REFRESH bossMsg */
            bossMsg?: (com.message.IDailyBossMsg[]|null);

            /** S_DAILY_TASK_REFRESH playerBossMsg */
            playerBossMsg?: (com.message.IPlayerDailyBossMsg|null);
        }

        /** Represents a S_DAILY_TASK_REFRESH. */
        class S_DAILY_TASK_REFRESH implements IS_DAILY_TASK_REFRESH {

            /**
             * Constructs a new S_DAILY_TASK_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAILY_TASK_REFRESH);

            /** S_DAILY_TASK_REFRESH bossMsg. */
            public bossMsg: com.message.IDailyBossMsg[];

            /** S_DAILY_TASK_REFRESH playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerDailyBossMsg|null);

            /**
             * Encodes the specified S_DAILY_TASK_REFRESH message. Does not implicitly {@link com.message.S_DAILY_TASK_REFRESH.verify|verify} messages.
             * @param message S_DAILY_TASK_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAILY_TASK_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAILY_TASK_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAILY_TASK_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAILY_TASK_REFRESH;
        }

        /** Properties of a C_DAILY_TASK_BUY_TIME. */
        interface IC_DAILY_TASK_BUY_TIME {

            /** C_DAILY_TASK_BUY_TIME num */
            num?: (number|null);
        }

        /** Represents a C_DAILY_TASK_BUY_TIME. */
        class C_DAILY_TASK_BUY_TIME implements IC_DAILY_TASK_BUY_TIME {

            /**
             * Constructs a new C_DAILY_TASK_BUY_TIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAILY_TASK_BUY_TIME);

            /** C_DAILY_TASK_BUY_TIME num. */
            public num: number;

            /**
             * Encodes the specified C_DAILY_TASK_BUY_TIME message. Does not implicitly {@link com.message.C_DAILY_TASK_BUY_TIME.verify|verify} messages.
             * @param message C_DAILY_TASK_BUY_TIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAILY_TASK_BUY_TIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAILY_TASK_BUY_TIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAILY_TASK_BUY_TIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAILY_TASK_BUY_TIME;
        }

        /** Properties of a S_DAILY_TASK_BUY_TIME. */
        interface IS_DAILY_TASK_BUY_TIME {

            /** S_DAILY_TASK_BUY_TIME playCount */
            playCount?: (number|null);
        }

        /** Represents a S_DAILY_TASK_BUY_TIME. */
        class S_DAILY_TASK_BUY_TIME implements IS_DAILY_TASK_BUY_TIME {

            /**
             * Constructs a new S_DAILY_TASK_BUY_TIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAILY_TASK_BUY_TIME);

            /** S_DAILY_TASK_BUY_TIME playCount. */
            public playCount: number;

            /**
             * Encodes the specified S_DAILY_TASK_BUY_TIME message. Does not implicitly {@link com.message.S_DAILY_TASK_BUY_TIME.verify|verify} messages.
             * @param message S_DAILY_TASK_BUY_TIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAILY_TASK_BUY_TIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAILY_TASK_BUY_TIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAILY_TASK_BUY_TIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAILY_TASK_BUY_TIME;
        }

        /** Properties of a C_GET_EVERYDAY_RTN_INFO. */
        interface IC_GET_EVERYDAY_RTN_INFO {
        }

        /** Represents a C_GET_EVERYDAY_RTN_INFO. */
        class C_GET_EVERYDAY_RTN_INFO implements IC_GET_EVERYDAY_RTN_INFO {

            /**
             * Constructs a new C_GET_EVERYDAY_RTN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_EVERYDAY_RTN_INFO);

            /**
             * Encodes the specified C_GET_EVERYDAY_RTN_INFO message. Does not implicitly {@link com.message.C_GET_EVERYDAY_RTN_INFO.verify|verify} messages.
             * @param message C_GET_EVERYDAY_RTN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_EVERYDAY_RTN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_EVERYDAY_RTN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_EVERYDAY_RTN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_EVERYDAY_RTN_INFO;
        }

        /** Properties of a S_GET_EVERYDAY_RTN_INFO. */
        interface IS_GET_EVERYDAY_RTN_INFO {

            /** S_GET_EVERYDAY_RTN_INFO days */
            days?: (number|null);

            /** S_GET_EVERYDAY_RTN_INFO hadChargeIds */
            hadChargeIds?: (string|null);

            /** S_GET_EVERYDAY_RTN_INFO hadRewardIds */
            hadRewardIds?: (string|null);

            /** S_GET_EVERYDAY_RTN_INFO leaveDays */
            leaveDays?: (number|null);

            /** S_GET_EVERYDAY_RTN_INFO currIndex */
            currIndex?: (number|null);
        }

        /** Represents a S_GET_EVERYDAY_RTN_INFO. */
        class S_GET_EVERYDAY_RTN_INFO implements IS_GET_EVERYDAY_RTN_INFO {

            /**
             * Constructs a new S_GET_EVERYDAY_RTN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_EVERYDAY_RTN_INFO);

            /** S_GET_EVERYDAY_RTN_INFO days. */
            public days: number;

            /** S_GET_EVERYDAY_RTN_INFO hadChargeIds. */
            public hadChargeIds: string;

            /** S_GET_EVERYDAY_RTN_INFO hadRewardIds. */
            public hadRewardIds: string;

            /** S_GET_EVERYDAY_RTN_INFO leaveDays. */
            public leaveDays: number;

            /** S_GET_EVERYDAY_RTN_INFO currIndex. */
            public currIndex: number;

            /**
             * Encodes the specified S_GET_EVERYDAY_RTN_INFO message. Does not implicitly {@link com.message.S_GET_EVERYDAY_RTN_INFO.verify|verify} messages.
             * @param message S_GET_EVERYDAY_RTN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_EVERYDAY_RTN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_EVERYDAY_RTN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_EVERYDAY_RTN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_EVERYDAY_RTN_INFO;
        }

        /** Properties of a C_EVERYDAY_RTN_REWARD. */
        interface IC_EVERYDAY_RTN_REWARD {

            /** C_EVERYDAY_RTN_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_EVERYDAY_RTN_REWARD. */
        class C_EVERYDAY_RTN_REWARD implements IC_EVERYDAY_RTN_REWARD {

            /**
             * Constructs a new C_EVERYDAY_RTN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EVERYDAY_RTN_REWARD);

            /** C_EVERYDAY_RTN_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_EVERYDAY_RTN_REWARD message. Does not implicitly {@link com.message.C_EVERYDAY_RTN_REWARD.verify|verify} messages.
             * @param message C_EVERYDAY_RTN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EVERYDAY_RTN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EVERYDAY_RTN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EVERYDAY_RTN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EVERYDAY_RTN_REWARD;
        }

        /** Properties of a S_EVERYDAY_RTN_REWARD. */
        interface IS_EVERYDAY_RTN_REWARD {

            /** S_EVERYDAY_RTN_REWARD rewardId */
            rewardId?: (number|null);

            /** S_EVERYDAY_RTN_REWARD hadRewardIds */
            hadRewardIds?: (string|null);

            /** S_EVERYDAY_RTN_REWARD rewardList */
            rewardList?: (com.message.IItemListMsg|null);

            /** S_EVERYDAY_RTN_REWARD hadChargeIds */
            hadChargeIds?: (string|null);
        }

        /** Represents a S_EVERYDAY_RTN_REWARD. */
        class S_EVERYDAY_RTN_REWARD implements IS_EVERYDAY_RTN_REWARD {

            /**
             * Constructs a new S_EVERYDAY_RTN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EVERYDAY_RTN_REWARD);

            /** S_EVERYDAY_RTN_REWARD rewardId. */
            public rewardId: number;

            /** S_EVERYDAY_RTN_REWARD hadRewardIds. */
            public hadRewardIds: string;

            /** S_EVERYDAY_RTN_REWARD rewardList. */
            public rewardList?: (com.message.IItemListMsg|null);

            /** S_EVERYDAY_RTN_REWARD hadChargeIds. */
            public hadChargeIds: string;

            /**
             * Encodes the specified S_EVERYDAY_RTN_REWARD message. Does not implicitly {@link com.message.S_EVERYDAY_RTN_REWARD.verify|verify} messages.
             * @param message S_EVERYDAY_RTN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EVERYDAY_RTN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EVERYDAY_RTN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EVERYDAY_RTN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EVERYDAY_RTN_REWARD;
        }

        /** Properties of a S_EVERYDAY_RTN_PUSH. */
        interface IS_EVERYDAY_RTN_PUSH {

            /** S_EVERYDAY_RTN_PUSH totalDays */
            totalDays?: (number|null);

            /** S_EVERYDAY_RTN_PUSH hadChargeIds */
            hadChargeIds?: (string|null);

            /** S_EVERYDAY_RTN_PUSH hadRewardIds */
            hadRewardIds?: (string|null);
        }

        /** Represents a S_EVERYDAY_RTN_PUSH. */
        class S_EVERYDAY_RTN_PUSH implements IS_EVERYDAY_RTN_PUSH {

            /**
             * Constructs a new S_EVERYDAY_RTN_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EVERYDAY_RTN_PUSH);

            /** S_EVERYDAY_RTN_PUSH totalDays. */
            public totalDays: number;

            /** S_EVERYDAY_RTN_PUSH hadChargeIds. */
            public hadChargeIds: string;

            /** S_EVERYDAY_RTN_PUSH hadRewardIds. */
            public hadRewardIds: string;

            /**
             * Encodes the specified S_EVERYDAY_RTN_PUSH message. Does not implicitly {@link com.message.S_EVERYDAY_RTN_PUSH.verify|verify} messages.
             * @param message S_EVERYDAY_RTN_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EVERYDAY_RTN_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EVERYDAY_RTN_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EVERYDAY_RTN_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EVERYDAY_RTN_PUSH;
        }

        /** Properties of a C_GET_CHARGE_PAN_INFO. */
        interface IC_GET_CHARGE_PAN_INFO {
        }

        /** Represents a C_GET_CHARGE_PAN_INFO. */
        class C_GET_CHARGE_PAN_INFO implements IC_GET_CHARGE_PAN_INFO {

            /**
             * Constructs a new C_GET_CHARGE_PAN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_CHARGE_PAN_INFO);

            /**
             * Encodes the specified C_GET_CHARGE_PAN_INFO message. Does not implicitly {@link com.message.C_GET_CHARGE_PAN_INFO.verify|verify} messages.
             * @param message C_GET_CHARGE_PAN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_CHARGE_PAN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_CHARGE_PAN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_CHARGE_PAN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_CHARGE_PAN_INFO;
        }

        /** Properties of a S_GET_CHARGE_PAN_INFO. */
        interface IS_GET_CHARGE_PAN_INFO {

            /** S_GET_CHARGE_PAN_INFO leavePlay */
            leavePlay?: (number|null);

            /** S_GET_CHARGE_PAN_INFO chargeValye */
            chargeValye?: (number|null);

            /** S_GET_CHARGE_PAN_INFO hadRewardIds */
            hadRewardIds?: (string|null);
        }

        /** Represents a S_GET_CHARGE_PAN_INFO. */
        class S_GET_CHARGE_PAN_INFO implements IS_GET_CHARGE_PAN_INFO {

            /**
             * Constructs a new S_GET_CHARGE_PAN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_CHARGE_PAN_INFO);

            /** S_GET_CHARGE_PAN_INFO leavePlay. */
            public leavePlay: number;

            /** S_GET_CHARGE_PAN_INFO chargeValye. */
            public chargeValye: number;

            /** S_GET_CHARGE_PAN_INFO hadRewardIds. */
            public hadRewardIds: string;

            /**
             * Encodes the specified S_GET_CHARGE_PAN_INFO message. Does not implicitly {@link com.message.S_GET_CHARGE_PAN_INFO.verify|verify} messages.
             * @param message S_GET_CHARGE_PAN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_CHARGE_PAN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_CHARGE_PAN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_CHARGE_PAN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_CHARGE_PAN_INFO;
        }

        /** Properties of a C_CHARGE_PAN_REWARD. */
        interface IC_CHARGE_PAN_REWARD {

            /** C_CHARGE_PAN_REWARD type */
            type?: (number|null);
        }

        /** Represents a C_CHARGE_PAN_REWARD. */
        class C_CHARGE_PAN_REWARD implements IC_CHARGE_PAN_REWARD {

            /**
             * Constructs a new C_CHARGE_PAN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CHARGE_PAN_REWARD);

            /** C_CHARGE_PAN_REWARD type. */
            public type: number;

            /**
             * Encodes the specified C_CHARGE_PAN_REWARD message. Does not implicitly {@link com.message.C_CHARGE_PAN_REWARD.verify|verify} messages.
             * @param message C_CHARGE_PAN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CHARGE_PAN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CHARGE_PAN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CHARGE_PAN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CHARGE_PAN_REWARD;
        }

        /** Properties of a S_CHARGE_PAN_REWARD. */
        interface IS_CHARGE_PAN_REWARD {

            /** S_CHARGE_PAN_REWARD type */
            type?: (number|null);

            /** S_CHARGE_PAN_REWARD leavePlay */
            leavePlay?: (number|null);

            /** S_CHARGE_PAN_REWARD rewardList */
            rewardList?: (com.message.IItemListMsg|null);

            /** S_CHARGE_PAN_REWARD panIndex */
            panIndex?: (number|null);
        }

        /** Represents a S_CHARGE_PAN_REWARD. */
        class S_CHARGE_PAN_REWARD implements IS_CHARGE_PAN_REWARD {

            /**
             * Constructs a new S_CHARGE_PAN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CHARGE_PAN_REWARD);

            /** S_CHARGE_PAN_REWARD type. */
            public type: number;

            /** S_CHARGE_PAN_REWARD leavePlay. */
            public leavePlay: number;

            /** S_CHARGE_PAN_REWARD rewardList. */
            public rewardList?: (com.message.IItemListMsg|null);

            /** S_CHARGE_PAN_REWARD panIndex. */
            public panIndex: number;

            /**
             * Encodes the specified S_CHARGE_PAN_REWARD message. Does not implicitly {@link com.message.S_CHARGE_PAN_REWARD.verify|verify} messages.
             * @param message S_CHARGE_PAN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CHARGE_PAN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CHARGE_PAN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CHARGE_PAN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CHARGE_PAN_REWARD;
        }

        /** Properties of a C_CHARGE_PAN_LUCK_REWARD. */
        interface IC_CHARGE_PAN_LUCK_REWARD {

            /** C_CHARGE_PAN_LUCK_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_CHARGE_PAN_LUCK_REWARD. */
        class C_CHARGE_PAN_LUCK_REWARD implements IC_CHARGE_PAN_LUCK_REWARD {

            /**
             * Constructs a new C_CHARGE_PAN_LUCK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CHARGE_PAN_LUCK_REWARD);

            /** C_CHARGE_PAN_LUCK_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_CHARGE_PAN_LUCK_REWARD message. Does not implicitly {@link com.message.C_CHARGE_PAN_LUCK_REWARD.verify|verify} messages.
             * @param message C_CHARGE_PAN_LUCK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CHARGE_PAN_LUCK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CHARGE_PAN_LUCK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CHARGE_PAN_LUCK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CHARGE_PAN_LUCK_REWARD;
        }

        /** Properties of a S_CHARGE_PAN_LUCK_REWARD. */
        interface IS_CHARGE_PAN_LUCK_REWARD {

            /** S_CHARGE_PAN_LUCK_REWARD rewardId */
            rewardId?: (number|null);

            /** S_CHARGE_PAN_LUCK_REWARD hadRewardIds */
            hadRewardIds?: (string|null);

            /** S_CHARGE_PAN_LUCK_REWARD rewardList */
            rewardList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_CHARGE_PAN_LUCK_REWARD. */
        class S_CHARGE_PAN_LUCK_REWARD implements IS_CHARGE_PAN_LUCK_REWARD {

            /**
             * Constructs a new S_CHARGE_PAN_LUCK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CHARGE_PAN_LUCK_REWARD);

            /** S_CHARGE_PAN_LUCK_REWARD rewardId. */
            public rewardId: number;

            /** S_CHARGE_PAN_LUCK_REWARD hadRewardIds. */
            public hadRewardIds: string;

            /** S_CHARGE_PAN_LUCK_REWARD rewardList. */
            public rewardList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_CHARGE_PAN_LUCK_REWARD message. Does not implicitly {@link com.message.S_CHARGE_PAN_LUCK_REWARD.verify|verify} messages.
             * @param message S_CHARGE_PAN_LUCK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CHARGE_PAN_LUCK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CHARGE_PAN_LUCK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CHARGE_PAN_LUCK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CHARGE_PAN_LUCK_REWARD;
        }

        /** Properties of a C_CHARGE_PAN_LOGS. */
        interface IC_CHARGE_PAN_LOGS {

            /** C_CHARGE_PAN_LOGS isSelf */
            isSelf?: (boolean|null);
        }

        /** Represents a C_CHARGE_PAN_LOGS. */
        class C_CHARGE_PAN_LOGS implements IC_CHARGE_PAN_LOGS {

            /**
             * Constructs a new C_CHARGE_PAN_LOGS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CHARGE_PAN_LOGS);

            /** C_CHARGE_PAN_LOGS isSelf. */
            public isSelf: boolean;

            /**
             * Encodes the specified C_CHARGE_PAN_LOGS message. Does not implicitly {@link com.message.C_CHARGE_PAN_LOGS.verify|verify} messages.
             * @param message C_CHARGE_PAN_LOGS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CHARGE_PAN_LOGS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CHARGE_PAN_LOGS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CHARGE_PAN_LOGS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CHARGE_PAN_LOGS;
        }

        /** Properties of a S_CHARGE_PAN_LOGS. */
        interface IS_CHARGE_PAN_LOGS {

            /** S_CHARGE_PAN_LOGS logs */
            logs?: (com.message.ICHARGE_PAN_LOG[]|null);

            /** S_CHARGE_PAN_LOGS isSelf */
            isSelf?: (boolean|null);
        }

        /** Represents a S_CHARGE_PAN_LOGS. */
        class S_CHARGE_PAN_LOGS implements IS_CHARGE_PAN_LOGS {

            /**
             * Constructs a new S_CHARGE_PAN_LOGS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CHARGE_PAN_LOGS);

            /** S_CHARGE_PAN_LOGS logs. */
            public logs: com.message.ICHARGE_PAN_LOG[];

            /** S_CHARGE_PAN_LOGS isSelf. */
            public isSelf: boolean;

            /**
             * Encodes the specified S_CHARGE_PAN_LOGS message. Does not implicitly {@link com.message.S_CHARGE_PAN_LOGS.verify|verify} messages.
             * @param message S_CHARGE_PAN_LOGS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CHARGE_PAN_LOGS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CHARGE_PAN_LOGS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CHARGE_PAN_LOGS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CHARGE_PAN_LOGS;
        }

        /** Properties of a CHARGE_PAN_LOG. */
        interface ICHARGE_PAN_LOG {

            /** CHARGE_PAN_LOG vipLevel */
            vipLevel?: (number|null);

            /** CHARGE_PAN_LOG rewardDatas */
            rewardDatas?: (string|null);

            /** CHARGE_PAN_LOG createTime */
            createTime?: (number|Long|null);

            /** CHARGE_PAN_LOG nickName */
            nickName?: (string|null);
        }

        /** Represents a CHARGE_PAN_LOG. */
        class CHARGE_PAN_LOG implements ICHARGE_PAN_LOG {

            /**
             * Constructs a new CHARGE_PAN_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICHARGE_PAN_LOG);

            /** CHARGE_PAN_LOG vipLevel. */
            public vipLevel: number;

            /** CHARGE_PAN_LOG rewardDatas. */
            public rewardDatas: string;

            /** CHARGE_PAN_LOG createTime. */
            public createTime: (number|Long);

            /** CHARGE_PAN_LOG nickName. */
            public nickName: string;

            /**
             * Encodes the specified CHARGE_PAN_LOG message. Does not implicitly {@link com.message.CHARGE_PAN_LOG.verify|verify} messages.
             * @param message CHARGE_PAN_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICHARGE_PAN_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CHARGE_PAN_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CHARGE_PAN_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CHARGE_PAN_LOG;
        }

        /** Properties of a C_GET_TODAY_DISCOUNT_INFO. */
        interface IC_GET_TODAY_DISCOUNT_INFO {
        }

        /** Represents a C_GET_TODAY_DISCOUNT_INFO. */
        class C_GET_TODAY_DISCOUNT_INFO implements IC_GET_TODAY_DISCOUNT_INFO {

            /**
             * Constructs a new C_GET_TODAY_DISCOUNT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TODAY_DISCOUNT_INFO);

            /**
             * Encodes the specified C_GET_TODAY_DISCOUNT_INFO message. Does not implicitly {@link com.message.C_GET_TODAY_DISCOUNT_INFO.verify|verify} messages.
             * @param message C_GET_TODAY_DISCOUNT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TODAY_DISCOUNT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TODAY_DISCOUNT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TODAY_DISCOUNT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TODAY_DISCOUNT_INFO;
        }

        /** Properties of a S_GET_TODAY_DISCOUNT_INFO. */
        interface IS_GET_TODAY_DISCOUNT_INFO {

            /** S_GET_TODAY_DISCOUNT_INFO marketInfos */
            marketInfos?: (com.message.ITODAY_DISCOUNT_INFO[]|null);

            /** S_GET_TODAY_DISCOUNT_INFO day */
            day?: (number|null);
        }

        /** Represents a S_GET_TODAY_DISCOUNT_INFO. */
        class S_GET_TODAY_DISCOUNT_INFO implements IS_GET_TODAY_DISCOUNT_INFO {

            /**
             * Constructs a new S_GET_TODAY_DISCOUNT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TODAY_DISCOUNT_INFO);

            /** S_GET_TODAY_DISCOUNT_INFO marketInfos. */
            public marketInfos: com.message.ITODAY_DISCOUNT_INFO[];

            /** S_GET_TODAY_DISCOUNT_INFO day. */
            public day: number;

            /**
             * Encodes the specified S_GET_TODAY_DISCOUNT_INFO message. Does not implicitly {@link com.message.S_GET_TODAY_DISCOUNT_INFO.verify|verify} messages.
             * @param message S_GET_TODAY_DISCOUNT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TODAY_DISCOUNT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TODAY_DISCOUNT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TODAY_DISCOUNT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TODAY_DISCOUNT_INFO;
        }

        /** Properties of a TODAY_DISCOUNT_INFO. */
        interface ITODAY_DISCOUNT_INFO {

            /** TODAY_DISCOUNT_INFO marketId */
            marketId?: (number|null);

            /** TODAY_DISCOUNT_INFO limitNum */
            limitNum?: (number|null);
        }

        /** Represents a TODAY_DISCOUNT_INFO. */
        class TODAY_DISCOUNT_INFO implements ITODAY_DISCOUNT_INFO {

            /**
             * Constructs a new TODAY_DISCOUNT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITODAY_DISCOUNT_INFO);

            /** TODAY_DISCOUNT_INFO marketId. */
            public marketId: number;

            /** TODAY_DISCOUNT_INFO limitNum. */
            public limitNum: number;

            /**
             * Encodes the specified TODAY_DISCOUNT_INFO message. Does not implicitly {@link com.message.TODAY_DISCOUNT_INFO.verify|verify} messages.
             * @param message TODAY_DISCOUNT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITODAY_DISCOUNT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TODAY_DISCOUNT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TODAY_DISCOUNT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TODAY_DISCOUNT_INFO;
        }

        /** Properties of a C_BUY_TODAY_DISCOUNT. */
        interface IC_BUY_TODAY_DISCOUNT {

            /** C_BUY_TODAY_DISCOUNT marketId */
            marketId?: (number|null);
        }

        /** Represents a C_BUY_TODAY_DISCOUNT. */
        class C_BUY_TODAY_DISCOUNT implements IC_BUY_TODAY_DISCOUNT {

            /**
             * Constructs a new C_BUY_TODAY_DISCOUNT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_TODAY_DISCOUNT);

            /** C_BUY_TODAY_DISCOUNT marketId. */
            public marketId: number;

            /**
             * Encodes the specified C_BUY_TODAY_DISCOUNT message. Does not implicitly {@link com.message.C_BUY_TODAY_DISCOUNT.verify|verify} messages.
             * @param message C_BUY_TODAY_DISCOUNT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_TODAY_DISCOUNT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_TODAY_DISCOUNT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_TODAY_DISCOUNT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_TODAY_DISCOUNT;
        }

        /** Properties of a S_BUY_TODAY_DISCOUNT. */
        interface IS_BUY_TODAY_DISCOUNT {

            /** S_BUY_TODAY_DISCOUNT marketInfo */
            marketInfo?: (com.message.ITODAY_DISCOUNT_INFO|null);
        }

        /** Represents a S_BUY_TODAY_DISCOUNT. */
        class S_BUY_TODAY_DISCOUNT implements IS_BUY_TODAY_DISCOUNT {

            /**
             * Constructs a new S_BUY_TODAY_DISCOUNT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_TODAY_DISCOUNT);

            /** S_BUY_TODAY_DISCOUNT marketInfo. */
            public marketInfo?: (com.message.ITODAY_DISCOUNT_INFO|null);

            /**
             * Encodes the specified S_BUY_TODAY_DISCOUNT message. Does not implicitly {@link com.message.S_BUY_TODAY_DISCOUNT.verify|verify} messages.
             * @param message S_BUY_TODAY_DISCOUNT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_TODAY_DISCOUNT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_TODAY_DISCOUNT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_TODAY_DISCOUNT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_TODAY_DISCOUNT;
        }

        /** Properties of a C_GET_EVERY_LOGIN_INFO. */
        interface IC_GET_EVERY_LOGIN_INFO {
        }

        /** Represents a C_GET_EVERY_LOGIN_INFO. */
        class C_GET_EVERY_LOGIN_INFO implements IC_GET_EVERY_LOGIN_INFO {

            /**
             * Constructs a new C_GET_EVERY_LOGIN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_EVERY_LOGIN_INFO);

            /**
             * Encodes the specified C_GET_EVERY_LOGIN_INFO message. Does not implicitly {@link com.message.C_GET_EVERY_LOGIN_INFO.verify|verify} messages.
             * @param message C_GET_EVERY_LOGIN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_EVERY_LOGIN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_EVERY_LOGIN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_EVERY_LOGIN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_EVERY_LOGIN_INFO;
        }

        /** Properties of a S_GET_EVERY_LOGIN_INFO. */
        interface IS_GET_EVERY_LOGIN_INFO {

            /** S_GET_EVERY_LOGIN_INFO day */
            day?: (number|null);

            /** S_GET_EVERY_LOGIN_INFO activeIds */
            activeIds?: (string|null);

            /** S_GET_EVERY_LOGIN_INFO rewardIds */
            rewardIds?: (string|null);
        }

        /** Represents a S_GET_EVERY_LOGIN_INFO. */
        class S_GET_EVERY_LOGIN_INFO implements IS_GET_EVERY_LOGIN_INFO {

            /**
             * Constructs a new S_GET_EVERY_LOGIN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_EVERY_LOGIN_INFO);

            /** S_GET_EVERY_LOGIN_INFO day. */
            public day: number;

            /** S_GET_EVERY_LOGIN_INFO activeIds. */
            public activeIds: string;

            /** S_GET_EVERY_LOGIN_INFO rewardIds. */
            public rewardIds: string;

            /**
             * Encodes the specified S_GET_EVERY_LOGIN_INFO message. Does not implicitly {@link com.message.S_GET_EVERY_LOGIN_INFO.verify|verify} messages.
             * @param message S_GET_EVERY_LOGIN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_EVERY_LOGIN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_EVERY_LOGIN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_EVERY_LOGIN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_EVERY_LOGIN_INFO;
        }

        /** Properties of a C_GET_EVERY_LOGIN_REWARD. */
        interface IC_GET_EVERY_LOGIN_REWARD {

            /** C_GET_EVERY_LOGIN_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_GET_EVERY_LOGIN_REWARD. */
        class C_GET_EVERY_LOGIN_REWARD implements IC_GET_EVERY_LOGIN_REWARD {

            /**
             * Constructs a new C_GET_EVERY_LOGIN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_EVERY_LOGIN_REWARD);

            /** C_GET_EVERY_LOGIN_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_GET_EVERY_LOGIN_REWARD message. Does not implicitly {@link com.message.C_GET_EVERY_LOGIN_REWARD.verify|verify} messages.
             * @param message C_GET_EVERY_LOGIN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_EVERY_LOGIN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_EVERY_LOGIN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_EVERY_LOGIN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_EVERY_LOGIN_REWARD;
        }

        /** Properties of a S_GET_EVERY_LOGIN_REWARD. */
        interface IS_GET_EVERY_LOGIN_REWARD {

            /** S_GET_EVERY_LOGIN_REWARD day */
            day?: (number|null);

            /** S_GET_EVERY_LOGIN_REWARD rewardIds */
            rewardIds?: (string|null);

            /** S_GET_EVERY_LOGIN_REWARD rewardList */
            rewardList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_EVERY_LOGIN_REWARD. */
        class S_GET_EVERY_LOGIN_REWARD implements IS_GET_EVERY_LOGIN_REWARD {

            /**
             * Constructs a new S_GET_EVERY_LOGIN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_EVERY_LOGIN_REWARD);

            /** S_GET_EVERY_LOGIN_REWARD day. */
            public day: number;

            /** S_GET_EVERY_LOGIN_REWARD rewardIds. */
            public rewardIds: string;

            /** S_GET_EVERY_LOGIN_REWARD rewardList. */
            public rewardList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_EVERY_LOGIN_REWARD message. Does not implicitly {@link com.message.S_GET_EVERY_LOGIN_REWARD.verify|verify} messages.
             * @param message S_GET_EVERY_LOGIN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_EVERY_LOGIN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_EVERY_LOGIN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_EVERY_LOGIN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_EVERY_LOGIN_REWARD;
        }

        /** Properties of a C_DAY_RECHARGE_INFO. */
        interface IC_DAY_RECHARGE_INFO {
        }

        /** Represents a C_DAY_RECHARGE_INFO. */
        class C_DAY_RECHARGE_INFO implements IC_DAY_RECHARGE_INFO {

            /**
             * Constructs a new C_DAY_RECHARGE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAY_RECHARGE_INFO);

            /**
             * Encodes the specified C_DAY_RECHARGE_INFO message. Does not implicitly {@link com.message.C_DAY_RECHARGE_INFO.verify|verify} messages.
             * @param message C_DAY_RECHARGE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAY_RECHARGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAY_RECHARGE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAY_RECHARGE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAY_RECHARGE_INFO;
        }

        /** Properties of a S_DAY_RECHARGE_INFO. */
        interface IS_DAY_RECHARGE_INFO {

            /** S_DAY_RECHARGE_INFO rechargeVal */
            rechargeVal?: (number|null);

            /** S_DAY_RECHARGE_INFO alreadyRewardId */
            alreadyRewardId?: (number[]|null);

            /** S_DAY_RECHARGE_INFO openDay */
            openDay?: (number|null);
        }

        /** Represents a S_DAY_RECHARGE_INFO. */
        class S_DAY_RECHARGE_INFO implements IS_DAY_RECHARGE_INFO {

            /**
             * Constructs a new S_DAY_RECHARGE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAY_RECHARGE_INFO);

            /** S_DAY_RECHARGE_INFO rechargeVal. */
            public rechargeVal: number;

            /** S_DAY_RECHARGE_INFO alreadyRewardId. */
            public alreadyRewardId: number[];

            /** S_DAY_RECHARGE_INFO openDay. */
            public openDay: number;

            /**
             * Encodes the specified S_DAY_RECHARGE_INFO message. Does not implicitly {@link com.message.S_DAY_RECHARGE_INFO.verify|verify} messages.
             * @param message S_DAY_RECHARGE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAY_RECHARGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAY_RECHARGE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAY_RECHARGE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAY_RECHARGE_INFO;
        }

        /** Properties of a C_DAY_RECHARGE_GET_REWARD. */
        interface IC_DAY_RECHARGE_GET_REWARD {

            /** C_DAY_RECHARGE_GET_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_DAY_RECHARGE_GET_REWARD. */
        class C_DAY_RECHARGE_GET_REWARD implements IC_DAY_RECHARGE_GET_REWARD {

            /**
             * Constructs a new C_DAY_RECHARGE_GET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAY_RECHARGE_GET_REWARD);

            /** C_DAY_RECHARGE_GET_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_DAY_RECHARGE_GET_REWARD message. Does not implicitly {@link com.message.C_DAY_RECHARGE_GET_REWARD.verify|verify} messages.
             * @param message C_DAY_RECHARGE_GET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAY_RECHARGE_GET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAY_RECHARGE_GET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAY_RECHARGE_GET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAY_RECHARGE_GET_REWARD;
        }

        /** Properties of a S_DAY_RECHARGE_GET_REWARD. */
        interface IS_DAY_RECHARGE_GET_REWARD {

            /** S_DAY_RECHARGE_GET_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a S_DAY_RECHARGE_GET_REWARD. */
        class S_DAY_RECHARGE_GET_REWARD implements IS_DAY_RECHARGE_GET_REWARD {

            /**
             * Constructs a new S_DAY_RECHARGE_GET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAY_RECHARGE_GET_REWARD);

            /** S_DAY_RECHARGE_GET_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified S_DAY_RECHARGE_GET_REWARD message. Does not implicitly {@link com.message.S_DAY_RECHARGE_GET_REWARD.verify|verify} messages.
             * @param message S_DAY_RECHARGE_GET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAY_RECHARGE_GET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAY_RECHARGE_GET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAY_RECHARGE_GET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAY_RECHARGE_GET_REWARD;
        }

        /** Properties of a C_DEBUG_COMMON. */
        interface IC_DEBUG_COMMON {

            /** C_DEBUG_COMMON debugString */
            debugString?: (string|null);
        }

        /** Represents a C_DEBUG_COMMON. */
        class C_DEBUG_COMMON implements IC_DEBUG_COMMON {

            /**
             * Constructs a new C_DEBUG_COMMON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DEBUG_COMMON);

            /** C_DEBUG_COMMON debugString. */
            public debugString: string;

            /**
             * Encodes the specified C_DEBUG_COMMON message. Does not implicitly {@link com.message.C_DEBUG_COMMON.verify|verify} messages.
             * @param message C_DEBUG_COMMON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DEBUG_COMMON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DEBUG_COMMON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DEBUG_COMMON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DEBUG_COMMON;
        }

        /** Properties of a S_DEBUG_COMMON. */
        interface IS_DEBUG_COMMON {

            /** S_DEBUG_COMMON debugString */
            debugString?: (string|null);
        }

        /** Represents a S_DEBUG_COMMON. */
        class S_DEBUG_COMMON implements IS_DEBUG_COMMON {

            /**
             * Constructs a new S_DEBUG_COMMON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DEBUG_COMMON);

            /** S_DEBUG_COMMON debugString. */
            public debugString: string;

            /**
             * Encodes the specified S_DEBUG_COMMON message. Does not implicitly {@link com.message.S_DEBUG_COMMON.verify|verify} messages.
             * @param message S_DEBUG_COMMON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DEBUG_COMMON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DEBUG_COMMON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DEBUG_COMMON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DEBUG_COMMON;
        }

        /** Properties of a C_GET_DEMON_INFO. */
        interface IC_GET_DEMON_INFO {
        }

        /** Represents a C_GET_DEMON_INFO. */
        class C_GET_DEMON_INFO implements IC_GET_DEMON_INFO {

            /**
             * Constructs a new C_GET_DEMON_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_DEMON_INFO);

            /**
             * Encodes the specified C_GET_DEMON_INFO message. Does not implicitly {@link com.message.C_GET_DEMON_INFO.verify|verify} messages.
             * @param message C_GET_DEMON_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_DEMON_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_DEMON_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_DEMON_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_DEMON_INFO;
        }

        /** Properties of a S_GET_DEMON_INFO. */
        interface IS_GET_DEMON_INFO {

            /** S_GET_DEMON_INFO id */
            id?: (number|null);

            /** S_GET_DEMON_INFO maxId */
            maxId?: (number|null);

            /** S_GET_DEMON_INFO reset */
            reset?: (number|null);

            /** S_GET_DEMON_INFO specialInfo */
            specialInfo?: (com.message.IDEMON_SPECIAL_INFO[]|null);

            /** S_GET_DEMON_INFO score */
            score?: (number|null);

            /** S_GET_DEMON_INFO formationInfo */
            formationInfo?: (com.message.IDEMON_FORMATION_INFO|null);

            /** S_GET_DEMON_INFO propInfo */
            propInfo?: (com.message.IDEMON_PROP_INFO|null);

            /** S_GET_DEMON_INFO monsterHps */
            monsterHps?: (number[]|null);

            /** S_GET_DEMON_INFO fight */
            fight?: (number|Long|null);

            /** S_GET_DEMON_INFO boxId */
            boxId?: (number|null);

            /** S_GET_DEMON_INFO boxDouble */
            boxDouble?: (number|null);

            /** S_GET_DEMON_INFO starDatas */
            starDatas?: (string|null);

            /** S_GET_DEMON_INFO fuBenIndex */
            fuBenIndex?: (number|null);
        }

        /** Represents a S_GET_DEMON_INFO. */
        class S_GET_DEMON_INFO implements IS_GET_DEMON_INFO {

            /**
             * Constructs a new S_GET_DEMON_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_DEMON_INFO);

            /** S_GET_DEMON_INFO id. */
            public id: number;

            /** S_GET_DEMON_INFO maxId. */
            public maxId: number;

            /** S_GET_DEMON_INFO reset. */
            public reset: number;

            /** S_GET_DEMON_INFO specialInfo. */
            public specialInfo: com.message.IDEMON_SPECIAL_INFO[];

            /** S_GET_DEMON_INFO score. */
            public score: number;

            /** S_GET_DEMON_INFO formationInfo. */
            public formationInfo?: (com.message.IDEMON_FORMATION_INFO|null);

            /** S_GET_DEMON_INFO propInfo. */
            public propInfo?: (com.message.IDEMON_PROP_INFO|null);

            /** S_GET_DEMON_INFO monsterHps. */
            public monsterHps: number[];

            /** S_GET_DEMON_INFO fight. */
            public fight: (number|Long);

            /** S_GET_DEMON_INFO boxId. */
            public boxId: number;

            /** S_GET_DEMON_INFO boxDouble. */
            public boxDouble: number;

            /** S_GET_DEMON_INFO starDatas. */
            public starDatas: string;

            /** S_GET_DEMON_INFO fuBenIndex. */
            public fuBenIndex: number;

            /**
             * Encodes the specified S_GET_DEMON_INFO message. Does not implicitly {@link com.message.S_GET_DEMON_INFO.verify|verify} messages.
             * @param message S_GET_DEMON_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_DEMON_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_DEMON_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_DEMON_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_DEMON_INFO;
        }

        /** Properties of a DEMON_SPECIAL_INFO. */
        interface IDEMON_SPECIAL_INFO {

            /** DEMON_SPECIAL_INFO id */
            id?: (number|null);

            /** DEMON_SPECIAL_INFO vals */
            vals?: (number[]|null);

            /** DEMON_SPECIAL_INFO status */
            status?: (number[]|null);
        }

        /** Represents a DEMON_SPECIAL_INFO. */
        class DEMON_SPECIAL_INFO implements IDEMON_SPECIAL_INFO {

            /**
             * Constructs a new DEMON_SPECIAL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IDEMON_SPECIAL_INFO);

            /** DEMON_SPECIAL_INFO id. */
            public id: number;

            /** DEMON_SPECIAL_INFO vals. */
            public vals: number[];

            /** DEMON_SPECIAL_INFO status. */
            public status: number[];

            /**
             * Encodes the specified DEMON_SPECIAL_INFO message. Does not implicitly {@link com.message.DEMON_SPECIAL_INFO.verify|verify} messages.
             * @param message DEMON_SPECIAL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IDEMON_SPECIAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DEMON_SPECIAL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DEMON_SPECIAL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.DEMON_SPECIAL_INFO;
        }

        /** Properties of a DEMON_FORMATION_INFO. */
        interface IDEMON_FORMATION_INFO {

            /** DEMON_FORMATION_INFO posHero */
            posHero?: (number[]|null);

            /** DEMON_FORMATION_INFO indexHero */
            indexHero?: (number[]|null);

            /** DEMON_FORMATION_INFO hps */
            hps?: (number[]|null);
        }

        /** Represents a DEMON_FORMATION_INFO. */
        class DEMON_FORMATION_INFO implements IDEMON_FORMATION_INFO {

            /**
             * Constructs a new DEMON_FORMATION_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IDEMON_FORMATION_INFO);

            /** DEMON_FORMATION_INFO posHero. */
            public posHero: number[];

            /** DEMON_FORMATION_INFO indexHero. */
            public indexHero: number[];

            /** DEMON_FORMATION_INFO hps. */
            public hps: number[];

            /**
             * Encodes the specified DEMON_FORMATION_INFO message. Does not implicitly {@link com.message.DEMON_FORMATION_INFO.verify|verify} messages.
             * @param message DEMON_FORMATION_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IDEMON_FORMATION_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DEMON_FORMATION_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DEMON_FORMATION_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.DEMON_FORMATION_INFO;
        }

        /** Properties of a DEMON_PROP_INFO. */
        interface IDEMON_PROP_INFO {

            /** DEMON_PROP_INFO propIds */
            propIds?: (number[]|null);
        }

        /** Represents a DEMON_PROP_INFO. */
        class DEMON_PROP_INFO implements IDEMON_PROP_INFO {

            /**
             * Constructs a new DEMON_PROP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IDEMON_PROP_INFO);

            /** DEMON_PROP_INFO propIds. */
            public propIds: number[];

            /**
             * Encodes the specified DEMON_PROP_INFO message. Does not implicitly {@link com.message.DEMON_PROP_INFO.verify|verify} messages.
             * @param message DEMON_PROP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IDEMON_PROP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DEMON_PROP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DEMON_PROP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.DEMON_PROP_INFO;
        }

        /** Properties of a C_SET_DEMON_FORMATION_INFO. */
        interface IC_SET_DEMON_FORMATION_INFO {

            /** C_SET_DEMON_FORMATION_INFO type */
            type?: (number|null);

            /** C_SET_DEMON_FORMATION_INFO posHero */
            posHero?: (number[]|null);

            /** C_SET_DEMON_FORMATION_INFO indexHero */
            indexHero?: (number[]|null);
        }

        /** Represents a C_SET_DEMON_FORMATION_INFO. */
        class C_SET_DEMON_FORMATION_INFO implements IC_SET_DEMON_FORMATION_INFO {

            /**
             * Constructs a new C_SET_DEMON_FORMATION_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SET_DEMON_FORMATION_INFO);

            /** C_SET_DEMON_FORMATION_INFO type. */
            public type: number;

            /** C_SET_DEMON_FORMATION_INFO posHero. */
            public posHero: number[];

            /** C_SET_DEMON_FORMATION_INFO indexHero. */
            public indexHero: number[];

            /**
             * Encodes the specified C_SET_DEMON_FORMATION_INFO message. Does not implicitly {@link com.message.C_SET_DEMON_FORMATION_INFO.verify|verify} messages.
             * @param message C_SET_DEMON_FORMATION_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SET_DEMON_FORMATION_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SET_DEMON_FORMATION_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SET_DEMON_FORMATION_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SET_DEMON_FORMATION_INFO;
        }

        /** Properties of a S_SET_DEMON_FORMATION_INFO. */
        interface IS_SET_DEMON_FORMATION_INFO {

            /** S_SET_DEMON_FORMATION_INFO type */
            type?: (number|null);

            /** S_SET_DEMON_FORMATION_INFO demoinfo */
            demoinfo?: (com.message.IDEMON_FORMATION_INFO|null);
        }

        /** Represents a S_SET_DEMON_FORMATION_INFO. */
        class S_SET_DEMON_FORMATION_INFO implements IS_SET_DEMON_FORMATION_INFO {

            /**
             * Constructs a new S_SET_DEMON_FORMATION_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SET_DEMON_FORMATION_INFO);

            /** S_SET_DEMON_FORMATION_INFO type. */
            public type: number;

            /** S_SET_DEMON_FORMATION_INFO demoinfo. */
            public demoinfo?: (com.message.IDEMON_FORMATION_INFO|null);

            /**
             * Encodes the specified S_SET_DEMON_FORMATION_INFO message. Does not implicitly {@link com.message.S_SET_DEMON_FORMATION_INFO.verify|verify} messages.
             * @param message S_SET_DEMON_FORMATION_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SET_DEMON_FORMATION_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SET_DEMON_FORMATION_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SET_DEMON_FORMATION_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SET_DEMON_FORMATION_INFO;
        }

        /** Properties of a C_DEMON_BUY_BUFF. */
        interface IC_DEMON_BUY_BUFF {

            /** C_DEMON_BUY_BUFF nodeId */
            nodeId?: (number|null);

            /** C_DEMON_BUY_BUFF id */
            id?: (number|null);

            /** C_DEMON_BUY_BUFF heroId */
            heroId?: (number|null);
        }

        /** Represents a C_DEMON_BUY_BUFF. */
        class C_DEMON_BUY_BUFF implements IC_DEMON_BUY_BUFF {

            /**
             * Constructs a new C_DEMON_BUY_BUFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DEMON_BUY_BUFF);

            /** C_DEMON_BUY_BUFF nodeId. */
            public nodeId: number;

            /** C_DEMON_BUY_BUFF id. */
            public id: number;

            /** C_DEMON_BUY_BUFF heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_DEMON_BUY_BUFF message. Does not implicitly {@link com.message.C_DEMON_BUY_BUFF.verify|verify} messages.
             * @param message C_DEMON_BUY_BUFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DEMON_BUY_BUFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DEMON_BUY_BUFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DEMON_BUY_BUFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DEMON_BUY_BUFF;
        }

        /** Properties of a S_DEMON_BUY_BUFF. */
        interface IS_DEMON_BUY_BUFF {

            /** S_DEMON_BUY_BUFF nodeId */
            nodeId?: (number|null);

            /** S_DEMON_BUY_BUFF id */
            id?: (number|null);

            /** S_DEMON_BUY_BUFF formationInfo */
            formationInfo?: (com.message.IDEMON_FORMATION_INFO|null);

            /** S_DEMON_BUY_BUFF proInfo */
            proInfo?: (com.message.IDEMON_PROP_INFO|null);

            /** S_DEMON_BUY_BUFF score */
            score?: (number|null);
        }

        /** Represents a S_DEMON_BUY_BUFF. */
        class S_DEMON_BUY_BUFF implements IS_DEMON_BUY_BUFF {

            /**
             * Constructs a new S_DEMON_BUY_BUFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DEMON_BUY_BUFF);

            /** S_DEMON_BUY_BUFF nodeId. */
            public nodeId: number;

            /** S_DEMON_BUY_BUFF id. */
            public id: number;

            /** S_DEMON_BUY_BUFF formationInfo. */
            public formationInfo?: (com.message.IDEMON_FORMATION_INFO|null);

            /** S_DEMON_BUY_BUFF proInfo. */
            public proInfo?: (com.message.IDEMON_PROP_INFO|null);

            /** S_DEMON_BUY_BUFF score. */
            public score: number;

            /**
             * Encodes the specified S_DEMON_BUY_BUFF message. Does not implicitly {@link com.message.S_DEMON_BUY_BUFF.verify|verify} messages.
             * @param message S_DEMON_BUY_BUFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DEMON_BUY_BUFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DEMON_BUY_BUFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DEMON_BUY_BUFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DEMON_BUY_BUFF;
        }

        /** Properties of a C_DEMON_BUY_ITEM. */
        interface IC_DEMON_BUY_ITEM {

            /** C_DEMON_BUY_ITEM id */
            id?: (number|null);
        }

        /** Represents a C_DEMON_BUY_ITEM. */
        class C_DEMON_BUY_ITEM implements IC_DEMON_BUY_ITEM {

            /**
             * Constructs a new C_DEMON_BUY_ITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DEMON_BUY_ITEM);

            /** C_DEMON_BUY_ITEM id. */
            public id: number;

            /**
             * Encodes the specified C_DEMON_BUY_ITEM message. Does not implicitly {@link com.message.C_DEMON_BUY_ITEM.verify|verify} messages.
             * @param message C_DEMON_BUY_ITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DEMON_BUY_ITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DEMON_BUY_ITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DEMON_BUY_ITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DEMON_BUY_ITEM;
        }

        /** Properties of a S_DEMON_BUY_ITEM. */
        interface IS_DEMON_BUY_ITEM {

            /** S_DEMON_BUY_ITEM boxId */
            boxId?: (number|null);

            /** S_DEMON_BUY_ITEM boxDouble */
            boxDouble?: (number|null);

            /** S_DEMON_BUY_ITEM reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_DEMON_BUY_ITEM. */
        class S_DEMON_BUY_ITEM implements IS_DEMON_BUY_ITEM {

            /**
             * Constructs a new S_DEMON_BUY_ITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DEMON_BUY_ITEM);

            /** S_DEMON_BUY_ITEM boxId. */
            public boxId: number;

            /** S_DEMON_BUY_ITEM boxDouble. */
            public boxDouble: number;

            /** S_DEMON_BUY_ITEM reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_DEMON_BUY_ITEM message. Does not implicitly {@link com.message.S_DEMON_BUY_ITEM.verify|verify} messages.
             * @param message S_DEMON_BUY_ITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DEMON_BUY_ITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DEMON_BUY_ITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DEMON_BUY_ITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DEMON_BUY_ITEM;
        }

        /** Properties of a C_DEMON_RESET. */
        interface IC_DEMON_RESET {
        }

        /** Represents a C_DEMON_RESET. */
        class C_DEMON_RESET implements IC_DEMON_RESET {

            /**
             * Constructs a new C_DEMON_RESET.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DEMON_RESET);

            /**
             * Encodes the specified C_DEMON_RESET message. Does not implicitly {@link com.message.C_DEMON_RESET.verify|verify} messages.
             * @param message C_DEMON_RESET message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DEMON_RESET, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DEMON_RESET message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DEMON_RESET
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DEMON_RESET;
        }

        /** Properties of a S_DEMON_RESET. */
        interface IS_DEMON_RESET {
        }

        /** Represents a S_DEMON_RESET. */
        class S_DEMON_RESET implements IS_DEMON_RESET {

            /**
             * Constructs a new S_DEMON_RESET.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DEMON_RESET);

            /**
             * Encodes the specified S_DEMON_RESET message. Does not implicitly {@link com.message.S_DEMON_RESET.verify|verify} messages.
             * @param message S_DEMON_RESET message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DEMON_RESET, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DEMON_RESET message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DEMON_RESET
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DEMON_RESET;
        }

        /** Properties of a C_DEMON_SWEEP. */
        interface IC_DEMON_SWEEP {
        }

        /** Represents a C_DEMON_SWEEP. */
        class C_DEMON_SWEEP implements IC_DEMON_SWEEP {

            /**
             * Constructs a new C_DEMON_SWEEP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DEMON_SWEEP);

            /**
             * Encodes the specified C_DEMON_SWEEP message. Does not implicitly {@link com.message.C_DEMON_SWEEP.verify|verify} messages.
             * @param message C_DEMON_SWEEP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DEMON_SWEEP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DEMON_SWEEP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DEMON_SWEEP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DEMON_SWEEP;
        }

        /** Properties of a S_DEMON_SWEEP. */
        interface IS_DEMON_SWEEP {

            /** S_DEMON_SWEEP id */
            id?: (number|null);

            /** S_DEMON_SWEEP reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_DEMON_SWEEP. */
        class S_DEMON_SWEEP implements IS_DEMON_SWEEP {

            /**
             * Constructs a new S_DEMON_SWEEP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DEMON_SWEEP);

            /** S_DEMON_SWEEP id. */
            public id: number;

            /** S_DEMON_SWEEP reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_DEMON_SWEEP message. Does not implicitly {@link com.message.S_DEMON_SWEEP.verify|verify} messages.
             * @param message S_DEMON_SWEEP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DEMON_SWEEP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DEMON_SWEEP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DEMON_SWEEP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DEMON_SWEEP;
        }

        /** Properties of a C_DIAMOND_WHEEL_INFO. */
        interface IC_DIAMOND_WHEEL_INFO {
        }

        /** Represents a C_DIAMOND_WHEEL_INFO. */
        class C_DIAMOND_WHEEL_INFO implements IC_DIAMOND_WHEEL_INFO {

            /**
             * Constructs a new C_DIAMOND_WHEEL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DIAMOND_WHEEL_INFO);

            /**
             * Encodes the specified C_DIAMOND_WHEEL_INFO message. Does not implicitly {@link com.message.C_DIAMOND_WHEEL_INFO.verify|verify} messages.
             * @param message C_DIAMOND_WHEEL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DIAMOND_WHEEL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DIAMOND_WHEEL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DIAMOND_WHEEL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DIAMOND_WHEEL_INFO;
        }

        /** Properties of a S_DIAMOND_WHEEL_INFO. */
        interface IS_DIAMOND_WHEEL_INFO {

            /** S_DIAMOND_WHEEL_INFO cosumeDiamond */
            cosumeDiamond?: (number|null);

            /** S_DIAMOND_WHEEL_INFO taskId */
            taskId?: (number|null);

            /** S_DIAMOND_WHEEL_INFO processValue */
            processValue?: (number|null);

            /** S_DIAMOND_WHEEL_INFO records */
            records?: (com.message.IDIAMOND_WHEEL_RECORD[]|null);
        }

        /** Represents a S_DIAMOND_WHEEL_INFO. */
        class S_DIAMOND_WHEEL_INFO implements IS_DIAMOND_WHEEL_INFO {

            /**
             * Constructs a new S_DIAMOND_WHEEL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DIAMOND_WHEEL_INFO);

            /** S_DIAMOND_WHEEL_INFO cosumeDiamond. */
            public cosumeDiamond: number;

            /** S_DIAMOND_WHEEL_INFO taskId. */
            public taskId: number;

            /** S_DIAMOND_WHEEL_INFO processValue. */
            public processValue: number;

            /** S_DIAMOND_WHEEL_INFO records. */
            public records: com.message.IDIAMOND_WHEEL_RECORD[];

            /**
             * Encodes the specified S_DIAMOND_WHEEL_INFO message. Does not implicitly {@link com.message.S_DIAMOND_WHEEL_INFO.verify|verify} messages.
             * @param message S_DIAMOND_WHEEL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DIAMOND_WHEEL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DIAMOND_WHEEL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DIAMOND_WHEEL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DIAMOND_WHEEL_INFO;
        }

        /** Properties of a C_DIAMOND_WHEEL_REWARD. */
        interface IC_DIAMOND_WHEEL_REWARD {

            /** C_DIAMOND_WHEEL_REWARD cosumeDiamond */
            cosumeDiamond?: (number|null);
        }

        /** Represents a C_DIAMOND_WHEEL_REWARD. */
        class C_DIAMOND_WHEEL_REWARD implements IC_DIAMOND_WHEEL_REWARD {

            /**
             * Constructs a new C_DIAMOND_WHEEL_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DIAMOND_WHEEL_REWARD);

            /** C_DIAMOND_WHEEL_REWARD cosumeDiamond. */
            public cosumeDiamond: number;

            /**
             * Encodes the specified C_DIAMOND_WHEEL_REWARD message. Does not implicitly {@link com.message.C_DIAMOND_WHEEL_REWARD.verify|verify} messages.
             * @param message C_DIAMOND_WHEEL_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DIAMOND_WHEEL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DIAMOND_WHEEL_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DIAMOND_WHEEL_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DIAMOND_WHEEL_REWARD;
        }

        /** Properties of a S_DIAMOND_WHEEL_REWARD. */
        interface IS_DIAMOND_WHEEL_REWARD {

            /** S_DIAMOND_WHEEL_REWARD rewardDiamond */
            rewardDiamond?: (number|null);

            /** S_DIAMOND_WHEEL_REWARD rewardIndex */
            rewardIndex?: (number|null);

            /** S_DIAMOND_WHEEL_REWARD cosumeDiamond */
            cosumeDiamond?: (number|null);

            /** S_DIAMOND_WHEEL_REWARD taskId */
            taskId?: (number|null);

            /** S_DIAMOND_WHEEL_REWARD processValue */
            processValue?: (number|null);

            /** S_DIAMOND_WHEEL_REWARD records */
            records?: (com.message.IDIAMOND_WHEEL_RECORD[]|null);
        }

        /** Represents a S_DIAMOND_WHEEL_REWARD. */
        class S_DIAMOND_WHEEL_REWARD implements IS_DIAMOND_WHEEL_REWARD {

            /**
             * Constructs a new S_DIAMOND_WHEEL_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DIAMOND_WHEEL_REWARD);

            /** S_DIAMOND_WHEEL_REWARD rewardDiamond. */
            public rewardDiamond: number;

            /** S_DIAMOND_WHEEL_REWARD rewardIndex. */
            public rewardIndex: number;

            /** S_DIAMOND_WHEEL_REWARD cosumeDiamond. */
            public cosumeDiamond: number;

            /** S_DIAMOND_WHEEL_REWARD taskId. */
            public taskId: number;

            /** S_DIAMOND_WHEEL_REWARD processValue. */
            public processValue: number;

            /** S_DIAMOND_WHEEL_REWARD records. */
            public records: com.message.IDIAMOND_WHEEL_RECORD[];

            /**
             * Encodes the specified S_DIAMOND_WHEEL_REWARD message. Does not implicitly {@link com.message.S_DIAMOND_WHEEL_REWARD.verify|verify} messages.
             * @param message S_DIAMOND_WHEEL_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DIAMOND_WHEEL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DIAMOND_WHEEL_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DIAMOND_WHEEL_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DIAMOND_WHEEL_REWARD;
        }

        /** Properties of a DIAMOND_WHEEL_RECORD. */
        interface IDIAMOND_WHEEL_RECORD {

            /** DIAMOND_WHEEL_RECORD nickName */
            nickName?: (string|null);

            /** DIAMOND_WHEEL_RECORD rewardIndex */
            rewardIndex?: (number|null);

            /** DIAMOND_WHEEL_RECORD diamondCount */
            diamondCount?: (number|null);
        }

        /** Represents a DIAMOND_WHEEL_RECORD. */
        class DIAMOND_WHEEL_RECORD implements IDIAMOND_WHEEL_RECORD {

            /**
             * Constructs a new DIAMOND_WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IDIAMOND_WHEEL_RECORD);

            /** DIAMOND_WHEEL_RECORD nickName. */
            public nickName: string;

            /** DIAMOND_WHEEL_RECORD rewardIndex. */
            public rewardIndex: number;

            /** DIAMOND_WHEEL_RECORD diamondCount. */
            public diamondCount: number;

            /**
             * Encodes the specified DIAMOND_WHEEL_RECORD message. Does not implicitly {@link com.message.DIAMOND_WHEEL_RECORD.verify|verify} messages.
             * @param message DIAMOND_WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IDIAMOND_WHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DIAMOND_WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DIAMOND_WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.DIAMOND_WHEEL_RECORD;
        }

        /** Properties of a C_DIAMOND_WHEEL_RECORD. */
        interface IC_DIAMOND_WHEEL_RECORD {
        }

        /** Represents a C_DIAMOND_WHEEL_RECORD. */
        class C_DIAMOND_WHEEL_RECORD implements IC_DIAMOND_WHEEL_RECORD {

            /**
             * Constructs a new C_DIAMOND_WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DIAMOND_WHEEL_RECORD);

            /**
             * Encodes the specified C_DIAMOND_WHEEL_RECORD message. Does not implicitly {@link com.message.C_DIAMOND_WHEEL_RECORD.verify|verify} messages.
             * @param message C_DIAMOND_WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DIAMOND_WHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DIAMOND_WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DIAMOND_WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DIAMOND_WHEEL_RECORD;
        }

        /** Properties of a S_DIAMOND_WHEEL_RECORD. */
        interface IS_DIAMOND_WHEEL_RECORD {

            /** S_DIAMOND_WHEEL_RECORD records */
            records?: (com.message.IDIAMOND_WHEEL_RECORD[]|null);
        }

        /** Represents a S_DIAMOND_WHEEL_RECORD. */
        class S_DIAMOND_WHEEL_RECORD implements IS_DIAMOND_WHEEL_RECORD {

            /**
             * Constructs a new S_DIAMOND_WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DIAMOND_WHEEL_RECORD);

            /** S_DIAMOND_WHEEL_RECORD records. */
            public records: com.message.IDIAMOND_WHEEL_RECORD[];

            /**
             * Encodes the specified S_DIAMOND_WHEEL_RECORD message. Does not implicitly {@link com.message.S_DIAMOND_WHEEL_RECORD.verify|verify} messages.
             * @param message S_DIAMOND_WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DIAMOND_WHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DIAMOND_WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DIAMOND_WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DIAMOND_WHEEL_RECORD;
        }

        /** Properties of a C_EQUIPMENT_SLOT_INFO. */
        interface IC_EQUIPMENT_SLOT_INFO {
        }

        /** Represents a C_EQUIPMENT_SLOT_INFO. */
        class C_EQUIPMENT_SLOT_INFO implements IC_EQUIPMENT_SLOT_INFO {

            /**
             * Constructs a new C_EQUIPMENT_SLOT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_SLOT_INFO);

            /**
             * Encodes the specified C_EQUIPMENT_SLOT_INFO message. Does not implicitly {@link com.message.C_EQUIPMENT_SLOT_INFO.verify|verify} messages.
             * @param message C_EQUIPMENT_SLOT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_SLOT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_SLOT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_SLOT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_SLOT_INFO;
        }

        /** Properties of a S_EQUIPMENT_SLOT_INFO. */
        interface IS_EQUIPMENT_SLOT_INFO {

            /** S_EQUIPMENT_SLOT_INFO einfo */
            einfo?: ({ [k: string]: com.message.IEQUIPMENT_FORMATION_INFO }|null);
        }

        /** Represents a S_EQUIPMENT_SLOT_INFO. */
        class S_EQUIPMENT_SLOT_INFO implements IS_EQUIPMENT_SLOT_INFO {

            /**
             * Constructs a new S_EQUIPMENT_SLOT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_SLOT_INFO);

            /** S_EQUIPMENT_SLOT_INFO einfo. */
            public einfo: { [k: string]: com.message.IEQUIPMENT_FORMATION_INFO };

            /**
             * Encodes the specified S_EQUIPMENT_SLOT_INFO message. Does not implicitly {@link com.message.S_EQUIPMENT_SLOT_INFO.verify|verify} messages.
             * @param message S_EQUIPMENT_SLOT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_SLOT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_SLOT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_SLOT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_SLOT_INFO;
        }

        /** Properties of a EQUIPMENT_FORMATION_INFO. */
        interface IEQUIPMENT_FORMATION_INFO {

            /** EQUIPMENT_FORMATION_INFO eSlotType */
            eSlotType?: ({ [k: string]: com.message.IEQUIPMENT_INFO_FOR_TYPE }|null);
        }

        /** Represents a EQUIPMENT_FORMATION_INFO. */
        class EQUIPMENT_FORMATION_INFO implements IEQUIPMENT_FORMATION_INFO {

            /**
             * Constructs a new EQUIPMENT_FORMATION_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IEQUIPMENT_FORMATION_INFO);

            /** EQUIPMENT_FORMATION_INFO eSlotType. */
            public eSlotType: { [k: string]: com.message.IEQUIPMENT_INFO_FOR_TYPE };

            /**
             * Encodes the specified EQUIPMENT_FORMATION_INFO message. Does not implicitly {@link com.message.EQUIPMENT_FORMATION_INFO.verify|verify} messages.
             * @param message EQUIPMENT_FORMATION_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IEQUIPMENT_FORMATION_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a EQUIPMENT_FORMATION_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EQUIPMENT_FORMATION_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.EQUIPMENT_FORMATION_INFO;
        }

        /** Properties of a EQUIPMENT_INFO_FOR_TYPE. */
        interface IEQUIPMENT_INFO_FOR_TYPE {

            /** EQUIPMENT_INFO_FOR_TYPE eSlotinfo */
            eSlotinfo?: (com.message.IEQUIPMENT_SLOT_INFO[]|null);
        }

        /** Represents a EQUIPMENT_INFO_FOR_TYPE. */
        class EQUIPMENT_INFO_FOR_TYPE implements IEQUIPMENT_INFO_FOR_TYPE {

            /**
             * Constructs a new EQUIPMENT_INFO_FOR_TYPE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IEQUIPMENT_INFO_FOR_TYPE);

            /** EQUIPMENT_INFO_FOR_TYPE eSlotinfo. */
            public eSlotinfo: com.message.IEQUIPMENT_SLOT_INFO[];

            /**
             * Encodes the specified EQUIPMENT_INFO_FOR_TYPE message. Does not implicitly {@link com.message.EQUIPMENT_INFO_FOR_TYPE.verify|verify} messages.
             * @param message EQUIPMENT_INFO_FOR_TYPE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IEQUIPMENT_INFO_FOR_TYPE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a EQUIPMENT_INFO_FOR_TYPE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EQUIPMENT_INFO_FOR_TYPE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.EQUIPMENT_INFO_FOR_TYPE;
        }

        /** Properties of a EQUIPMENT_SLOT_INFO. */
        interface IEQUIPMENT_SLOT_INFO {

            /** EQUIPMENT_SLOT_INFO equipId */
            equipId?: (number|Long|null);

            /** EQUIPMENT_SLOT_INFO equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** EQUIPMENT_SLOT_INFO itemId */
            itemId?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentStrengthenLevel */
            equipmentStrengthenLevel?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentGemLevel */
            equipmentGemLevel?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentStar */
            equipmentStar?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentStarExp */
            equipmentStarExp?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentEnchanting */
            equipmentEnchanting?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentEnchantingExp */
            equipmentEnchantingExp?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentSprite */
            equipmentSprite?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentSpriteExp */
            equipmentSpriteExp?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentWake */
            equipmentWake?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentWakeLevel */
            equipmentWakeLevel?: (number|null);

            /** EQUIPMENT_SLOT_INFO equipmentSuitLevel */
            equipmentSuitLevel?: (number|null);

            /** EQUIPMENT_SLOT_INFO goodsMsg */
            goodsMsg?: (com.message.IBackpackGoodsMsg|null);
        }

        /** Represents a EQUIPMENT_SLOT_INFO. */
        class EQUIPMENT_SLOT_INFO implements IEQUIPMENT_SLOT_INFO {

            /**
             * Constructs a new EQUIPMENT_SLOT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IEQUIPMENT_SLOT_INFO);

            /** EQUIPMENT_SLOT_INFO equipId. */
            public equipId: (number|Long);

            /** EQUIPMENT_SLOT_INFO equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** EQUIPMENT_SLOT_INFO itemId. */
            public itemId: number;

            /** EQUIPMENT_SLOT_INFO equipmentStrengthenLevel. */
            public equipmentStrengthenLevel: number;

            /** EQUIPMENT_SLOT_INFO equipmentGemLevel. */
            public equipmentGemLevel: number;

            /** EQUIPMENT_SLOT_INFO equipmentStar. */
            public equipmentStar: number;

            /** EQUIPMENT_SLOT_INFO equipmentStarExp. */
            public equipmentStarExp: number;

            /** EQUIPMENT_SLOT_INFO equipmentEnchanting. */
            public equipmentEnchanting: number;

            /** EQUIPMENT_SLOT_INFO equipmentEnchantingExp. */
            public equipmentEnchantingExp: number;

            /** EQUIPMENT_SLOT_INFO equipmentSprite. */
            public equipmentSprite: number;

            /** EQUIPMENT_SLOT_INFO equipmentSpriteExp. */
            public equipmentSpriteExp: number;

            /** EQUIPMENT_SLOT_INFO equipmentWake. */
            public equipmentWake: number;

            /** EQUIPMENT_SLOT_INFO equipmentWakeLevel. */
            public equipmentWakeLevel: number;

            /** EQUIPMENT_SLOT_INFO equipmentSuitLevel. */
            public equipmentSuitLevel: number;

            /** EQUIPMENT_SLOT_INFO goodsMsg. */
            public goodsMsg?: (com.message.IBackpackGoodsMsg|null);

            /**
             * Encodes the specified EQUIPMENT_SLOT_INFO message. Does not implicitly {@link com.message.EQUIPMENT_SLOT_INFO.verify|verify} messages.
             * @param message EQUIPMENT_SLOT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IEQUIPMENT_SLOT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a EQUIPMENT_SLOT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EQUIPMENT_SLOT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.EQUIPMENT_SLOT_INFO;
        }

        /** Properties of a C_EQUIPMENT_SWITCH. */
        interface IC_EQUIPMENT_SWITCH {

            /** C_EQUIPMENT_SWITCH formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_SWITCH equipId */
            equipId?: (number|Long|null);

            /** C_EQUIPMENT_SWITCH equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_SWITCH equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_SWITCH. */
        class C_EQUIPMENT_SWITCH implements IC_EQUIPMENT_SWITCH {

            /**
             * Constructs a new C_EQUIPMENT_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_SWITCH);

            /** C_EQUIPMENT_SWITCH formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_SWITCH equipId. */
            public equipId: (number|Long);

            /** C_EQUIPMENT_SWITCH equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_SWITCH equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_SWITCH message. Does not implicitly {@link com.message.C_EQUIPMENT_SWITCH.verify|verify} messages.
             * @param message C_EQUIPMENT_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_SWITCH;
        }

        /** Properties of a S_EQUIPMENT_SWITCH. */
        interface IS_EQUIPMENT_SWITCH {

            /** S_EQUIPMENT_SWITCH index */
            index?: (number|null);

            /** S_EQUIPMENT_SWITCH equipId */
            equipId?: (number|Long|null);

            /** S_EQUIPMENT_SWITCH equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_SWITCH equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_SWITCH itemId */
            itemId?: (number|null);
        }

        /** Represents a S_EQUIPMENT_SWITCH. */
        class S_EQUIPMENT_SWITCH implements IS_EQUIPMENT_SWITCH {

            /**
             * Constructs a new S_EQUIPMENT_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_SWITCH);

            /** S_EQUIPMENT_SWITCH index. */
            public index: number;

            /** S_EQUIPMENT_SWITCH equipId. */
            public equipId: (number|Long);

            /** S_EQUIPMENT_SWITCH equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_SWITCH equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_SWITCH itemId. */
            public itemId: number;

            /**
             * Encodes the specified S_EQUIPMENT_SWITCH message. Does not implicitly {@link com.message.S_EQUIPMENT_SWITCH.verify|verify} messages.
             * @param message S_EQUIPMENT_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_SWITCH;
        }

        /** Properties of a C_EQUIPMENT_DRESS_OFF. */
        interface IC_EQUIPMENT_DRESS_OFF {

            /** C_EQUIPMENT_DRESS_OFF formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_DRESS_OFF equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_DRESS_OFF equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_DRESS_OFF. */
        class C_EQUIPMENT_DRESS_OFF implements IC_EQUIPMENT_DRESS_OFF {

            /**
             * Constructs a new C_EQUIPMENT_DRESS_OFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_DRESS_OFF);

            /** C_EQUIPMENT_DRESS_OFF formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_DRESS_OFF equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_DRESS_OFF equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_DRESS_OFF message. Does not implicitly {@link com.message.C_EQUIPMENT_DRESS_OFF.verify|verify} messages.
             * @param message C_EQUIPMENT_DRESS_OFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_DRESS_OFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_DRESS_OFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_DRESS_OFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_DRESS_OFF;
        }

        /** Properties of a S_EQUIPMENT_DRESS_OFF. */
        interface IS_EQUIPMENT_DRESS_OFF {

            /** S_EQUIPMENT_DRESS_OFF index */
            index?: (number|null);

            /** S_EQUIPMENT_DRESS_OFF equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_DRESS_OFF equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_DRESS_OFF itemId */
            itemId?: (number|null);
        }

        /** Represents a S_EQUIPMENT_DRESS_OFF. */
        class S_EQUIPMENT_DRESS_OFF implements IS_EQUIPMENT_DRESS_OFF {

            /**
             * Constructs a new S_EQUIPMENT_DRESS_OFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_DRESS_OFF);

            /** S_EQUIPMENT_DRESS_OFF index. */
            public index: number;

            /** S_EQUIPMENT_DRESS_OFF equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_DRESS_OFF equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_DRESS_OFF itemId. */
            public itemId: number;

            /**
             * Encodes the specified S_EQUIPMENT_DRESS_OFF message. Does not implicitly {@link com.message.S_EQUIPMENT_DRESS_OFF.verify|verify} messages.
             * @param message S_EQUIPMENT_DRESS_OFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_DRESS_OFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_DRESS_OFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_DRESS_OFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_DRESS_OFF;
        }

        /** Properties of a C_EQUIPMENT_FORMATION_SWITCH. */
        interface IC_EQUIPMENT_FORMATION_SWITCH {

            /** C_EQUIPMENT_FORMATION_SWITCH fromIndex */
            fromIndex?: (number|null);

            /** C_EQUIPMENT_FORMATION_SWITCH fromEquipmentType */
            fromEquipmentType?: (number|null);

            /** C_EQUIPMENT_FORMATION_SWITCH fromEquipIndex */
            fromEquipIndex?: (number|null);

            /** C_EQUIPMENT_FORMATION_SWITCH toIndex */
            toIndex?: (number|null);

            /** C_EQUIPMENT_FORMATION_SWITCH toEquipmentType */
            toEquipmentType?: (number|null);

            /** C_EQUIPMENT_FORMATION_SWITCH toEquipIndex */
            toEquipIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_FORMATION_SWITCH. */
        class C_EQUIPMENT_FORMATION_SWITCH implements IC_EQUIPMENT_FORMATION_SWITCH {

            /**
             * Constructs a new C_EQUIPMENT_FORMATION_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_FORMATION_SWITCH);

            /** C_EQUIPMENT_FORMATION_SWITCH fromIndex. */
            public fromIndex: number;

            /** C_EQUIPMENT_FORMATION_SWITCH fromEquipmentType. */
            public fromEquipmentType: number;

            /** C_EQUIPMENT_FORMATION_SWITCH fromEquipIndex. */
            public fromEquipIndex: number;

            /** C_EQUIPMENT_FORMATION_SWITCH toIndex. */
            public toIndex: number;

            /** C_EQUIPMENT_FORMATION_SWITCH toEquipmentType. */
            public toEquipmentType: number;

            /** C_EQUIPMENT_FORMATION_SWITCH toEquipIndex. */
            public toEquipIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_FORMATION_SWITCH message. Does not implicitly {@link com.message.C_EQUIPMENT_FORMATION_SWITCH.verify|verify} messages.
             * @param message C_EQUIPMENT_FORMATION_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_FORMATION_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_FORMATION_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_FORMATION_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_FORMATION_SWITCH;
        }

        /** Properties of a S_EQUIPMENT_FORMATION_SWITCH. */
        interface IS_EQUIPMENT_FORMATION_SWITCH {

            /** S_EQUIPMENT_FORMATION_SWITCH fromIndex */
            fromIndex?: (number|null);

            /** S_EQUIPMENT_FORMATION_SWITCH fromEquipId */
            fromEquipId?: (number|Long|null);

            /** S_EQUIPMENT_FORMATION_SWITCH fromEquipmentType */
            fromEquipmentType?: (number|null);

            /** S_EQUIPMENT_FORMATION_SWITCH fromEquipmentSlotIndex */
            fromEquipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_FORMATION_SWITCH fromItemId */
            fromItemId?: (number|null);

            /** S_EQUIPMENT_FORMATION_SWITCH toIndex */
            toIndex?: (number|null);

            /** S_EQUIPMENT_FORMATION_SWITCH toEquipId */
            toEquipId?: (number|Long|null);

            /** S_EQUIPMENT_FORMATION_SWITCH toEquipmentType */
            toEquipmentType?: (number|null);

            /** S_EQUIPMENT_FORMATION_SWITCH toEquipmentSlotIndex */
            toEquipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_FORMATION_SWITCH toItemId */
            toItemId?: (number|null);
        }

        /** Represents a S_EQUIPMENT_FORMATION_SWITCH. */
        class S_EQUIPMENT_FORMATION_SWITCH implements IS_EQUIPMENT_FORMATION_SWITCH {

            /**
             * Constructs a new S_EQUIPMENT_FORMATION_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_FORMATION_SWITCH);

            /** S_EQUIPMENT_FORMATION_SWITCH fromIndex. */
            public fromIndex: number;

            /** S_EQUIPMENT_FORMATION_SWITCH fromEquipId. */
            public fromEquipId: (number|Long);

            /** S_EQUIPMENT_FORMATION_SWITCH fromEquipmentType. */
            public fromEquipmentType: number;

            /** S_EQUIPMENT_FORMATION_SWITCH fromEquipmentSlotIndex. */
            public fromEquipmentSlotIndex: number;

            /** S_EQUIPMENT_FORMATION_SWITCH fromItemId. */
            public fromItemId: number;

            /** S_EQUIPMENT_FORMATION_SWITCH toIndex. */
            public toIndex: number;

            /** S_EQUIPMENT_FORMATION_SWITCH toEquipId. */
            public toEquipId: (number|Long);

            /** S_EQUIPMENT_FORMATION_SWITCH toEquipmentType. */
            public toEquipmentType: number;

            /** S_EQUIPMENT_FORMATION_SWITCH toEquipmentSlotIndex. */
            public toEquipmentSlotIndex: number;

            /** S_EQUIPMENT_FORMATION_SWITCH toItemId. */
            public toItemId: number;

            /**
             * Encodes the specified S_EQUIPMENT_FORMATION_SWITCH message. Does not implicitly {@link com.message.S_EQUIPMENT_FORMATION_SWITCH.verify|verify} messages.
             * @param message S_EQUIPMENT_FORMATION_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_FORMATION_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_FORMATION_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_FORMATION_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_FORMATION_SWITCH;
        }

        /** Properties of a C_ONEKEY_EQUIPMENT_SWITCH. */
        interface IC_ONEKEY_EQUIPMENT_SWITCH {

            /** C_ONEKEY_EQUIPMENT_SWITCH formationIndex */
            formationIndex?: (number|null);

            /** C_ONEKEY_EQUIPMENT_SWITCH equipmentType */
            equipmentType?: (number|null);
        }

        /** Represents a C_ONEKEY_EQUIPMENT_SWITCH. */
        class C_ONEKEY_EQUIPMENT_SWITCH implements IC_ONEKEY_EQUIPMENT_SWITCH {

            /**
             * Constructs a new C_ONEKEY_EQUIPMENT_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONEKEY_EQUIPMENT_SWITCH);

            /** C_ONEKEY_EQUIPMENT_SWITCH formationIndex. */
            public formationIndex: number;

            /** C_ONEKEY_EQUIPMENT_SWITCH equipmentType. */
            public equipmentType: number;

            /**
             * Encodes the specified C_ONEKEY_EQUIPMENT_SWITCH message. Does not implicitly {@link com.message.C_ONEKEY_EQUIPMENT_SWITCH.verify|verify} messages.
             * @param message C_ONEKEY_EQUIPMENT_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONEKEY_EQUIPMENT_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONEKEY_EQUIPMENT_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONEKEY_EQUIPMENT_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONEKEY_EQUIPMENT_SWITCH;
        }

        /** Properties of a S_ONEKEY_EQUIPMENT_SWITCH. */
        interface IS_ONEKEY_EQUIPMENT_SWITCH {

            /** S_ONEKEY_EQUIPMENT_SWITCH index */
            index?: (number|null);

            /** S_ONEKEY_EQUIPMENT_SWITCH equipmentType */
            equipmentType?: (number|null);

            /** S_ONEKEY_EQUIPMENT_SWITCH eSlotinfo */
            eSlotinfo?: (com.message.IEQUIPMENT_SLOT_INFO[]|null);
        }

        /** Represents a S_ONEKEY_EQUIPMENT_SWITCH. */
        class S_ONEKEY_EQUIPMENT_SWITCH implements IS_ONEKEY_EQUIPMENT_SWITCH {

            /**
             * Constructs a new S_ONEKEY_EQUIPMENT_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ONEKEY_EQUIPMENT_SWITCH);

            /** S_ONEKEY_EQUIPMENT_SWITCH index. */
            public index: number;

            /** S_ONEKEY_EQUIPMENT_SWITCH equipmentType. */
            public equipmentType: number;

            /** S_ONEKEY_EQUIPMENT_SWITCH eSlotinfo. */
            public eSlotinfo: com.message.IEQUIPMENT_SLOT_INFO[];

            /**
             * Encodes the specified S_ONEKEY_EQUIPMENT_SWITCH message. Does not implicitly {@link com.message.S_ONEKEY_EQUIPMENT_SWITCH.verify|verify} messages.
             * @param message S_ONEKEY_EQUIPMENT_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ONEKEY_EQUIPMENT_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ONEKEY_EQUIPMENT_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ONEKEY_EQUIPMENT_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ONEKEY_EQUIPMENT_SWITCH;
        }

        /** Properties of a C_EQUIPMENT_STRENGTHEN_ONEKEY. */
        interface IC_EQUIPMENT_STRENGTHEN_ONEKEY {

            /** C_EQUIPMENT_STRENGTHEN_ONEKEY index */
            index?: (number|null);

            /** C_EQUIPMENT_STRENGTHEN_ONEKEY equipmentType */
            equipmentType?: (number|null);
        }

        /** Represents a C_EQUIPMENT_STRENGTHEN_ONEKEY. */
        class C_EQUIPMENT_STRENGTHEN_ONEKEY implements IC_EQUIPMENT_STRENGTHEN_ONEKEY {

            /**
             * Constructs a new C_EQUIPMENT_STRENGTHEN_ONEKEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_STRENGTHEN_ONEKEY);

            /** C_EQUIPMENT_STRENGTHEN_ONEKEY index. */
            public index: number;

            /** C_EQUIPMENT_STRENGTHEN_ONEKEY equipmentType. */
            public equipmentType: number;

            /**
             * Encodes the specified C_EQUIPMENT_STRENGTHEN_ONEKEY message. Does not implicitly {@link com.message.C_EQUIPMENT_STRENGTHEN_ONEKEY.verify|verify} messages.
             * @param message C_EQUIPMENT_STRENGTHEN_ONEKEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_STRENGTHEN_ONEKEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_STRENGTHEN_ONEKEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_STRENGTHEN_ONEKEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_STRENGTHEN_ONEKEY;
        }

        /** Properties of a S_EQUIPMENT_STRENGTHEN_ONEKEY. */
        interface IS_EQUIPMENT_STRENGTHEN_ONEKEY {

            /** S_EQUIPMENT_STRENGTHEN_ONEKEY info */
            info?: (com.message.IS_EQUIPMENT_STRENGTHEN[]|null);
        }

        /** Represents a S_EQUIPMENT_STRENGTHEN_ONEKEY. */
        class S_EQUIPMENT_STRENGTHEN_ONEKEY implements IS_EQUIPMENT_STRENGTHEN_ONEKEY {

            /**
             * Constructs a new S_EQUIPMENT_STRENGTHEN_ONEKEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_STRENGTHEN_ONEKEY);

            /** S_EQUIPMENT_STRENGTHEN_ONEKEY info. */
            public info: com.message.IS_EQUIPMENT_STRENGTHEN[];

            /**
             * Encodes the specified S_EQUIPMENT_STRENGTHEN_ONEKEY message. Does not implicitly {@link com.message.S_EQUIPMENT_STRENGTHEN_ONEKEY.verify|verify} messages.
             * @param message S_EQUIPMENT_STRENGTHEN_ONEKEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_STRENGTHEN_ONEKEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_STRENGTHEN_ONEKEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_STRENGTHEN_ONEKEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_STRENGTHEN_ONEKEY;
        }

        /** Properties of a C_EQUIPMENT_STRENGTHEN. */
        interface IC_EQUIPMENT_STRENGTHEN {

            /** C_EQUIPMENT_STRENGTHEN formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_STRENGTHEN equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_STRENGTHEN equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_STRENGTHEN. */
        class C_EQUIPMENT_STRENGTHEN implements IC_EQUIPMENT_STRENGTHEN {

            /**
             * Constructs a new C_EQUIPMENT_STRENGTHEN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_STRENGTHEN);

            /** C_EQUIPMENT_STRENGTHEN formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_STRENGTHEN equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_STRENGTHEN equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_STRENGTHEN message. Does not implicitly {@link com.message.C_EQUIPMENT_STRENGTHEN.verify|verify} messages.
             * @param message C_EQUIPMENT_STRENGTHEN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_STRENGTHEN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_STRENGTHEN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_STRENGTHEN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_STRENGTHEN;
        }

        /** Properties of a S_EQUIPMENT_STRENGTHEN. */
        interface IS_EQUIPMENT_STRENGTHEN {

            /** S_EQUIPMENT_STRENGTHEN formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_STRENGTHEN equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_STRENGTHEN equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_STRENGTHEN equipmentStrengthenLevel */
            equipmentStrengthenLevel?: (number|null);

            /** S_EQUIPMENT_STRENGTHEN success */
            success?: (number|null);

            /** S_EQUIPMENT_STRENGTHEN strengthIndex */
            strengthIndex?: (number|null);
        }

        /** Represents a S_EQUIPMENT_STRENGTHEN. */
        class S_EQUIPMENT_STRENGTHEN implements IS_EQUIPMENT_STRENGTHEN {

            /**
             * Constructs a new S_EQUIPMENT_STRENGTHEN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_STRENGTHEN);

            /** S_EQUIPMENT_STRENGTHEN formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_STRENGTHEN equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_STRENGTHEN equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_STRENGTHEN equipmentStrengthenLevel. */
            public equipmentStrengthenLevel: number;

            /** S_EQUIPMENT_STRENGTHEN success. */
            public success: number;

            /** S_EQUIPMENT_STRENGTHEN strengthIndex. */
            public strengthIndex: number;

            /**
             * Encodes the specified S_EQUIPMENT_STRENGTHEN message. Does not implicitly {@link com.message.S_EQUIPMENT_STRENGTHEN.verify|verify} messages.
             * @param message S_EQUIPMENT_STRENGTHEN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_STRENGTHEN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_STRENGTHEN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_STRENGTHEN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_STRENGTHEN;
        }

        /** Properties of a C_EQUIPMENT_GEM_UPGRADE_ONEKEY. */
        interface IC_EQUIPMENT_GEM_UPGRADE_ONEKEY {

            /** C_EQUIPMENT_GEM_UPGRADE_ONEKEY index */
            index?: (number|null);

            /** C_EQUIPMENT_GEM_UPGRADE_ONEKEY equipmentType */
            equipmentType?: (number|null);
        }

        /** Represents a C_EQUIPMENT_GEM_UPGRADE_ONEKEY. */
        class C_EQUIPMENT_GEM_UPGRADE_ONEKEY implements IC_EQUIPMENT_GEM_UPGRADE_ONEKEY {

            /**
             * Constructs a new C_EQUIPMENT_GEM_UPGRADE_ONEKEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_GEM_UPGRADE_ONEKEY);

            /** C_EQUIPMENT_GEM_UPGRADE_ONEKEY index. */
            public index: number;

            /** C_EQUIPMENT_GEM_UPGRADE_ONEKEY equipmentType. */
            public equipmentType: number;

            /**
             * Encodes the specified C_EQUIPMENT_GEM_UPGRADE_ONEKEY message. Does not implicitly {@link com.message.C_EQUIPMENT_GEM_UPGRADE_ONEKEY.verify|verify} messages.
             * @param message C_EQUIPMENT_GEM_UPGRADE_ONEKEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_GEM_UPGRADE_ONEKEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_GEM_UPGRADE_ONEKEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_GEM_UPGRADE_ONEKEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_GEM_UPGRADE_ONEKEY;
        }

        /** Properties of a S_EQUIPMENT_GEM_UPGRADE_ONEKEY. */
        interface IS_EQUIPMENT_GEM_UPGRADE_ONEKEY {

            /** S_EQUIPMENT_GEM_UPGRADE_ONEKEY info */
            info?: (com.message.IS_EQUIPMENT_GEM_UPGRADE[]|null);
        }

        /** Represents a S_EQUIPMENT_GEM_UPGRADE_ONEKEY. */
        class S_EQUIPMENT_GEM_UPGRADE_ONEKEY implements IS_EQUIPMENT_GEM_UPGRADE_ONEKEY {

            /**
             * Constructs a new S_EQUIPMENT_GEM_UPGRADE_ONEKEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_GEM_UPGRADE_ONEKEY);

            /** S_EQUIPMENT_GEM_UPGRADE_ONEKEY info. */
            public info: com.message.IS_EQUIPMENT_GEM_UPGRADE[];

            /**
             * Encodes the specified S_EQUIPMENT_GEM_UPGRADE_ONEKEY message. Does not implicitly {@link com.message.S_EQUIPMENT_GEM_UPGRADE_ONEKEY.verify|verify} messages.
             * @param message S_EQUIPMENT_GEM_UPGRADE_ONEKEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_GEM_UPGRADE_ONEKEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_GEM_UPGRADE_ONEKEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_GEM_UPGRADE_ONEKEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_GEM_UPGRADE_ONEKEY;
        }

        /** Properties of a C_EQUIPMENT_GEM_UPGRADE. */
        interface IC_EQUIPMENT_GEM_UPGRADE {

            /** C_EQUIPMENT_GEM_UPGRADE formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_GEM_UPGRADE equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_GEM_UPGRADE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_GEM_UPGRADE. */
        class C_EQUIPMENT_GEM_UPGRADE implements IC_EQUIPMENT_GEM_UPGRADE {

            /**
             * Constructs a new C_EQUIPMENT_GEM_UPGRADE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_GEM_UPGRADE);

            /** C_EQUIPMENT_GEM_UPGRADE formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_GEM_UPGRADE equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_GEM_UPGRADE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_GEM_UPGRADE message. Does not implicitly {@link com.message.C_EQUIPMENT_GEM_UPGRADE.verify|verify} messages.
             * @param message C_EQUIPMENT_GEM_UPGRADE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_GEM_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_GEM_UPGRADE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_GEM_UPGRADE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_GEM_UPGRADE;
        }

        /** Properties of a S_EQUIPMENT_GEM_UPGRADE. */
        interface IS_EQUIPMENT_GEM_UPGRADE {

            /** S_EQUIPMENT_GEM_UPGRADE formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_GEM_UPGRADE equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_GEM_UPGRADE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_GEM_UPGRADE equipmentGemLevel */
            equipmentGemLevel?: (number|null);

            /** S_EQUIPMENT_GEM_UPGRADE success */
            success?: (number|null);
        }

        /** Represents a S_EQUIPMENT_GEM_UPGRADE. */
        class S_EQUIPMENT_GEM_UPGRADE implements IS_EQUIPMENT_GEM_UPGRADE {

            /**
             * Constructs a new S_EQUIPMENT_GEM_UPGRADE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_GEM_UPGRADE);

            /** S_EQUIPMENT_GEM_UPGRADE formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_GEM_UPGRADE equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_GEM_UPGRADE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_GEM_UPGRADE equipmentGemLevel. */
            public equipmentGemLevel: number;

            /** S_EQUIPMENT_GEM_UPGRADE success. */
            public success: number;

            /**
             * Encodes the specified S_EQUIPMENT_GEM_UPGRADE message. Does not implicitly {@link com.message.S_EQUIPMENT_GEM_UPGRADE.verify|verify} messages.
             * @param message S_EQUIPMENT_GEM_UPGRADE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_GEM_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_GEM_UPGRADE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_GEM_UPGRADE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_GEM_UPGRADE;
        }

        /** Properties of a C_EQUIPMENT_UPGRADE. */
        interface IC_EQUIPMENT_UPGRADE {

            /** C_EQUIPMENT_UPGRADE formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_UPGRADE equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_UPGRADE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** C_EQUIPMENT_UPGRADE goodsId */
            goodsId?: (number|Long|null);
        }

        /** Represents a C_EQUIPMENT_UPGRADE. */
        class C_EQUIPMENT_UPGRADE implements IC_EQUIPMENT_UPGRADE {

            /**
             * Constructs a new C_EQUIPMENT_UPGRADE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_UPGRADE);

            /** C_EQUIPMENT_UPGRADE formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_UPGRADE equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_UPGRADE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** C_EQUIPMENT_UPGRADE goodsId. */
            public goodsId: (number|Long);

            /**
             * Encodes the specified C_EQUIPMENT_UPGRADE message. Does not implicitly {@link com.message.C_EQUIPMENT_UPGRADE.verify|verify} messages.
             * @param message C_EQUIPMENT_UPGRADE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_UPGRADE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_UPGRADE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_UPGRADE;
        }

        /** Properties of a S_EQUIPMENT_UPGRADE. */
        interface IS_EQUIPMENT_UPGRADE {

            /** S_EQUIPMENT_UPGRADE formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_UPGRADE equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_UPGRADE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_UPGRADE goodsId */
            goodsId?: (number|Long|null);

            /** S_EQUIPMENT_UPGRADE itemId */
            itemId?: (number|null);

            /** S_EQUIPMENT_UPGRADE success */
            success?: (number|null);
        }

        /** Represents a S_EQUIPMENT_UPGRADE. */
        class S_EQUIPMENT_UPGRADE implements IS_EQUIPMENT_UPGRADE {

            /**
             * Constructs a new S_EQUIPMENT_UPGRADE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_UPGRADE);

            /** S_EQUIPMENT_UPGRADE formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_UPGRADE equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_UPGRADE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_UPGRADE goodsId. */
            public goodsId: (number|Long);

            /** S_EQUIPMENT_UPGRADE itemId. */
            public itemId: number;

            /** S_EQUIPMENT_UPGRADE success. */
            public success: number;

            /**
             * Encodes the specified S_EQUIPMENT_UPGRADE message. Does not implicitly {@link com.message.S_EQUIPMENT_UPGRADE.verify|verify} messages.
             * @param message S_EQUIPMENT_UPGRADE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_UPGRADE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_UPGRADE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_UPGRADE;
        }

        /** Properties of a C_EQUIPMENT_UPGRADE_STAR. */
        interface IC_EQUIPMENT_UPGRADE_STAR {

            /** C_EQUIPMENT_UPGRADE_STAR formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_UPGRADE_STAR equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_UPGRADE_STAR equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_UPGRADE_STAR. */
        class C_EQUIPMENT_UPGRADE_STAR implements IC_EQUIPMENT_UPGRADE_STAR {

            /**
             * Constructs a new C_EQUIPMENT_UPGRADE_STAR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_UPGRADE_STAR);

            /** C_EQUIPMENT_UPGRADE_STAR formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_UPGRADE_STAR equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_UPGRADE_STAR equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_UPGRADE_STAR message. Does not implicitly {@link com.message.C_EQUIPMENT_UPGRADE_STAR.verify|verify} messages.
             * @param message C_EQUIPMENT_UPGRADE_STAR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_UPGRADE_STAR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_UPGRADE_STAR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_UPGRADE_STAR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_UPGRADE_STAR;
        }

        /** Properties of a S_EQUIPMENT_UPGRADE_STAR. */
        interface IS_EQUIPMENT_UPGRADE_STAR {

            /** S_EQUIPMENT_UPGRADE_STAR formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_UPGRADE_STAR equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_UPGRADE_STAR equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_UPGRADE_STAR equipmentStar */
            equipmentStar?: (number|null);

            /** S_EQUIPMENT_UPGRADE_STAR equipmentStarExp */
            equipmentStarExp?: (number|null);

            /** S_EQUIPMENT_UPGRADE_STAR success */
            success?: (number|null);
        }

        /** Represents a S_EQUIPMENT_UPGRADE_STAR. */
        class S_EQUIPMENT_UPGRADE_STAR implements IS_EQUIPMENT_UPGRADE_STAR {

            /**
             * Constructs a new S_EQUIPMENT_UPGRADE_STAR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_UPGRADE_STAR);

            /** S_EQUIPMENT_UPGRADE_STAR formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_UPGRADE_STAR equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_UPGRADE_STAR equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_UPGRADE_STAR equipmentStar. */
            public equipmentStar: number;

            /** S_EQUIPMENT_UPGRADE_STAR equipmentStarExp. */
            public equipmentStarExp: number;

            /** S_EQUIPMENT_UPGRADE_STAR success. */
            public success: number;

            /**
             * Encodes the specified S_EQUIPMENT_UPGRADE_STAR message. Does not implicitly {@link com.message.S_EQUIPMENT_UPGRADE_STAR.verify|verify} messages.
             * @param message S_EQUIPMENT_UPGRADE_STAR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_UPGRADE_STAR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_UPGRADE_STAR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_UPGRADE_STAR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_UPGRADE_STAR;
        }

        /** Properties of a C_EQUIPMENT_ENCHANTING. */
        interface IC_EQUIPMENT_ENCHANTING {

            /** C_EQUIPMENT_ENCHANTING formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_ENCHANTING equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_ENCHANTING equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_ENCHANTING. */
        class C_EQUIPMENT_ENCHANTING implements IC_EQUIPMENT_ENCHANTING {

            /**
             * Constructs a new C_EQUIPMENT_ENCHANTING.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_ENCHANTING);

            /** C_EQUIPMENT_ENCHANTING formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_ENCHANTING equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_ENCHANTING equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_ENCHANTING message. Does not implicitly {@link com.message.C_EQUIPMENT_ENCHANTING.verify|verify} messages.
             * @param message C_EQUIPMENT_ENCHANTING message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_ENCHANTING, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_ENCHANTING message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_ENCHANTING
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_ENCHANTING;
        }

        /** Properties of a S_EQUIPMENT_ENCHANTING. */
        interface IS_EQUIPMENT_ENCHANTING {

            /** S_EQUIPMENT_ENCHANTING formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_ENCHANTING equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_ENCHANTING equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_ENCHANTING equipmentEnchanting */
            equipmentEnchanting?: (number|null);

            /** S_EQUIPMENT_ENCHANTING equipmentEnchantingExp */
            equipmentEnchantingExp?: (number|null);

            /** S_EQUIPMENT_ENCHANTING success */
            success?: (number|null);
        }

        /** Represents a S_EQUIPMENT_ENCHANTING. */
        class S_EQUIPMENT_ENCHANTING implements IS_EQUIPMENT_ENCHANTING {

            /**
             * Constructs a new S_EQUIPMENT_ENCHANTING.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_ENCHANTING);

            /** S_EQUIPMENT_ENCHANTING formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_ENCHANTING equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_ENCHANTING equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_ENCHANTING equipmentEnchanting. */
            public equipmentEnchanting: number;

            /** S_EQUIPMENT_ENCHANTING equipmentEnchantingExp. */
            public equipmentEnchantingExp: number;

            /** S_EQUIPMENT_ENCHANTING success. */
            public success: number;

            /**
             * Encodes the specified S_EQUIPMENT_ENCHANTING message. Does not implicitly {@link com.message.S_EQUIPMENT_ENCHANTING.verify|verify} messages.
             * @param message S_EQUIPMENT_ENCHANTING message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_ENCHANTING, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_ENCHANTING message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_ENCHANTING
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_ENCHANTING;
        }

        /** Properties of a C_EQUIPMENT_SPRITE. */
        interface IC_EQUIPMENT_SPRITE {

            /** C_EQUIPMENT_SPRITE formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_SPRITE equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_SPRITE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_SPRITE. */
        class C_EQUIPMENT_SPRITE implements IC_EQUIPMENT_SPRITE {

            /**
             * Constructs a new C_EQUIPMENT_SPRITE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_SPRITE);

            /** C_EQUIPMENT_SPRITE formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_SPRITE equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_SPRITE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_SPRITE message. Does not implicitly {@link com.message.C_EQUIPMENT_SPRITE.verify|verify} messages.
             * @param message C_EQUIPMENT_SPRITE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_SPRITE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_SPRITE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_SPRITE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_SPRITE;
        }

        /** Properties of a S_EQUIPMENT_SPRITE. */
        interface IS_EQUIPMENT_SPRITE {

            /** S_EQUIPMENT_SPRITE formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_SPRITE equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_SPRITE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_SPRITE equipmentSprite */
            equipmentSprite?: (number|null);

            /** S_EQUIPMENT_SPRITE equipmentSpriteExp */
            equipmentSpriteExp?: (number|null);

            /** S_EQUIPMENT_SPRITE success */
            success?: (number|null);
        }

        /** Represents a S_EQUIPMENT_SPRITE. */
        class S_EQUIPMENT_SPRITE implements IS_EQUIPMENT_SPRITE {

            /**
             * Constructs a new S_EQUIPMENT_SPRITE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_SPRITE);

            /** S_EQUIPMENT_SPRITE formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_SPRITE equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_SPRITE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_SPRITE equipmentSprite. */
            public equipmentSprite: number;

            /** S_EQUIPMENT_SPRITE equipmentSpriteExp. */
            public equipmentSpriteExp: number;

            /** S_EQUIPMENT_SPRITE success. */
            public success: number;

            /**
             * Encodes the specified S_EQUIPMENT_SPRITE message. Does not implicitly {@link com.message.S_EQUIPMENT_SPRITE.verify|verify} messages.
             * @param message S_EQUIPMENT_SPRITE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_SPRITE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_SPRITE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_SPRITE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_SPRITE;
        }

        /** Properties of a C_EQUIPMENT_WAKE. */
        interface IC_EQUIPMENT_WAKE {

            /** C_EQUIPMENT_WAKE formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_WAKE equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_WAKE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_WAKE. */
        class C_EQUIPMENT_WAKE implements IC_EQUIPMENT_WAKE {

            /**
             * Constructs a new C_EQUIPMENT_WAKE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_WAKE);

            /** C_EQUIPMENT_WAKE formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_WAKE equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_WAKE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_WAKE message. Does not implicitly {@link com.message.C_EQUIPMENT_WAKE.verify|verify} messages.
             * @param message C_EQUIPMENT_WAKE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_WAKE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_WAKE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_WAKE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_WAKE;
        }

        /** Properties of a S_EQUIPMENT_WAKE. */
        interface IS_EQUIPMENT_WAKE {

            /** S_EQUIPMENT_WAKE formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_WAKE equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_WAKE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_WAKE equipmentWake */
            equipmentWake?: (number|null);

            /** S_EQUIPMENT_WAKE equipmentWakeLevel */
            equipmentWakeLevel?: (number|null);

            /** S_EQUIPMENT_WAKE success */
            success?: (number|null);
        }

        /** Represents a S_EQUIPMENT_WAKE. */
        class S_EQUIPMENT_WAKE implements IS_EQUIPMENT_WAKE {

            /**
             * Constructs a new S_EQUIPMENT_WAKE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_WAKE);

            /** S_EQUIPMENT_WAKE formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_WAKE equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_WAKE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_WAKE equipmentWake. */
            public equipmentWake: number;

            /** S_EQUIPMENT_WAKE equipmentWakeLevel. */
            public equipmentWakeLevel: number;

            /** S_EQUIPMENT_WAKE success. */
            public success: number;

            /**
             * Encodes the specified S_EQUIPMENT_WAKE message. Does not implicitly {@link com.message.S_EQUIPMENT_WAKE.verify|verify} messages.
             * @param message S_EQUIPMENT_WAKE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_WAKE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_WAKE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_WAKE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_WAKE;
        }

        /** Properties of a C_EQUIPMENT_SUIT_UPGRADE. */
        interface IC_EQUIPMENT_SUIT_UPGRADE {

            /** C_EQUIPMENT_SUIT_UPGRADE formationIndex */
            formationIndex?: (number|null);

            /** C_EQUIPMENT_SUIT_UPGRADE equipmentType */
            equipmentType?: (number|null);

            /** C_EQUIPMENT_SUIT_UPGRADE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);
        }

        /** Represents a C_EQUIPMENT_SUIT_UPGRADE. */
        class C_EQUIPMENT_SUIT_UPGRADE implements IC_EQUIPMENT_SUIT_UPGRADE {

            /**
             * Constructs a new C_EQUIPMENT_SUIT_UPGRADE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EQUIPMENT_SUIT_UPGRADE);

            /** C_EQUIPMENT_SUIT_UPGRADE formationIndex. */
            public formationIndex: number;

            /** C_EQUIPMENT_SUIT_UPGRADE equipmentType. */
            public equipmentType: number;

            /** C_EQUIPMENT_SUIT_UPGRADE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /**
             * Encodes the specified C_EQUIPMENT_SUIT_UPGRADE message. Does not implicitly {@link com.message.C_EQUIPMENT_SUIT_UPGRADE.verify|verify} messages.
             * @param message C_EQUIPMENT_SUIT_UPGRADE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EQUIPMENT_SUIT_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EQUIPMENT_SUIT_UPGRADE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EQUIPMENT_SUIT_UPGRADE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EQUIPMENT_SUIT_UPGRADE;
        }

        /** Properties of a S_EQUIPMENT_SUIT_UPGRADE. */
        interface IS_EQUIPMENT_SUIT_UPGRADE {

            /** S_EQUIPMENT_SUIT_UPGRADE formationIndex */
            formationIndex?: (number|null);

            /** S_EQUIPMENT_SUIT_UPGRADE equipmentType */
            equipmentType?: (number|null);

            /** S_EQUIPMENT_SUIT_UPGRADE equipmentSlotIndex */
            equipmentSlotIndex?: (number|null);

            /** S_EQUIPMENT_SUIT_UPGRADE equipmentSuitLevel */
            equipmentSuitLevel?: (number|null);

            /** S_EQUIPMENT_SUIT_UPGRADE success */
            success?: (number|null);
        }

        /** Represents a S_EQUIPMENT_SUIT_UPGRADE. */
        class S_EQUIPMENT_SUIT_UPGRADE implements IS_EQUIPMENT_SUIT_UPGRADE {

            /**
             * Constructs a new S_EQUIPMENT_SUIT_UPGRADE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EQUIPMENT_SUIT_UPGRADE);

            /** S_EQUIPMENT_SUIT_UPGRADE formationIndex. */
            public formationIndex: number;

            /** S_EQUIPMENT_SUIT_UPGRADE equipmentType. */
            public equipmentType: number;

            /** S_EQUIPMENT_SUIT_UPGRADE equipmentSlotIndex. */
            public equipmentSlotIndex: number;

            /** S_EQUIPMENT_SUIT_UPGRADE equipmentSuitLevel. */
            public equipmentSuitLevel: number;

            /** S_EQUIPMENT_SUIT_UPGRADE success. */
            public success: number;

            /**
             * Encodes the specified S_EQUIPMENT_SUIT_UPGRADE message. Does not implicitly {@link com.message.S_EQUIPMENT_SUIT_UPGRADE.verify|verify} messages.
             * @param message S_EQUIPMENT_SUIT_UPGRADE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EQUIPMENT_SUIT_UPGRADE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EQUIPMENT_SUIT_UPGRADE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EQUIPMENT_SUIT_UPGRADE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EQUIPMENT_SUIT_UPGRADE;
        }

        /** Properties of a S_EXCEPTION_MSG. */
        interface IS_EXCEPTION_MSG {

            /** S_EXCEPTION_MSG code */
            code?: (number|null);
        }

        /** Represents a S_EXCEPTION_MSG. */
        class S_EXCEPTION_MSG implements IS_EXCEPTION_MSG {

            /**
             * Constructs a new S_EXCEPTION_MSG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EXCEPTION_MSG);

            /** S_EXCEPTION_MSG code. */
            public code: number;

            /**
             * Encodes the specified S_EXCEPTION_MSG message. Does not implicitly {@link com.message.S_EXCEPTION_MSG.verify|verify} messages.
             * @param message S_EXCEPTION_MSG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EXCEPTION_MSG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EXCEPTION_MSG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EXCEPTION_MSG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EXCEPTION_MSG;
        }

        /** Properties of a CROSS_S_EXCEPTION_MSG. */
        interface ICROSS_S_EXCEPTION_MSG {

            /** CROSS_S_EXCEPTION_MSG playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_EXCEPTION_MSG code */
            code?: (number|null);
        }

        /** Represents a CROSS_S_EXCEPTION_MSG. */
        class CROSS_S_EXCEPTION_MSG implements ICROSS_S_EXCEPTION_MSG {

            /**
             * Constructs a new CROSS_S_EXCEPTION_MSG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_EXCEPTION_MSG);

            /** CROSS_S_EXCEPTION_MSG playerId. */
            public playerId: (number|Long);

            /** CROSS_S_EXCEPTION_MSG code. */
            public code: number;

            /**
             * Encodes the specified CROSS_S_EXCEPTION_MSG message. Does not implicitly {@link com.message.CROSS_S_EXCEPTION_MSG.verify|verify} messages.
             * @param message CROSS_S_EXCEPTION_MSG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_EXCEPTION_MSG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_EXCEPTION_MSG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_EXCEPTION_MSG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_EXCEPTION_MSG;
        }

        /** Properties of a FABAO_INFO. */
        interface IFABAO_INFO {

            /** FABAO_INFO fabaoId */
            fabaoId?: (number|null);

            /** FABAO_INFO level */
            level?: (number|null);

            /** FABAO_INFO star */
            star?: (number|null);

            /** FABAO_INFO fightVal */
            fightVal?: (number|null);
        }

        /** Represents a FABAO_INFO. */
        class FABAO_INFO implements IFABAO_INFO {

            /**
             * Constructs a new FABAO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFABAO_INFO);

            /** FABAO_INFO fabaoId. */
            public fabaoId: number;

            /** FABAO_INFO level. */
            public level: number;

            /** FABAO_INFO star. */
            public star: number;

            /** FABAO_INFO fightVal. */
            public fightVal: number;

            /**
             * Encodes the specified FABAO_INFO message. Does not implicitly {@link com.message.FABAO_INFO.verify|verify} messages.
             * @param message FABAO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFABAO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FABAO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FABAO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FABAO_INFO;
        }

        /** Properties of a C_FABAO_GET_INFO. */
        interface IC_FABAO_GET_INFO {
        }

        /** Represents a C_FABAO_GET_INFO. */
        class C_FABAO_GET_INFO implements IC_FABAO_GET_INFO {

            /**
             * Constructs a new C_FABAO_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FABAO_GET_INFO);

            /**
             * Encodes the specified C_FABAO_GET_INFO message. Does not implicitly {@link com.message.C_FABAO_GET_INFO.verify|verify} messages.
             * @param message C_FABAO_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FABAO_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FABAO_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FABAO_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FABAO_GET_INFO;
        }

        /** Properties of a S_FABAO_GET_INFO. */
        interface IS_FABAO_GET_INFO {

            /** S_FABAO_GET_INFO totalFightVal */
            totalFightVal?: (number|null);

            /** S_FABAO_GET_INFO fabaoInfo */
            fabaoInfo?: (com.message.IFABAO_INFO[]|null);
        }

        /** Represents a S_FABAO_GET_INFO. */
        class S_FABAO_GET_INFO implements IS_FABAO_GET_INFO {

            /**
             * Constructs a new S_FABAO_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FABAO_GET_INFO);

            /** S_FABAO_GET_INFO totalFightVal. */
            public totalFightVal: number;

            /** S_FABAO_GET_INFO fabaoInfo. */
            public fabaoInfo: com.message.IFABAO_INFO[];

            /**
             * Encodes the specified S_FABAO_GET_INFO message. Does not implicitly {@link com.message.S_FABAO_GET_INFO.verify|verify} messages.
             * @param message S_FABAO_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FABAO_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FABAO_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FABAO_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FABAO_GET_INFO;
        }

        /** Properties of a C_FABAO_OPERATION. */
        interface IC_FABAO_OPERATION {

            /** C_FABAO_OPERATION type */
            type?: (number|null);

            /** C_FABAO_OPERATION fabaoId */
            fabaoId?: (number|null);
        }

        /** Represents a C_FABAO_OPERATION. */
        class C_FABAO_OPERATION implements IC_FABAO_OPERATION {

            /**
             * Constructs a new C_FABAO_OPERATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FABAO_OPERATION);

            /** C_FABAO_OPERATION type. */
            public type: number;

            /** C_FABAO_OPERATION fabaoId. */
            public fabaoId: number;

            /**
             * Encodes the specified C_FABAO_OPERATION message. Does not implicitly {@link com.message.C_FABAO_OPERATION.verify|verify} messages.
             * @param message C_FABAO_OPERATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FABAO_OPERATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FABAO_OPERATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FABAO_OPERATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FABAO_OPERATION;
        }

        /** Properties of a S_FABAO_OPERATION. */
        interface IS_FABAO_OPERATION {

            /** S_FABAO_OPERATION type */
            type?: (number|null);

            /** S_FABAO_OPERATION totalFightVal */
            totalFightVal?: (number|null);

            /** S_FABAO_OPERATION fabaoInfo */
            fabaoInfo?: (com.message.IFABAO_INFO|null);
        }

        /** Represents a S_FABAO_OPERATION. */
        class S_FABAO_OPERATION implements IS_FABAO_OPERATION {

            /**
             * Constructs a new S_FABAO_OPERATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FABAO_OPERATION);

            /** S_FABAO_OPERATION type. */
            public type: number;

            /** S_FABAO_OPERATION totalFightVal. */
            public totalFightVal: number;

            /** S_FABAO_OPERATION fabaoInfo. */
            public fabaoInfo?: (com.message.IFABAO_INFO|null);

            /**
             * Encodes the specified S_FABAO_OPERATION message. Does not implicitly {@link com.message.S_FABAO_OPERATION.verify|verify} messages.
             * @param message S_FABAO_OPERATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FABAO_OPERATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FABAO_OPERATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FABAO_OPERATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FABAO_OPERATION;
        }

        /** Properties of a C_FABAO_DRESSUP. */
        interface IC_FABAO_DRESSUP {

            /** C_FABAO_DRESSUP fabaoId */
            fabaoId?: (number|null);

            /** C_FABAO_DRESSUP formationSlot */
            formationSlot?: (number|null);
        }

        /** Represents a C_FABAO_DRESSUP. */
        class C_FABAO_DRESSUP implements IC_FABAO_DRESSUP {

            /**
             * Constructs a new C_FABAO_DRESSUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FABAO_DRESSUP);

            /** C_FABAO_DRESSUP fabaoId. */
            public fabaoId: number;

            /** C_FABAO_DRESSUP formationSlot. */
            public formationSlot: number;

            /**
             * Encodes the specified C_FABAO_DRESSUP message. Does not implicitly {@link com.message.C_FABAO_DRESSUP.verify|verify} messages.
             * @param message C_FABAO_DRESSUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FABAO_DRESSUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FABAO_DRESSUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FABAO_DRESSUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FABAO_DRESSUP;
        }

        /** Properties of a S_FABAO_DRESSUP. */
        interface IS_FABAO_DRESSUP {

            /** S_FABAO_DRESSUP fabaoId */
            fabaoId?: (number|null);

            /** S_FABAO_DRESSUP dressFormationSlot */
            dressFormationSlot?: (number|null);

            /** S_FABAO_DRESSUP undressFormationSlot */
            undressFormationSlot?: (number|null);
        }

        /** Represents a S_FABAO_DRESSUP. */
        class S_FABAO_DRESSUP implements IS_FABAO_DRESSUP {

            /**
             * Constructs a new S_FABAO_DRESSUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FABAO_DRESSUP);

            /** S_FABAO_DRESSUP fabaoId. */
            public fabaoId: number;

            /** S_FABAO_DRESSUP dressFormationSlot. */
            public dressFormationSlot: number;

            /** S_FABAO_DRESSUP undressFormationSlot. */
            public undressFormationSlot: number;

            /**
             * Encodes the specified S_FABAO_DRESSUP message. Does not implicitly {@link com.message.S_FABAO_DRESSUP.verify|verify} messages.
             * @param message S_FABAO_DRESSUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FABAO_DRESSUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FABAO_DRESSUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FABAO_DRESSUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FABAO_DRESSUP;
        }

        /** Properties of a C_FABAO_UNDRESSUP. */
        interface IC_FABAO_UNDRESSUP {

            /** C_FABAO_UNDRESSUP undressFormationSlot */
            undressFormationSlot?: (number|null);
        }

        /** Represents a C_FABAO_UNDRESSUP. */
        class C_FABAO_UNDRESSUP implements IC_FABAO_UNDRESSUP {

            /**
             * Constructs a new C_FABAO_UNDRESSUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FABAO_UNDRESSUP);

            /** C_FABAO_UNDRESSUP undressFormationSlot. */
            public undressFormationSlot: number;

            /**
             * Encodes the specified C_FABAO_UNDRESSUP message. Does not implicitly {@link com.message.C_FABAO_UNDRESSUP.verify|verify} messages.
             * @param message C_FABAO_UNDRESSUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FABAO_UNDRESSUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FABAO_UNDRESSUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FABAO_UNDRESSUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FABAO_UNDRESSUP;
        }

        /** Properties of a S_FABAO_UNDRESSUP. */
        interface IS_FABAO_UNDRESSUP {

            /** S_FABAO_UNDRESSUP undressFormationSlot */
            undressFormationSlot?: (number|null);
        }

        /** Represents a S_FABAO_UNDRESSUP. */
        class S_FABAO_UNDRESSUP implements IS_FABAO_UNDRESSUP {

            /**
             * Constructs a new S_FABAO_UNDRESSUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FABAO_UNDRESSUP);

            /** S_FABAO_UNDRESSUP undressFormationSlot. */
            public undressFormationSlot: number;

            /**
             * Encodes the specified S_FABAO_UNDRESSUP message. Does not implicitly {@link com.message.S_FABAO_UNDRESSUP.verify|verify} messages.
             * @param message S_FABAO_UNDRESSUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FABAO_UNDRESSUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FABAO_UNDRESSUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FABAO_UNDRESSUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FABAO_UNDRESSUP;
        }

        /** FabaoOperationType enum. */
        enum FabaoOperationType {
            ACTIVE = 0,
            LEVELUP = 1,
            STARUP = 2,
            RELIVE = 3
        }

        /** Properties of a C_GET_FETTER_INFO. */
        interface IC_GET_FETTER_INFO {
        }

        /** Represents a C_GET_FETTER_INFO. */
        class C_GET_FETTER_INFO implements IC_GET_FETTER_INFO {

            /**
             * Constructs a new C_GET_FETTER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_FETTER_INFO);

            /**
             * Encodes the specified C_GET_FETTER_INFO message. Does not implicitly {@link com.message.C_GET_FETTER_INFO.verify|verify} messages.
             * @param message C_GET_FETTER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_FETTER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_FETTER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_FETTER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_FETTER_INFO;
        }

        /** Properties of a S_GET_FETTER_INFO. */
        interface IS_GET_FETTER_INFO {

            /** S_GET_FETTER_INFO fetterInfo */
            fetterInfo?: (com.message.IFetterMsg[]|null);
        }

        /** Represents a S_GET_FETTER_INFO. */
        class S_GET_FETTER_INFO implements IS_GET_FETTER_INFO {

            /**
             * Constructs a new S_GET_FETTER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_FETTER_INFO);

            /** S_GET_FETTER_INFO fetterInfo. */
            public fetterInfo: com.message.IFetterMsg[];

            /**
             * Encodes the specified S_GET_FETTER_INFO message. Does not implicitly {@link com.message.S_GET_FETTER_INFO.verify|verify} messages.
             * @param message S_GET_FETTER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_FETTER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_FETTER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_FETTER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_FETTER_INFO;
        }

        /** Properties of a FetterMsg. */
        interface IFetterMsg {

            /** FetterMsg fetterId */
            fetterId?: (number|null);

            /** FetterMsg level */
            level?: (number|null);

            /** FetterMsg heroId */
            heroId?: (number|null);

            /** FetterMsg fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a FetterMsg. */
        class FetterMsg implements IFetterMsg {

            /**
             * Constructs a new FetterMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFetterMsg);

            /** FetterMsg fetterId. */
            public fetterId: number;

            /** FetterMsg level. */
            public level: number;

            /** FetterMsg heroId. */
            public heroId: number;

            /** FetterMsg fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified FetterMsg message. Does not implicitly {@link com.message.FetterMsg.verify|verify} messages.
             * @param message FetterMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFetterMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FetterMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FetterMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FetterMsg;
        }

        /** Properties of a SYNC_FETTER_ACTIVE. */
        interface ISYNC_FETTER_ACTIVE {

            /** SYNC_FETTER_ACTIVE fetterInfo */
            fetterInfo?: (com.message.IFetterMsg|null);
        }

        /** Represents a SYNC_FETTER_ACTIVE. */
        class SYNC_FETTER_ACTIVE implements ISYNC_FETTER_ACTIVE {

            /**
             * Constructs a new SYNC_FETTER_ACTIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ISYNC_FETTER_ACTIVE);

            /** SYNC_FETTER_ACTIVE fetterInfo. */
            public fetterInfo?: (com.message.IFetterMsg|null);

            /**
             * Encodes the specified SYNC_FETTER_ACTIVE message. Does not implicitly {@link com.message.SYNC_FETTER_ACTIVE.verify|verify} messages.
             * @param message SYNC_FETTER_ACTIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ISYNC_FETTER_ACTIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SYNC_FETTER_ACTIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SYNC_FETTER_ACTIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.SYNC_FETTER_ACTIVE;
        }

        /** Properties of a C_GET_FETTER_CALL_INFO. */
        interface IC_GET_FETTER_CALL_INFO {
        }

        /** Represents a C_GET_FETTER_CALL_INFO. */
        class C_GET_FETTER_CALL_INFO implements IC_GET_FETTER_CALL_INFO {

            /**
             * Constructs a new C_GET_FETTER_CALL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_FETTER_CALL_INFO);

            /**
             * Encodes the specified C_GET_FETTER_CALL_INFO message. Does not implicitly {@link com.message.C_GET_FETTER_CALL_INFO.verify|verify} messages.
             * @param message C_GET_FETTER_CALL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_FETTER_CALL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_FETTER_CALL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_FETTER_CALL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_FETTER_CALL_INFO;
        }

        /** Properties of a S_GET_FETTER_CALL_INFO. */
        interface IS_GET_FETTER_CALL_INFO {

            /** S_GET_FETTER_CALL_INFO fetterCallInfo */
            fetterCallInfo?: (com.message.IFetterCallMsg|null);
        }

        /** Represents a S_GET_FETTER_CALL_INFO. */
        class S_GET_FETTER_CALL_INFO implements IS_GET_FETTER_CALL_INFO {

            /**
             * Constructs a new S_GET_FETTER_CALL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_FETTER_CALL_INFO);

            /** S_GET_FETTER_CALL_INFO fetterCallInfo. */
            public fetterCallInfo?: (com.message.IFetterCallMsg|null);

            /**
             * Encodes the specified S_GET_FETTER_CALL_INFO message. Does not implicitly {@link com.message.S_GET_FETTER_CALL_INFO.verify|verify} messages.
             * @param message S_GET_FETTER_CALL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_FETTER_CALL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_FETTER_CALL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_FETTER_CALL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_FETTER_CALL_INFO;
        }

        /** Properties of a FetterCallMsg. */
        interface IFetterCallMsg {

            /** FetterCallMsg lastHeroId */
            lastHeroId?: (number|null);

            /** FetterCallMsg callCount */
            callCount?: (number|null);

            /** FetterCallMsg freeCount */
            freeCount?: (number|null);
        }

        /** Represents a FetterCallMsg. */
        class FetterCallMsg implements IFetterCallMsg {

            /**
             * Constructs a new FetterCallMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFetterCallMsg);

            /** FetterCallMsg lastHeroId. */
            public lastHeroId: number;

            /** FetterCallMsg callCount. */
            public callCount: number;

            /** FetterCallMsg freeCount. */
            public freeCount: number;

            /**
             * Encodes the specified FetterCallMsg message. Does not implicitly {@link com.message.FetterCallMsg.verify|verify} messages.
             * @param message FetterCallMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFetterCallMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FetterCallMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FetterCallMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FetterCallMsg;
        }

        /** Properties of a C_FETTER_CALL. */
        interface IC_FETTER_CALL {

            /** C_FETTER_CALL heroId */
            heroId?: (number|null);

            /** C_FETTER_CALL count */
            count?: (number|null);
        }

        /** Represents a C_FETTER_CALL. */
        class C_FETTER_CALL implements IC_FETTER_CALL {

            /**
             * Constructs a new C_FETTER_CALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FETTER_CALL);

            /** C_FETTER_CALL heroId. */
            public heroId: number;

            /** C_FETTER_CALL count. */
            public count: number;

            /**
             * Encodes the specified C_FETTER_CALL message. Does not implicitly {@link com.message.C_FETTER_CALL.verify|verify} messages.
             * @param message C_FETTER_CALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FETTER_CALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FETTER_CALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FETTER_CALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FETTER_CALL;
        }

        /** Properties of a S_FETTER_CALL. */
        interface IS_FETTER_CALL {

            /** S_FETTER_CALL fetterCallInfo */
            fetterCallInfo?: (com.message.IFetterCallMsg|null);

            /** S_FETTER_CALL reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_FETTER_CALL. */
        class S_FETTER_CALL implements IS_FETTER_CALL {

            /**
             * Constructs a new S_FETTER_CALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FETTER_CALL);

            /** S_FETTER_CALL fetterCallInfo. */
            public fetterCallInfo?: (com.message.IFetterCallMsg|null);

            /** S_FETTER_CALL reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_FETTER_CALL message. Does not implicitly {@link com.message.S_FETTER_CALL.verify|verify} messages.
             * @param message S_FETTER_CALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FETTER_CALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FETTER_CALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FETTER_CALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FETTER_CALL;
        }

        /** Properties of a C_FREE_FETTER_CALL. */
        interface IC_FREE_FETTER_CALL {

            /** C_FREE_FETTER_CALL heroId */
            heroId?: (number|null);

            /** C_FREE_FETTER_CALL count */
            count?: (number|null);
        }

        /** Represents a C_FREE_FETTER_CALL. */
        class C_FREE_FETTER_CALL implements IC_FREE_FETTER_CALL {

            /**
             * Constructs a new C_FREE_FETTER_CALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FREE_FETTER_CALL);

            /** C_FREE_FETTER_CALL heroId. */
            public heroId: number;

            /** C_FREE_FETTER_CALL count. */
            public count: number;

            /**
             * Encodes the specified C_FREE_FETTER_CALL message. Does not implicitly {@link com.message.C_FREE_FETTER_CALL.verify|verify} messages.
             * @param message C_FREE_FETTER_CALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FREE_FETTER_CALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FREE_FETTER_CALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FREE_FETTER_CALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FREE_FETTER_CALL;
        }

        /** Properties of a S_FREE_FETTER_CALL. */
        interface IS_FREE_FETTER_CALL {

            /** S_FREE_FETTER_CALL fetterCallInfo */
            fetterCallInfo?: (com.message.IFetterCallMsg|null);

            /** S_FREE_FETTER_CALL reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_FREE_FETTER_CALL. */
        class S_FREE_FETTER_CALL implements IS_FREE_FETTER_CALL {

            /**
             * Constructs a new S_FREE_FETTER_CALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FREE_FETTER_CALL);

            /** S_FREE_FETTER_CALL fetterCallInfo. */
            public fetterCallInfo?: (com.message.IFetterCallMsg|null);

            /** S_FREE_FETTER_CALL reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_FREE_FETTER_CALL message. Does not implicitly {@link com.message.S_FREE_FETTER_CALL.verify|verify} messages.
             * @param message S_FREE_FETTER_CALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FREE_FETTER_CALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FREE_FETTER_CALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FREE_FETTER_CALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FREE_FETTER_CALL;
        }

        /** Properties of a C_FETTER_CALLS_SELECT_HERO. */
        interface IC_FETTER_CALLS_SELECT_HERO {

            /** C_FETTER_CALLS_SELECT_HERO heroId */
            heroId?: (number|null);
        }

        /** Represents a C_FETTER_CALLS_SELECT_HERO. */
        class C_FETTER_CALLS_SELECT_HERO implements IC_FETTER_CALLS_SELECT_HERO {

            /**
             * Constructs a new C_FETTER_CALLS_SELECT_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FETTER_CALLS_SELECT_HERO);

            /** C_FETTER_CALLS_SELECT_HERO heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_FETTER_CALLS_SELECT_HERO message. Does not implicitly {@link com.message.C_FETTER_CALLS_SELECT_HERO.verify|verify} messages.
             * @param message C_FETTER_CALLS_SELECT_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FETTER_CALLS_SELECT_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FETTER_CALLS_SELECT_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FETTER_CALLS_SELECT_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FETTER_CALLS_SELECT_HERO;
        }

        /** Properties of a S_FETTER_CALL_SELECT_HERO. */
        interface IS_FETTER_CALL_SELECT_HERO {

            /** S_FETTER_CALL_SELECT_HERO fetterCallInfo */
            fetterCallInfo?: (com.message.IFetterCallMsg|null);
        }

        /** Represents a S_FETTER_CALL_SELECT_HERO. */
        class S_FETTER_CALL_SELECT_HERO implements IS_FETTER_CALL_SELECT_HERO {

            /**
             * Constructs a new S_FETTER_CALL_SELECT_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FETTER_CALL_SELECT_HERO);

            /** S_FETTER_CALL_SELECT_HERO fetterCallInfo. */
            public fetterCallInfo?: (com.message.IFetterCallMsg|null);

            /**
             * Encodes the specified S_FETTER_CALL_SELECT_HERO message. Does not implicitly {@link com.message.S_FETTER_CALL_SELECT_HERO.verify|verify} messages.
             * @param message S_FETTER_CALL_SELECT_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FETTER_CALL_SELECT_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FETTER_CALL_SELECT_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FETTER_CALL_SELECT_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FETTER_CALL_SELECT_HERO;
        }

        /** Properties of a JingshuInfo. */
        interface IJingshuInfo {

            /** JingshuInfo slotId */
            slotId?: (number|null);

            /** JingshuInfo jingshuId */
            jingshuId?: (number|null);

            /** JingshuInfo slotState */
            slotState?: (number|null);
        }

        /** Represents a JingshuInfo. */
        class JingshuInfo implements IJingshuInfo {

            /**
             * Constructs a new JingshuInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IJingshuInfo);

            /** JingshuInfo slotId. */
            public slotId: number;

            /** JingshuInfo jingshuId. */
            public jingshuId: number;

            /** JingshuInfo slotState. */
            public slotState: number;

            /**
             * Encodes the specified JingshuInfo message. Does not implicitly {@link com.message.JingshuInfo.verify|verify} messages.
             * @param message JingshuInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IJingshuInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a JingshuInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns JingshuInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.JingshuInfo;
        }

        /** Properties of a FormationMsg. */
        interface IFormationMsg {

            /** FormationMsg index */
            index?: (number|null);

            /** FormationMsg heroId */
            heroId?: (number|null);

            /** FormationMsg pos */
            pos?: (number|null);

            /** FormationMsg strengthIndex */
            strengthIndex?: (number|null);

            /** FormationMsg fabaoId */
            fabaoId?: (number|null);

            /** FormationMsg jingshuInfo */
            jingshuInfo?: (com.message.IJingshuInfo[]|null);

            /** FormationMsg fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a FormationMsg. */
        class FormationMsg implements IFormationMsg {

            /**
             * Constructs a new FormationMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFormationMsg);

            /** FormationMsg index. */
            public index: number;

            /** FormationMsg heroId. */
            public heroId: number;

            /** FormationMsg pos. */
            public pos: number;

            /** FormationMsg strengthIndex. */
            public strengthIndex: number;

            /** FormationMsg fabaoId. */
            public fabaoId: number;

            /** FormationMsg jingshuInfo. */
            public jingshuInfo: com.message.IJingshuInfo[];

            /** FormationMsg fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified FormationMsg message. Does not implicitly {@link com.message.FormationMsg.verify|verify} messages.
             * @param message FormationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFormationMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FormationMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FormationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FormationMsg;
        }

        /** Properties of a C_FORMATION_LIST. */
        interface IC_FORMATION_LIST {
        }

        /** Represents a C_FORMATION_LIST. */
        class C_FORMATION_LIST implements IC_FORMATION_LIST {

            /**
             * Constructs a new C_FORMATION_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_LIST);

            /**
             * Encodes the specified C_FORMATION_LIST message. Does not implicitly {@link com.message.C_FORMATION_LIST.verify|verify} messages.
             * @param message C_FORMATION_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_LIST;
        }

        /** Properties of a S_FORMATION_LIST. */
        interface IS_FORMATION_LIST {

            /** S_FORMATION_LIST playerId */
            playerId?: (number|Long|null);

            /** S_FORMATION_LIST formationList */
            formationList?: (com.message.IFormationMsg[]|null);
        }

        /** Represents a S_FORMATION_LIST. */
        class S_FORMATION_LIST implements IS_FORMATION_LIST {

            /**
             * Constructs a new S_FORMATION_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_LIST);

            /** S_FORMATION_LIST playerId. */
            public playerId: (number|Long);

            /** S_FORMATION_LIST formationList. */
            public formationList: com.message.IFormationMsg[];

            /**
             * Encodes the specified S_FORMATION_LIST message. Does not implicitly {@link com.message.S_FORMATION_LIST.verify|verify} messages.
             * @param message S_FORMATION_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_LIST;
        }

        /** Properties of a C_FORMATION_HERO_SWITCH. */
        interface IC_FORMATION_HERO_SWITCH {

            /** C_FORMATION_HERO_SWITCH heroId */
            heroId?: (number|null);

            /** C_FORMATION_HERO_SWITCH pos */
            pos?: (number|null);
        }

        /** Represents a C_FORMATION_HERO_SWITCH. */
        class C_FORMATION_HERO_SWITCH implements IC_FORMATION_HERO_SWITCH {

            /**
             * Constructs a new C_FORMATION_HERO_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HERO_SWITCH);

            /** C_FORMATION_HERO_SWITCH heroId. */
            public heroId: number;

            /** C_FORMATION_HERO_SWITCH pos. */
            public pos: number;

            /**
             * Encodes the specified C_FORMATION_HERO_SWITCH message. Does not implicitly {@link com.message.C_FORMATION_HERO_SWITCH.verify|verify} messages.
             * @param message C_FORMATION_HERO_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HERO_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HERO_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HERO_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HERO_SWITCH;
        }

        /** Properties of a S_FORMATION_HERO_SWITCH. */
        interface IS_FORMATION_HERO_SWITCH {

            /** S_FORMATION_HERO_SWITCH heroId */
            heroId?: (number|null);

            /** S_FORMATION_HERO_SWITCH pos */
            pos?: (number|null);

            /** S_FORMATION_HERO_SWITCH success */
            success?: (number|null);
        }

        /** Represents a S_FORMATION_HERO_SWITCH. */
        class S_FORMATION_HERO_SWITCH implements IS_FORMATION_HERO_SWITCH {

            /**
             * Constructs a new S_FORMATION_HERO_SWITCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HERO_SWITCH);

            /** S_FORMATION_HERO_SWITCH heroId. */
            public heroId: number;

            /** S_FORMATION_HERO_SWITCH pos. */
            public pos: number;

            /** S_FORMATION_HERO_SWITCH success. */
            public success: number;

            /**
             * Encodes the specified S_FORMATION_HERO_SWITCH message. Does not implicitly {@link com.message.S_FORMATION_HERO_SWITCH.verify|verify} messages.
             * @param message S_FORMATION_HERO_SWITCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HERO_SWITCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HERO_SWITCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HERO_SWITCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HERO_SWITCH;
        }

        /** Properties of a C_FORMATION_HERO_POS. */
        interface IC_FORMATION_HERO_POS {

            /** C_FORMATION_HERO_POS heroIds */
            heroIds?: (number[]|null);
        }

        /** Represents a C_FORMATION_HERO_POS. */
        class C_FORMATION_HERO_POS implements IC_FORMATION_HERO_POS {

            /**
             * Constructs a new C_FORMATION_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HERO_POS);

            /** C_FORMATION_HERO_POS heroIds. */
            public heroIds: number[];

            /**
             * Encodes the specified C_FORMATION_HERO_POS message. Does not implicitly {@link com.message.C_FORMATION_HERO_POS.verify|verify} messages.
             * @param message C_FORMATION_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HERO_POS;
        }

        /** Properties of a S_FORMATION_HERO_POS. */
        interface IS_FORMATION_HERO_POS {

            /** S_FORMATION_HERO_POS heroIds */
            heroIds?: (number[]|null);

            /** S_FORMATION_HERO_POS success */
            success?: (number|null);

            /** S_FORMATION_HERO_POS formationList */
            formationList?: (com.message.IFormationMsg[]|null);
        }

        /** Represents a S_FORMATION_HERO_POS. */
        class S_FORMATION_HERO_POS implements IS_FORMATION_HERO_POS {

            /**
             * Constructs a new S_FORMATION_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HERO_POS);

            /** S_FORMATION_HERO_POS heroIds. */
            public heroIds: number[];

            /** S_FORMATION_HERO_POS success. */
            public success: number;

            /** S_FORMATION_HERO_POS formationList. */
            public formationList: com.message.IFormationMsg[];

            /**
             * Encodes the specified S_FORMATION_HERO_POS message. Does not implicitly {@link com.message.S_FORMATION_HERO_POS.verify|verify} messages.
             * @param message S_FORMATION_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HERO_POS;
        }

        /** Properties of a C_FORMATION_HERO_SWITCH_INDEX. */
        interface IC_FORMATION_HERO_SWITCH_INDEX {

            /** C_FORMATION_HERO_SWITCH_INDEX heroId */
            heroId?: (number|null);

            /** C_FORMATION_HERO_SWITCH_INDEX index */
            index?: (number|null);
        }

        /** Represents a C_FORMATION_HERO_SWITCH_INDEX. */
        class C_FORMATION_HERO_SWITCH_INDEX implements IC_FORMATION_HERO_SWITCH_INDEX {

            /**
             * Constructs a new C_FORMATION_HERO_SWITCH_INDEX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HERO_SWITCH_INDEX);

            /** C_FORMATION_HERO_SWITCH_INDEX heroId. */
            public heroId: number;

            /** C_FORMATION_HERO_SWITCH_INDEX index. */
            public index: number;

            /**
             * Encodes the specified C_FORMATION_HERO_SWITCH_INDEX message. Does not implicitly {@link com.message.C_FORMATION_HERO_SWITCH_INDEX.verify|verify} messages.
             * @param message C_FORMATION_HERO_SWITCH_INDEX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HERO_SWITCH_INDEX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HERO_SWITCH_INDEX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HERO_SWITCH_INDEX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HERO_SWITCH_INDEX;
        }

        /** Properties of a S_FORMATION_HERO_SWITCH_INDEX. */
        interface IS_FORMATION_HERO_SWITCH_INDEX {

            /** S_FORMATION_HERO_SWITCH_INDEX formationList */
            formationList?: (com.message.IFormationMsg[]|null);
        }

        /** Represents a S_FORMATION_HERO_SWITCH_INDEX. */
        class S_FORMATION_HERO_SWITCH_INDEX implements IS_FORMATION_HERO_SWITCH_INDEX {

            /**
             * Constructs a new S_FORMATION_HERO_SWITCH_INDEX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HERO_SWITCH_INDEX);

            /** S_FORMATION_HERO_SWITCH_INDEX formationList. */
            public formationList: com.message.IFormationMsg[];

            /**
             * Encodes the specified S_FORMATION_HERO_SWITCH_INDEX message. Does not implicitly {@link com.message.S_FORMATION_HERO_SWITCH_INDEX.verify|verify} messages.
             * @param message S_FORMATION_HERO_SWITCH_INDEX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HERO_SWITCH_INDEX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HERO_SWITCH_INDEX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HERO_SWITCH_INDEX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HERO_SWITCH_INDEX;
        }

        /** Properties of a C_FORMATION_HERO_ON. */
        interface IC_FORMATION_HERO_ON {

            /** C_FORMATION_HERO_ON heroId */
            heroId?: (number|null);

            /** C_FORMATION_HERO_ON index */
            index?: (number|null);

            /** C_FORMATION_HERO_ON pos */
            pos?: (number|null);
        }

        /** Represents a C_FORMATION_HERO_ON. */
        class C_FORMATION_HERO_ON implements IC_FORMATION_HERO_ON {

            /**
             * Constructs a new C_FORMATION_HERO_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HERO_ON);

            /** C_FORMATION_HERO_ON heroId. */
            public heroId: number;

            /** C_FORMATION_HERO_ON index. */
            public index: number;

            /** C_FORMATION_HERO_ON pos. */
            public pos: number;

            /**
             * Encodes the specified C_FORMATION_HERO_ON message. Does not implicitly {@link com.message.C_FORMATION_HERO_ON.verify|verify} messages.
             * @param message C_FORMATION_HERO_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HERO_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HERO_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HERO_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HERO_ON;
        }

        /** Properties of a S_FORMATION_HERO_ON. */
        interface IS_FORMATION_HERO_ON {

            /** S_FORMATION_HERO_ON heroId */
            heroId?: (number|null);

            /** S_FORMATION_HERO_ON index */
            index?: (number|null);

            /** S_FORMATION_HERO_ON pos */
            pos?: (number|null);

            /** S_FORMATION_HERO_ON success */
            success?: (number|null);
        }

        /** Represents a S_FORMATION_HERO_ON. */
        class S_FORMATION_HERO_ON implements IS_FORMATION_HERO_ON {

            /**
             * Constructs a new S_FORMATION_HERO_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HERO_ON);

            /** S_FORMATION_HERO_ON heroId. */
            public heroId: number;

            /** S_FORMATION_HERO_ON index. */
            public index: number;

            /** S_FORMATION_HERO_ON pos. */
            public pos: number;

            /** S_FORMATION_HERO_ON success. */
            public success: number;

            /**
             * Encodes the specified S_FORMATION_HERO_ON message. Does not implicitly {@link com.message.S_FORMATION_HERO_ON.verify|verify} messages.
             * @param message S_FORMATION_HERO_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HERO_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HERO_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HERO_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HERO_ON;
        }

        /** Properties of a C_FORMATION_HERO_OFF. */
        interface IC_FORMATION_HERO_OFF {

            /** C_FORMATION_HERO_OFF heroId */
            heroId?: (number|null);
        }

        /** Represents a C_FORMATION_HERO_OFF. */
        class C_FORMATION_HERO_OFF implements IC_FORMATION_HERO_OFF {

            /**
             * Constructs a new C_FORMATION_HERO_OFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HERO_OFF);

            /** C_FORMATION_HERO_OFF heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_FORMATION_HERO_OFF message. Does not implicitly {@link com.message.C_FORMATION_HERO_OFF.verify|verify} messages.
             * @param message C_FORMATION_HERO_OFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HERO_OFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HERO_OFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HERO_OFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HERO_OFF;
        }

        /** Properties of a S_FORMATION_HERO_OFF. */
        interface IS_FORMATION_HERO_OFF {

            /** S_FORMATION_HERO_OFF heroId */
            heroId?: (number|null);

            /** S_FORMATION_HERO_OFF success */
            success?: (number|null);
        }

        /** Represents a S_FORMATION_HERO_OFF. */
        class S_FORMATION_HERO_OFF implements IS_FORMATION_HERO_OFF {

            /**
             * Constructs a new S_FORMATION_HERO_OFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HERO_OFF);

            /** S_FORMATION_HERO_OFF heroId. */
            public heroId: number;

            /** S_FORMATION_HERO_OFF success. */
            public success: number;

            /**
             * Encodes the specified S_FORMATION_HERO_OFF message. Does not implicitly {@link com.message.S_FORMATION_HERO_OFF.verify|verify} messages.
             * @param message S_FORMATION_HERO_OFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HERO_OFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HERO_OFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HERO_OFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HERO_OFF;
        }

        /** Properties of a C_FORMATION_HEROS_ON. */
        interface IC_FORMATION_HEROS_ON {

            /** C_FORMATION_HEROS_ON heroIds */
            heroIds?: (number[]|null);

            /** C_FORMATION_HEROS_ON indexHeroId */
            indexHeroId?: (number[]|null);
        }

        /** Represents a C_FORMATION_HEROS_ON. */
        class C_FORMATION_HEROS_ON implements IC_FORMATION_HEROS_ON {

            /**
             * Constructs a new C_FORMATION_HEROS_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HEROS_ON);

            /** C_FORMATION_HEROS_ON heroIds. */
            public heroIds: number[];

            /** C_FORMATION_HEROS_ON indexHeroId. */
            public indexHeroId: number[];

            /**
             * Encodes the specified C_FORMATION_HEROS_ON message. Does not implicitly {@link com.message.C_FORMATION_HEROS_ON.verify|verify} messages.
             * @param message C_FORMATION_HEROS_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HEROS_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HEROS_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HEROS_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HEROS_ON;
        }

        /** Properties of a S_FORMATION_HEROS_ON. */
        interface IS_FORMATION_HEROS_ON {

            /** S_FORMATION_HEROS_ON heroIds */
            heroIds?: (number[]|null);

            /** S_FORMATION_HEROS_ON indexHeroId */
            indexHeroId?: (number[]|null);
        }

        /** Represents a S_FORMATION_HEROS_ON. */
        class S_FORMATION_HEROS_ON implements IS_FORMATION_HEROS_ON {

            /**
             * Constructs a new S_FORMATION_HEROS_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HEROS_ON);

            /** S_FORMATION_HEROS_ON heroIds. */
            public heroIds: number[];

            /** S_FORMATION_HEROS_ON indexHeroId. */
            public indexHeroId: number[];

            /**
             * Encodes the specified S_FORMATION_HEROS_ON message. Does not implicitly {@link com.message.S_FORMATION_HEROS_ON.verify|verify} messages.
             * @param message S_FORMATION_HEROS_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HEROS_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HEROS_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HEROS_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HEROS_ON;
        }

        /** Properties of a C_GET_FIGHT_RANK_FORMATION_HERO_INFO. */
        interface IC_GET_FIGHT_RANK_FORMATION_HERO_INFO {
        }

        /** Represents a C_GET_FIGHT_RANK_FORMATION_HERO_INFO. */
        class C_GET_FIGHT_RANK_FORMATION_HERO_INFO implements IC_GET_FIGHT_RANK_FORMATION_HERO_INFO {

            /**
             * Constructs a new C_GET_FIGHT_RANK_FORMATION_HERO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_FIGHT_RANK_FORMATION_HERO_INFO);

            /**
             * Encodes the specified C_GET_FIGHT_RANK_FORMATION_HERO_INFO message. Does not implicitly {@link com.message.C_GET_FIGHT_RANK_FORMATION_HERO_INFO.verify|verify} messages.
             * @param message C_GET_FIGHT_RANK_FORMATION_HERO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_FIGHT_RANK_FORMATION_HERO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_FIGHT_RANK_FORMATION_HERO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_FIGHT_RANK_FORMATION_HERO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_FIGHT_RANK_FORMATION_HERO_INFO;
        }

        /** Properties of a S_GET_FIGHT_RANK_FORMATION_HERO_INFO. */
        interface IS_GET_FIGHT_RANK_FORMATION_HERO_INFO {

            /** S_GET_FIGHT_RANK_FORMATION_HERO_INFO rankFormationList */
            rankFormationList?: (com.message.IRANK_FORMATION_HERO_INFO[]|null);
        }

        /** Represents a S_GET_FIGHT_RANK_FORMATION_HERO_INFO. */
        class S_GET_FIGHT_RANK_FORMATION_HERO_INFO implements IS_GET_FIGHT_RANK_FORMATION_HERO_INFO {

            /**
             * Constructs a new S_GET_FIGHT_RANK_FORMATION_HERO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_FIGHT_RANK_FORMATION_HERO_INFO);

            /** S_GET_FIGHT_RANK_FORMATION_HERO_INFO rankFormationList. */
            public rankFormationList: com.message.IRANK_FORMATION_HERO_INFO[];

            /**
             * Encodes the specified S_GET_FIGHT_RANK_FORMATION_HERO_INFO message. Does not implicitly {@link com.message.S_GET_FIGHT_RANK_FORMATION_HERO_INFO.verify|verify} messages.
             * @param message S_GET_FIGHT_RANK_FORMATION_HERO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_FIGHT_RANK_FORMATION_HERO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_FIGHT_RANK_FORMATION_HERO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_FIGHT_RANK_FORMATION_HERO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_FIGHT_RANK_FORMATION_HERO_INFO;
        }

        /** Properties of a RANK_FORMATION_HERO_INFO. */
        interface IRANK_FORMATION_HERO_INFO {

            /** RANK_FORMATION_HERO_INFO playerId */
            playerId?: (number|Long|null);

            /** RANK_FORMATION_HERO_INFO nickName */
            nickName?: (string|null);

            /** RANK_FORMATION_HERO_INFO totalFight */
            totalFight?: (number|Long|null);

            /** RANK_FORMATION_HERO_INFO formationList */
            formationList?: (com.message.IFORMATION_HERO_INFO[]|null);

            /** RANK_FORMATION_HERO_INFO heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a RANK_FORMATION_HERO_INFO. */
        class RANK_FORMATION_HERO_INFO implements IRANK_FORMATION_HERO_INFO {

            /**
             * Constructs a new RANK_FORMATION_HERO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IRANK_FORMATION_HERO_INFO);

            /** RANK_FORMATION_HERO_INFO playerId. */
            public playerId: (number|Long);

            /** RANK_FORMATION_HERO_INFO nickName. */
            public nickName: string;

            /** RANK_FORMATION_HERO_INFO totalFight. */
            public totalFight: (number|Long);

            /** RANK_FORMATION_HERO_INFO formationList. */
            public formationList: com.message.IFORMATION_HERO_INFO[];

            /** RANK_FORMATION_HERO_INFO heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified RANK_FORMATION_HERO_INFO message. Does not implicitly {@link com.message.RANK_FORMATION_HERO_INFO.verify|verify} messages.
             * @param message RANK_FORMATION_HERO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IRANK_FORMATION_HERO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RANK_FORMATION_HERO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RANK_FORMATION_HERO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.RANK_FORMATION_HERO_INFO;
        }

        /** Properties of a FORMATION_HERO_INFO. */
        interface IFORMATION_HERO_INFO {

            /** FORMATION_HERO_INFO index */
            index?: (number|null);

            /** FORMATION_HERO_INFO pos */
            pos?: (number|null);

            /** FORMATION_HERO_INFO heroId */
            heroId?: (number|null);
        }

        /** Represents a FORMATION_HERO_INFO. */
        class FORMATION_HERO_INFO implements IFORMATION_HERO_INFO {

            /**
             * Constructs a new FORMATION_HERO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFORMATION_HERO_INFO);

            /** FORMATION_HERO_INFO index. */
            public index: number;

            /** FORMATION_HERO_INFO pos. */
            public pos: number;

            /** FORMATION_HERO_INFO heroId. */
            public heroId: number;

            /**
             * Encodes the specified FORMATION_HERO_INFO message. Does not implicitly {@link com.message.FORMATION_HERO_INFO.verify|verify} messages.
             * @param message FORMATION_HERO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFORMATION_HERO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FORMATION_HERO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FORMATION_HERO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FORMATION_HERO_INFO;
        }

        /** Properties of a C_FORMATION_JINGSHU_LEARN. */
        interface IC_FORMATION_JINGSHU_LEARN {

            /** C_FORMATION_JINGSHU_LEARN index */
            index?: (number|null);

            /** C_FORMATION_JINGSHU_LEARN jingshuId */
            jingshuId?: (number|null);
        }

        /** Represents a C_FORMATION_JINGSHU_LEARN. */
        class C_FORMATION_JINGSHU_LEARN implements IC_FORMATION_JINGSHU_LEARN {

            /**
             * Constructs a new C_FORMATION_JINGSHU_LEARN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_JINGSHU_LEARN);

            /** C_FORMATION_JINGSHU_LEARN index. */
            public index: number;

            /** C_FORMATION_JINGSHU_LEARN jingshuId. */
            public jingshuId: number;

            /**
             * Encodes the specified C_FORMATION_JINGSHU_LEARN message. Does not implicitly {@link com.message.C_FORMATION_JINGSHU_LEARN.verify|verify} messages.
             * @param message C_FORMATION_JINGSHU_LEARN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_JINGSHU_LEARN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_JINGSHU_LEARN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_JINGSHU_LEARN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_JINGSHU_LEARN;
        }

        /** Properties of a S_FORMATION_JINGSHU_LEARN. */
        interface IS_FORMATION_JINGSHU_LEARN {

            /** S_FORMATION_JINGSHU_LEARN index */
            index?: (number|null);

            /** S_FORMATION_JINGSHU_LEARN dreeSlot */
            dreeSlot?: (number|null);

            /** S_FORMATION_JINGSHU_LEARN jingshuId */
            jingshuId?: (number|null);
        }

        /** Represents a S_FORMATION_JINGSHU_LEARN. */
        class S_FORMATION_JINGSHU_LEARN implements IS_FORMATION_JINGSHU_LEARN {

            /**
             * Constructs a new S_FORMATION_JINGSHU_LEARN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_JINGSHU_LEARN);

            /** S_FORMATION_JINGSHU_LEARN index. */
            public index: number;

            /** S_FORMATION_JINGSHU_LEARN dreeSlot. */
            public dreeSlot: number;

            /** S_FORMATION_JINGSHU_LEARN jingshuId. */
            public jingshuId: number;

            /**
             * Encodes the specified S_FORMATION_JINGSHU_LEARN message. Does not implicitly {@link com.message.S_FORMATION_JINGSHU_LEARN.verify|verify} messages.
             * @param message S_FORMATION_JINGSHU_LEARN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_JINGSHU_LEARN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_JINGSHU_LEARN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_JINGSHU_LEARN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_JINGSHU_LEARN;
        }

        /** Properties of a C_FORMATION_JINGSHU_LOCK. */
        interface IC_FORMATION_JINGSHU_LOCK {

            /** C_FORMATION_JINGSHU_LOCK index */
            index?: (number|null);

            /** C_FORMATION_JINGSHU_LOCK dreeSlot */
            dreeSlot?: (number|null);

            /** C_FORMATION_JINGSHU_LOCK jingshuId */
            jingshuId?: (number|null);

            /** C_FORMATION_JINGSHU_LOCK type */
            type?: (number|null);
        }

        /** Represents a C_FORMATION_JINGSHU_LOCK. */
        class C_FORMATION_JINGSHU_LOCK implements IC_FORMATION_JINGSHU_LOCK {

            /**
             * Constructs a new C_FORMATION_JINGSHU_LOCK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_JINGSHU_LOCK);

            /** C_FORMATION_JINGSHU_LOCK index. */
            public index: number;

            /** C_FORMATION_JINGSHU_LOCK dreeSlot. */
            public dreeSlot: number;

            /** C_FORMATION_JINGSHU_LOCK jingshuId. */
            public jingshuId: number;

            /** C_FORMATION_JINGSHU_LOCK type. */
            public type: number;

            /**
             * Encodes the specified C_FORMATION_JINGSHU_LOCK message. Does not implicitly {@link com.message.C_FORMATION_JINGSHU_LOCK.verify|verify} messages.
             * @param message C_FORMATION_JINGSHU_LOCK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_JINGSHU_LOCK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_JINGSHU_LOCK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_JINGSHU_LOCK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_JINGSHU_LOCK;
        }

        /** Properties of a S_FORMATION_JINGSHU_LOCK. */
        interface IS_FORMATION_JINGSHU_LOCK {

            /** S_FORMATION_JINGSHU_LOCK index */
            index?: (number|null);

            /** S_FORMATION_JINGSHU_LOCK jingshuInfo */
            jingshuInfo?: (com.message.IJingshuInfo[]|null);
        }

        /** Represents a S_FORMATION_JINGSHU_LOCK. */
        class S_FORMATION_JINGSHU_LOCK implements IS_FORMATION_JINGSHU_LOCK {

            /**
             * Constructs a new S_FORMATION_JINGSHU_LOCK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_JINGSHU_LOCK);

            /** S_FORMATION_JINGSHU_LOCK index. */
            public index: number;

            /** S_FORMATION_JINGSHU_LOCK jingshuInfo. */
            public jingshuInfo: com.message.IJingshuInfo[];

            /**
             * Encodes the specified S_FORMATION_JINGSHU_LOCK message. Does not implicitly {@link com.message.S_FORMATION_JINGSHU_LOCK.verify|verify} messages.
             * @param message S_FORMATION_JINGSHU_LOCK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_JINGSHU_LOCK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_JINGSHU_LOCK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_JINGSHU_LOCK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_JINGSHU_LOCK;
        }

        /** Properties of a C_FORMATION_JINGSHU_OPEN. */
        interface IC_FORMATION_JINGSHU_OPEN {

            /** C_FORMATION_JINGSHU_OPEN index */
            index?: (number|null);

            /** C_FORMATION_JINGSHU_OPEN dreeSlot */
            dreeSlot?: (number|null);
        }

        /** Represents a C_FORMATION_JINGSHU_OPEN. */
        class C_FORMATION_JINGSHU_OPEN implements IC_FORMATION_JINGSHU_OPEN {

            /**
             * Constructs a new C_FORMATION_JINGSHU_OPEN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_JINGSHU_OPEN);

            /** C_FORMATION_JINGSHU_OPEN index. */
            public index: number;

            /** C_FORMATION_JINGSHU_OPEN dreeSlot. */
            public dreeSlot: number;

            /**
             * Encodes the specified C_FORMATION_JINGSHU_OPEN message. Does not implicitly {@link com.message.C_FORMATION_JINGSHU_OPEN.verify|verify} messages.
             * @param message C_FORMATION_JINGSHU_OPEN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_JINGSHU_OPEN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_JINGSHU_OPEN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_JINGSHU_OPEN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_JINGSHU_OPEN;
        }

        /** Properties of a S_FORMATION_JINGSHU_OPEN. */
        interface IS_FORMATION_JINGSHU_OPEN {

            /** S_FORMATION_JINGSHU_OPEN index */
            index?: (number|null);

            /** S_FORMATION_JINGSHU_OPEN dreeSlot */
            dreeSlot?: (number|null);

            /** S_FORMATION_JINGSHU_OPEN slotState */
            slotState?: (number|null);
        }

        /** Represents a S_FORMATION_JINGSHU_OPEN. */
        class S_FORMATION_JINGSHU_OPEN implements IS_FORMATION_JINGSHU_OPEN {

            /**
             * Constructs a new S_FORMATION_JINGSHU_OPEN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_JINGSHU_OPEN);

            /** S_FORMATION_JINGSHU_OPEN index. */
            public index: number;

            /** S_FORMATION_JINGSHU_OPEN dreeSlot. */
            public dreeSlot: number;

            /** S_FORMATION_JINGSHU_OPEN slotState. */
            public slotState: number;

            /**
             * Encodes the specified S_FORMATION_JINGSHU_OPEN message. Does not implicitly {@link com.message.S_FORMATION_JINGSHU_OPEN.verify|verify} messages.
             * @param message S_FORMATION_JINGSHU_OPEN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_JINGSHU_OPEN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_JINGSHU_OPEN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_JINGSHU_OPEN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_JINGSHU_OPEN;
        }

        /** Properties of a C_GET_OTHER_FORMATION. */
        interface IC_GET_OTHER_FORMATION {

            /** C_GET_OTHER_FORMATION type */
            type?: (number|null);
        }

        /** Represents a C_GET_OTHER_FORMATION. */
        class C_GET_OTHER_FORMATION implements IC_GET_OTHER_FORMATION {

            /**
             * Constructs a new C_GET_OTHER_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_OTHER_FORMATION);

            /** C_GET_OTHER_FORMATION type. */
            public type: number;

            /**
             * Encodes the specified C_GET_OTHER_FORMATION message. Does not implicitly {@link com.message.C_GET_OTHER_FORMATION.verify|verify} messages.
             * @param message C_GET_OTHER_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_OTHER_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_OTHER_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_OTHER_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_OTHER_FORMATION;
        }

        /** Properties of a S_GET_OTHER_FORMATION. */
        interface IS_GET_OTHER_FORMATION {

            /** S_GET_OTHER_FORMATION type */
            type?: (number|null);

            /** S_GET_OTHER_FORMATION indexHeroId */
            indexHeroId?: (number[]|null);

            /** S_GET_OTHER_FORMATION posHeroId */
            posHeroId?: (number[]|null);

            /** S_GET_OTHER_FORMATION zhenfaType */
            zhenfaType?: (number|null);
        }

        /** Represents a S_GET_OTHER_FORMATION. */
        class S_GET_OTHER_FORMATION implements IS_GET_OTHER_FORMATION {

            /**
             * Constructs a new S_GET_OTHER_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_OTHER_FORMATION);

            /** S_GET_OTHER_FORMATION type. */
            public type: number;

            /** S_GET_OTHER_FORMATION indexHeroId. */
            public indexHeroId: number[];

            /** S_GET_OTHER_FORMATION posHeroId. */
            public posHeroId: number[];

            /** S_GET_OTHER_FORMATION zhenfaType. */
            public zhenfaType: number;

            /**
             * Encodes the specified S_GET_OTHER_FORMATION message. Does not implicitly {@link com.message.S_GET_OTHER_FORMATION.verify|verify} messages.
             * @param message S_GET_OTHER_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_OTHER_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_OTHER_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_OTHER_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_OTHER_FORMATION;
        }

        /** Properties of a C_SET_OTHER_FORMATION. */
        interface IC_SET_OTHER_FORMATION {

            /** C_SET_OTHER_FORMATION type */
            type?: (number|null);

            /** C_SET_OTHER_FORMATION indexHeroId */
            indexHeroId?: (number[]|null);

            /** C_SET_OTHER_FORMATION posHeroId */
            posHeroId?: (number[]|null);

            /** C_SET_OTHER_FORMATION zhenfaType */
            zhenfaType?: (number|null);
        }

        /** Represents a C_SET_OTHER_FORMATION. */
        class C_SET_OTHER_FORMATION implements IC_SET_OTHER_FORMATION {

            /**
             * Constructs a new C_SET_OTHER_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SET_OTHER_FORMATION);

            /** C_SET_OTHER_FORMATION type. */
            public type: number;

            /** C_SET_OTHER_FORMATION indexHeroId. */
            public indexHeroId: number[];

            /** C_SET_OTHER_FORMATION posHeroId. */
            public posHeroId: number[];

            /** C_SET_OTHER_FORMATION zhenfaType. */
            public zhenfaType: number;

            /**
             * Encodes the specified C_SET_OTHER_FORMATION message. Does not implicitly {@link com.message.C_SET_OTHER_FORMATION.verify|verify} messages.
             * @param message C_SET_OTHER_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SET_OTHER_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SET_OTHER_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SET_OTHER_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SET_OTHER_FORMATION;
        }

        /** Properties of a S_SET_OTHER_FORMATION. */
        interface IS_SET_OTHER_FORMATION {

            /** S_SET_OTHER_FORMATION type */
            type?: (number|null);
        }

        /** Represents a S_SET_OTHER_FORMATION. */
        class S_SET_OTHER_FORMATION implements IS_SET_OTHER_FORMATION {

            /**
             * Constructs a new S_SET_OTHER_FORMATION.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SET_OTHER_FORMATION);

            /** S_SET_OTHER_FORMATION type. */
            public type: number;

            /**
             * Encodes the specified S_SET_OTHER_FORMATION message. Does not implicitly {@link com.message.S_SET_OTHER_FORMATION.verify|verify} messages.
             * @param message S_SET_OTHER_FORMATION message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SET_OTHER_FORMATION, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SET_OTHER_FORMATION message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SET_OTHER_FORMATION
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SET_OTHER_FORMATION;
        }

        /** Properties of a C_GET_FORMATION_HELP_INFO. */
        interface IC_GET_FORMATION_HELP_INFO {
        }

        /** Represents a C_GET_FORMATION_HELP_INFO. */
        class C_GET_FORMATION_HELP_INFO implements IC_GET_FORMATION_HELP_INFO {

            /**
             * Constructs a new C_GET_FORMATION_HELP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_FORMATION_HELP_INFO);

            /**
             * Encodes the specified C_GET_FORMATION_HELP_INFO message. Does not implicitly {@link com.message.C_GET_FORMATION_HELP_INFO.verify|verify} messages.
             * @param message C_GET_FORMATION_HELP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_FORMATION_HELP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_FORMATION_HELP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_FORMATION_HELP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_FORMATION_HELP_INFO;
        }

        /** Properties of a S_GET_FORMATION_HELP_INFO. */
        interface IS_GET_FORMATION_HELP_INFO {

            /** S_GET_FORMATION_HELP_INFO helpList */
            helpList?: (com.message.IFORMATION_HELP_INFO[]|null);
        }

        /** Represents a S_GET_FORMATION_HELP_INFO. */
        class S_GET_FORMATION_HELP_INFO implements IS_GET_FORMATION_HELP_INFO {

            /**
             * Constructs a new S_GET_FORMATION_HELP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_FORMATION_HELP_INFO);

            /** S_GET_FORMATION_HELP_INFO helpList. */
            public helpList: com.message.IFORMATION_HELP_INFO[];

            /**
             * Encodes the specified S_GET_FORMATION_HELP_INFO message. Does not implicitly {@link com.message.S_GET_FORMATION_HELP_INFO.verify|verify} messages.
             * @param message S_GET_FORMATION_HELP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_FORMATION_HELP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_FORMATION_HELP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_FORMATION_HELP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_FORMATION_HELP_INFO;
        }

        /** Properties of a C_FORMATION_HELP_HERO_ON. */
        interface IC_FORMATION_HELP_HERO_ON {

            /** C_FORMATION_HELP_HERO_ON heroId */
            heroId?: (number|null);

            /** C_FORMATION_HELP_HERO_ON indexId */
            indexId?: (number|null);

            /** C_FORMATION_HELP_HERO_ON posId */
            posId?: (number|null);
        }

        /** Represents a C_FORMATION_HELP_HERO_ON. */
        class C_FORMATION_HELP_HERO_ON implements IC_FORMATION_HELP_HERO_ON {

            /**
             * Constructs a new C_FORMATION_HELP_HERO_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HELP_HERO_ON);

            /** C_FORMATION_HELP_HERO_ON heroId. */
            public heroId: number;

            /** C_FORMATION_HELP_HERO_ON indexId. */
            public indexId: number;

            /** C_FORMATION_HELP_HERO_ON posId. */
            public posId: number;

            /**
             * Encodes the specified C_FORMATION_HELP_HERO_ON message. Does not implicitly {@link com.message.C_FORMATION_HELP_HERO_ON.verify|verify} messages.
             * @param message C_FORMATION_HELP_HERO_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HELP_HERO_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HELP_HERO_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HELP_HERO_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HELP_HERO_ON;
        }

        /** Properties of a S_FORMATION_HELP_HERO_ON. */
        interface IS_FORMATION_HELP_HERO_ON {

            /** S_FORMATION_HELP_HERO_ON heroId */
            heroId?: (number|null);

            /** S_FORMATION_HELP_HERO_ON indexId */
            indexId?: (number|null);

            /** S_FORMATION_HELP_HERO_ON posId */
            posId?: (number|null);

            /** S_FORMATION_HELP_HERO_ON success */
            success?: (number|null);
        }

        /** Represents a S_FORMATION_HELP_HERO_ON. */
        class S_FORMATION_HELP_HERO_ON implements IS_FORMATION_HELP_HERO_ON {

            /**
             * Constructs a new S_FORMATION_HELP_HERO_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HELP_HERO_ON);

            /** S_FORMATION_HELP_HERO_ON heroId. */
            public heroId: number;

            /** S_FORMATION_HELP_HERO_ON indexId. */
            public indexId: number;

            /** S_FORMATION_HELP_HERO_ON posId. */
            public posId: number;

            /** S_FORMATION_HELP_HERO_ON success. */
            public success: number;

            /**
             * Encodes the specified S_FORMATION_HELP_HERO_ON message. Does not implicitly {@link com.message.S_FORMATION_HELP_HERO_ON.verify|verify} messages.
             * @param message S_FORMATION_HELP_HERO_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HELP_HERO_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HELP_HERO_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HELP_HERO_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HELP_HERO_ON;
        }

        /** Properties of a C_FORMATION_HELP_LEVEL. */
        interface IC_FORMATION_HELP_LEVEL {

            /** C_FORMATION_HELP_LEVEL indexId */
            indexId?: (number|null);

            /** C_FORMATION_HELP_LEVEL posId */
            posId?: (number|null);

            /** C_FORMATION_HELP_LEVEL level */
            level?: (number|null);
        }

        /** Represents a C_FORMATION_HELP_LEVEL. */
        class C_FORMATION_HELP_LEVEL implements IC_FORMATION_HELP_LEVEL {

            /**
             * Constructs a new C_FORMATION_HELP_LEVEL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FORMATION_HELP_LEVEL);

            /** C_FORMATION_HELP_LEVEL indexId. */
            public indexId: number;

            /** C_FORMATION_HELP_LEVEL posId. */
            public posId: number;

            /** C_FORMATION_HELP_LEVEL level. */
            public level: number;

            /**
             * Encodes the specified C_FORMATION_HELP_LEVEL message. Does not implicitly {@link com.message.C_FORMATION_HELP_LEVEL.verify|verify} messages.
             * @param message C_FORMATION_HELP_LEVEL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FORMATION_HELP_LEVEL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FORMATION_HELP_LEVEL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FORMATION_HELP_LEVEL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FORMATION_HELP_LEVEL;
        }

        /** Properties of a S_FORMATION_HELP_LEVEL. */
        interface IS_FORMATION_HELP_LEVEL {

            /** S_FORMATION_HELP_LEVEL indexId */
            indexId?: (number|null);

            /** S_FORMATION_HELP_LEVEL posId */
            posId?: (number|null);

            /** S_FORMATION_HELP_LEVEL level */
            level?: (number|null);

            /** S_FORMATION_HELP_LEVEL helpInfo */
            helpInfo?: (com.message.IFORMATION_HELP_INFO|null);
        }

        /** Represents a S_FORMATION_HELP_LEVEL. */
        class S_FORMATION_HELP_LEVEL implements IS_FORMATION_HELP_LEVEL {

            /**
             * Constructs a new S_FORMATION_HELP_LEVEL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FORMATION_HELP_LEVEL);

            /** S_FORMATION_HELP_LEVEL indexId. */
            public indexId: number;

            /** S_FORMATION_HELP_LEVEL posId. */
            public posId: number;

            /** S_FORMATION_HELP_LEVEL level. */
            public level: number;

            /** S_FORMATION_HELP_LEVEL helpInfo. */
            public helpInfo?: (com.message.IFORMATION_HELP_INFO|null);

            /**
             * Encodes the specified S_FORMATION_HELP_LEVEL message. Does not implicitly {@link com.message.S_FORMATION_HELP_LEVEL.verify|verify} messages.
             * @param message S_FORMATION_HELP_LEVEL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FORMATION_HELP_LEVEL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FORMATION_HELP_LEVEL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FORMATION_HELP_LEVEL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FORMATION_HELP_LEVEL;
        }

        /** Properties of a FORMATION_HELP_INFO. */
        interface IFORMATION_HELP_INFO {

            /** FORMATION_HELP_INFO index */
            index?: (number|null);

            /** FORMATION_HELP_INFO heroId */
            heroId?: (number|null);

            /** FORMATION_HELP_INFO heroId2 */
            heroId2?: (number|null);

            /** FORMATION_HELP_INFO heroId3 */
            heroId3?: (number|null);

            /** FORMATION_HELP_INFO level */
            level?: (number|null);

            /** FORMATION_HELP_INFO level2 */
            level2?: (number|null);

            /** FORMATION_HELP_INFO level3 */
            level3?: (number|null);
        }

        /** Represents a FORMATION_HELP_INFO. */
        class FORMATION_HELP_INFO implements IFORMATION_HELP_INFO {

            /**
             * Constructs a new FORMATION_HELP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFORMATION_HELP_INFO);

            /** FORMATION_HELP_INFO index. */
            public index: number;

            /** FORMATION_HELP_INFO heroId. */
            public heroId: number;

            /** FORMATION_HELP_INFO heroId2. */
            public heroId2: number;

            /** FORMATION_HELP_INFO heroId3. */
            public heroId3: number;

            /** FORMATION_HELP_INFO level. */
            public level: number;

            /** FORMATION_HELP_INFO level2. */
            public level2: number;

            /** FORMATION_HELP_INFO level3. */
            public level3: number;

            /**
             * Encodes the specified FORMATION_HELP_INFO message. Does not implicitly {@link com.message.FORMATION_HELP_INFO.verify|verify} messages.
             * @param message FORMATION_HELP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFORMATION_HELP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FORMATION_HELP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FORMATION_HELP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FORMATION_HELP_INFO;
        }

        /** Properties of a C_GET_FRIEND_INFO. */
        interface IC_GET_FRIEND_INFO {

            /** C_GET_FRIEND_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_FRIEND_INFO. */
        class C_GET_FRIEND_INFO implements IC_GET_FRIEND_INFO {

            /**
             * Constructs a new C_GET_FRIEND_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_FRIEND_INFO);

            /** C_GET_FRIEND_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_FRIEND_INFO message. Does not implicitly {@link com.message.C_GET_FRIEND_INFO.verify|verify} messages.
             * @param message C_GET_FRIEND_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_FRIEND_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_FRIEND_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_FRIEND_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_FRIEND_INFO;
        }

        /** Properties of a S_GET_FRIEND_INFO. */
        interface IS_GET_FRIEND_INFO {

            /** S_GET_FRIEND_INFO type */
            type?: (number|null);

            /** S_GET_FRIEND_INFO friendInfo */
            friendInfo?: (com.message.IFRIEND_INFO[]|null);

            /** S_GET_FRIEND_INFO allRewardIds */
            allRewardIds?: (string|null);

            /** S_GET_FRIEND_INFO canRewardIds */
            canRewardIds?: (string|null);

            /** S_GET_FRIEND_INFO sendIds */
            sendIds?: (string|null);
        }

        /** Represents a S_GET_FRIEND_INFO. */
        class S_GET_FRIEND_INFO implements IS_GET_FRIEND_INFO {

            /**
             * Constructs a new S_GET_FRIEND_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_FRIEND_INFO);

            /** S_GET_FRIEND_INFO type. */
            public type: number;

            /** S_GET_FRIEND_INFO friendInfo. */
            public friendInfo: com.message.IFRIEND_INFO[];

            /** S_GET_FRIEND_INFO allRewardIds. */
            public allRewardIds: string;

            /** S_GET_FRIEND_INFO canRewardIds. */
            public canRewardIds: string;

            /** S_GET_FRIEND_INFO sendIds. */
            public sendIds: string;

            /**
             * Encodes the specified S_GET_FRIEND_INFO message. Does not implicitly {@link com.message.S_GET_FRIEND_INFO.verify|verify} messages.
             * @param message S_GET_FRIEND_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_FRIEND_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_FRIEND_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_FRIEND_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_FRIEND_INFO;
        }

        /** Properties of a FRIEND_INFO. */
        interface IFRIEND_INFO {

            /** FRIEND_INFO playerId */
            playerId?: (number|Long|null);

            /** FRIEND_INFO type */
            type?: (number|null);

            /** FRIEND_INFO subType */
            subType?: (number|null);

            /** FRIEND_INFO nickName */
            nickName?: (string|null);

            /** FRIEND_INFO level */
            level?: (number|null);

            /** FRIEND_INFO fight */
            fight?: (number|Long|null);

            /** FRIEND_INFO vipLevel */
            vipLevel?: (number|null);

            /** FRIEND_INFO isOnline */
            isOnline?: (boolean|null);

            /** FRIEND_INFO heroId */
            heroId?: (number|null);

            /** FRIEND_INFO guild */
            guild?: (number|Long|null);

            /** FRIEND_INFO guildName */
            guildName?: (string|null);

            /** FRIEND_INFO heroQuality */
            heroQuality?: (number|null);

            /** FRIEND_INFO offlineTime */
            offlineTime?: (number|Long|null);

            /** FRIEND_INFO useTitle */
            useTitle?: (number|null);

            /** FRIEND_INFO useHeadFrame */
            useHeadFrame?: (number|null);
        }

        /** Represents a FRIEND_INFO. */
        class FRIEND_INFO implements IFRIEND_INFO {

            /**
             * Constructs a new FRIEND_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFRIEND_INFO);

            /** FRIEND_INFO playerId. */
            public playerId: (number|Long);

            /** FRIEND_INFO type. */
            public type: number;

            /** FRIEND_INFO subType. */
            public subType: number;

            /** FRIEND_INFO nickName. */
            public nickName: string;

            /** FRIEND_INFO level. */
            public level: number;

            /** FRIEND_INFO fight. */
            public fight: (number|Long);

            /** FRIEND_INFO vipLevel. */
            public vipLevel: number;

            /** FRIEND_INFO isOnline. */
            public isOnline: boolean;

            /** FRIEND_INFO heroId. */
            public heroId: number;

            /** FRIEND_INFO guild. */
            public guild: (number|Long);

            /** FRIEND_INFO guildName. */
            public guildName: string;

            /** FRIEND_INFO heroQuality. */
            public heroQuality: number;

            /** FRIEND_INFO offlineTime. */
            public offlineTime: (number|Long);

            /** FRIEND_INFO useTitle. */
            public useTitle: number;

            /** FRIEND_INFO useHeadFrame. */
            public useHeadFrame: number;

            /**
             * Encodes the specified FRIEND_INFO message. Does not implicitly {@link com.message.FRIEND_INFO.verify|verify} messages.
             * @param message FRIEND_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFRIEND_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FRIEND_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FRIEND_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FRIEND_INFO;
        }

        /** Properties of a C_OPTION_FRIEND. */
        interface IC_OPTION_FRIEND {

            /** C_OPTION_FRIEND playerId */
            playerId?: (number|Long|null);

            /** C_OPTION_FRIEND optionType */
            optionType?: (number|null);
        }

        /** Represents a C_OPTION_FRIEND. */
        class C_OPTION_FRIEND implements IC_OPTION_FRIEND {

            /**
             * Constructs a new C_OPTION_FRIEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OPTION_FRIEND);

            /** C_OPTION_FRIEND playerId. */
            public playerId: (number|Long);

            /** C_OPTION_FRIEND optionType. */
            public optionType: number;

            /**
             * Encodes the specified C_OPTION_FRIEND message. Does not implicitly {@link com.message.C_OPTION_FRIEND.verify|verify} messages.
             * @param message C_OPTION_FRIEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OPTION_FRIEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OPTION_FRIEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OPTION_FRIEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OPTION_FRIEND;
        }

        /** Properties of a S_OPTION_FRIEND. */
        interface IS_OPTION_FRIEND {

            /** S_OPTION_FRIEND playerId */
            playerId?: (number|Long|null);

            /** S_OPTION_FRIEND optionType */
            optionType?: (number|null);
        }

        /** Represents a S_OPTION_FRIEND. */
        class S_OPTION_FRIEND implements IS_OPTION_FRIEND {

            /**
             * Constructs a new S_OPTION_FRIEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OPTION_FRIEND);

            /** S_OPTION_FRIEND playerId. */
            public playerId: (number|Long);

            /** S_OPTION_FRIEND optionType. */
            public optionType: number;

            /**
             * Encodes the specified S_OPTION_FRIEND message. Does not implicitly {@link com.message.S_OPTION_FRIEND.verify|verify} messages.
             * @param message S_OPTION_FRIEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OPTION_FRIEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OPTION_FRIEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OPTION_FRIEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OPTION_FRIEND;
        }

        /** Properties of a S_FRIEND_APPLY. */
        interface IS_FRIEND_APPLY {

            /** S_FRIEND_APPLY playerId */
            playerId?: (number|Long|null);

            /** S_FRIEND_APPLY nickName */
            nickName?: (string|null);

            /** S_FRIEND_APPLY level */
            level?: (number|null);

            /** S_FRIEND_APPLY fight */
            fight?: (number|Long|null);

            /** S_FRIEND_APPLY heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a S_FRIEND_APPLY. */
        class S_FRIEND_APPLY implements IS_FRIEND_APPLY {

            /**
             * Constructs a new S_FRIEND_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FRIEND_APPLY);

            /** S_FRIEND_APPLY playerId. */
            public playerId: (number|Long);

            /** S_FRIEND_APPLY nickName. */
            public nickName: string;

            /** S_FRIEND_APPLY level. */
            public level: number;

            /** S_FRIEND_APPLY fight. */
            public fight: (number|Long);

            /** S_FRIEND_APPLY heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified S_FRIEND_APPLY message. Does not implicitly {@link com.message.S_FRIEND_APPLY.verify|verify} messages.
             * @param message S_FRIEND_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FRIEND_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FRIEND_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FRIEND_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FRIEND_APPLY;
        }

        /** Properties of a S_FRIEND_AGREE_APPLY. */
        interface IS_FRIEND_AGREE_APPLY {

            /** S_FRIEND_AGREE_APPLY friendInfo */
            friendInfo?: (com.message.IFRIEND_INFO|null);
        }

        /** Represents a S_FRIEND_AGREE_APPLY. */
        class S_FRIEND_AGREE_APPLY implements IS_FRIEND_AGREE_APPLY {

            /**
             * Constructs a new S_FRIEND_AGREE_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FRIEND_AGREE_APPLY);

            /** S_FRIEND_AGREE_APPLY friendInfo. */
            public friendInfo?: (com.message.IFRIEND_INFO|null);

            /**
             * Encodes the specified S_FRIEND_AGREE_APPLY message. Does not implicitly {@link com.message.S_FRIEND_AGREE_APPLY.verify|verify} messages.
             * @param message S_FRIEND_AGREE_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FRIEND_AGREE_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FRIEND_AGREE_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FRIEND_AGREE_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FRIEND_AGREE_APPLY;
        }

        /** Properties of a C_GET_FRIEND_RECOM. */
        interface IC_GET_FRIEND_RECOM {
        }

        /** Represents a C_GET_FRIEND_RECOM. */
        class C_GET_FRIEND_RECOM implements IC_GET_FRIEND_RECOM {

            /**
             * Constructs a new C_GET_FRIEND_RECOM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_FRIEND_RECOM);

            /**
             * Encodes the specified C_GET_FRIEND_RECOM message. Does not implicitly {@link com.message.C_GET_FRIEND_RECOM.verify|verify} messages.
             * @param message C_GET_FRIEND_RECOM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_FRIEND_RECOM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_FRIEND_RECOM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_FRIEND_RECOM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_FRIEND_RECOM;
        }

        /** Properties of a S_GET_FRIEND_RECOM. */
        interface IS_GET_FRIEND_RECOM {

            /** S_GET_FRIEND_RECOM otherInfo */
            otherInfo?: (com.message.IFRIEND_INFO[]|null);
        }

        /** Represents a S_GET_FRIEND_RECOM. */
        class S_GET_FRIEND_RECOM implements IS_GET_FRIEND_RECOM {

            /**
             * Constructs a new S_GET_FRIEND_RECOM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_FRIEND_RECOM);

            /** S_GET_FRIEND_RECOM otherInfo. */
            public otherInfo: com.message.IFRIEND_INFO[];

            /**
             * Encodes the specified S_GET_FRIEND_RECOM message. Does not implicitly {@link com.message.S_GET_FRIEND_RECOM.verify|verify} messages.
             * @param message S_GET_FRIEND_RECOM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_FRIEND_RECOM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_FRIEND_RECOM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_FRIEND_RECOM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_FRIEND_RECOM;
        }

        /** Properties of a C_GET_FRIEND_REFRESH. */
        interface IC_GET_FRIEND_REFRESH {
        }

        /** Represents a C_GET_FRIEND_REFRESH. */
        class C_GET_FRIEND_REFRESH implements IC_GET_FRIEND_REFRESH {

            /**
             * Constructs a new C_GET_FRIEND_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_FRIEND_REFRESH);

            /**
             * Encodes the specified C_GET_FRIEND_REFRESH message. Does not implicitly {@link com.message.C_GET_FRIEND_REFRESH.verify|verify} messages.
             * @param message C_GET_FRIEND_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_FRIEND_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_FRIEND_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_FRIEND_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_FRIEND_REFRESH;
        }

        /** Properties of a S_GET_FRIEND_REFRESH. */
        interface IS_GET_FRIEND_REFRESH {

            /** S_GET_FRIEND_REFRESH otherInfo */
            otherInfo?: (com.message.IFRIEND_INFO[]|null);
        }

        /** Represents a S_GET_FRIEND_REFRESH. */
        class S_GET_FRIEND_REFRESH implements IS_GET_FRIEND_REFRESH {

            /**
             * Constructs a new S_GET_FRIEND_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_FRIEND_REFRESH);

            /** S_GET_FRIEND_REFRESH otherInfo. */
            public otherInfo: com.message.IFRIEND_INFO[];

            /**
             * Encodes the specified S_GET_FRIEND_REFRESH message. Does not implicitly {@link com.message.S_GET_FRIEND_REFRESH.verify|verify} messages.
             * @param message S_GET_FRIEND_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_FRIEND_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_FRIEND_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_FRIEND_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_FRIEND_REFRESH;
        }

        /** Properties of a C_ONE_FRIEND_APPLYS. */
        interface IC_ONE_FRIEND_APPLYS {
        }

        /** Represents a C_ONE_FRIEND_APPLYS. */
        class C_ONE_FRIEND_APPLYS implements IC_ONE_FRIEND_APPLYS {

            /**
             * Constructs a new C_ONE_FRIEND_APPLYS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONE_FRIEND_APPLYS);

            /**
             * Encodes the specified C_ONE_FRIEND_APPLYS message. Does not implicitly {@link com.message.C_ONE_FRIEND_APPLYS.verify|verify} messages.
             * @param message C_ONE_FRIEND_APPLYS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONE_FRIEND_APPLYS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONE_FRIEND_APPLYS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONE_FRIEND_APPLYS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONE_FRIEND_APPLYS;
        }

        /** Properties of a S_ONE_FRIEND_APPLYS. */
        interface IS_ONE_FRIEND_APPLYS {

            /** S_ONE_FRIEND_APPLYS otherInfo */
            otherInfo?: (com.message.IFRIEND_INFO[]|null);
        }

        /** Represents a S_ONE_FRIEND_APPLYS. */
        class S_ONE_FRIEND_APPLYS implements IS_ONE_FRIEND_APPLYS {

            /**
             * Constructs a new S_ONE_FRIEND_APPLYS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ONE_FRIEND_APPLYS);

            /** S_ONE_FRIEND_APPLYS otherInfo. */
            public otherInfo: com.message.IFRIEND_INFO[];

            /**
             * Encodes the specified S_ONE_FRIEND_APPLYS message. Does not implicitly {@link com.message.S_ONE_FRIEND_APPLYS.verify|verify} messages.
             * @param message S_ONE_FRIEND_APPLYS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ONE_FRIEND_APPLYS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ONE_FRIEND_APPLYS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ONE_FRIEND_APPLYS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ONE_FRIEND_APPLYS;
        }

        /** Properties of a C_FRIEND_SEND. */
        interface IC_FRIEND_SEND {

            /** C_FRIEND_SEND sendId */
            sendId?: (number|Long|null);
        }

        /** Represents a C_FRIEND_SEND. */
        class C_FRIEND_SEND implements IC_FRIEND_SEND {

            /**
             * Constructs a new C_FRIEND_SEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FRIEND_SEND);

            /** C_FRIEND_SEND sendId. */
            public sendId: (number|Long);

            /**
             * Encodes the specified C_FRIEND_SEND message. Does not implicitly {@link com.message.C_FRIEND_SEND.verify|verify} messages.
             * @param message C_FRIEND_SEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FRIEND_SEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FRIEND_SEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FRIEND_SEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FRIEND_SEND;
        }

        /** Properties of a S_FRIEND_SEND. */
        interface IS_FRIEND_SEND {

            /** S_FRIEND_SEND allsendIds */
            allsendIds?: (string|null);
        }

        /** Represents a S_FRIEND_SEND. */
        class S_FRIEND_SEND implements IS_FRIEND_SEND {

            /**
             * Constructs a new S_FRIEND_SEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FRIEND_SEND);

            /** S_FRIEND_SEND allsendIds. */
            public allsendIds: string;

            /**
             * Encodes the specified S_FRIEND_SEND message. Does not implicitly {@link com.message.S_FRIEND_SEND.verify|verify} messages.
             * @param message S_FRIEND_SEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FRIEND_SEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FRIEND_SEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FRIEND_SEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FRIEND_SEND;
        }

        /** Properties of a C_ONE_FRIEND_SEND. */
        interface IC_ONE_FRIEND_SEND {
        }

        /** Represents a C_ONE_FRIEND_SEND. */
        class C_ONE_FRIEND_SEND implements IC_ONE_FRIEND_SEND {

            /**
             * Constructs a new C_ONE_FRIEND_SEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONE_FRIEND_SEND);

            /**
             * Encodes the specified C_ONE_FRIEND_SEND message. Does not implicitly {@link com.message.C_ONE_FRIEND_SEND.verify|verify} messages.
             * @param message C_ONE_FRIEND_SEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONE_FRIEND_SEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONE_FRIEND_SEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONE_FRIEND_SEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONE_FRIEND_SEND;
        }

        /** Properties of a S_ONE_FRIEND_SEND. */
        interface IS_ONE_FRIEND_SEND {

            /** S_ONE_FRIEND_SEND allsendIds */
            allsendIds?: (string|null);
        }

        /** Represents a S_ONE_FRIEND_SEND. */
        class S_ONE_FRIEND_SEND implements IS_ONE_FRIEND_SEND {

            /**
             * Constructs a new S_ONE_FRIEND_SEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ONE_FRIEND_SEND);

            /** S_ONE_FRIEND_SEND allsendIds. */
            public allsendIds: string;

            /**
             * Encodes the specified S_ONE_FRIEND_SEND message. Does not implicitly {@link com.message.S_ONE_FRIEND_SEND.verify|verify} messages.
             * @param message S_ONE_FRIEND_SEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ONE_FRIEND_SEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ONE_FRIEND_SEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ONE_FRIEND_SEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ONE_FRIEND_SEND;
        }

        /** Properties of a C_FRIEND_REWARD. */
        interface IC_FRIEND_REWARD {

            /** C_FRIEND_REWARD rewardFriendId */
            rewardFriendId?: (number|Long|null);
        }

        /** Represents a C_FRIEND_REWARD. */
        class C_FRIEND_REWARD implements IC_FRIEND_REWARD {

            /**
             * Constructs a new C_FRIEND_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FRIEND_REWARD);

            /** C_FRIEND_REWARD rewardFriendId. */
            public rewardFriendId: (number|Long);

            /**
             * Encodes the specified C_FRIEND_REWARD message. Does not implicitly {@link com.message.C_FRIEND_REWARD.verify|verify} messages.
             * @param message C_FRIEND_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FRIEND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FRIEND_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FRIEND_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FRIEND_REWARD;
        }

        /** Properties of a S_FRIEND_REWARD. */
        interface IS_FRIEND_REWARD {

            /** S_FRIEND_REWARD allRewardIds */
            allRewardIds?: (string|null);

            /** S_FRIEND_REWARD canRewardIds */
            canRewardIds?: (string|null);
        }

        /** Represents a S_FRIEND_REWARD. */
        class S_FRIEND_REWARD implements IS_FRIEND_REWARD {

            /**
             * Constructs a new S_FRIEND_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FRIEND_REWARD);

            /** S_FRIEND_REWARD allRewardIds. */
            public allRewardIds: string;

            /** S_FRIEND_REWARD canRewardIds. */
            public canRewardIds: string;

            /**
             * Encodes the specified S_FRIEND_REWARD message. Does not implicitly {@link com.message.S_FRIEND_REWARD.verify|verify} messages.
             * @param message S_FRIEND_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FRIEND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FRIEND_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FRIEND_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FRIEND_REWARD;
        }

        /** Properties of a C_ONE_FRIEND_REWARD. */
        interface IC_ONE_FRIEND_REWARD {
        }

        /** Represents a C_ONE_FRIEND_REWARD. */
        class C_ONE_FRIEND_REWARD implements IC_ONE_FRIEND_REWARD {

            /**
             * Constructs a new C_ONE_FRIEND_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONE_FRIEND_REWARD);

            /**
             * Encodes the specified C_ONE_FRIEND_REWARD message. Does not implicitly {@link com.message.C_ONE_FRIEND_REWARD.verify|verify} messages.
             * @param message C_ONE_FRIEND_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONE_FRIEND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONE_FRIEND_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONE_FRIEND_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONE_FRIEND_REWARD;
        }

        /** Properties of a S_ONE_FRIEND_REWARD. */
        interface IS_ONE_FRIEND_REWARD {

            /** S_ONE_FRIEND_REWARD allRewardIds */
            allRewardIds?: (string|null);

            /** S_ONE_FRIEND_REWARD canRewardIds */
            canRewardIds?: (string|null);
        }

        /** Represents a S_ONE_FRIEND_REWARD. */
        class S_ONE_FRIEND_REWARD implements IS_ONE_FRIEND_REWARD {

            /**
             * Constructs a new S_ONE_FRIEND_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ONE_FRIEND_REWARD);

            /** S_ONE_FRIEND_REWARD allRewardIds. */
            public allRewardIds: string;

            /** S_ONE_FRIEND_REWARD canRewardIds. */
            public canRewardIds: string;

            /**
             * Encodes the specified S_ONE_FRIEND_REWARD message. Does not implicitly {@link com.message.S_ONE_FRIEND_REWARD.verify|verify} messages.
             * @param message S_ONE_FRIEND_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ONE_FRIEND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ONE_FRIEND_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ONE_FRIEND_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ONE_FRIEND_REWARD;
        }

        /** Properties of a C_ONE_OPTION_FRIEND. */
        interface IC_ONE_OPTION_FRIEND {

            /** C_ONE_OPTION_FRIEND optionType */
            optionType?: (number|null);
        }

        /** Represents a C_ONE_OPTION_FRIEND. */
        class C_ONE_OPTION_FRIEND implements IC_ONE_OPTION_FRIEND {

            /**
             * Constructs a new C_ONE_OPTION_FRIEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONE_OPTION_FRIEND);

            /** C_ONE_OPTION_FRIEND optionType. */
            public optionType: number;

            /**
             * Encodes the specified C_ONE_OPTION_FRIEND message. Does not implicitly {@link com.message.C_ONE_OPTION_FRIEND.verify|verify} messages.
             * @param message C_ONE_OPTION_FRIEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONE_OPTION_FRIEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONE_OPTION_FRIEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONE_OPTION_FRIEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONE_OPTION_FRIEND;
        }

        /** Properties of a S_ONE_OPTION_FRIEND. */
        interface IS_ONE_OPTION_FRIEND {

            /** S_ONE_OPTION_FRIEND friendInfo */
            friendInfo?: (com.message.IFRIEND_INFO[]|null);

            /** S_ONE_OPTION_FRIEND type */
            type?: (number|null);
        }

        /** Represents a S_ONE_OPTION_FRIEND. */
        class S_ONE_OPTION_FRIEND implements IS_ONE_OPTION_FRIEND {

            /**
             * Constructs a new S_ONE_OPTION_FRIEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ONE_OPTION_FRIEND);

            /** S_ONE_OPTION_FRIEND friendInfo. */
            public friendInfo: com.message.IFRIEND_INFO[];

            /** S_ONE_OPTION_FRIEND type. */
            public type: number;

            /**
             * Encodes the specified S_ONE_OPTION_FRIEND message. Does not implicitly {@link com.message.S_ONE_OPTION_FRIEND.verify|verify} messages.
             * @param message S_ONE_OPTION_FRIEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ONE_OPTION_FRIEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ONE_OPTION_FRIEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ONE_OPTION_FRIEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ONE_OPTION_FRIEND;
        }

        /** Properties of a C_GET_HIT_GOLD_EGG_INFO. */
        interface IC_GET_HIT_GOLD_EGG_INFO {
        }

        /** Represents a C_GET_HIT_GOLD_EGG_INFO. */
        class C_GET_HIT_GOLD_EGG_INFO implements IC_GET_HIT_GOLD_EGG_INFO {

            /**
             * Constructs a new C_GET_HIT_GOLD_EGG_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HIT_GOLD_EGG_INFO);

            /**
             * Encodes the specified C_GET_HIT_GOLD_EGG_INFO message. Does not implicitly {@link com.message.C_GET_HIT_GOLD_EGG_INFO.verify|verify} messages.
             * @param message C_GET_HIT_GOLD_EGG_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HIT_GOLD_EGG_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HIT_GOLD_EGG_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HIT_GOLD_EGG_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HIT_GOLD_EGG_INFO;
        }

        /** Properties of a S_GET_HIT_GOLD_EGG_INFO. */
        interface IS_GET_HIT_GOLD_EGG_INFO {

            /** S_GET_HIT_GOLD_EGG_INFO curIndex */
            curIndex?: (number|null);

            /** S_GET_HIT_GOLD_EGG_INFO hadItemIds */
            hadItemIds?: (string|null);
        }

        /** Represents a S_GET_HIT_GOLD_EGG_INFO. */
        class S_GET_HIT_GOLD_EGG_INFO implements IS_GET_HIT_GOLD_EGG_INFO {

            /**
             * Constructs a new S_GET_HIT_GOLD_EGG_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HIT_GOLD_EGG_INFO);

            /** S_GET_HIT_GOLD_EGG_INFO curIndex. */
            public curIndex: number;

            /** S_GET_HIT_GOLD_EGG_INFO hadItemIds. */
            public hadItemIds: string;

            /**
             * Encodes the specified S_GET_HIT_GOLD_EGG_INFO message. Does not implicitly {@link com.message.S_GET_HIT_GOLD_EGG_INFO.verify|verify} messages.
             * @param message S_GET_HIT_GOLD_EGG_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HIT_GOLD_EGG_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HIT_GOLD_EGG_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HIT_GOLD_EGG_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HIT_GOLD_EGG_INFO;
        }

        /** Properties of a C_HIT_GOLD_EGG. */
        interface IC_HIT_GOLD_EGG {
        }

        /** Represents a C_HIT_GOLD_EGG. */
        class C_HIT_GOLD_EGG implements IC_HIT_GOLD_EGG {

            /**
             * Constructs a new C_HIT_GOLD_EGG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HIT_GOLD_EGG);

            /**
             * Encodes the specified C_HIT_GOLD_EGG message. Does not implicitly {@link com.message.C_HIT_GOLD_EGG.verify|verify} messages.
             * @param message C_HIT_GOLD_EGG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HIT_GOLD_EGG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HIT_GOLD_EGG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HIT_GOLD_EGG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HIT_GOLD_EGG;
        }

        /** Properties of a S_HIT_GOLD_EGG. */
        interface IS_HIT_GOLD_EGG {

            /** S_HIT_GOLD_EGG curIndex */
            curIndex?: (number|null);

            /** S_HIT_GOLD_EGG itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_HIT_GOLD_EGG rewardIndex */
            rewardIndex?: (number|null);

            /** S_HIT_GOLD_EGG hadItemIds */
            hadItemIds?: (string|null);
        }

        /** Represents a S_HIT_GOLD_EGG. */
        class S_HIT_GOLD_EGG implements IS_HIT_GOLD_EGG {

            /**
             * Constructs a new S_HIT_GOLD_EGG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HIT_GOLD_EGG);

            /** S_HIT_GOLD_EGG curIndex. */
            public curIndex: number;

            /** S_HIT_GOLD_EGG itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_HIT_GOLD_EGG rewardIndex. */
            public rewardIndex: number;

            /** S_HIT_GOLD_EGG hadItemIds. */
            public hadItemIds: string;

            /**
             * Encodes the specified S_HIT_GOLD_EGG message. Does not implicitly {@link com.message.S_HIT_GOLD_EGG.verify|verify} messages.
             * @param message S_HIT_GOLD_EGG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HIT_GOLD_EGG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HIT_GOLD_EGG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HIT_GOLD_EGG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HIT_GOLD_EGG;
        }

        /** Properties of a C_GET_GUA_JI_BOX_INFO. */
        interface IC_GET_GUA_JI_BOX_INFO {
        }

        /** Represents a C_GET_GUA_JI_BOX_INFO. */
        class C_GET_GUA_JI_BOX_INFO implements IC_GET_GUA_JI_BOX_INFO {

            /**
             * Constructs a new C_GET_GUA_JI_BOX_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUA_JI_BOX_INFO);

            /**
             * Encodes the specified C_GET_GUA_JI_BOX_INFO message. Does not implicitly {@link com.message.C_GET_GUA_JI_BOX_INFO.verify|verify} messages.
             * @param message C_GET_GUA_JI_BOX_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUA_JI_BOX_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUA_JI_BOX_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUA_JI_BOX_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUA_JI_BOX_INFO;
        }

        /** Properties of a S_GET_GUA_JI_BOX_INFO. */
        interface IS_GET_GUA_JI_BOX_INFO {

            /** S_GET_GUA_JI_BOX_INFO guaJiInfo */
            guaJiInfo?: (com.message.IGUA_JI_BOX|null);
        }

        /** Represents a S_GET_GUA_JI_BOX_INFO. */
        class S_GET_GUA_JI_BOX_INFO implements IS_GET_GUA_JI_BOX_INFO {

            /**
             * Constructs a new S_GET_GUA_JI_BOX_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUA_JI_BOX_INFO);

            /** S_GET_GUA_JI_BOX_INFO guaJiInfo. */
            public guaJiInfo?: (com.message.IGUA_JI_BOX|null);

            /**
             * Encodes the specified S_GET_GUA_JI_BOX_INFO message. Does not implicitly {@link com.message.S_GET_GUA_JI_BOX_INFO.verify|verify} messages.
             * @param message S_GET_GUA_JI_BOX_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUA_JI_BOX_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUA_JI_BOX_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUA_JI_BOX_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUA_JI_BOX_INFO;
        }

        /** Properties of a C_GUA_JI_BOX_FORWARD. */
        interface IC_GUA_JI_BOX_FORWARD {

            /** C_GUA_JI_BOX_FORWARD costDiamond */
            costDiamond?: (number|null);
        }

        /** Represents a C_GUA_JI_BOX_FORWARD. */
        class C_GUA_JI_BOX_FORWARD implements IC_GUA_JI_BOX_FORWARD {

            /**
             * Constructs a new C_GUA_JI_BOX_FORWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUA_JI_BOX_FORWARD);

            /** C_GUA_JI_BOX_FORWARD costDiamond. */
            public costDiamond: number;

            /**
             * Encodes the specified C_GUA_JI_BOX_FORWARD message. Does not implicitly {@link com.message.C_GUA_JI_BOX_FORWARD.verify|verify} messages.
             * @param message C_GUA_JI_BOX_FORWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUA_JI_BOX_FORWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUA_JI_BOX_FORWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUA_JI_BOX_FORWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUA_JI_BOX_FORWARD;
        }

        /** Properties of a S_GUA_JI_BOX_FORWARD. */
        interface IS_GUA_JI_BOX_FORWARD {

            /** S_GUA_JI_BOX_FORWARD isFreeTimes */
            isFreeTimes?: (boolean|null);

            /** S_GUA_JI_BOX_FORWARD hadBuyTimes */
            hadBuyTimes?: (number|null);

            /** S_GUA_JI_BOX_FORWARD maxBuyTimes */
            maxBuyTimes?: (number|null);

            /** S_GUA_JI_BOX_FORWARD buyDiamond */
            buyDiamond?: (number|null);

            /** S_GUA_JI_BOX_FORWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_GUA_JI_BOX_FORWARD expNum */
            expNum?: (number|Long|null);

            /** S_GUA_JI_BOX_FORWARD goldNum */
            goldNum?: (number|Long|null);
        }

        /** Represents a S_GUA_JI_BOX_FORWARD. */
        class S_GUA_JI_BOX_FORWARD implements IS_GUA_JI_BOX_FORWARD {

            /**
             * Constructs a new S_GUA_JI_BOX_FORWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUA_JI_BOX_FORWARD);

            /** S_GUA_JI_BOX_FORWARD isFreeTimes. */
            public isFreeTimes: boolean;

            /** S_GUA_JI_BOX_FORWARD hadBuyTimes. */
            public hadBuyTimes: number;

            /** S_GUA_JI_BOX_FORWARD maxBuyTimes. */
            public maxBuyTimes: number;

            /** S_GUA_JI_BOX_FORWARD buyDiamond. */
            public buyDiamond: number;

            /** S_GUA_JI_BOX_FORWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_GUA_JI_BOX_FORWARD expNum. */
            public expNum: (number|Long);

            /** S_GUA_JI_BOX_FORWARD goldNum. */
            public goldNum: (number|Long);

            /**
             * Encodes the specified S_GUA_JI_BOX_FORWARD message. Does not implicitly {@link com.message.S_GUA_JI_BOX_FORWARD.verify|verify} messages.
             * @param message S_GUA_JI_BOX_FORWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUA_JI_BOX_FORWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUA_JI_BOX_FORWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUA_JI_BOX_FORWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUA_JI_BOX_FORWARD;
        }

        /** Properties of a C_GUA_JI_BOX_REWARD. */
        interface IC_GUA_JI_BOX_REWARD {
        }

        /** Represents a C_GUA_JI_BOX_REWARD. */
        class C_GUA_JI_BOX_REWARD implements IC_GUA_JI_BOX_REWARD {

            /**
             * Constructs a new C_GUA_JI_BOX_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUA_JI_BOX_REWARD);

            /**
             * Encodes the specified C_GUA_JI_BOX_REWARD message. Does not implicitly {@link com.message.C_GUA_JI_BOX_REWARD.verify|verify} messages.
             * @param message C_GUA_JI_BOX_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUA_JI_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUA_JI_BOX_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUA_JI_BOX_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUA_JI_BOX_REWARD;
        }

        /** Properties of a S_GUA_JI_BOX_REWARD. */
        interface IS_GUA_JI_BOX_REWARD {

            /** S_GUA_JI_BOX_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_GUA_JI_BOX_REWARD guaJiInfo */
            guaJiInfo?: (com.message.IGUA_JI_BOX|null);

            /** S_GUA_JI_BOX_REWARD expNum */
            expNum?: (number|Long|null);

            /** S_GUA_JI_BOX_REWARD goldNum */
            goldNum?: (number|Long|null);
        }

        /** Represents a S_GUA_JI_BOX_REWARD. */
        class S_GUA_JI_BOX_REWARD implements IS_GUA_JI_BOX_REWARD {

            /**
             * Constructs a new S_GUA_JI_BOX_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUA_JI_BOX_REWARD);

            /** S_GUA_JI_BOX_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_GUA_JI_BOX_REWARD guaJiInfo. */
            public guaJiInfo?: (com.message.IGUA_JI_BOX|null);

            /** S_GUA_JI_BOX_REWARD expNum. */
            public expNum: (number|Long);

            /** S_GUA_JI_BOX_REWARD goldNum. */
            public goldNum: (number|Long);

            /**
             * Encodes the specified S_GUA_JI_BOX_REWARD message. Does not implicitly {@link com.message.S_GUA_JI_BOX_REWARD.verify|verify} messages.
             * @param message S_GUA_JI_BOX_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUA_JI_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUA_JI_BOX_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUA_JI_BOX_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUA_JI_BOX_REWARD;
        }

        /** Properties of a C_GUA_JI_BOX_USEITEM. */
        interface IC_GUA_JI_BOX_USEITEM {

            /** C_GUA_JI_BOX_USEITEM goodsId */
            goodsId?: (number|Long|null);

            /** C_GUA_JI_BOX_USEITEM useNum */
            useNum?: (number|null);
        }

        /** Represents a C_GUA_JI_BOX_USEITEM. */
        class C_GUA_JI_BOX_USEITEM implements IC_GUA_JI_BOX_USEITEM {

            /**
             * Constructs a new C_GUA_JI_BOX_USEITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUA_JI_BOX_USEITEM);

            /** C_GUA_JI_BOX_USEITEM goodsId. */
            public goodsId: (number|Long);

            /** C_GUA_JI_BOX_USEITEM useNum. */
            public useNum: number;

            /**
             * Encodes the specified C_GUA_JI_BOX_USEITEM message. Does not implicitly {@link com.message.C_GUA_JI_BOX_USEITEM.verify|verify} messages.
             * @param message C_GUA_JI_BOX_USEITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUA_JI_BOX_USEITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUA_JI_BOX_USEITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUA_JI_BOX_USEITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUA_JI_BOX_USEITEM;
        }

        /** Properties of a S_GUA_JI_BOX_USEITEM. */
        interface IS_GUA_JI_BOX_USEITEM {

            /** S_GUA_JI_BOX_USEITEM guaJiInfo */
            guaJiInfo?: (com.message.IGUA_JI_BOX|null);

            /** S_GUA_JI_BOX_USEITEM itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GUA_JI_BOX_USEITEM. */
        class S_GUA_JI_BOX_USEITEM implements IS_GUA_JI_BOX_USEITEM {

            /**
             * Constructs a new S_GUA_JI_BOX_USEITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUA_JI_BOX_USEITEM);

            /** S_GUA_JI_BOX_USEITEM guaJiInfo. */
            public guaJiInfo?: (com.message.IGUA_JI_BOX|null);

            /** S_GUA_JI_BOX_USEITEM itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GUA_JI_BOX_USEITEM message. Does not implicitly {@link com.message.S_GUA_JI_BOX_USEITEM.verify|verify} messages.
             * @param message S_GUA_JI_BOX_USEITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUA_JI_BOX_USEITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUA_JI_BOX_USEITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUA_JI_BOX_USEITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUA_JI_BOX_USEITEM;
        }

        /** Properties of a GUA_JI_BOX. */
        interface IGUA_JI_BOX {

            /** GUA_JI_BOX guaJiTime */
            guaJiTime?: (number|null);

            /** GUA_JI_BOX offlineTime */
            offlineTime?: (number|null);

            /** GUA_JI_BOX maxGuaJiTime */
            maxGuaJiTime?: (number|null);

            /** GUA_JI_BOX goldBase */
            goldBase?: (number|Long|null);

            /** GUA_JI_BOX expBase */
            expBase?: (number|Long|null);

            /** GUA_JI_BOX equipTime */
            equipTime?: (number|null);

            /** GUA_JI_BOX offlineGoldBase */
            offlineGoldBase?: (number|Long|null);

            /** GUA_JI_BOX offlineExpBase */
            offlineExpBase?: (number|Long|null);

            /** GUA_JI_BOX offlineEquipTime */
            offlineEquipTime?: (number|null);

            /** GUA_JI_BOX isFreeTimes */
            isFreeTimes?: (boolean|null);

            /** GUA_JI_BOX hadBuyTimes */
            hadBuyTimes?: (number|null);

            /** GUA_JI_BOX maxBuyTimes */
            maxBuyTimes?: (number|null);

            /** GUA_JI_BOX buyDiamond */
            buyDiamond?: (number|null);

            /** GUA_JI_BOX vipAdd */
            vipAdd?: (number|null);

            /** GUA_JI_BOX vipTime */
            vipTime?: (number|null);

            /** GUA_JI_BOX monthCard */
            monthCard?: (number|null);

            /** GUA_JI_BOX monthCardTime */
            monthCardTime?: (number|null);
        }

        /** Represents a GUA_JI_BOX. */
        class GUA_JI_BOX implements IGUA_JI_BOX {

            /**
             * Constructs a new GUA_JI_BOX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGUA_JI_BOX);

            /** GUA_JI_BOX guaJiTime. */
            public guaJiTime: number;

            /** GUA_JI_BOX offlineTime. */
            public offlineTime: number;

            /** GUA_JI_BOX maxGuaJiTime. */
            public maxGuaJiTime: number;

            /** GUA_JI_BOX goldBase. */
            public goldBase: (number|Long);

            /** GUA_JI_BOX expBase. */
            public expBase: (number|Long);

            /** GUA_JI_BOX equipTime. */
            public equipTime: number;

            /** GUA_JI_BOX offlineGoldBase. */
            public offlineGoldBase: (number|Long);

            /** GUA_JI_BOX offlineExpBase. */
            public offlineExpBase: (number|Long);

            /** GUA_JI_BOX offlineEquipTime. */
            public offlineEquipTime: number;

            /** GUA_JI_BOX isFreeTimes. */
            public isFreeTimes: boolean;

            /** GUA_JI_BOX hadBuyTimes. */
            public hadBuyTimes: number;

            /** GUA_JI_BOX maxBuyTimes. */
            public maxBuyTimes: number;

            /** GUA_JI_BOX buyDiamond. */
            public buyDiamond: number;

            /** GUA_JI_BOX vipAdd. */
            public vipAdd: number;

            /** GUA_JI_BOX vipTime. */
            public vipTime: number;

            /** GUA_JI_BOX monthCard. */
            public monthCard: number;

            /** GUA_JI_BOX monthCardTime. */
            public monthCardTime: number;

            /**
             * Encodes the specified GUA_JI_BOX message. Does not implicitly {@link com.message.GUA_JI_BOX.verify|verify} messages.
             * @param message GUA_JI_BOX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGUA_JI_BOX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GUA_JI_BOX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GUA_JI_BOX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GUA_JI_BOX;
        }

        /** Properties of a GuildMsg. */
        interface IGuildMsg {

            /** GuildMsg guildId */
            guildId?: (number|Long|null);

            /** GuildMsg name */
            name?: (string|null);

            /** GuildMsg dec */
            dec?: (string|null);

            /** GuildMsg fundVal */
            fundVal?: (number|Long|null);

            /** GuildMsg fightVal */
            fightVal?: (number|Long|null);

            /** GuildMsg level */
            level?: (number|null);

            /** GuildMsg chairId */
            chairId?: (number|Long|null);

            /** GuildMsg chairName */
            chairName?: (string|null);

            /** GuildMsg memberNum */
            memberNum?: (number|null);

            /** GuildMsg inFightVal */
            inFightVal?: (number|Long|null);

            /** GuildMsg panTao */
            panTao?: (number|null);

            /** GuildMsg autoIn */
            autoIn?: (number|null);

            /** GuildMsg chairHeroId */
            chairHeroId?: (number|null);

            /** GuildMsg heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a GuildMsg. */
        class GuildMsg implements IGuildMsg {

            /**
             * Constructs a new GuildMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildMsg);

            /** GuildMsg guildId. */
            public guildId: (number|Long);

            /** GuildMsg name. */
            public name: string;

            /** GuildMsg dec. */
            public dec: string;

            /** GuildMsg fundVal. */
            public fundVal: (number|Long);

            /** GuildMsg fightVal. */
            public fightVal: (number|Long);

            /** GuildMsg level. */
            public level: number;

            /** GuildMsg chairId. */
            public chairId: (number|Long);

            /** GuildMsg chairName. */
            public chairName: string;

            /** GuildMsg memberNum. */
            public memberNum: number;

            /** GuildMsg inFightVal. */
            public inFightVal: (number|Long);

            /** GuildMsg panTao. */
            public panTao: number;

            /** GuildMsg autoIn. */
            public autoIn: number;

            /** GuildMsg chairHeroId. */
            public chairHeroId: number;

            /** GuildMsg heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified GuildMsg message. Does not implicitly {@link com.message.GuildMsg.verify|verify} messages.
             * @param message GuildMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildMsg;
        }

        /** Properties of a C_GET_GUILD_PAGE_LIST. */
        interface IC_GET_GUILD_PAGE_LIST {

            /** C_GET_GUILD_PAGE_LIST page */
            page?: (number|null);
        }

        /** Represents a C_GET_GUILD_PAGE_LIST. */
        class C_GET_GUILD_PAGE_LIST implements IC_GET_GUILD_PAGE_LIST {

            /**
             * Constructs a new C_GET_GUILD_PAGE_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_PAGE_LIST);

            /** C_GET_GUILD_PAGE_LIST page. */
            public page: number;

            /**
             * Encodes the specified C_GET_GUILD_PAGE_LIST message. Does not implicitly {@link com.message.C_GET_GUILD_PAGE_LIST.verify|verify} messages.
             * @param message C_GET_GUILD_PAGE_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_PAGE_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_PAGE_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_PAGE_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_PAGE_LIST;
        }

        /** Properties of a S_GET_GUILD_PAGE_LIST. */
        interface IS_GET_GUILD_PAGE_LIST {

            /** S_GET_GUILD_PAGE_LIST pageList */
            pageList?: (com.message.IGuildMsg[]|null);

            /** S_GET_GUILD_PAGE_LIST num */
            num?: (number|null);

            /** S_GET_GUILD_PAGE_LIST page */
            page?: (number|null);

            /** S_GET_GUILD_PAGE_LIST highCreateNum */
            highCreateNum?: (number|null);

            /** S_GET_GUILD_PAGE_LIST leaveTime */
            leaveTime?: (number|null);
        }

        /** Represents a S_GET_GUILD_PAGE_LIST. */
        class S_GET_GUILD_PAGE_LIST implements IS_GET_GUILD_PAGE_LIST {

            /**
             * Constructs a new S_GET_GUILD_PAGE_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_PAGE_LIST);

            /** S_GET_GUILD_PAGE_LIST pageList. */
            public pageList: com.message.IGuildMsg[];

            /** S_GET_GUILD_PAGE_LIST num. */
            public num: number;

            /** S_GET_GUILD_PAGE_LIST page. */
            public page: number;

            /** S_GET_GUILD_PAGE_LIST highCreateNum. */
            public highCreateNum: number;

            /** S_GET_GUILD_PAGE_LIST leaveTime. */
            public leaveTime: number;

            /**
             * Encodes the specified S_GET_GUILD_PAGE_LIST message. Does not implicitly {@link com.message.S_GET_GUILD_PAGE_LIST.verify|verify} messages.
             * @param message S_GET_GUILD_PAGE_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_PAGE_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_PAGE_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_PAGE_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_PAGE_LIST;
        }

        /** Properties of a GuildMemberMsg. */
        interface IGuildMemberMsg {

            /** GuildMemberMsg playerId */
            playerId?: (number|Long|null);

            /** GuildMemberMsg name */
            name?: (string|null);

            /** GuildMemberMsg playerHeroId */
            playerHeroId?: (number|null);

            /** GuildMemberMsg level */
            level?: (number|null);

            /** GuildMemberMsg grade */
            grade?: (number|null);

            /** GuildMemberMsg donateId */
            donateId?: (number|null);

            /** GuildMemberMsg fightVal */
            fightVal?: (number|Long|null);

            /** GuildMemberMsg lastLogoutTime */
            lastLogoutTime?: (number|Long|null);

            /** GuildMemberMsg dayDonate */
            dayDonate?: (number|Long|null);

            /** GuildMemberMsg boxId */
            boxId?: (number[]|null);

            /** GuildMemberMsg isOnline */
            isOnline?: (number|null);

            /** GuildMemberMsg totalDonate */
            totalDonate?: (number|Long|null);

            /** GuildMemberMsg heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a GuildMemberMsg. */
        class GuildMemberMsg implements IGuildMemberMsg {

            /**
             * Constructs a new GuildMemberMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildMemberMsg);

            /** GuildMemberMsg playerId. */
            public playerId: (number|Long);

            /** GuildMemberMsg name. */
            public name: string;

            /** GuildMemberMsg playerHeroId. */
            public playerHeroId: number;

            /** GuildMemberMsg level. */
            public level: number;

            /** GuildMemberMsg grade. */
            public grade: number;

            /** GuildMemberMsg donateId. */
            public donateId: number;

            /** GuildMemberMsg fightVal. */
            public fightVal: (number|Long);

            /** GuildMemberMsg lastLogoutTime. */
            public lastLogoutTime: (number|Long);

            /** GuildMemberMsg dayDonate. */
            public dayDonate: (number|Long);

            /** GuildMemberMsg boxId. */
            public boxId: number[];

            /** GuildMemberMsg isOnline. */
            public isOnline: number;

            /** GuildMemberMsg totalDonate. */
            public totalDonate: (number|Long);

            /** GuildMemberMsg heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified GuildMemberMsg message. Does not implicitly {@link com.message.GuildMemberMsg.verify|verify} messages.
             * @param message GuildMemberMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildMemberMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildMemberMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildMemberMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildMemberMsg;
        }

        /** Properties of a C_GET_GUILD_MEMBER_LIST. */
        interface IC_GET_GUILD_MEMBER_LIST {

            /** C_GET_GUILD_MEMBER_LIST guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_MEMBER_LIST. */
        class C_GET_GUILD_MEMBER_LIST implements IC_GET_GUILD_MEMBER_LIST {

            /**
             * Constructs a new C_GET_GUILD_MEMBER_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_MEMBER_LIST);

            /** C_GET_GUILD_MEMBER_LIST guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_MEMBER_LIST message. Does not implicitly {@link com.message.C_GET_GUILD_MEMBER_LIST.verify|verify} messages.
             * @param message C_GET_GUILD_MEMBER_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_MEMBER_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_MEMBER_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_MEMBER_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_MEMBER_LIST;
        }

        /** Properties of a S_GET_GUILD_MEMBER_LIST. */
        interface IS_GET_GUILD_MEMBER_LIST {

            /** S_GET_GUILD_MEMBER_LIST guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_MEMBER_LIST pageList */
            pageList?: (com.message.IGuildMemberMsg[]|null);

            /** S_GET_GUILD_MEMBER_LIST num */
            num?: (number|null);
        }

        /** Represents a S_GET_GUILD_MEMBER_LIST. */
        class S_GET_GUILD_MEMBER_LIST implements IS_GET_GUILD_MEMBER_LIST {

            /**
             * Constructs a new S_GET_GUILD_MEMBER_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_MEMBER_LIST);

            /** S_GET_GUILD_MEMBER_LIST guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_MEMBER_LIST pageList. */
            public pageList: com.message.IGuildMemberMsg[];

            /** S_GET_GUILD_MEMBER_LIST num. */
            public num: number;

            /**
             * Encodes the specified S_GET_GUILD_MEMBER_LIST message. Does not implicitly {@link com.message.S_GET_GUILD_MEMBER_LIST.verify|verify} messages.
             * @param message S_GET_GUILD_MEMBER_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_MEMBER_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_MEMBER_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_MEMBER_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_MEMBER_LIST;
        }

        /** Properties of a GuildApplyMsg. */
        interface IGuildApplyMsg {

            /** GuildApplyMsg playerId */
            playerId?: (number|Long|null);

            /** GuildApplyMsg name */
            name?: (string|null);

            /** GuildApplyMsg level */
            level?: (number|null);

            /** GuildApplyMsg fightVal */
            fightVal?: (number|Long|null);

            /** GuildApplyMsg playerHeroId */
            playerHeroId?: (number|null);

            /** GuildApplyMsg heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a GuildApplyMsg. */
        class GuildApplyMsg implements IGuildApplyMsg {

            /**
             * Constructs a new GuildApplyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildApplyMsg);

            /** GuildApplyMsg playerId. */
            public playerId: (number|Long);

            /** GuildApplyMsg name. */
            public name: string;

            /** GuildApplyMsg level. */
            public level: number;

            /** GuildApplyMsg fightVal. */
            public fightVal: (number|Long);

            /** GuildApplyMsg playerHeroId. */
            public playerHeroId: number;

            /** GuildApplyMsg heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified GuildApplyMsg message. Does not implicitly {@link com.message.GuildApplyMsg.verify|verify} messages.
             * @param message GuildApplyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildApplyMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildApplyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildApplyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildApplyMsg;
        }

        /** Properties of a C_GET_GUILD_APPLY_LIST. */
        interface IC_GET_GUILD_APPLY_LIST {

            /** C_GET_GUILD_APPLY_LIST guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_APPLY_LIST. */
        class C_GET_GUILD_APPLY_LIST implements IC_GET_GUILD_APPLY_LIST {

            /**
             * Constructs a new C_GET_GUILD_APPLY_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_APPLY_LIST);

            /** C_GET_GUILD_APPLY_LIST guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_APPLY_LIST message. Does not implicitly {@link com.message.C_GET_GUILD_APPLY_LIST.verify|verify} messages.
             * @param message C_GET_GUILD_APPLY_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_APPLY_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_APPLY_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_APPLY_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_APPLY_LIST;
        }

        /** Properties of a S_GET_GUILD_APPLY_LIST. */
        interface IS_GET_GUILD_APPLY_LIST {

            /** S_GET_GUILD_APPLY_LIST guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_APPLY_LIST pageList */
            pageList?: (com.message.IGuildApplyMsg[]|null);

            /** S_GET_GUILD_APPLY_LIST num */
            num?: (number|null);
        }

        /** Represents a S_GET_GUILD_APPLY_LIST. */
        class S_GET_GUILD_APPLY_LIST implements IS_GET_GUILD_APPLY_LIST {

            /**
             * Constructs a new S_GET_GUILD_APPLY_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_APPLY_LIST);

            /** S_GET_GUILD_APPLY_LIST guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_APPLY_LIST pageList. */
            public pageList: com.message.IGuildApplyMsg[];

            /** S_GET_GUILD_APPLY_LIST num. */
            public num: number;

            /**
             * Encodes the specified S_GET_GUILD_APPLY_LIST message. Does not implicitly {@link com.message.S_GET_GUILD_APPLY_LIST.verify|verify} messages.
             * @param message S_GET_GUILD_APPLY_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_APPLY_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_APPLY_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_APPLY_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_APPLY_LIST;
        }

        /** Properties of a C_GET_GUILD_BASE_INFO. */
        interface IC_GET_GUILD_BASE_INFO {

            /** C_GET_GUILD_BASE_INFO guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_BASE_INFO. */
        class C_GET_GUILD_BASE_INFO implements IC_GET_GUILD_BASE_INFO {

            /**
             * Constructs a new C_GET_GUILD_BASE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_BASE_INFO);

            /** C_GET_GUILD_BASE_INFO guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_BASE_INFO message. Does not implicitly {@link com.message.C_GET_GUILD_BASE_INFO.verify|verify} messages.
             * @param message C_GET_GUILD_BASE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_BASE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_BASE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_BASE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_BASE_INFO;
        }

        /** Properties of a S_GET_GUILD_BASE_INFO. */
        interface IS_GET_GUILD_BASE_INFO {

            /** S_GET_GUILD_BASE_INFO guildInfo */
            guildInfo?: (com.message.IGuildMsg|null);

            /** S_GET_GUILD_BASE_INFO myInfo */
            myInfo?: (com.message.IGuildMemberMsg|null);
        }

        /** Represents a S_GET_GUILD_BASE_INFO. */
        class S_GET_GUILD_BASE_INFO implements IS_GET_GUILD_BASE_INFO {

            /**
             * Constructs a new S_GET_GUILD_BASE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_BASE_INFO);

            /** S_GET_GUILD_BASE_INFO guildInfo. */
            public guildInfo?: (com.message.IGuildMsg|null);

            /** S_GET_GUILD_BASE_INFO myInfo. */
            public myInfo?: (com.message.IGuildMemberMsg|null);

            /**
             * Encodes the specified S_GET_GUILD_BASE_INFO message. Does not implicitly {@link com.message.S_GET_GUILD_BASE_INFO.verify|verify} messages.
             * @param message S_GET_GUILD_BASE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_BASE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_BASE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_BASE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_BASE_INFO;
        }

        /** Properties of a C_GET_MY_GUILD_APPLY. */
        interface IC_GET_MY_GUILD_APPLY {
        }

        /** Represents a C_GET_MY_GUILD_APPLY. */
        class C_GET_MY_GUILD_APPLY implements IC_GET_MY_GUILD_APPLY {

            /**
             * Constructs a new C_GET_MY_GUILD_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MY_GUILD_APPLY);

            /**
             * Encodes the specified C_GET_MY_GUILD_APPLY message. Does not implicitly {@link com.message.C_GET_MY_GUILD_APPLY.verify|verify} messages.
             * @param message C_GET_MY_GUILD_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MY_GUILD_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MY_GUILD_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MY_GUILD_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MY_GUILD_APPLY;
        }

        /** Properties of a S_GET_MY_GUILD_APPLY. */
        interface IS_GET_MY_GUILD_APPLY {

            /** S_GET_MY_GUILD_APPLY myGuildApplyMsg */
            myGuildApplyMsg?: (com.message.IMyGuildApplyMsg[]|null);
        }

        /** Represents a S_GET_MY_GUILD_APPLY. */
        class S_GET_MY_GUILD_APPLY implements IS_GET_MY_GUILD_APPLY {

            /**
             * Constructs a new S_GET_MY_GUILD_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MY_GUILD_APPLY);

            /** S_GET_MY_GUILD_APPLY myGuildApplyMsg. */
            public myGuildApplyMsg: com.message.IMyGuildApplyMsg[];

            /**
             * Encodes the specified S_GET_MY_GUILD_APPLY message. Does not implicitly {@link com.message.S_GET_MY_GUILD_APPLY.verify|verify} messages.
             * @param message S_GET_MY_GUILD_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MY_GUILD_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MY_GUILD_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MY_GUILD_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MY_GUILD_APPLY;
        }

        /** Properties of a MyGuildApplyMsg. */
        interface IMyGuildApplyMsg {

            /** MyGuildApplyMsg guildId */
            guildId?: (number|Long|null);

            /** MyGuildApplyMsg name */
            name?: (string|null);
        }

        /** Represents a MyGuildApplyMsg. */
        class MyGuildApplyMsg implements IMyGuildApplyMsg {

            /**
             * Constructs a new MyGuildApplyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMyGuildApplyMsg);

            /** MyGuildApplyMsg guildId. */
            public guildId: (number|Long);

            /** MyGuildApplyMsg name. */
            public name: string;

            /**
             * Encodes the specified MyGuildApplyMsg message. Does not implicitly {@link com.message.MyGuildApplyMsg.verify|verify} messages.
             * @param message MyGuildApplyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMyGuildApplyMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MyGuildApplyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MyGuildApplyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MyGuildApplyMsg;
        }

        /** Properties of a C_CREATE_GUILD. */
        interface IC_CREATE_GUILD {

            /** C_CREATE_GUILD name */
            name?: (string|null);

            /** C_CREATE_GUILD type */
            type?: (number|null);

            /** C_CREATE_GUILD dec */
            dec?: (string|null);
        }

        /** Represents a C_CREATE_GUILD. */
        class C_CREATE_GUILD implements IC_CREATE_GUILD {

            /**
             * Constructs a new C_CREATE_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CREATE_GUILD);

            /** C_CREATE_GUILD name. */
            public name: string;

            /** C_CREATE_GUILD type. */
            public type: number;

            /** C_CREATE_GUILD dec. */
            public dec: string;

            /**
             * Encodes the specified C_CREATE_GUILD message. Does not implicitly {@link com.message.C_CREATE_GUILD.verify|verify} messages.
             * @param message C_CREATE_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CREATE_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CREATE_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CREATE_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CREATE_GUILD;
        }

        /** Properties of a S_CREATE_GUILD. */
        interface IS_CREATE_GUILD {

            /** S_CREATE_GUILD guild */
            guild?: (com.message.IGuildMsg|null);

            /** S_CREATE_GUILD myInfo */
            myInfo?: (com.message.IGuildMemberMsg|null);

            /** S_CREATE_GUILD type */
            type?: (number|null);

            /** S_CREATE_GUILD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_CREATE_GUILD. */
        class S_CREATE_GUILD implements IS_CREATE_GUILD {

            /**
             * Constructs a new S_CREATE_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CREATE_GUILD);

            /** S_CREATE_GUILD guild. */
            public guild?: (com.message.IGuildMsg|null);

            /** S_CREATE_GUILD myInfo. */
            public myInfo?: (com.message.IGuildMemberMsg|null);

            /** S_CREATE_GUILD type. */
            public type: number;

            /** S_CREATE_GUILD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_CREATE_GUILD message. Does not implicitly {@link com.message.S_CREATE_GUILD.verify|verify} messages.
             * @param message S_CREATE_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CREATE_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CREATE_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CREATE_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CREATE_GUILD;
        }

        /** Properties of a C_APPLY_JOIN_GUILD. */
        interface IC_APPLY_JOIN_GUILD {

            /** C_APPLY_JOIN_GUILD guildId */
            guildId?: (number|Long|null);

            /** C_APPLY_JOIN_GUILD cancel */
            cancel?: (number|null);
        }

        /** Represents a C_APPLY_JOIN_GUILD. */
        class C_APPLY_JOIN_GUILD implements IC_APPLY_JOIN_GUILD {

            /**
             * Constructs a new C_APPLY_JOIN_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_APPLY_JOIN_GUILD);

            /** C_APPLY_JOIN_GUILD guildId. */
            public guildId: (number|Long);

            /** C_APPLY_JOIN_GUILD cancel. */
            public cancel: number;

            /**
             * Encodes the specified C_APPLY_JOIN_GUILD message. Does not implicitly {@link com.message.C_APPLY_JOIN_GUILD.verify|verify} messages.
             * @param message C_APPLY_JOIN_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_APPLY_JOIN_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_APPLY_JOIN_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_APPLY_JOIN_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_APPLY_JOIN_GUILD;
        }

        /** Properties of a S_APPLY_JOIN_GUILD. */
        interface IS_APPLY_JOIN_GUILD {

            /** S_APPLY_JOIN_GUILD guildId */
            guildId?: (number|Long|null);

            /** S_APPLY_JOIN_GUILD cancel */
            cancel?: (number|null);
        }

        /** Represents a S_APPLY_JOIN_GUILD. */
        class S_APPLY_JOIN_GUILD implements IS_APPLY_JOIN_GUILD {

            /**
             * Constructs a new S_APPLY_JOIN_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_APPLY_JOIN_GUILD);

            /** S_APPLY_JOIN_GUILD guildId. */
            public guildId: (number|Long);

            /** S_APPLY_JOIN_GUILD cancel. */
            public cancel: number;

            /**
             * Encodes the specified S_APPLY_JOIN_GUILD message. Does not implicitly {@link com.message.S_APPLY_JOIN_GUILD.verify|verify} messages.
             * @param message S_APPLY_JOIN_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_APPLY_JOIN_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_APPLY_JOIN_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_APPLY_JOIN_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_APPLY_JOIN_GUILD;
        }

        /** Properties of a C_EXIT_GUILD. */
        interface IC_EXIT_GUILD {

            /** C_EXIT_GUILD guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_EXIT_GUILD. */
        class C_EXIT_GUILD implements IC_EXIT_GUILD {

            /**
             * Constructs a new C_EXIT_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EXIT_GUILD);

            /** C_EXIT_GUILD guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_EXIT_GUILD message. Does not implicitly {@link com.message.C_EXIT_GUILD.verify|verify} messages.
             * @param message C_EXIT_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EXIT_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EXIT_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EXIT_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EXIT_GUILD;
        }

        /** Properties of a S_EXIT_GUILD. */
        interface IS_EXIT_GUILD {

            /** S_EXIT_GUILD guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a S_EXIT_GUILD. */
        class S_EXIT_GUILD implements IS_EXIT_GUILD {

            /**
             * Constructs a new S_EXIT_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EXIT_GUILD);

            /** S_EXIT_GUILD guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified S_EXIT_GUILD message. Does not implicitly {@link com.message.S_EXIT_GUILD.verify|verify} messages.
             * @param message S_EXIT_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EXIT_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EXIT_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EXIT_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EXIT_GUILD;
        }

        /** Properties of a C_DROP_OUT_GUILD. */
        interface IC_DROP_OUT_GUILD {

            /** C_DROP_OUT_GUILD guildId */
            guildId?: (number|Long|null);

            /** C_DROP_OUT_GUILD beDropPlayerId */
            beDropPlayerId?: (number|Long|null);
        }

        /** Represents a C_DROP_OUT_GUILD. */
        class C_DROP_OUT_GUILD implements IC_DROP_OUT_GUILD {

            /**
             * Constructs a new C_DROP_OUT_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DROP_OUT_GUILD);

            /** C_DROP_OUT_GUILD guildId. */
            public guildId: (number|Long);

            /** C_DROP_OUT_GUILD beDropPlayerId. */
            public beDropPlayerId: (number|Long);

            /**
             * Encodes the specified C_DROP_OUT_GUILD message. Does not implicitly {@link com.message.C_DROP_OUT_GUILD.verify|verify} messages.
             * @param message C_DROP_OUT_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DROP_OUT_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DROP_OUT_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DROP_OUT_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DROP_OUT_GUILD;
        }

        /** Properties of a S_DROP_OUT_GUILD. */
        interface IS_DROP_OUT_GUILD {

            /** S_DROP_OUT_GUILD guildId */
            guildId?: (number|Long|null);

            /** S_DROP_OUT_GUILD beDropPlayerId */
            beDropPlayerId?: (number|Long|null);
        }

        /** Represents a S_DROP_OUT_GUILD. */
        class S_DROP_OUT_GUILD implements IS_DROP_OUT_GUILD {

            /**
             * Constructs a new S_DROP_OUT_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DROP_OUT_GUILD);

            /** S_DROP_OUT_GUILD guildId. */
            public guildId: (number|Long);

            /** S_DROP_OUT_GUILD beDropPlayerId. */
            public beDropPlayerId: (number|Long);

            /**
             * Encodes the specified S_DROP_OUT_GUILD message. Does not implicitly {@link com.message.S_DROP_OUT_GUILD.verify|verify} messages.
             * @param message S_DROP_OUT_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DROP_OUT_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DROP_OUT_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DROP_OUT_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DROP_OUT_GUILD;
        }

        /** Properties of a C_LEVEL_UP_GUILD. */
        interface IC_LEVEL_UP_GUILD {

            /** C_LEVEL_UP_GUILD guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_LEVEL_UP_GUILD. */
        class C_LEVEL_UP_GUILD implements IC_LEVEL_UP_GUILD {

            /**
             * Constructs a new C_LEVEL_UP_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LEVEL_UP_GUILD);

            /** C_LEVEL_UP_GUILD guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_LEVEL_UP_GUILD message. Does not implicitly {@link com.message.C_LEVEL_UP_GUILD.verify|verify} messages.
             * @param message C_LEVEL_UP_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LEVEL_UP_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LEVEL_UP_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LEVEL_UP_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LEVEL_UP_GUILD;
        }

        /** Properties of a S_LEVEL_UP_GUILD. */
        interface IS_LEVEL_UP_GUILD {

            /** S_LEVEL_UP_GUILD guildId */
            guildId?: (number|Long|null);

            /** S_LEVEL_UP_GUILD level */
            level?: (number|null);

            /** S_LEVEL_UP_GUILD fundVal */
            fundVal?: (number|Long|null);
        }

        /** Represents a S_LEVEL_UP_GUILD. */
        class S_LEVEL_UP_GUILD implements IS_LEVEL_UP_GUILD {

            /**
             * Constructs a new S_LEVEL_UP_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LEVEL_UP_GUILD);

            /** S_LEVEL_UP_GUILD guildId. */
            public guildId: (number|Long);

            /** S_LEVEL_UP_GUILD level. */
            public level: number;

            /** S_LEVEL_UP_GUILD fundVal. */
            public fundVal: (number|Long);

            /**
             * Encodes the specified S_LEVEL_UP_GUILD message. Does not implicitly {@link com.message.S_LEVEL_UP_GUILD.verify|verify} messages.
             * @param message S_LEVEL_UP_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LEVEL_UP_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LEVEL_UP_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LEVEL_UP_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LEVEL_UP_GUILD;
        }

        /** Properties of a C_EDIT_GUILD_DESC. */
        interface IC_EDIT_GUILD_DESC {

            /** C_EDIT_GUILD_DESC guildId */
            guildId?: (number|Long|null);

            /** C_EDIT_GUILD_DESC desc */
            desc?: (string|null);
        }

        /** Represents a C_EDIT_GUILD_DESC. */
        class C_EDIT_GUILD_DESC implements IC_EDIT_GUILD_DESC {

            /**
             * Constructs a new C_EDIT_GUILD_DESC.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EDIT_GUILD_DESC);

            /** C_EDIT_GUILD_DESC guildId. */
            public guildId: (number|Long);

            /** C_EDIT_GUILD_DESC desc. */
            public desc: string;

            /**
             * Encodes the specified C_EDIT_GUILD_DESC message. Does not implicitly {@link com.message.C_EDIT_GUILD_DESC.verify|verify} messages.
             * @param message C_EDIT_GUILD_DESC message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EDIT_GUILD_DESC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EDIT_GUILD_DESC message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EDIT_GUILD_DESC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EDIT_GUILD_DESC;
        }

        /** Properties of a S_EDIT_GUILD_DESC. */
        interface IS_EDIT_GUILD_DESC {

            /** S_EDIT_GUILD_DESC guildId */
            guildId?: (number|Long|null);

            /** S_EDIT_GUILD_DESC desc */
            desc?: (string|null);
        }

        /** Represents a S_EDIT_GUILD_DESC. */
        class S_EDIT_GUILD_DESC implements IS_EDIT_GUILD_DESC {

            /**
             * Constructs a new S_EDIT_GUILD_DESC.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EDIT_GUILD_DESC);

            /** S_EDIT_GUILD_DESC guildId. */
            public guildId: (number|Long);

            /** S_EDIT_GUILD_DESC desc. */
            public desc: string;

            /**
             * Encodes the specified S_EDIT_GUILD_DESC message. Does not implicitly {@link com.message.S_EDIT_GUILD_DESC.verify|verify} messages.
             * @param message S_EDIT_GUILD_DESC message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EDIT_GUILD_DESC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EDIT_GUILD_DESC message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EDIT_GUILD_DESC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EDIT_GUILD_DESC;
        }

        /** Properties of a C_DONATE_GUILD. */
        interface IC_DONATE_GUILD {

            /** C_DONATE_GUILD guildId */
            guildId?: (number|Long|null);

            /** C_DONATE_GUILD donateId */
            donateId?: (number|null);
        }

        /** Represents a C_DONATE_GUILD. */
        class C_DONATE_GUILD implements IC_DONATE_GUILD {

            /**
             * Constructs a new C_DONATE_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DONATE_GUILD);

            /** C_DONATE_GUILD guildId. */
            public guildId: (number|Long);

            /** C_DONATE_GUILD donateId. */
            public donateId: number;

            /**
             * Encodes the specified C_DONATE_GUILD message. Does not implicitly {@link com.message.C_DONATE_GUILD.verify|verify} messages.
             * @param message C_DONATE_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DONATE_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DONATE_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DONATE_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DONATE_GUILD;
        }

        /** Properties of a S_DONATE_GUILD. */
        interface IS_DONATE_GUILD {

            /** S_DONATE_GUILD guildId */
            guildId?: (number|Long|null);

            /** S_DONATE_GUILD found */
            found?: (number|Long|null);

            /** S_DONATE_GUILD panTao */
            panTao?: (number|null);

            /** S_DONATE_GUILD myFound */
            myFound?: (number|Long|null);

            /** S_DONATE_GUILD dayDonate */
            dayDonate?: (number|Long|null);

            /** S_DONATE_GUILD donateId */
            donateId?: (number|null);

            /** S_DONATE_GUILD reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_DONATE_GUILD. */
        class S_DONATE_GUILD implements IS_DONATE_GUILD {

            /**
             * Constructs a new S_DONATE_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DONATE_GUILD);

            /** S_DONATE_GUILD guildId. */
            public guildId: (number|Long);

            /** S_DONATE_GUILD found. */
            public found: (number|Long);

            /** S_DONATE_GUILD panTao. */
            public panTao: number;

            /** S_DONATE_GUILD myFound. */
            public myFound: (number|Long);

            /** S_DONATE_GUILD dayDonate. */
            public dayDonate: (number|Long);

            /** S_DONATE_GUILD donateId. */
            public donateId: number;

            /** S_DONATE_GUILD reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_DONATE_GUILD message. Does not implicitly {@link com.message.S_DONATE_GUILD.verify|verify} messages.
             * @param message S_DONATE_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DONATE_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DONATE_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DONATE_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DONATE_GUILD;
        }

        /** Properties of a C_GET_BOX_REWARD. */
        interface IC_GET_BOX_REWARD {

            /** C_GET_BOX_REWARD guildId */
            guildId?: (number|Long|null);

            /** C_GET_BOX_REWARD boxId */
            boxId?: (number|null);
        }

        /** Represents a C_GET_BOX_REWARD. */
        class C_GET_BOX_REWARD implements IC_GET_BOX_REWARD {

            /**
             * Constructs a new C_GET_BOX_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_BOX_REWARD);

            /** C_GET_BOX_REWARD guildId. */
            public guildId: (number|Long);

            /** C_GET_BOX_REWARD boxId. */
            public boxId: number;

            /**
             * Encodes the specified C_GET_BOX_REWARD message. Does not implicitly {@link com.message.C_GET_BOX_REWARD.verify|verify} messages.
             * @param message C_GET_BOX_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_BOX_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_BOX_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_BOX_REWARD;
        }

        /** Properties of a S_GET_BOX_REWARD. */
        interface IS_GET_BOX_REWARD {

            /** S_GET_BOX_REWARD guildId */
            guildId?: (number|Long|null);

            /** S_GET_BOX_REWARD boxId */
            boxId?: (number|null);

            /** S_GET_BOX_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_GET_BOX_REWARD. */
        class S_GET_BOX_REWARD implements IS_GET_BOX_REWARD {

            /**
             * Constructs a new S_GET_BOX_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_BOX_REWARD);

            /** S_GET_BOX_REWARD guildId. */
            public guildId: (number|Long);

            /** S_GET_BOX_REWARD boxId. */
            public boxId: number;

            /** S_GET_BOX_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_GET_BOX_REWARD message. Does not implicitly {@link com.message.S_GET_BOX_REWARD.verify|verify} messages.
             * @param message S_GET_BOX_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_BOX_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_BOX_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_BOX_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_BOX_REWARD;
        }

        /** Properties of a C_SET_AUTOJOIN_GUILD. */
        interface IC_SET_AUTOJOIN_GUILD {

            /** C_SET_AUTOJOIN_GUILD guildId */
            guildId?: (number|Long|null);

            /** C_SET_AUTOJOIN_GUILD autoIn */
            autoIn?: (number|null);

            /** C_SET_AUTOJOIN_GUILD fightVal */
            fightVal?: (number|Long|null);
        }

        /** Represents a C_SET_AUTOJOIN_GUILD. */
        class C_SET_AUTOJOIN_GUILD implements IC_SET_AUTOJOIN_GUILD {

            /**
             * Constructs a new C_SET_AUTOJOIN_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SET_AUTOJOIN_GUILD);

            /** C_SET_AUTOJOIN_GUILD guildId. */
            public guildId: (number|Long);

            /** C_SET_AUTOJOIN_GUILD autoIn. */
            public autoIn: number;

            /** C_SET_AUTOJOIN_GUILD fightVal. */
            public fightVal: (number|Long);

            /**
             * Encodes the specified C_SET_AUTOJOIN_GUILD message. Does not implicitly {@link com.message.C_SET_AUTOJOIN_GUILD.verify|verify} messages.
             * @param message C_SET_AUTOJOIN_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SET_AUTOJOIN_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SET_AUTOJOIN_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SET_AUTOJOIN_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SET_AUTOJOIN_GUILD;
        }

        /** Properties of a S_SET_AUTOJOIN_GUILD. */
        interface IS_SET_AUTOJOIN_GUILD {

            /** S_SET_AUTOJOIN_GUILD guildId */
            guildId?: (number|Long|null);

            /** S_SET_AUTOJOIN_GUILD autoIn */
            autoIn?: (number|null);

            /** S_SET_AUTOJOIN_GUILD fightVal */
            fightVal?: (number|Long|null);
        }

        /** Represents a S_SET_AUTOJOIN_GUILD. */
        class S_SET_AUTOJOIN_GUILD implements IS_SET_AUTOJOIN_GUILD {

            /**
             * Constructs a new S_SET_AUTOJOIN_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SET_AUTOJOIN_GUILD);

            /** S_SET_AUTOJOIN_GUILD guildId. */
            public guildId: (number|Long);

            /** S_SET_AUTOJOIN_GUILD autoIn. */
            public autoIn: number;

            /** S_SET_AUTOJOIN_GUILD fightVal. */
            public fightVal: (number|Long);

            /**
             * Encodes the specified S_SET_AUTOJOIN_GUILD message. Does not implicitly {@link com.message.S_SET_AUTOJOIN_GUILD.verify|verify} messages.
             * @param message S_SET_AUTOJOIN_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SET_AUTOJOIN_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SET_AUTOJOIN_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SET_AUTOJOIN_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SET_AUTOJOIN_GUILD;
        }

        /** Properties of a C_APPOINT_GUILD_MEMBER. */
        interface IC_APPOINT_GUILD_MEMBER {

            /** C_APPOINT_GUILD_MEMBER guildId */
            guildId?: (number|Long|null);

            /** C_APPOINT_GUILD_MEMBER targetId */
            targetId?: (number|Long|null);

            /** C_APPOINT_GUILD_MEMBER grade */
            grade?: (number|null);
        }

        /** Represents a C_APPOINT_GUILD_MEMBER. */
        class C_APPOINT_GUILD_MEMBER implements IC_APPOINT_GUILD_MEMBER {

            /**
             * Constructs a new C_APPOINT_GUILD_MEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_APPOINT_GUILD_MEMBER);

            /** C_APPOINT_GUILD_MEMBER guildId. */
            public guildId: (number|Long);

            /** C_APPOINT_GUILD_MEMBER targetId. */
            public targetId: (number|Long);

            /** C_APPOINT_GUILD_MEMBER grade. */
            public grade: number;

            /**
             * Encodes the specified C_APPOINT_GUILD_MEMBER message. Does not implicitly {@link com.message.C_APPOINT_GUILD_MEMBER.verify|verify} messages.
             * @param message C_APPOINT_GUILD_MEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_APPOINT_GUILD_MEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_APPOINT_GUILD_MEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_APPOINT_GUILD_MEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_APPOINT_GUILD_MEMBER;
        }

        /** Properties of a S_APPOINT_GUILD_MEMBER. */
        interface IS_APPOINT_GUILD_MEMBER {

            /** S_APPOINT_GUILD_MEMBER guildId */
            guildId?: (number|Long|null);

            /** S_APPOINT_GUILD_MEMBER targetId */
            targetId?: (number|Long|null);

            /** S_APPOINT_GUILD_MEMBER grade */
            grade?: (number|null);
        }

        /** Represents a S_APPOINT_GUILD_MEMBER. */
        class S_APPOINT_GUILD_MEMBER implements IS_APPOINT_GUILD_MEMBER {

            /**
             * Constructs a new S_APPOINT_GUILD_MEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_APPOINT_GUILD_MEMBER);

            /** S_APPOINT_GUILD_MEMBER guildId. */
            public guildId: (number|Long);

            /** S_APPOINT_GUILD_MEMBER targetId. */
            public targetId: (number|Long);

            /** S_APPOINT_GUILD_MEMBER grade. */
            public grade: number;

            /**
             * Encodes the specified S_APPOINT_GUILD_MEMBER message. Does not implicitly {@link com.message.S_APPOINT_GUILD_MEMBER.verify|verify} messages.
             * @param message S_APPOINT_GUILD_MEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_APPOINT_GUILD_MEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_APPOINT_GUILD_MEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_APPOINT_GUILD_MEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_APPOINT_GUILD_MEMBER;
        }

        /** Properties of a C_INHERIT_CHAIR. */
        interface IC_INHERIT_CHAIR {

            /** C_INHERIT_CHAIR guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_INHERIT_CHAIR. */
        class C_INHERIT_CHAIR implements IC_INHERIT_CHAIR {

            /**
             * Constructs a new C_INHERIT_CHAIR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_INHERIT_CHAIR);

            /** C_INHERIT_CHAIR guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_INHERIT_CHAIR message. Does not implicitly {@link com.message.C_INHERIT_CHAIR.verify|verify} messages.
             * @param message C_INHERIT_CHAIR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_INHERIT_CHAIR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_INHERIT_CHAIR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_INHERIT_CHAIR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_INHERIT_CHAIR;
        }

        /** Properties of a S_INHERIT_CHAIR. */
        interface IS_INHERIT_CHAIR {

            /** S_INHERIT_CHAIR guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a S_INHERIT_CHAIR. */
        class S_INHERIT_CHAIR implements IS_INHERIT_CHAIR {

            /**
             * Constructs a new S_INHERIT_CHAIR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_INHERIT_CHAIR);

            /** S_INHERIT_CHAIR guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified S_INHERIT_CHAIR message. Does not implicitly {@link com.message.S_INHERIT_CHAIR.verify|verify} messages.
             * @param message S_INHERIT_CHAIR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_INHERIT_CHAIR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_INHERIT_CHAIR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_INHERIT_CHAIR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_INHERIT_CHAIR;
        }

        /** Properties of a C_APPROVE_GUILD_MEMBER. */
        interface IC_APPROVE_GUILD_MEMBER {

            /** C_APPROVE_GUILD_MEMBER guildId */
            guildId?: (number|Long|null);

            /** C_APPROVE_GUILD_MEMBER targetId */
            targetId?: (number|Long|null);

            /** C_APPROVE_GUILD_MEMBER agree */
            agree?: (number|null);
        }

        /** Represents a C_APPROVE_GUILD_MEMBER. */
        class C_APPROVE_GUILD_MEMBER implements IC_APPROVE_GUILD_MEMBER {

            /**
             * Constructs a new C_APPROVE_GUILD_MEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_APPROVE_GUILD_MEMBER);

            /** C_APPROVE_GUILD_MEMBER guildId. */
            public guildId: (number|Long);

            /** C_APPROVE_GUILD_MEMBER targetId. */
            public targetId: (number|Long);

            /** C_APPROVE_GUILD_MEMBER agree. */
            public agree: number;

            /**
             * Encodes the specified C_APPROVE_GUILD_MEMBER message. Does not implicitly {@link com.message.C_APPROVE_GUILD_MEMBER.verify|verify} messages.
             * @param message C_APPROVE_GUILD_MEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_APPROVE_GUILD_MEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_APPROVE_GUILD_MEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_APPROVE_GUILD_MEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_APPROVE_GUILD_MEMBER;
        }

        /** Properties of a S_APPROVE_GUILD_MEMBER. */
        interface IS_APPROVE_GUILD_MEMBER {

            /** S_APPROVE_GUILD_MEMBER guildId */
            guildId?: (number|Long|null);

            /** S_APPROVE_GUILD_MEMBER targetId */
            targetId?: (number|Long|null);

            /** S_APPROVE_GUILD_MEMBER agree */
            agree?: (number|null);
        }

        /** Represents a S_APPROVE_GUILD_MEMBER. */
        class S_APPROVE_GUILD_MEMBER implements IS_APPROVE_GUILD_MEMBER {

            /**
             * Constructs a new S_APPROVE_GUILD_MEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_APPROVE_GUILD_MEMBER);

            /** S_APPROVE_GUILD_MEMBER guildId. */
            public guildId: (number|Long);

            /** S_APPROVE_GUILD_MEMBER targetId. */
            public targetId: (number|Long);

            /** S_APPROVE_GUILD_MEMBER agree. */
            public agree: number;

            /**
             * Encodes the specified S_APPROVE_GUILD_MEMBER message. Does not implicitly {@link com.message.S_APPROVE_GUILD_MEMBER.verify|verify} messages.
             * @param message S_APPROVE_GUILD_MEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_APPROVE_GUILD_MEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_APPROVE_GUILD_MEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_APPROVE_GUILD_MEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_APPROVE_GUILD_MEMBER;
        }

        /** Properties of a GuildSkillMsg. */
        interface IGuildSkillMsg {

            /** GuildSkillMsg skillId */
            skillId?: (number|null);

            /** GuildSkillMsg level */
            level?: (number|null);
        }

        /** Represents a GuildSkillMsg. */
        class GuildSkillMsg implements IGuildSkillMsg {

            /**
             * Constructs a new GuildSkillMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildSkillMsg);

            /** GuildSkillMsg skillId. */
            public skillId: number;

            /** GuildSkillMsg level. */
            public level: number;

            /**
             * Encodes the specified GuildSkillMsg message. Does not implicitly {@link com.message.GuildSkillMsg.verify|verify} messages.
             * @param message GuildSkillMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildSkillMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildSkillMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildSkillMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildSkillMsg;
        }

        /** Properties of a C_GET_GUILD_SKILL_LIST. */
        interface IC_GET_GUILD_SKILL_LIST {

            /** C_GET_GUILD_SKILL_LIST guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_SKILL_LIST. */
        class C_GET_GUILD_SKILL_LIST implements IC_GET_GUILD_SKILL_LIST {

            /**
             * Constructs a new C_GET_GUILD_SKILL_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_SKILL_LIST);

            /** C_GET_GUILD_SKILL_LIST guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_SKILL_LIST message. Does not implicitly {@link com.message.C_GET_GUILD_SKILL_LIST.verify|verify} messages.
             * @param message C_GET_GUILD_SKILL_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_SKILL_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_SKILL_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_SKILL_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_SKILL_LIST;
        }

        /** Properties of a S_GET_GUILD_SKILL_LIST. */
        interface IS_GET_GUILD_SKILL_LIST {

            /** S_GET_GUILD_SKILL_LIST guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_SKILL_LIST skillList */
            skillList?: (number[]|null);
        }

        /** Represents a S_GET_GUILD_SKILL_LIST. */
        class S_GET_GUILD_SKILL_LIST implements IS_GET_GUILD_SKILL_LIST {

            /**
             * Constructs a new S_GET_GUILD_SKILL_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_SKILL_LIST);

            /** S_GET_GUILD_SKILL_LIST guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_SKILL_LIST skillList. */
            public skillList: number[];

            /**
             * Encodes the specified S_GET_GUILD_SKILL_LIST message. Does not implicitly {@link com.message.S_GET_GUILD_SKILL_LIST.verify|verify} messages.
             * @param message S_GET_GUILD_SKILL_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_SKILL_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_SKILL_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_SKILL_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_SKILL_LIST;
        }

        /** Properties of a C_GUILD_SKILL_LEVELUP. */
        interface IC_GUILD_SKILL_LEVELUP {

            /** C_GUILD_SKILL_LEVELUP guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_SKILL_LEVELUP skillId */
            skillId?: (number|null);
        }

        /** Represents a C_GUILD_SKILL_LEVELUP. */
        class C_GUILD_SKILL_LEVELUP implements IC_GUILD_SKILL_LEVELUP {

            /**
             * Constructs a new C_GUILD_SKILL_LEVELUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_SKILL_LEVELUP);

            /** C_GUILD_SKILL_LEVELUP guildId. */
            public guildId: (number|Long);

            /** C_GUILD_SKILL_LEVELUP skillId. */
            public skillId: number;

            /**
             * Encodes the specified C_GUILD_SKILL_LEVELUP message. Does not implicitly {@link com.message.C_GUILD_SKILL_LEVELUP.verify|verify} messages.
             * @param message C_GUILD_SKILL_LEVELUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_SKILL_LEVELUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_SKILL_LEVELUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_SKILL_LEVELUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_SKILL_LEVELUP;
        }

        /** Properties of a S_GUILD_SKILL_LEVELUP. */
        interface IS_GUILD_SKILL_LEVELUP {

            /** S_GUILD_SKILL_LEVELUP guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_SKILL_LEVELUP skillId */
            skillId?: (number|null);

            /** S_GUILD_SKILL_LEVELUP skillList */
            skillList?: (number[]|null);
        }

        /** Represents a S_GUILD_SKILL_LEVELUP. */
        class S_GUILD_SKILL_LEVELUP implements IS_GUILD_SKILL_LEVELUP {

            /**
             * Constructs a new S_GUILD_SKILL_LEVELUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_SKILL_LEVELUP);

            /** S_GUILD_SKILL_LEVELUP guildId. */
            public guildId: (number|Long);

            /** S_GUILD_SKILL_LEVELUP skillId. */
            public skillId: number;

            /** S_GUILD_SKILL_LEVELUP skillList. */
            public skillList: number[];

            /**
             * Encodes the specified S_GUILD_SKILL_LEVELUP message. Does not implicitly {@link com.message.S_GUILD_SKILL_LEVELUP.verify|verify} messages.
             * @param message S_GUILD_SKILL_LEVELUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_SKILL_LEVELUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_SKILL_LEVELUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_SKILL_LEVELUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_SKILL_LEVELUP;
        }

        /** Properties of a C_GUILD_TRANSFER_CHAIR. */
        interface IC_GUILD_TRANSFER_CHAIR {

            /** C_GUILD_TRANSFER_CHAIR guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_TRANSFER_CHAIR targetId */
            targetId?: (number|Long|null);
        }

        /** Represents a C_GUILD_TRANSFER_CHAIR. */
        class C_GUILD_TRANSFER_CHAIR implements IC_GUILD_TRANSFER_CHAIR {

            /**
             * Constructs a new C_GUILD_TRANSFER_CHAIR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_TRANSFER_CHAIR);

            /** C_GUILD_TRANSFER_CHAIR guildId. */
            public guildId: (number|Long);

            /** C_GUILD_TRANSFER_CHAIR targetId. */
            public targetId: (number|Long);

            /**
             * Encodes the specified C_GUILD_TRANSFER_CHAIR message. Does not implicitly {@link com.message.C_GUILD_TRANSFER_CHAIR.verify|verify} messages.
             * @param message C_GUILD_TRANSFER_CHAIR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_TRANSFER_CHAIR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_TRANSFER_CHAIR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_TRANSFER_CHAIR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_TRANSFER_CHAIR;
        }

        /** Properties of a S_GUILD_TRANSFER_CHAIR. */
        interface IS_GUILD_TRANSFER_CHAIR {

            /** S_GUILD_TRANSFER_CHAIR guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_TRANSFER_CHAIR targetId */
            targetId?: (number|Long|null);
        }

        /** Represents a S_GUILD_TRANSFER_CHAIR. */
        class S_GUILD_TRANSFER_CHAIR implements IS_GUILD_TRANSFER_CHAIR {

            /**
             * Constructs a new S_GUILD_TRANSFER_CHAIR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_TRANSFER_CHAIR);

            /** S_GUILD_TRANSFER_CHAIR guildId. */
            public guildId: (number|Long);

            /** S_GUILD_TRANSFER_CHAIR targetId. */
            public targetId: (number|Long);

            /**
             * Encodes the specified S_GUILD_TRANSFER_CHAIR message. Does not implicitly {@link com.message.S_GUILD_TRANSFER_CHAIR.verify|verify} messages.
             * @param message S_GUILD_TRANSFER_CHAIR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_TRANSFER_CHAIR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_TRANSFER_CHAIR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_TRANSFER_CHAIR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_TRANSFER_CHAIR;
        }

        /** Properties of a C_EDIT_GUILD_NAME. */
        interface IC_EDIT_GUILD_NAME {

            /** C_EDIT_GUILD_NAME guildId */
            guildId?: (number|Long|null);

            /** C_EDIT_GUILD_NAME name */
            name?: (string|null);
        }

        /** Represents a C_EDIT_GUILD_NAME. */
        class C_EDIT_GUILD_NAME implements IC_EDIT_GUILD_NAME {

            /**
             * Constructs a new C_EDIT_GUILD_NAME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EDIT_GUILD_NAME);

            /** C_EDIT_GUILD_NAME guildId. */
            public guildId: (number|Long);

            /** C_EDIT_GUILD_NAME name. */
            public name: string;

            /**
             * Encodes the specified C_EDIT_GUILD_NAME message. Does not implicitly {@link com.message.C_EDIT_GUILD_NAME.verify|verify} messages.
             * @param message C_EDIT_GUILD_NAME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EDIT_GUILD_NAME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EDIT_GUILD_NAME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EDIT_GUILD_NAME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EDIT_GUILD_NAME;
        }

        /** Properties of a S_EDIT_GUILD_NAME. */
        interface IS_EDIT_GUILD_NAME {

            /** S_EDIT_GUILD_NAME guildId */
            guildId?: (number|Long|null);

            /** S_EDIT_GUILD_NAME name */
            name?: (string|null);
        }

        /** Represents a S_EDIT_GUILD_NAME. */
        class S_EDIT_GUILD_NAME implements IS_EDIT_GUILD_NAME {

            /**
             * Constructs a new S_EDIT_GUILD_NAME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EDIT_GUILD_NAME);

            /** S_EDIT_GUILD_NAME guildId. */
            public guildId: (number|Long);

            /** S_EDIT_GUILD_NAME name. */
            public name: string;

            /**
             * Encodes the specified S_EDIT_GUILD_NAME message. Does not implicitly {@link com.message.S_EDIT_GUILD_NAME.verify|verify} messages.
             * @param message S_EDIT_GUILD_NAME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EDIT_GUILD_NAME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EDIT_GUILD_NAME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EDIT_GUILD_NAME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EDIT_GUILD_NAME;
        }

        /** Properties of a C_GET_GUILD_LOG. */
        interface IC_GET_GUILD_LOG {

            /** C_GET_GUILD_LOG guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_LOG. */
        class C_GET_GUILD_LOG implements IC_GET_GUILD_LOG {

            /**
             * Constructs a new C_GET_GUILD_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_LOG);

            /** C_GET_GUILD_LOG guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_LOG message. Does not implicitly {@link com.message.C_GET_GUILD_LOG.verify|verify} messages.
             * @param message C_GET_GUILD_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_LOG;
        }

        /** Properties of a S_GET_GUILD_LOG. */
        interface IS_GET_GUILD_LOG {

            /** S_GET_GUILD_LOG guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_LOG logList */
            logList?: (com.message.IGuildLogMsg[]|null);
        }

        /** Represents a S_GET_GUILD_LOG. */
        class S_GET_GUILD_LOG implements IS_GET_GUILD_LOG {

            /**
             * Constructs a new S_GET_GUILD_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_LOG);

            /** S_GET_GUILD_LOG guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_LOG logList. */
            public logList: com.message.IGuildLogMsg[];

            /**
             * Encodes the specified S_GET_GUILD_LOG message. Does not implicitly {@link com.message.S_GET_GUILD_LOG.verify|verify} messages.
             * @param message S_GET_GUILD_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_LOG;
        }

        /** Properties of a GuildLogMsg. */
        interface IGuildLogMsg {

            /** GuildLogMsg playerId */
            playerId?: (number|Long|null);

            /** GuildLogMsg name */
            name?: (string|null);

            /** GuildLogMsg targetId */
            targetId?: (number|Long|null);

            /** GuildLogMsg targetName */
            targetName?: (string|null);

            /** GuildLogMsg type */
            type?: (number|null);

            /** GuildLogMsg logTime */
            logTime?: (number|Long|null);

            /** GuildLogMsg info */
            info?: (string|null);
        }

        /** Represents a GuildLogMsg. */
        class GuildLogMsg implements IGuildLogMsg {

            /**
             * Constructs a new GuildLogMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildLogMsg);

            /** GuildLogMsg playerId. */
            public playerId: (number|Long);

            /** GuildLogMsg name. */
            public name: string;

            /** GuildLogMsg targetId. */
            public targetId: (number|Long);

            /** GuildLogMsg targetName. */
            public targetName: string;

            /** GuildLogMsg type. */
            public type: number;

            /** GuildLogMsg logTime. */
            public logTime: (number|Long);

            /** GuildLogMsg info. */
            public info: string;

            /**
             * Encodes the specified GuildLogMsg message. Does not implicitly {@link com.message.GuildLogMsg.verify|verify} messages.
             * @param message GuildLogMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildLogMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildLogMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildLogMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildLogMsg;
        }

        /** Properties of a GuildTaskRankMsg. */
        interface IGuildTaskRankMsg {

            /** GuildTaskRankMsg playerId */
            playerId?: (number|Long|null);

            /** GuildTaskRankMsg name */
            name?: (string|null);

            /** GuildTaskRankMsg playerHeroId */
            playerHeroId?: (number|null);

            /** GuildTaskRankMsg level */
            level?: (number|null);

            /** GuildTaskRankMsg taskDonate */
            taskDonate?: (number|Long|null);

            /** GuildTaskRankMsg rank */
            rank?: (number|null);

            /** GuildTaskRankMsg fightVal */
            fightVal?: (number|Long|null);

            /** GuildTaskRankMsg heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a GuildTaskRankMsg. */
        class GuildTaskRankMsg implements IGuildTaskRankMsg {

            /**
             * Constructs a new GuildTaskRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildTaskRankMsg);

            /** GuildTaskRankMsg playerId. */
            public playerId: (number|Long);

            /** GuildTaskRankMsg name. */
            public name: string;

            /** GuildTaskRankMsg playerHeroId. */
            public playerHeroId: number;

            /** GuildTaskRankMsg level. */
            public level: number;

            /** GuildTaskRankMsg taskDonate. */
            public taskDonate: (number|Long);

            /** GuildTaskRankMsg rank. */
            public rank: number;

            /** GuildTaskRankMsg fightVal. */
            public fightVal: (number|Long);

            /** GuildTaskRankMsg heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified GuildTaskRankMsg message. Does not implicitly {@link com.message.GuildTaskRankMsg.verify|verify} messages.
             * @param message GuildTaskRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildTaskRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildTaskRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildTaskRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildTaskRankMsg;
        }

        /** Properties of a C_GET_GUILD_TASK_RANK. */
        interface IC_GET_GUILD_TASK_RANK {

            /** C_GET_GUILD_TASK_RANK guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_TASK_RANK. */
        class C_GET_GUILD_TASK_RANK implements IC_GET_GUILD_TASK_RANK {

            /**
             * Constructs a new C_GET_GUILD_TASK_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_TASK_RANK);

            /** C_GET_GUILD_TASK_RANK guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_TASK_RANK message. Does not implicitly {@link com.message.C_GET_GUILD_TASK_RANK.verify|verify} messages.
             * @param message C_GET_GUILD_TASK_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_TASK_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_TASK_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_TASK_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_TASK_RANK;
        }

        /** Properties of a S_GET_GUILD_TASK_RANK. */
        interface IS_GET_GUILD_TASK_RANK {

            /** S_GET_GUILD_TASK_RANK guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_TASK_RANK guildTaskRankMsg */
            guildTaskRankMsg?: (com.message.IGuildTaskRankMsg[]|null);
        }

        /** Represents a S_GET_GUILD_TASK_RANK. */
        class S_GET_GUILD_TASK_RANK implements IS_GET_GUILD_TASK_RANK {

            /**
             * Constructs a new S_GET_GUILD_TASK_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_TASK_RANK);

            /** S_GET_GUILD_TASK_RANK guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_TASK_RANK guildTaskRankMsg. */
            public guildTaskRankMsg: com.message.IGuildTaskRankMsg[];

            /**
             * Encodes the specified S_GET_GUILD_TASK_RANK message. Does not implicitly {@link com.message.S_GET_GUILD_TASK_RANK.verify|verify} messages.
             * @param message S_GET_GUILD_TASK_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_TASK_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_TASK_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_TASK_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_TASK_RANK;
        }

        /** Properties of a C_GUILD_RECRUIT. */
        interface IC_GUILD_RECRUIT {

            /** C_GUILD_RECRUIT guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_RECRUIT. */
        class C_GUILD_RECRUIT implements IC_GUILD_RECRUIT {

            /**
             * Constructs a new C_GUILD_RECRUIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_RECRUIT);

            /** C_GUILD_RECRUIT guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_RECRUIT message. Does not implicitly {@link com.message.C_GUILD_RECRUIT.verify|verify} messages.
             * @param message C_GUILD_RECRUIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_RECRUIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_RECRUIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_RECRUIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_RECRUIT;
        }

        /** Properties of a S_GUILD_RECRUIT. */
        interface IS_GUILD_RECRUIT {

            /** S_GUILD_RECRUIT guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_RECRUIT cdTime */
            cdTime?: (number|Long|null);
        }

        /** Represents a S_GUILD_RECRUIT. */
        class S_GUILD_RECRUIT implements IS_GUILD_RECRUIT {

            /**
             * Constructs a new S_GUILD_RECRUIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_RECRUIT);

            /** S_GUILD_RECRUIT guildId. */
            public guildId: (number|Long);

            /** S_GUILD_RECRUIT cdTime. */
            public cdTime: (number|Long);

            /**
             * Encodes the specified S_GUILD_RECRUIT message. Does not implicitly {@link com.message.S_GUILD_RECRUIT.verify|verify} messages.
             * @param message S_GUILD_RECRUIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_RECRUIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_RECRUIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_RECRUIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_RECRUIT;
        }

        /** Properties of a SYNC_GUILD_NOTICE. */
        interface ISYNC_GUILD_NOTICE {

            /** SYNC_GUILD_NOTICE guildId */
            guildId?: (number|Long|null);

            /** SYNC_GUILD_NOTICE type */
            type?: (number|null);

            /** SYNC_GUILD_NOTICE value */
            value?: (string|null);
        }

        /** Represents a SYNC_GUILD_NOTICE. */
        class SYNC_GUILD_NOTICE implements ISYNC_GUILD_NOTICE {

            /**
             * Constructs a new SYNC_GUILD_NOTICE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ISYNC_GUILD_NOTICE);

            /** SYNC_GUILD_NOTICE guildId. */
            public guildId: (number|Long);

            /** SYNC_GUILD_NOTICE type. */
            public type: number;

            /** SYNC_GUILD_NOTICE value. */
            public value: string;

            /**
             * Encodes the specified SYNC_GUILD_NOTICE message. Does not implicitly {@link com.message.SYNC_GUILD_NOTICE.verify|verify} messages.
             * @param message SYNC_GUILD_NOTICE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ISYNC_GUILD_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SYNC_GUILD_NOTICE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SYNC_GUILD_NOTICE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.SYNC_GUILD_NOTICE;
        }

        /** Properties of a C_GUILD_ARENA_APPLY. */
        interface IC_GUILD_ARENA_APPLY {

            /** C_GUILD_ARENA_APPLY guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_ARENA_APPLY. */
        class C_GUILD_ARENA_APPLY implements IC_GUILD_ARENA_APPLY {

            /**
             * Constructs a new C_GUILD_ARENA_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_APPLY);

            /** C_GUILD_ARENA_APPLY guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_ARENA_APPLY message. Does not implicitly {@link com.message.C_GUILD_ARENA_APPLY.verify|verify} messages.
             * @param message C_GUILD_ARENA_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_APPLY;
        }

        /** Properties of a S_GUILD_ARENA_APPLY. */
        interface IS_GUILD_ARENA_APPLY {

            /** S_GUILD_ARENA_APPLY guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_ARENA_APPLY applyTime */
            applyTime?: (number|Long|null);

            /** S_GUILD_ARENA_APPLY battleTime */
            battleTime?: (number|Long|null);
        }

        /** Represents a S_GUILD_ARENA_APPLY. */
        class S_GUILD_ARENA_APPLY implements IS_GUILD_ARENA_APPLY {

            /**
             * Constructs a new S_GUILD_ARENA_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_APPLY);

            /** S_GUILD_ARENA_APPLY guildId. */
            public guildId: (number|Long);

            /** S_GUILD_ARENA_APPLY applyTime. */
            public applyTime: (number|Long);

            /** S_GUILD_ARENA_APPLY battleTime. */
            public battleTime: (number|Long);

            /**
             * Encodes the specified S_GUILD_ARENA_APPLY message. Does not implicitly {@link com.message.S_GUILD_ARENA_APPLY.verify|verify} messages.
             * @param message S_GUILD_ARENA_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_APPLY;
        }

        /** Properties of a C_GET_GUILD_ARENA_INFO. */
        interface IC_GET_GUILD_ARENA_INFO {

            /** C_GET_GUILD_ARENA_INFO guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_ARENA_INFO. */
        class C_GET_GUILD_ARENA_INFO implements IC_GET_GUILD_ARENA_INFO {

            /**
             * Constructs a new C_GET_GUILD_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_ARENA_INFO);

            /** C_GET_GUILD_ARENA_INFO guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_ARENA_INFO message. Does not implicitly {@link com.message.C_GET_GUILD_ARENA_INFO.verify|verify} messages.
             * @param message C_GET_GUILD_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_ARENA_INFO;
        }

        /** Properties of a S_GET_GUILD_ARENA_INFO. */
        interface IS_GET_GUILD_ARENA_INFO {

            /** S_GET_GUILD_ARENA_INFO guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_ARENA_INFO applyTime */
            applyTime?: (number|Long|null);

            /** S_GET_GUILD_ARENA_INFO battleTime */
            battleTime?: (number|Long|null);

            /** S_GET_GUILD_ARENA_INFO playerMsg */
            playerMsg?: (com.message.IChairPlayerMsg|null);

            /** S_GET_GUILD_ARENA_INFO startTime */
            startTime?: (number|Long|null);
        }

        /** Represents a S_GET_GUILD_ARENA_INFO. */
        class S_GET_GUILD_ARENA_INFO implements IS_GET_GUILD_ARENA_INFO {

            /**
             * Constructs a new S_GET_GUILD_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_ARENA_INFO);

            /** S_GET_GUILD_ARENA_INFO guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_ARENA_INFO applyTime. */
            public applyTime: (number|Long);

            /** S_GET_GUILD_ARENA_INFO battleTime. */
            public battleTime: (number|Long);

            /** S_GET_GUILD_ARENA_INFO playerMsg. */
            public playerMsg?: (com.message.IChairPlayerMsg|null);

            /** S_GET_GUILD_ARENA_INFO startTime. */
            public startTime: (number|Long);

            /**
             * Encodes the specified S_GET_GUILD_ARENA_INFO message. Does not implicitly {@link com.message.S_GET_GUILD_ARENA_INFO.verify|verify} messages.
             * @param message S_GET_GUILD_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_ARENA_INFO;
        }

        /** Properties of a ChairPlayerMsg. */
        interface IChairPlayerMsg {

            /** ChairPlayerMsg playerId */
            playerId?: (number|Long|null);

            /** ChairPlayerMsg playerName */
            playerName?: (string|null);

            /** ChairPlayerMsg serverId */
            serverId?: (number|null);

            /** ChairPlayerMsg heroId */
            heroId?: (number|Long|null);

            /** ChairPlayerMsg heroQuality */
            heroQuality?: (number|null);

            /** ChairPlayerMsg imageDressMsg */
            imageDressMsg?: (com.message.IImageDressMsg[]|null);

            /** ChairPlayerMsg useTile */
            useTile?: (number|null);

            /** ChairPlayerMsg champtionName */
            champtionName?: (string|null);

            /** ChairPlayerMsg seasonId */
            seasonId?: (number|null);
        }

        /** Represents a ChairPlayerMsg. */
        class ChairPlayerMsg implements IChairPlayerMsg {

            /**
             * Constructs a new ChairPlayerMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IChairPlayerMsg);

            /** ChairPlayerMsg playerId. */
            public playerId: (number|Long);

            /** ChairPlayerMsg playerName. */
            public playerName: string;

            /** ChairPlayerMsg serverId. */
            public serverId: number;

            /** ChairPlayerMsg heroId. */
            public heroId: (number|Long);

            /** ChairPlayerMsg heroQuality. */
            public heroQuality: number;

            /** ChairPlayerMsg imageDressMsg. */
            public imageDressMsg: com.message.IImageDressMsg[];

            /** ChairPlayerMsg useTile. */
            public useTile: number;

            /** ChairPlayerMsg champtionName. */
            public champtionName: string;

            /** ChairPlayerMsg seasonId. */
            public seasonId: number;

            /**
             * Encodes the specified ChairPlayerMsg message. Does not implicitly {@link com.message.ChairPlayerMsg.verify|verify} messages.
             * @param message ChairPlayerMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IChairPlayerMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ChairPlayerMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChairPlayerMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ChairPlayerMsg;
        }

        /** Properties of a C_GUILD_ARENA_HISTORY. */
        interface IC_GUILD_ARENA_HISTORY {
        }

        /** Represents a C_GUILD_ARENA_HISTORY. */
        class C_GUILD_ARENA_HISTORY implements IC_GUILD_ARENA_HISTORY {

            /**
             * Constructs a new C_GUILD_ARENA_HISTORY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_HISTORY);

            /**
             * Encodes the specified C_GUILD_ARENA_HISTORY message. Does not implicitly {@link com.message.C_GUILD_ARENA_HISTORY.verify|verify} messages.
             * @param message C_GUILD_ARENA_HISTORY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_HISTORY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_HISTORY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_HISTORY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_HISTORY;
        }

        /** Properties of a S_GUILD_ARENA_HISTORY. */
        interface IS_GUILD_ARENA_HISTORY {

            /** S_GUILD_ARENA_HISTORY currId */
            currId?: (number|null);

            /** S_GUILD_ARENA_HISTORY playerMsg */
            playerMsg?: (com.message.IChairPlayerMsg[]|null);
        }

        /** Represents a S_GUILD_ARENA_HISTORY. */
        class S_GUILD_ARENA_HISTORY implements IS_GUILD_ARENA_HISTORY {

            /**
             * Constructs a new S_GUILD_ARENA_HISTORY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_HISTORY);

            /** S_GUILD_ARENA_HISTORY currId. */
            public currId: number;

            /** S_GUILD_ARENA_HISTORY playerMsg. */
            public playerMsg: com.message.IChairPlayerMsg[];

            /**
             * Encodes the specified S_GUILD_ARENA_HISTORY message. Does not implicitly {@link com.message.S_GUILD_ARENA_HISTORY.verify|verify} messages.
             * @param message S_GUILD_ARENA_HISTORY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_HISTORY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_HISTORY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_HISTORY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_HISTORY;
        }

        /** Properties of a C_GUILD_ARENA_RANK. */
        interface IC_GUILD_ARENA_RANK {

            /** C_GUILD_ARENA_RANK rankType */
            rankType?: (number|null);

            /** C_GUILD_ARENA_RANK guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_ARENA_RANK. */
        class C_GUILD_ARENA_RANK implements IC_GUILD_ARENA_RANK {

            /**
             * Constructs a new C_GUILD_ARENA_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_RANK);

            /** C_GUILD_ARENA_RANK rankType. */
            public rankType: number;

            /** C_GUILD_ARENA_RANK guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_ARENA_RANK message. Does not implicitly {@link com.message.C_GUILD_ARENA_RANK.verify|verify} messages.
             * @param message C_GUILD_ARENA_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_RANK;
        }

        /** Properties of a S_GUILD_ARENA_RANK. */
        interface IS_GUILD_ARENA_RANK {

            /** S_GUILD_ARENA_RANK rankType */
            rankType?: (number|null);

            /** S_GUILD_ARENA_RANK rankMsg */
            rankMsg?: (com.message.IGuildRankMsg[]|null);

            /** S_GUILD_ARENA_RANK selfRank */
            selfRank?: (number|null);
        }

        /** Represents a S_GUILD_ARENA_RANK. */
        class S_GUILD_ARENA_RANK implements IS_GUILD_ARENA_RANK {

            /**
             * Constructs a new S_GUILD_ARENA_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_RANK);

            /** S_GUILD_ARENA_RANK rankType. */
            public rankType: number;

            /** S_GUILD_ARENA_RANK rankMsg. */
            public rankMsg: com.message.IGuildRankMsg[];

            /** S_GUILD_ARENA_RANK selfRank. */
            public selfRank: number;

            /**
             * Encodes the specified S_GUILD_ARENA_RANK message. Does not implicitly {@link com.message.S_GUILD_ARENA_RANK.verify|verify} messages.
             * @param message S_GUILD_ARENA_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_RANK;
        }

        /** Properties of a GuildRankMsg. */
        interface IGuildRankMsg {

            /** GuildRankMsg rankId */
            rankId?: (number|null);

            /** GuildRankMsg guildId */
            guildId?: (number|Long|null);

            /** GuildRankMsg guildName */
            guildName?: (string|null);

            /** GuildRankMsg battlePlayers */
            battlePlayers?: (number|null);

            /** GuildRankMsg winTimes */
            winTimes?: (number|null);

            /** GuildRankMsg loseTimes */
            loseTimes?: (number|null);

            /** GuildRankMsg score */
            score?: (number|null);
        }

        /** Represents a GuildRankMsg. */
        class GuildRankMsg implements IGuildRankMsg {

            /**
             * Constructs a new GuildRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildRankMsg);

            /** GuildRankMsg rankId. */
            public rankId: number;

            /** GuildRankMsg guildId. */
            public guildId: (number|Long);

            /** GuildRankMsg guildName. */
            public guildName: string;

            /** GuildRankMsg battlePlayers. */
            public battlePlayers: number;

            /** GuildRankMsg winTimes. */
            public winTimes: number;

            /** GuildRankMsg loseTimes. */
            public loseTimes: number;

            /** GuildRankMsg score. */
            public score: number;

            /**
             * Encodes the specified GuildRankMsg message. Does not implicitly {@link com.message.GuildRankMsg.verify|verify} messages.
             * @param message GuildRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildRankMsg;
        }

        /** Properties of a C_GUILD_ARENA_PEAK. */
        interface IC_GUILD_ARENA_PEAK {

            /** C_GUILD_ARENA_PEAK guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_ARENA_PEAK. */
        class C_GUILD_ARENA_PEAK implements IC_GUILD_ARENA_PEAK {

            /**
             * Constructs a new C_GUILD_ARENA_PEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_PEAK);

            /** C_GUILD_ARENA_PEAK guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_ARENA_PEAK message. Does not implicitly {@link com.message.C_GUILD_ARENA_PEAK.verify|verify} messages.
             * @param message C_GUILD_ARENA_PEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_PEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_PEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_PEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_PEAK;
        }

        /** Properties of a S_GUILD_ARENA_PEAK. */
        interface IS_GUILD_ARENA_PEAK {

            /** S_GUILD_ARENA_PEAK rankType */
            rankType?: (number|null);

            /** S_GUILD_ARENA_PEAK myData */
            myData?: (com.message.IGuildBattleMsg|null);

            /** S_GUILD_ARENA_PEAK targetData */
            targetData?: (com.message.IGuildBattleMsg|null);

            /** S_GUILD_ARENA_PEAK battleTime */
            battleTime?: (number|Long|null);

            /** S_GUILD_ARENA_PEAK logDatas */
            logDatas?: (com.message.IGuildLogDataMsg[]|null);
        }

        /** Represents a S_GUILD_ARENA_PEAK. */
        class S_GUILD_ARENA_PEAK implements IS_GUILD_ARENA_PEAK {

            /**
             * Constructs a new S_GUILD_ARENA_PEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_PEAK);

            /** S_GUILD_ARENA_PEAK rankType. */
            public rankType: number;

            /** S_GUILD_ARENA_PEAK myData. */
            public myData?: (com.message.IGuildBattleMsg|null);

            /** S_GUILD_ARENA_PEAK targetData. */
            public targetData?: (com.message.IGuildBattleMsg|null);

            /** S_GUILD_ARENA_PEAK battleTime. */
            public battleTime: (number|Long);

            /** S_GUILD_ARENA_PEAK logDatas. */
            public logDatas: com.message.IGuildLogDataMsg[];

            /**
             * Encodes the specified S_GUILD_ARENA_PEAK message. Does not implicitly {@link com.message.S_GUILD_ARENA_PEAK.verify|verify} messages.
             * @param message S_GUILD_ARENA_PEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_PEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_PEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_PEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_PEAK;
        }

        /** Properties of a GuildBattleMsg. */
        interface IGuildBattleMsg {

            /** GuildBattleMsg rankId */
            rankId?: (number|null);

            /** GuildBattleMsg guildId */
            guildId?: (number|Long|null);

            /** GuildBattleMsg guildName */
            guildName?: (string|null);

            /** GuildBattleMsg battlePlayers */
            battlePlayers?: (number|null);

            /** GuildBattleMsg initBlood */
            initBlood?: (number|null);

            /** GuildBattleMsg blood */
            blood?: (number|null);

            /** GuildBattleMsg playerMsg */
            playerMsg?: (com.message.IChairPlayerMsg|null);

            /** GuildBattleMsg score */
            score?: (number|null);
        }

        /** Represents a GuildBattleMsg. */
        class GuildBattleMsg implements IGuildBattleMsg {

            /**
             * Constructs a new GuildBattleMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildBattleMsg);

            /** GuildBattleMsg rankId. */
            public rankId: number;

            /** GuildBattleMsg guildId. */
            public guildId: (number|Long);

            /** GuildBattleMsg guildName. */
            public guildName: string;

            /** GuildBattleMsg battlePlayers. */
            public battlePlayers: number;

            /** GuildBattleMsg initBlood. */
            public initBlood: number;

            /** GuildBattleMsg blood. */
            public blood: number;

            /** GuildBattleMsg playerMsg. */
            public playerMsg?: (com.message.IChairPlayerMsg|null);

            /** GuildBattleMsg score. */
            public score: number;

            /**
             * Encodes the specified GuildBattleMsg message. Does not implicitly {@link com.message.GuildBattleMsg.verify|verify} messages.
             * @param message GuildBattleMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildBattleMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildBattleMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildBattleMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildBattleMsg;
        }

        /** Properties of a GuildLogDataMsg. */
        interface IGuildLogDataMsg {

            /** GuildLogDataMsg createTime */
            createTime?: (number|Long|null);

            /** GuildLogDataMsg guildName */
            guildName?: (string|null);

            /** GuildLogDataMsg playerName */
            playerName?: (string|null);

            /** GuildLogDataMsg guildTargetName */
            guildTargetName?: (string|null);

            /** GuildLogDataMsg playerTargetName */
            playerTargetName?: (string|null);

            /** GuildLogDataMsg battleResult */
            battleResult?: (number|null);

            /** GuildLogDataMsg recordId */
            recordId?: (string|null);

            /** GuildLogDataMsg battleType */
            battleType?: (number|null);
        }

        /** Represents a GuildLogDataMsg. */
        class GuildLogDataMsg implements IGuildLogDataMsg {

            /**
             * Constructs a new GuildLogDataMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildLogDataMsg);

            /** GuildLogDataMsg createTime. */
            public createTime: (number|Long);

            /** GuildLogDataMsg guildName. */
            public guildName: string;

            /** GuildLogDataMsg playerName. */
            public playerName: string;

            /** GuildLogDataMsg guildTargetName. */
            public guildTargetName: string;

            /** GuildLogDataMsg playerTargetName. */
            public playerTargetName: string;

            /** GuildLogDataMsg battleResult. */
            public battleResult: number;

            /** GuildLogDataMsg recordId. */
            public recordId: string;

            /** GuildLogDataMsg battleType. */
            public battleType: number;

            /**
             * Encodes the specified GuildLogDataMsg message. Does not implicitly {@link com.message.GuildLogDataMsg.verify|verify} messages.
             * @param message GuildLogDataMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildLogDataMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildLogDataMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildLogDataMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildLogDataMsg;
        }

        /** Properties of a C_GUILD_ARENA_TARGETS. */
        interface IC_GUILD_ARENA_TARGETS {

            /** C_GUILD_ARENA_TARGETS guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_ARENA_TARGETS targetGuildId */
            targetGuildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_ARENA_TARGETS. */
        class C_GUILD_ARENA_TARGETS implements IC_GUILD_ARENA_TARGETS {

            /**
             * Constructs a new C_GUILD_ARENA_TARGETS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_TARGETS);

            /** C_GUILD_ARENA_TARGETS guildId. */
            public guildId: (number|Long);

            /** C_GUILD_ARENA_TARGETS targetGuildId. */
            public targetGuildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_ARENA_TARGETS message. Does not implicitly {@link com.message.C_GUILD_ARENA_TARGETS.verify|verify} messages.
             * @param message C_GUILD_ARENA_TARGETS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_TARGETS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_TARGETS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_TARGETS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_TARGETS;
        }

        /** Properties of a S_GUILD_ARENA_TARGETS. */
        interface IS_GUILD_ARENA_TARGETS {

            /** S_GUILD_ARENA_TARGETS myBlood */
            myBlood?: (number|null);

            /** S_GUILD_ARENA_TARGETS playTimes */
            playTimes?: (number|null);

            /** S_GUILD_ARENA_TARGETS maxTimes */
            maxTimes?: (number|null);

            /** S_GUILD_ARENA_TARGETS buyTimes */
            buyTimes?: (number|null);

            /** S_GUILD_ARENA_TARGETS targetDatas */
            targetDatas?: (com.message.IGuildPlayerMsg[]|null);
        }

        /** Represents a S_GUILD_ARENA_TARGETS. */
        class S_GUILD_ARENA_TARGETS implements IS_GUILD_ARENA_TARGETS {

            /**
             * Constructs a new S_GUILD_ARENA_TARGETS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_TARGETS);

            /** S_GUILD_ARENA_TARGETS myBlood. */
            public myBlood: number;

            /** S_GUILD_ARENA_TARGETS playTimes. */
            public playTimes: number;

            /** S_GUILD_ARENA_TARGETS maxTimes. */
            public maxTimes: number;

            /** S_GUILD_ARENA_TARGETS buyTimes. */
            public buyTimes: number;

            /** S_GUILD_ARENA_TARGETS targetDatas. */
            public targetDatas: com.message.IGuildPlayerMsg[];

            /**
             * Encodes the specified S_GUILD_ARENA_TARGETS message. Does not implicitly {@link com.message.S_GUILD_ARENA_TARGETS.verify|verify} messages.
             * @param message S_GUILD_ARENA_TARGETS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_TARGETS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_TARGETS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_TARGETS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_TARGETS;
        }

        /** Properties of a GuildPlayerMsg. */
        interface IGuildPlayerMsg {

            /** GuildPlayerMsg playerId */
            playerId?: (number|Long|null);

            /** GuildPlayerMsg playerName */
            playerName?: (string|null);

            /** GuildPlayerMsg serverId */
            serverId?: (number|null);

            /** GuildPlayerMsg heroId */
            heroId?: (number|Long|null);

            /** GuildPlayerMsg heroQuality */
            heroQuality?: (number|null);

            /** GuildPlayerMsg imageDressMsg */
            imageDressMsg?: (com.message.IImageDressMsg[]|null);

            /** GuildPlayerMsg useTile */
            useTile?: (number|null);

            /** GuildPlayerMsg guildGrade */
            guildGrade?: (number|null);

            /** GuildPlayerMsg blood */
            blood?: (number|null);

            /** GuildPlayerMsg power */
            power?: (number|Long|null);
        }

        /** Represents a GuildPlayerMsg. */
        class GuildPlayerMsg implements IGuildPlayerMsg {

            /**
             * Constructs a new GuildPlayerMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildPlayerMsg);

            /** GuildPlayerMsg playerId. */
            public playerId: (number|Long);

            /** GuildPlayerMsg playerName. */
            public playerName: string;

            /** GuildPlayerMsg serverId. */
            public serverId: number;

            /** GuildPlayerMsg heroId. */
            public heroId: (number|Long);

            /** GuildPlayerMsg heroQuality. */
            public heroQuality: number;

            /** GuildPlayerMsg imageDressMsg. */
            public imageDressMsg: com.message.IImageDressMsg[];

            /** GuildPlayerMsg useTile. */
            public useTile: number;

            /** GuildPlayerMsg guildGrade. */
            public guildGrade: number;

            /** GuildPlayerMsg blood. */
            public blood: number;

            /** GuildPlayerMsg power. */
            public power: (number|Long);

            /**
             * Encodes the specified GuildPlayerMsg message. Does not implicitly {@link com.message.GuildPlayerMsg.verify|verify} messages.
             * @param message GuildPlayerMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildPlayerMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildPlayerMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildPlayerMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildPlayerMsg;
        }

        /** Properties of a C_GUILD_ARENA_RECORD. */
        interface IC_GUILD_ARENA_RECORD {

            /** C_GUILD_ARENA_RECORD guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_ARENA_RECORD rankType */
            rankType?: (number|null);
        }

        /** Represents a C_GUILD_ARENA_RECORD. */
        class C_GUILD_ARENA_RECORD implements IC_GUILD_ARENA_RECORD {

            /**
             * Constructs a new C_GUILD_ARENA_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_RECORD);

            /** C_GUILD_ARENA_RECORD guildId. */
            public guildId: (number|Long);

            /** C_GUILD_ARENA_RECORD rankType. */
            public rankType: number;

            /**
             * Encodes the specified C_GUILD_ARENA_RECORD message. Does not implicitly {@link com.message.C_GUILD_ARENA_RECORD.verify|verify} messages.
             * @param message C_GUILD_ARENA_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_RECORD;
        }

        /** Properties of a S_GUILD_ARENA_RECORD. */
        interface IS_GUILD_ARENA_RECORD {

            /** S_GUILD_ARENA_RECORD rankType */
            rankType?: (number|null);

            /** S_GUILD_ARENA_RECORD recordDatas */
            recordDatas?: (com.message.IGuildRecordMsg[]|null);
        }

        /** Represents a S_GUILD_ARENA_RECORD. */
        class S_GUILD_ARENA_RECORD implements IS_GUILD_ARENA_RECORD {

            /**
             * Constructs a new S_GUILD_ARENA_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_RECORD);

            /** S_GUILD_ARENA_RECORD rankType. */
            public rankType: number;

            /** S_GUILD_ARENA_RECORD recordDatas. */
            public recordDatas: com.message.IGuildRecordMsg[];

            /**
             * Encodes the specified S_GUILD_ARENA_RECORD message. Does not implicitly {@link com.message.S_GUILD_ARENA_RECORD.verify|verify} messages.
             * @param message S_GUILD_ARENA_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_RECORD;
        }

        /** Properties of a GuildRecordMsg. */
        interface IGuildRecordMsg {

            /** GuildRecordMsg guildId */
            guildId?: (number|Long|null);

            /** GuildRecordMsg guildName */
            guildName?: (string|null);

            /** GuildRecordMsg blood */
            blood?: (number|null);

            /** GuildRecordMsg targetGuildId */
            targetGuildId?: (number|Long|null);

            /** GuildRecordMsg targetGuildName */
            targetGuildName?: (string|null);

            /** GuildRecordMsg targetBlood */
            targetBlood?: (number|null);

            /** GuildRecordMsg winGuildId */
            winGuildId?: (number|Long|null);
        }

        /** Represents a GuildRecordMsg. */
        class GuildRecordMsg implements IGuildRecordMsg {

            /**
             * Constructs a new GuildRecordMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildRecordMsg);

            /** GuildRecordMsg guildId. */
            public guildId: (number|Long);

            /** GuildRecordMsg guildName. */
            public guildName: string;

            /** GuildRecordMsg blood. */
            public blood: number;

            /** GuildRecordMsg targetGuildId. */
            public targetGuildId: (number|Long);

            /** GuildRecordMsg targetGuildName. */
            public targetGuildName: string;

            /** GuildRecordMsg targetBlood. */
            public targetBlood: number;

            /** GuildRecordMsg winGuildId. */
            public winGuildId: (number|Long);

            /**
             * Encodes the specified GuildRecordMsg message. Does not implicitly {@link com.message.GuildRecordMsg.verify|verify} messages.
             * @param message GuildRecordMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildRecordMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildRecordMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildRecordMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildRecordMsg;
        }

        /** Properties of a C_GUILD_ARENA_REPORT. */
        interface IC_GUILD_ARENA_REPORT {

            /** C_GUILD_ARENA_REPORT guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_ARENA_REPORT recordId */
            recordId?: (string|null);
        }

        /** Represents a C_GUILD_ARENA_REPORT. */
        class C_GUILD_ARENA_REPORT implements IC_GUILD_ARENA_REPORT {

            /**
             * Constructs a new C_GUILD_ARENA_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_REPORT);

            /** C_GUILD_ARENA_REPORT guildId. */
            public guildId: (number|Long);

            /** C_GUILD_ARENA_REPORT recordId. */
            public recordId: string;

            /**
             * Encodes the specified C_GUILD_ARENA_REPORT message. Does not implicitly {@link com.message.C_GUILD_ARENA_REPORT.verify|verify} messages.
             * @param message C_GUILD_ARENA_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_REPORT;
        }

        /** Properties of a S_GUILD_ARENA_REPORT. */
        interface IS_GUILD_ARENA_REPORT {

            /** S_GUILD_ARENA_REPORT reportData */
            reportData?: (com.message.IGuildBattleReportMsg|null);
        }

        /** Represents a S_GUILD_ARENA_REPORT. */
        class S_GUILD_ARENA_REPORT implements IS_GUILD_ARENA_REPORT {

            /**
             * Constructs a new S_GUILD_ARENA_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_REPORT);

            /** S_GUILD_ARENA_REPORT reportData. */
            public reportData?: (com.message.IGuildBattleReportMsg|null);

            /**
             * Encodes the specified S_GUILD_ARENA_REPORT message. Does not implicitly {@link com.message.S_GUILD_ARENA_REPORT.verify|verify} messages.
             * @param message S_GUILD_ARENA_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_REPORT;
        }

        /** Properties of a GuildBattleReportMsg. */
        interface IGuildBattleReportMsg {

            /** GuildBattleReportMsg myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildBattleReportMsg enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildBattleReportMsg fighterRoundMsg */
            fighterRoundMsg?: (com.message.IFighterRoundMsg[]|null);

            /** GuildBattleReportMsg roundNum */
            roundNum?: (number|null);

            /** GuildBattleReportMsg winPlayerId */
            winPlayerId?: (number|Long|null);
        }

        /** Represents a GuildBattleReportMsg. */
        class GuildBattleReportMsg implements IGuildBattleReportMsg {

            /**
             * Constructs a new GuildBattleReportMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildBattleReportMsg);

            /** GuildBattleReportMsg myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildBattleReportMsg enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildBattleReportMsg fighterRoundMsg. */
            public fighterRoundMsg: com.message.IFighterRoundMsg[];

            /** GuildBattleReportMsg roundNum. */
            public roundNum: number;

            /** GuildBattleReportMsg winPlayerId. */
            public winPlayerId: (number|Long);

            /**
             * Encodes the specified GuildBattleReportMsg message. Does not implicitly {@link com.message.GuildBattleReportMsg.verify|verify} messages.
             * @param message GuildBattleReportMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildBattleReportMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildBattleReportMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildBattleReportMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildBattleReportMsg;
        }

        /** Properties of a C_GUILD_ARENA_BUY_TIMES. */
        interface IC_GUILD_ARENA_BUY_TIMES {

            /** C_GUILD_ARENA_BUY_TIMES guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_ARENA_BUY_TIMES buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a C_GUILD_ARENA_BUY_TIMES. */
        class C_GUILD_ARENA_BUY_TIMES implements IC_GUILD_ARENA_BUY_TIMES {

            /**
             * Constructs a new C_GUILD_ARENA_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_BUY_TIMES);

            /** C_GUILD_ARENA_BUY_TIMES guildId. */
            public guildId: (number|Long);

            /** C_GUILD_ARENA_BUY_TIMES buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified C_GUILD_ARENA_BUY_TIMES message. Does not implicitly {@link com.message.C_GUILD_ARENA_BUY_TIMES.verify|verify} messages.
             * @param message C_GUILD_ARENA_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_BUY_TIMES;
        }

        /** Properties of a S_GUILD_ARENA_BUY_TIMES. */
        interface IS_GUILD_ARENA_BUY_TIMES {

            /** S_GUILD_ARENA_BUY_TIMES buyTimes */
            buyTimes?: (number|null);

            /** S_GUILD_ARENA_BUY_TIMES playTimes */
            playTimes?: (number|null);

            /** S_GUILD_ARENA_BUY_TIMES maxTimes */
            maxTimes?: (number|null);
        }

        /** Represents a S_GUILD_ARENA_BUY_TIMES. */
        class S_GUILD_ARENA_BUY_TIMES implements IS_GUILD_ARENA_BUY_TIMES {

            /**
             * Constructs a new S_GUILD_ARENA_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_BUY_TIMES);

            /** S_GUILD_ARENA_BUY_TIMES buyTimes. */
            public buyTimes: number;

            /** S_GUILD_ARENA_BUY_TIMES playTimes. */
            public playTimes: number;

            /** S_GUILD_ARENA_BUY_TIMES maxTimes. */
            public maxTimes: number;

            /**
             * Encodes the specified S_GUILD_ARENA_BUY_TIMES message. Does not implicitly {@link com.message.S_GUILD_ARENA_BUY_TIMES.verify|verify} messages.
             * @param message S_GUILD_ARENA_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_BUY_TIMES;
        }

        /** Properties of a C_GUILD_ARENA_ATTACK. */
        interface IC_GUILD_ARENA_ATTACK {

            /** C_GUILD_ARENA_ATTACK guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_ARENA_ATTACK targetGuildId */
            targetGuildId?: (number|Long|null);

            /** C_GUILD_ARENA_ATTACK targetPlayerId */
            targetPlayerId?: (number|Long|null);
        }

        /** Represents a C_GUILD_ARENA_ATTACK. */
        class C_GUILD_ARENA_ATTACK implements IC_GUILD_ARENA_ATTACK {

            /**
             * Constructs a new C_GUILD_ARENA_ATTACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_ARENA_ATTACK);

            /** C_GUILD_ARENA_ATTACK guildId. */
            public guildId: (number|Long);

            /** C_GUILD_ARENA_ATTACK targetGuildId. */
            public targetGuildId: (number|Long);

            /** C_GUILD_ARENA_ATTACK targetPlayerId. */
            public targetPlayerId: (number|Long);

            /**
             * Encodes the specified C_GUILD_ARENA_ATTACK message. Does not implicitly {@link com.message.C_GUILD_ARENA_ATTACK.verify|verify} messages.
             * @param message C_GUILD_ARENA_ATTACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_ARENA_ATTACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_ARENA_ATTACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_ARENA_ATTACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_ARENA_ATTACK;
        }

        /** Properties of a S_GUILD_ARENA_ATTACK. */
        interface IS_GUILD_ARENA_ATTACK {

            /** S_GUILD_ARENA_ATTACK playTimes */
            playTimes?: (number|null);
        }

        /** Represents a S_GUILD_ARENA_ATTACK. */
        class S_GUILD_ARENA_ATTACK implements IS_GUILD_ARENA_ATTACK {

            /**
             * Constructs a new S_GUILD_ARENA_ATTACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_ARENA_ATTACK);

            /** S_GUILD_ARENA_ATTACK playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified S_GUILD_ARENA_ATTACK message. Does not implicitly {@link com.message.S_GUILD_ARENA_ATTACK.verify|verify} messages.
             * @param message S_GUILD_ARENA_ATTACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_ARENA_ATTACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_ARENA_ATTACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_ARENA_ATTACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_ARENA_ATTACK;
        }

        /** Properties of a CROSS_C_GET_GUILD_ARENA_INFO. */
        interface ICROSS_C_GET_GUILD_ARENA_INFO {

            /** CROSS_C_GET_GUILD_ARENA_INFO guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GET_GUILD_ARENA_INFO playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_GUILD_ARENA_INFO. */
        class CROSS_C_GET_GUILD_ARENA_INFO implements ICROSS_C_GET_GUILD_ARENA_INFO {

            /**
             * Constructs a new CROSS_C_GET_GUILD_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_GUILD_ARENA_INFO);

            /** CROSS_C_GET_GUILD_ARENA_INFO guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GET_GUILD_ARENA_INFO playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_GUILD_ARENA_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_GUILD_ARENA_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_GUILD_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_GUILD_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_GUILD_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_GUILD_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_GUILD_ARENA_INFO;
        }

        /** Properties of a CROSS_S_GET_GUILD_ARENA_INFO. */
        interface ICROSS_S_GET_GUILD_ARENA_INFO {

            /** CROSS_S_GET_GUILD_ARENA_INFO guildId */
            guildId?: (number|Long|null);

            /** CROSS_S_GET_GUILD_ARENA_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_GUILD_ARENA_INFO startTime */
            startTime?: (number|Long|null);

            /** CROSS_S_GET_GUILD_ARENA_INFO battleTime */
            battleTime?: (number|Long|null);

            /** CROSS_S_GET_GUILD_ARENA_INFO playerMsg */
            playerMsg?: (com.message.IChairPlayerMsg|null);
        }

        /** Represents a CROSS_S_GET_GUILD_ARENA_INFO. */
        class CROSS_S_GET_GUILD_ARENA_INFO implements ICROSS_S_GET_GUILD_ARENA_INFO {

            /**
             * Constructs a new CROSS_S_GET_GUILD_ARENA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_GUILD_ARENA_INFO);

            /** CROSS_S_GET_GUILD_ARENA_INFO guildId. */
            public guildId: (number|Long);

            /** CROSS_S_GET_GUILD_ARENA_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_GUILD_ARENA_INFO startTime. */
            public startTime: (number|Long);

            /** CROSS_S_GET_GUILD_ARENA_INFO battleTime. */
            public battleTime: (number|Long);

            /** CROSS_S_GET_GUILD_ARENA_INFO playerMsg. */
            public playerMsg?: (com.message.IChairPlayerMsg|null);

            /**
             * Encodes the specified CROSS_S_GET_GUILD_ARENA_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_GUILD_ARENA_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_GUILD_ARENA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_GUILD_ARENA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_GUILD_ARENA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_GUILD_ARENA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_GUILD_ARENA_INFO;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_APPLY. */
        interface ICROSS_C_GUILD_ARENA_APPLY {

            /** CROSS_C_GUILD_ARENA_APPLY guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_APPLY playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_APPLY memberMsg */
            memberMsg?: (com.message.IGuildArenaMemberMsg|null);

            /** CROSS_C_GUILD_ARENA_APPLY guildName */
            guildName?: (string|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_APPLY. */
        class CROSS_C_GUILD_ARENA_APPLY implements ICROSS_C_GUILD_ARENA_APPLY {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_APPLY);

            /** CROSS_C_GUILD_ARENA_APPLY guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_ARENA_APPLY playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_ARENA_APPLY memberMsg. */
            public memberMsg?: (com.message.IGuildArenaMemberMsg|null);

            /** CROSS_C_GUILD_ARENA_APPLY guildName. */
            public guildName: string;

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_APPLY message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_APPLY.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_APPLY;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_APPLY. */
        interface ICROSS_S_GUILD_ARENA_APPLY {

            /** CROSS_S_GUILD_ARENA_APPLY playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_APPLY startTime */
            startTime?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_APPLY battleTime */
            battleTime?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_APPLY seasonId */
            seasonId?: (number|null);

            /** CROSS_S_GUILD_ARENA_APPLY result */
            result?: (number|null);

            /** CROSS_S_GUILD_ARENA_APPLY guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_APPLY. */
        class CROSS_S_GUILD_ARENA_APPLY implements ICROSS_S_GUILD_ARENA_APPLY {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_APPLY);

            /** CROSS_S_GUILD_ARENA_APPLY playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_APPLY startTime. */
            public startTime: (number|Long);

            /** CROSS_S_GUILD_ARENA_APPLY battleTime. */
            public battleTime: (number|Long);

            /** CROSS_S_GUILD_ARENA_APPLY seasonId. */
            public seasonId: number;

            /** CROSS_S_GUILD_ARENA_APPLY result. */
            public result: number;

            /** CROSS_S_GUILD_ARENA_APPLY guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_APPLY message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_APPLY.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_APPLY;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_HISTORY. */
        interface ICROSS_C_GUILD_ARENA_HISTORY {

            /** CROSS_C_GUILD_ARENA_HISTORY playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_HISTORY. */
        class CROSS_C_GUILD_ARENA_HISTORY implements ICROSS_C_GUILD_ARENA_HISTORY {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_HISTORY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_HISTORY);

            /** CROSS_C_GUILD_ARENA_HISTORY playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_HISTORY message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_HISTORY.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_HISTORY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_HISTORY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_HISTORY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_HISTORY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_HISTORY;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_HISTORY. */
        interface ICROSS_S_GUILD_ARENA_HISTORY {

            /** CROSS_S_GUILD_ARENA_HISTORY playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_HISTORY currId */
            currId?: (number|null);

            /** CROSS_S_GUILD_ARENA_HISTORY playerMsg */
            playerMsg?: (com.message.IChairPlayerMsg[]|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_HISTORY. */
        class CROSS_S_GUILD_ARENA_HISTORY implements ICROSS_S_GUILD_ARENA_HISTORY {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_HISTORY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_HISTORY);

            /** CROSS_S_GUILD_ARENA_HISTORY playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_HISTORY currId. */
            public currId: number;

            /** CROSS_S_GUILD_ARENA_HISTORY playerMsg. */
            public playerMsg: com.message.IChairPlayerMsg[];

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_HISTORY message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_HISTORY.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_HISTORY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_HISTORY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_HISTORY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_HISTORY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_HISTORY;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_RANK. */
        interface ICROSS_C_GUILD_ARENA_RANK {

            /** CROSS_C_GUILD_ARENA_RANK playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_RANK rankType */
            rankType?: (number|null);

            /** CROSS_C_GUILD_ARENA_RANK guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_RANK. */
        class CROSS_C_GUILD_ARENA_RANK implements ICROSS_C_GUILD_ARENA_RANK {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_RANK);

            /** CROSS_C_GUILD_ARENA_RANK playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_ARENA_RANK rankType. */
            public rankType: number;

            /** CROSS_C_GUILD_ARENA_RANK guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_RANK message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_RANK.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_RANK;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_RANK. */
        interface ICROSS_S_GUILD_ARENA_RANK {

            /** CROSS_S_GUILD_ARENA_RANK playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_RANK rankType */
            rankType?: (number|null);

            /** CROSS_S_GUILD_ARENA_RANK rankDatas */
            rankDatas?: (com.message.IGuildRankMsg[]|null);

            /** CROSS_S_GUILD_ARENA_RANK selfRank */
            selfRank?: (number|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_RANK. */
        class CROSS_S_GUILD_ARENA_RANK implements ICROSS_S_GUILD_ARENA_RANK {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_RANK);

            /** CROSS_S_GUILD_ARENA_RANK playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_RANK rankType. */
            public rankType: number;

            /** CROSS_S_GUILD_ARENA_RANK rankDatas. */
            public rankDatas: com.message.IGuildRankMsg[];

            /** CROSS_S_GUILD_ARENA_RANK selfRank. */
            public selfRank: number;

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_RANK message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_RANK.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_RANK;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_PEAK. */
        interface ICROSS_C_GUILD_ARENA_PEAK {

            /** CROSS_C_GUILD_ARENA_PEAK guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_PEAK playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_PEAK. */
        class CROSS_C_GUILD_ARENA_PEAK implements ICROSS_C_GUILD_ARENA_PEAK {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_PEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_PEAK);

            /** CROSS_C_GUILD_ARENA_PEAK guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_ARENA_PEAK playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_PEAK message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_PEAK.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_PEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_PEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_PEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_PEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_PEAK;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_PEAK. */
        interface ICROSS_S_GUILD_ARENA_PEAK {

            /** CROSS_S_GUILD_ARENA_PEAK playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_PEAK rankType */
            rankType?: (number|null);

            /** CROSS_S_GUILD_ARENA_PEAK myData */
            myData?: (com.message.IGuildBattleMsg|null);

            /** CROSS_S_GUILD_ARENA_PEAK targetData */
            targetData?: (com.message.IGuildBattleMsg|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_PEAK. */
        class CROSS_S_GUILD_ARENA_PEAK implements ICROSS_S_GUILD_ARENA_PEAK {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_PEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_PEAK);

            /** CROSS_S_GUILD_ARENA_PEAK playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_PEAK rankType. */
            public rankType: number;

            /** CROSS_S_GUILD_ARENA_PEAK myData. */
            public myData?: (com.message.IGuildBattleMsg|null);

            /** CROSS_S_GUILD_ARENA_PEAK targetData. */
            public targetData?: (com.message.IGuildBattleMsg|null);

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_PEAK message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_PEAK.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_PEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_PEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_PEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_PEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_PEAK;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_TARGETS. */
        interface ICROSS_C_GUILD_ARENA_TARGETS {

            /** CROSS_C_GUILD_ARENA_TARGETS guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_TARGETS playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_TARGETS targetGuildId */
            targetGuildId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_TARGETS. */
        class CROSS_C_GUILD_ARENA_TARGETS implements ICROSS_C_GUILD_ARENA_TARGETS {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_TARGETS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_TARGETS);

            /** CROSS_C_GUILD_ARENA_TARGETS guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_ARENA_TARGETS playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_ARENA_TARGETS targetGuildId. */
            public targetGuildId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_TARGETS message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_TARGETS.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_TARGETS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_TARGETS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_TARGETS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_TARGETS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_TARGETS;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_TARGETS. */
        interface ICROSS_S_GUILD_ARENA_TARGETS {

            /** CROSS_S_GUILD_ARENA_TARGETS playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_TARGETS targetDatas */
            targetDatas?: (com.message.IGuildPlayerMsg[]|null);

            /** CROSS_S_GUILD_ARENA_TARGETS blood */
            blood?: (number|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_TARGETS. */
        class CROSS_S_GUILD_ARENA_TARGETS implements ICROSS_S_GUILD_ARENA_TARGETS {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_TARGETS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_TARGETS);

            /** CROSS_S_GUILD_ARENA_TARGETS playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_TARGETS targetDatas. */
            public targetDatas: com.message.IGuildPlayerMsg[];

            /** CROSS_S_GUILD_ARENA_TARGETS blood. */
            public blood: number;

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_TARGETS message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_TARGETS.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_TARGETS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_TARGETS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_TARGETS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_TARGETS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_TARGETS;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_RECORD. */
        interface ICROSS_C_GUILD_ARENA_RECORD {

            /** CROSS_C_GUILD_ARENA_RECORD playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_RECORD rankType */
            rankType?: (number|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_RECORD. */
        class CROSS_C_GUILD_ARENA_RECORD implements ICROSS_C_GUILD_ARENA_RECORD {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_RECORD);

            /** CROSS_C_GUILD_ARENA_RECORD playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_ARENA_RECORD rankType. */
            public rankType: number;

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_RECORD message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_RECORD.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_RECORD;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_RECORD. */
        interface ICROSS_S_GUILD_ARENA_RECORD {

            /** CROSS_S_GUILD_ARENA_RECORD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_RECORD rankType */
            rankType?: (number|null);

            /** CROSS_S_GUILD_ARENA_RECORD recordDatas */
            recordDatas?: (com.message.IGuildRecordMsg[]|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_RECORD. */
        class CROSS_S_GUILD_ARENA_RECORD implements ICROSS_S_GUILD_ARENA_RECORD {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_RECORD);

            /** CROSS_S_GUILD_ARENA_RECORD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_RECORD rankType. */
            public rankType: number;

            /** CROSS_S_GUILD_ARENA_RECORD recordDatas. */
            public recordDatas: com.message.IGuildRecordMsg[];

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_RECORD message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_RECORD.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_RECORD;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_REPORT. */
        interface ICROSS_C_GUILD_ARENA_REPORT {

            /** CROSS_C_GUILD_ARENA_REPORT playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_REPORT recordId */
            recordId?: (string|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_REPORT. */
        class CROSS_C_GUILD_ARENA_REPORT implements ICROSS_C_GUILD_ARENA_REPORT {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_REPORT);

            /** CROSS_C_GUILD_ARENA_REPORT playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_ARENA_REPORT recordId. */
            public recordId: string;

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_REPORT message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_REPORT.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_REPORT;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_REPORT. */
        interface ICROSS_S_GUILD_ARENA_REPORT {

            /** CROSS_S_GUILD_ARENA_REPORT playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_REPORT reportData */
            reportData?: (com.message.IGuildBattleReportMsg|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_REPORT. */
        class CROSS_S_GUILD_ARENA_REPORT implements ICROSS_S_GUILD_ARENA_REPORT {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_REPORT);

            /** CROSS_S_GUILD_ARENA_REPORT playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_REPORT reportData. */
            public reportData?: (com.message.IGuildBattleReportMsg|null);

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_REPORT message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_REPORT.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_REPORT;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_AUTO_APPLY. */
        interface ICROSS_C_GUILD_ARENA_AUTO_APPLY {

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY startTime */
            startTime?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY battleTime */
            battleTime?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY memberMsg */
            memberMsg?: (com.message.IGuildArenaMemberMsg|null);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY guildName */
            guildName?: (string|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_AUTO_APPLY. */
        class CROSS_C_GUILD_ARENA_AUTO_APPLY implements ICROSS_C_GUILD_ARENA_AUTO_APPLY {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_AUTO_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_AUTO_APPLY);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY startTime. */
            public startTime: (number|Long);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY battleTime. */
            public battleTime: (number|Long);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY memberMsg. */
            public memberMsg?: (com.message.IGuildArenaMemberMsg|null);

            /** CROSS_C_GUILD_ARENA_AUTO_APPLY guildName. */
            public guildName: string;

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_AUTO_APPLY message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_AUTO_APPLY.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_AUTO_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_AUTO_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_AUTO_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_AUTO_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_AUTO_APPLY;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_AUTO_APPLY. */
        interface ICROSS_S_GUILD_ARENA_AUTO_APPLY {

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY startTime */
            startTime?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY battleTime */
            battleTime?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_AUTO_APPLY. */
        class CROSS_S_GUILD_ARENA_AUTO_APPLY implements ICROSS_S_GUILD_ARENA_AUTO_APPLY {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_AUTO_APPLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_AUTO_APPLY);

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY startTime. */
            public startTime: (number|Long);

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY battleTime. */
            public battleTime: (number|Long);

            /** CROSS_S_GUILD_ARENA_AUTO_APPLY guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_AUTO_APPLY message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_AUTO_APPLY.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_AUTO_APPLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_AUTO_APPLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_AUTO_APPLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_AUTO_APPLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_AUTO_APPLY;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_MEMBER. */
        interface ICROSS_C_GUILD_ARENA_MEMBER {

            /** CROSS_C_GUILD_ARENA_MEMBER guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_MEMBER playerNums */
            playerNums?: (number|null);

            /** CROSS_C_GUILD_ARENA_MEMBER memberMsg */
            memberMsg?: (com.message.IGuildArenaMemberMsg[]|null);

            /** CROSS_C_GUILD_ARENA_MEMBER guildName */
            guildName?: (string|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_MEMBER. */
        class CROSS_C_GUILD_ARENA_MEMBER implements ICROSS_C_GUILD_ARENA_MEMBER {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_MEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_MEMBER);

            /** CROSS_C_GUILD_ARENA_MEMBER guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_ARENA_MEMBER playerNums. */
            public playerNums: number;

            /** CROSS_C_GUILD_ARENA_MEMBER memberMsg. */
            public memberMsg: com.message.IGuildArenaMemberMsg[];

            /** CROSS_C_GUILD_ARENA_MEMBER guildName. */
            public guildName: string;

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_MEMBER message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_MEMBER.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_MEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_MEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_MEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_MEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_MEMBER;
        }

        /** Properties of a GuildArenaMemberMsg. */
        interface IGuildArenaMemberMsg {

            /** GuildArenaMemberMsg playerId */
            playerId?: (number|Long|null);

            /** GuildArenaMemberMsg nickName */
            nickName?: (string|null);

            /** GuildArenaMemberMsg grade */
            grade?: (number|null);

            /** GuildArenaMemberMsg heroId */
            heroId?: (number|Long|null);

            /** GuildArenaMemberMsg heroQuality */
            heroQuality?: (number|null);

            /** GuildArenaMemberMsg imageDress */
            imageDress?: (string|null);

            /** GuildArenaMemberMsg useTile */
            useTile?: (number|null);

            /** GuildArenaMemberMsg blood */
            blood?: (number|null);

            /** GuildArenaMemberMsg power */
            power?: (number|Long|null);
        }

        /** Represents a GuildArenaMemberMsg. */
        class GuildArenaMemberMsg implements IGuildArenaMemberMsg {

            /**
             * Constructs a new GuildArenaMemberMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildArenaMemberMsg);

            /** GuildArenaMemberMsg playerId. */
            public playerId: (number|Long);

            /** GuildArenaMemberMsg nickName. */
            public nickName: string;

            /** GuildArenaMemberMsg grade. */
            public grade: number;

            /** GuildArenaMemberMsg heroId. */
            public heroId: (number|Long);

            /** GuildArenaMemberMsg heroQuality. */
            public heroQuality: number;

            /** GuildArenaMemberMsg imageDress. */
            public imageDress: string;

            /** GuildArenaMemberMsg useTile. */
            public useTile: number;

            /** GuildArenaMemberMsg blood. */
            public blood: number;

            /** GuildArenaMemberMsg power. */
            public power: (number|Long);

            /**
             * Encodes the specified GuildArenaMemberMsg message. Does not implicitly {@link com.message.GuildArenaMemberMsg.verify|verify} messages.
             * @param message GuildArenaMemberMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildArenaMemberMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildArenaMemberMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildArenaMemberMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildArenaMemberMsg;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_MEMBER. */
        interface ICROSS_S_GUILD_ARENA_MEMBER {

            /** CROSS_S_GUILD_ARENA_MEMBER guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_MEMBER. */
        class CROSS_S_GUILD_ARENA_MEMBER implements ICROSS_S_GUILD_ARENA_MEMBER {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_MEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_MEMBER);

            /** CROSS_S_GUILD_ARENA_MEMBER guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_MEMBER message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_MEMBER.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_MEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_MEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_MEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_MEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_MEMBER;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_ATTACK. */
        interface ICROSS_C_GUILD_ARENA_ATTACK {

            /** CROSS_C_GUILD_ARENA_ATTACK playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_ATTACK guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_ATTACK targetGuildId */
            targetGuildId?: (number|Long|null);

            /** CROSS_C_GUILD_ARENA_ATTACK targetPlayerId */
            targetPlayerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_ATTACK. */
        class CROSS_C_GUILD_ARENA_ATTACK implements ICROSS_C_GUILD_ARENA_ATTACK {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_ATTACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_ATTACK);

            /** CROSS_C_GUILD_ARENA_ATTACK playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_ARENA_ATTACK guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_ARENA_ATTACK targetGuildId. */
            public targetGuildId: (number|Long);

            /** CROSS_C_GUILD_ARENA_ATTACK targetPlayerId. */
            public targetPlayerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_ATTACK message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_ATTACK.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_ATTACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_ATTACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_ATTACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_ATTACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_ATTACK;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_ATTACK. */
        interface ICROSS_S_GUILD_ARENA_ATTACK {

            /** CROSS_S_GUILD_ARENA_ATTACK playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_ATTACK guildId */
            guildId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_ATTACK targetGuildId */
            targetGuildId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_ATTACK targetPlayerId */
            targetPlayerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_ATTACK result */
            result?: (number|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_ATTACK. */
        class CROSS_S_GUILD_ARENA_ATTACK implements ICROSS_S_GUILD_ARENA_ATTACK {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_ATTACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_ATTACK);

            /** CROSS_S_GUILD_ARENA_ATTACK playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_ATTACK guildId. */
            public guildId: (number|Long);

            /** CROSS_S_GUILD_ARENA_ATTACK targetGuildId. */
            public targetGuildId: (number|Long);

            /** CROSS_S_GUILD_ARENA_ATTACK targetPlayerId. */
            public targetPlayerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_ATTACK result. */
            public result: number;

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_ATTACK message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_ATTACK.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_ATTACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_ATTACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_ATTACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_ATTACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_ATTACK;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_UNLOCK. */
        interface ICROSS_C_GUILD_ARENA_UNLOCK {

            /** CROSS_C_GUILD_ARENA_UNLOCK targetPlayerId */
            targetPlayerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_UNLOCK. */
        class CROSS_C_GUILD_ARENA_UNLOCK implements ICROSS_C_GUILD_ARENA_UNLOCK {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_UNLOCK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_UNLOCK);

            /** CROSS_C_GUILD_ARENA_UNLOCK targetPlayerId. */
            public targetPlayerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_UNLOCK message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_UNLOCK.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_UNLOCK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_UNLOCK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_UNLOCK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_UNLOCK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_UNLOCK;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_BATTLE_LOG. */
        interface ICROSS_S_GUILD_ARENA_BATTLE_LOG {

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG guildId */
            guildId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetGuildId */
            targetGuildId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetPlayerId */
            targetPlayerId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG winId */
            winId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG nickName */
            nickName?: (string|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG guildName */
            guildName?: (string|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetNickName */
            targetNickName?: (string|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetName */
            targetName?: (string|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG type */
            type?: (number|null);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG recordId */
            recordId?: (string|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_BATTLE_LOG. */
        class CROSS_S_GUILD_ARENA_BATTLE_LOG implements ICROSS_S_GUILD_ARENA_BATTLE_LOG {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_BATTLE_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_BATTLE_LOG);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG guildId. */
            public guildId: (number|Long);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetGuildId. */
            public targetGuildId: (number|Long);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetPlayerId. */
            public targetPlayerId: (number|Long);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG winId. */
            public winId: (number|Long);

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG nickName. */
            public nickName: string;

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG guildName. */
            public guildName: string;

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetNickName. */
            public targetNickName: string;

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG targetName. */
            public targetName: string;

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG type. */
            public type: number;

            /** CROSS_S_GUILD_ARENA_BATTLE_LOG recordId. */
            public recordId: string;

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_BATTLE_LOG message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_BATTLE_LOG.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_BATTLE_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_BATTLE_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_BATTLE_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_BATTLE_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_BATTLE_LOG;
        }

        /** Properties of a CROSS_C_GUILD_ARENA_NO_EXISTS. */
        interface ICROSS_C_GUILD_ARENA_NO_EXISTS {

            /** CROSS_C_GUILD_ARENA_NO_EXISTS guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_ARENA_NO_EXISTS. */
        class CROSS_C_GUILD_ARENA_NO_EXISTS implements ICROSS_C_GUILD_ARENA_NO_EXISTS {

            /**
             * Constructs a new CROSS_C_GUILD_ARENA_NO_EXISTS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_ARENA_NO_EXISTS);

            /** CROSS_C_GUILD_ARENA_NO_EXISTS guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_ARENA_NO_EXISTS message. Does not implicitly {@link com.message.CROSS_C_GUILD_ARENA_NO_EXISTS.verify|verify} messages.
             * @param message CROSS_C_GUILD_ARENA_NO_EXISTS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_ARENA_NO_EXISTS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_ARENA_NO_EXISTS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_ARENA_NO_EXISTS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_ARENA_NO_EXISTS;
        }

        /** Properties of a CROSS_S_GUILD_ARENA_RANK_REWARD. */
        interface ICROSS_S_GUILD_ARENA_RANK_REWARD {

            /** CROSS_S_GUILD_ARENA_RANK_REWARD guildId */
            guildId?: (number|Long|null);

            /** CROSS_S_GUILD_ARENA_RANK_REWARD rank */
            rank?: (number|null);

            /** CROSS_S_GUILD_ARENA_RANK_REWARD teamType */
            teamType?: (number|null);
        }

        /** Represents a CROSS_S_GUILD_ARENA_RANK_REWARD. */
        class CROSS_S_GUILD_ARENA_RANK_REWARD implements ICROSS_S_GUILD_ARENA_RANK_REWARD {

            /**
             * Constructs a new CROSS_S_GUILD_ARENA_RANK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_ARENA_RANK_REWARD);

            /** CROSS_S_GUILD_ARENA_RANK_REWARD guildId. */
            public guildId: (number|Long);

            /** CROSS_S_GUILD_ARENA_RANK_REWARD rank. */
            public rank: number;

            /** CROSS_S_GUILD_ARENA_RANK_REWARD teamType. */
            public teamType: number;

            /**
             * Encodes the specified CROSS_S_GUILD_ARENA_RANK_REWARD message. Does not implicitly {@link com.message.CROSS_S_GUILD_ARENA_RANK_REWARD.verify|verify} messages.
             * @param message CROSS_S_GUILD_ARENA_RANK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_ARENA_RANK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_ARENA_RANK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_ARENA_RANK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_ARENA_RANK_REWARD;
        }

        /** Properties of a GuildBossMsg. */
        interface IGuildBossMsg {

            /** GuildBossMsg instanceId */
            instanceId?: (number|null);

            /** GuildBossMsg bossHp */
            bossHp?: (number|Long|null);

            /** GuildBossMsg bossMaxHp */
            bossMaxHp?: (number|Long|null);
        }

        /** Represents a GuildBossMsg. */
        class GuildBossMsg implements IGuildBossMsg {

            /**
             * Constructs a new GuildBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildBossMsg);

            /** GuildBossMsg instanceId. */
            public instanceId: number;

            /** GuildBossMsg bossHp. */
            public bossHp: (number|Long);

            /** GuildBossMsg bossMaxHp. */
            public bossMaxHp: (number|Long);

            /**
             * Encodes the specified GuildBossMsg message. Does not implicitly {@link com.message.GuildBossMsg.verify|verify} messages.
             * @param message GuildBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildBossMsg;
        }

        /** Properties of a GuildMemberBossMsg. */
        interface IGuildMemberBossMsg {

            /** GuildMemberBossMsg dayTimes */
            dayTimes?: (number|null);

            /** GuildMemberBossMsg reviveTime */
            reviveTime?: (number|Long|null);

            /** GuildMemberBossMsg rewardList */
            rewardList?: (number[]|null);
        }

        /** Represents a GuildMemberBossMsg. */
        class GuildMemberBossMsg implements IGuildMemberBossMsg {

            /**
             * Constructs a new GuildMemberBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildMemberBossMsg);

            /** GuildMemberBossMsg dayTimes. */
            public dayTimes: number;

            /** GuildMemberBossMsg reviveTime. */
            public reviveTime: (number|Long);

            /** GuildMemberBossMsg rewardList. */
            public rewardList: number[];

            /**
             * Encodes the specified GuildMemberBossMsg message. Does not implicitly {@link com.message.GuildMemberBossMsg.verify|verify} messages.
             * @param message GuildMemberBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildMemberBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildMemberBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildMemberBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildMemberBossMsg;
        }

        /** Properties of a C_GET_GUILD_BOSS_INFO. */
        interface IC_GET_GUILD_BOSS_INFO {

            /** C_GET_GUILD_BOSS_INFO guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_BOSS_INFO. */
        class C_GET_GUILD_BOSS_INFO implements IC_GET_GUILD_BOSS_INFO {

            /**
             * Constructs a new C_GET_GUILD_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_BOSS_INFO);

            /** C_GET_GUILD_BOSS_INFO guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_BOSS_INFO message. Does not implicitly {@link com.message.C_GET_GUILD_BOSS_INFO.verify|verify} messages.
             * @param message C_GET_GUILD_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_BOSS_INFO;
        }

        /** Properties of a S_GET_GUILD_BOSS_INFO. */
        interface IS_GET_GUILD_BOSS_INFO {

            /** S_GET_GUILD_BOSS_INFO guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_BOSS_INFO guildBossMsg */
            guildBossMsg?: (com.message.IGuildBossMsg[]|null);

            /** S_GET_GUILD_BOSS_INFO guildMemberBossMsg */
            guildMemberBossMsg?: (com.message.IGuildMemberBossMsg|null);

            /** S_GET_GUILD_BOSS_INFO maxBossId */
            maxBossId?: (number|null);

            /** S_GET_GUILD_BOSS_INFO dieBossIds */
            dieBossIds?: (string|null);

            /** S_GET_GUILD_BOSS_INFO hadRelive */
            hadRelive?: (boolean|null);
        }

        /** Represents a S_GET_GUILD_BOSS_INFO. */
        class S_GET_GUILD_BOSS_INFO implements IS_GET_GUILD_BOSS_INFO {

            /**
             * Constructs a new S_GET_GUILD_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_BOSS_INFO);

            /** S_GET_GUILD_BOSS_INFO guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_BOSS_INFO guildBossMsg. */
            public guildBossMsg: com.message.IGuildBossMsg[];

            /** S_GET_GUILD_BOSS_INFO guildMemberBossMsg. */
            public guildMemberBossMsg?: (com.message.IGuildMemberBossMsg|null);

            /** S_GET_GUILD_BOSS_INFO maxBossId. */
            public maxBossId: number;

            /** S_GET_GUILD_BOSS_INFO dieBossIds. */
            public dieBossIds: string;

            /** S_GET_GUILD_BOSS_INFO hadRelive. */
            public hadRelive: boolean;

            /**
             * Encodes the specified S_GET_GUILD_BOSS_INFO message. Does not implicitly {@link com.message.S_GET_GUILD_BOSS_INFO.verify|verify} messages.
             * @param message S_GET_GUILD_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_BOSS_INFO;
        }

        /** Properties of a GuildBossDamageMsg. */
        interface IGuildBossDamageMsg {

            /** GuildBossDamageMsg playerId */
            playerId?: (number|Long|null);

            /** GuildBossDamageMsg name */
            name?: (string|null);

            /** GuildBossDamageMsg level */
            level?: (number|null);

            /** GuildBossDamageMsg fightVal */
            fightVal?: (number|Long|null);

            /** GuildBossDamageMsg playerHeroId */
            playerHeroId?: (number|null);

            /** GuildBossDamageMsg rank */
            rank?: (number|null);

            /** GuildBossDamageMsg damageVal */
            damageVal?: (number|Long|null);
        }

        /** Represents a GuildBossDamageMsg. */
        class GuildBossDamageMsg implements IGuildBossDamageMsg {

            /**
             * Constructs a new GuildBossDamageMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildBossDamageMsg);

            /** GuildBossDamageMsg playerId. */
            public playerId: (number|Long);

            /** GuildBossDamageMsg name. */
            public name: string;

            /** GuildBossDamageMsg level. */
            public level: number;

            /** GuildBossDamageMsg fightVal. */
            public fightVal: (number|Long);

            /** GuildBossDamageMsg playerHeroId. */
            public playerHeroId: number;

            /** GuildBossDamageMsg rank. */
            public rank: number;

            /** GuildBossDamageMsg damageVal. */
            public damageVal: (number|Long);

            /**
             * Encodes the specified GuildBossDamageMsg message. Does not implicitly {@link com.message.GuildBossDamageMsg.verify|verify} messages.
             * @param message GuildBossDamageMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildBossDamageMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildBossDamageMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildBossDamageMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildBossDamageMsg;
        }

        /** Properties of a C_GUILD_BOSS_DAMAGE_RANK. */
        interface IC_GUILD_BOSS_DAMAGE_RANK {

            /** C_GUILD_BOSS_DAMAGE_RANK guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_BOSS_DAMAGE_RANK. */
        class C_GUILD_BOSS_DAMAGE_RANK implements IC_GUILD_BOSS_DAMAGE_RANK {

            /**
             * Constructs a new C_GUILD_BOSS_DAMAGE_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_BOSS_DAMAGE_RANK);

            /** C_GUILD_BOSS_DAMAGE_RANK guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_BOSS_DAMAGE_RANK message. Does not implicitly {@link com.message.C_GUILD_BOSS_DAMAGE_RANK.verify|verify} messages.
             * @param message C_GUILD_BOSS_DAMAGE_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_BOSS_DAMAGE_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_BOSS_DAMAGE_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_BOSS_DAMAGE_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_BOSS_DAMAGE_RANK;
        }

        /** Properties of a S_GUILD_BOSS_DAMAGE_RANK. */
        interface IS_GUILD_BOSS_DAMAGE_RANK {

            /** S_GUILD_BOSS_DAMAGE_RANK guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_BOSS_DAMAGE_RANK damageRank */
            damageRank?: (com.message.IGuildBossDamageMsg[]|null);
        }

        /** Represents a S_GUILD_BOSS_DAMAGE_RANK. */
        class S_GUILD_BOSS_DAMAGE_RANK implements IS_GUILD_BOSS_DAMAGE_RANK {

            /**
             * Constructs a new S_GUILD_BOSS_DAMAGE_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_BOSS_DAMAGE_RANK);

            /** S_GUILD_BOSS_DAMAGE_RANK guildId. */
            public guildId: (number|Long);

            /** S_GUILD_BOSS_DAMAGE_RANK damageRank. */
            public damageRank: com.message.IGuildBossDamageMsg[];

            /**
             * Encodes the specified S_GUILD_BOSS_DAMAGE_RANK message. Does not implicitly {@link com.message.S_GUILD_BOSS_DAMAGE_RANK.verify|verify} messages.
             * @param message S_GUILD_BOSS_DAMAGE_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_BOSS_DAMAGE_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_BOSS_DAMAGE_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_BOSS_DAMAGE_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_BOSS_DAMAGE_RANK;
        }

        /** Properties of a C_GET_GUILD_BOSS_REWARD. */
        interface IC_GET_GUILD_BOSS_REWARD {

            /** C_GET_GUILD_BOSS_REWARD guildId */
            guildId?: (number|Long|null);

            /** C_GET_GUILD_BOSS_REWARD instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_GET_GUILD_BOSS_REWARD. */
        class C_GET_GUILD_BOSS_REWARD implements IC_GET_GUILD_BOSS_REWARD {

            /**
             * Constructs a new C_GET_GUILD_BOSS_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_BOSS_REWARD);

            /** C_GET_GUILD_BOSS_REWARD guildId. */
            public guildId: (number|Long);

            /** C_GET_GUILD_BOSS_REWARD instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_GET_GUILD_BOSS_REWARD message. Does not implicitly {@link com.message.C_GET_GUILD_BOSS_REWARD.verify|verify} messages.
             * @param message C_GET_GUILD_BOSS_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_BOSS_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_BOSS_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_BOSS_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_BOSS_REWARD;
        }

        /** Properties of a S_GET_GUILD_BOSS_REWARD. */
        interface IS_GET_GUILD_BOSS_REWARD {

            /** S_GET_GUILD_BOSS_REWARD guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_BOSS_REWARD instanceId */
            instanceId?: (number|null);

            /** S_GET_GUILD_BOSS_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_GET_GUILD_BOSS_REWARD. */
        class S_GET_GUILD_BOSS_REWARD implements IS_GET_GUILD_BOSS_REWARD {

            /**
             * Constructs a new S_GET_GUILD_BOSS_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_BOSS_REWARD);

            /** S_GET_GUILD_BOSS_REWARD guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_BOSS_REWARD instanceId. */
            public instanceId: number;

            /** S_GET_GUILD_BOSS_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_GET_GUILD_BOSS_REWARD message. Does not implicitly {@link com.message.S_GET_GUILD_BOSS_REWARD.verify|verify} messages.
             * @param message S_GET_GUILD_BOSS_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_BOSS_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_BOSS_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_BOSS_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_BOSS_REWARD;
        }

        /** Properties of a C_BUY_GUILD_BOSS_REVIVE. */
        interface IC_BUY_GUILD_BOSS_REVIVE {
        }

        /** Represents a C_BUY_GUILD_BOSS_REVIVE. */
        class C_BUY_GUILD_BOSS_REVIVE implements IC_BUY_GUILD_BOSS_REVIVE {

            /**
             * Constructs a new C_BUY_GUILD_BOSS_REVIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_GUILD_BOSS_REVIVE);

            /**
             * Encodes the specified C_BUY_GUILD_BOSS_REVIVE message. Does not implicitly {@link com.message.C_BUY_GUILD_BOSS_REVIVE.verify|verify} messages.
             * @param message C_BUY_GUILD_BOSS_REVIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_GUILD_BOSS_REVIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_GUILD_BOSS_REVIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_GUILD_BOSS_REVIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_GUILD_BOSS_REVIVE;
        }

        /** Properties of a S_BUY_GUILD_BOSS_REVIVE. */
        interface IS_BUY_GUILD_BOSS_REVIVE {

            /** S_BUY_GUILD_BOSS_REVIVE guildMemberBossMsg */
            guildMemberBossMsg?: (com.message.IGuildMemberBossMsg|null);
        }

        /** Represents a S_BUY_GUILD_BOSS_REVIVE. */
        class S_BUY_GUILD_BOSS_REVIVE implements IS_BUY_GUILD_BOSS_REVIVE {

            /**
             * Constructs a new S_BUY_GUILD_BOSS_REVIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_GUILD_BOSS_REVIVE);

            /** S_BUY_GUILD_BOSS_REVIVE guildMemberBossMsg. */
            public guildMemberBossMsg?: (com.message.IGuildMemberBossMsg|null);

            /**
             * Encodes the specified S_BUY_GUILD_BOSS_REVIVE message. Does not implicitly {@link com.message.S_BUY_GUILD_BOSS_REVIVE.verify|verify} messages.
             * @param message S_BUY_GUILD_BOSS_REVIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_GUILD_BOSS_REVIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_GUILD_BOSS_REVIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_GUILD_BOSS_REVIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_GUILD_BOSS_REVIVE;
        }

        /** Properties of a GuildInstMsg. */
        interface IGuildInstMsg {

            /** GuildInstMsg passInstId */
            passInstId?: (number|null);

            /** GuildInstMsg layer */
            layer?: (number|null);
        }

        /** Represents a GuildInstMsg. */
        class GuildInstMsg implements IGuildInstMsg {

            /**
             * Constructs a new GuildInstMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildInstMsg);

            /** GuildInstMsg passInstId. */
            public passInstId: number;

            /** GuildInstMsg layer. */
            public layer: number;

            /**
             * Encodes the specified GuildInstMsg message. Does not implicitly {@link com.message.GuildInstMsg.verify|verify} messages.
             * @param message GuildInstMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildInstMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildInstMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildInstMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildInstMsg;
        }

        /** Properties of a GuildInstRankMsg. */
        interface IGuildInstRankMsg {

            /** GuildInstRankMsg playerId */
            playerId?: (number|Long|null);

            /** GuildInstRankMsg name */
            name?: (string|null);

            /** GuildInstRankMsg playerHeroId */
            playerHeroId?: (number|null);

            /** GuildInstRankMsg passInstId */
            passInstId?: (number|null);

            /** GuildInstRankMsg rank */
            rank?: (number|null);

            /** GuildInstRankMsg fightVal */
            fightVal?: (number|Long|null);
        }

        /** Represents a GuildInstRankMsg. */
        class GuildInstRankMsg implements IGuildInstRankMsg {

            /**
             * Constructs a new GuildInstRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildInstRankMsg);

            /** GuildInstRankMsg playerId. */
            public playerId: (number|Long);

            /** GuildInstRankMsg name. */
            public name: string;

            /** GuildInstRankMsg playerHeroId. */
            public playerHeroId: number;

            /** GuildInstRankMsg passInstId. */
            public passInstId: number;

            /** GuildInstRankMsg rank. */
            public rank: number;

            /** GuildInstRankMsg fightVal. */
            public fightVal: (number|Long);

            /**
             * Encodes the specified GuildInstRankMsg message. Does not implicitly {@link com.message.GuildInstRankMsg.verify|verify} messages.
             * @param message GuildInstRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildInstRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildInstRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildInstRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildInstRankMsg;
        }

        /** Properties of a C_GET_GUILD_INST_INFO. */
        interface IC_GET_GUILD_INST_INFO {

            /** C_GET_GUILD_INST_INFO guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_INST_INFO. */
        class C_GET_GUILD_INST_INFO implements IC_GET_GUILD_INST_INFO {

            /**
             * Constructs a new C_GET_GUILD_INST_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_INST_INFO);

            /** C_GET_GUILD_INST_INFO guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_INST_INFO message. Does not implicitly {@link com.message.C_GET_GUILD_INST_INFO.verify|verify} messages.
             * @param message C_GET_GUILD_INST_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_INST_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_INST_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_INST_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_INST_INFO;
        }

        /** Properties of a S_GET_GUILD_INST_INFO. */
        interface IS_GET_GUILD_INST_INFO {

            /** S_GET_GUILD_INST_INFO guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_INST_INFO guildInstMsg */
            guildInstMsg?: (com.message.IGuildInstMsg|null);

            /** S_GET_GUILD_INST_INFO guildInstRankMsg */
            guildInstRankMsg?: (com.message.IGuildInstRankMsg[]|null);
        }

        /** Represents a S_GET_GUILD_INST_INFO. */
        class S_GET_GUILD_INST_INFO implements IS_GET_GUILD_INST_INFO {

            /**
             * Constructs a new S_GET_GUILD_INST_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_INST_INFO);

            /** S_GET_GUILD_INST_INFO guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_INST_INFO guildInstMsg. */
            public guildInstMsg?: (com.message.IGuildInstMsg|null);

            /** S_GET_GUILD_INST_INFO guildInstRankMsg. */
            public guildInstRankMsg: com.message.IGuildInstRankMsg[];

            /**
             * Encodes the specified S_GET_GUILD_INST_INFO message. Does not implicitly {@link com.message.S_GET_GUILD_INST_INFO.verify|verify} messages.
             * @param message S_GET_GUILD_INST_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_INST_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_INST_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_INST_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_INST_INFO;
        }

        /** Properties of a C_GUILD_BOSS_RELIVE_BOSS. */
        interface IC_GUILD_BOSS_RELIVE_BOSS {

            /** C_GUILD_BOSS_RELIVE_BOSS guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_BOSS_RELIVE_BOSS bossId */
            bossId?: (number|null);
        }

        /** Represents a C_GUILD_BOSS_RELIVE_BOSS. */
        class C_GUILD_BOSS_RELIVE_BOSS implements IC_GUILD_BOSS_RELIVE_BOSS {

            /**
             * Constructs a new C_GUILD_BOSS_RELIVE_BOSS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_BOSS_RELIVE_BOSS);

            /** C_GUILD_BOSS_RELIVE_BOSS guildId. */
            public guildId: (number|Long);

            /** C_GUILD_BOSS_RELIVE_BOSS bossId. */
            public bossId: number;

            /**
             * Encodes the specified C_GUILD_BOSS_RELIVE_BOSS message. Does not implicitly {@link com.message.C_GUILD_BOSS_RELIVE_BOSS.verify|verify} messages.
             * @param message C_GUILD_BOSS_RELIVE_BOSS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_BOSS_RELIVE_BOSS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_BOSS_RELIVE_BOSS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_BOSS_RELIVE_BOSS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_BOSS_RELIVE_BOSS;
        }

        /** Properties of a S_GUILD_BOSS_RELIVE_BOSS. */
        interface IS_GUILD_BOSS_RELIVE_BOSS {

            /** S_GUILD_BOSS_RELIVE_BOSS guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_BOSS_RELIVE_BOSS guildBossMsg */
            guildBossMsg?: (com.message.IGuildBossMsg[]|null);

            /** S_GUILD_BOSS_RELIVE_BOSS guildMemberBossMsg */
            guildMemberBossMsg?: (com.message.IGuildMemberBossMsg|null);

            /** S_GUILD_BOSS_RELIVE_BOSS dieBossIds */
            dieBossIds?: (string|null);

            /** S_GUILD_BOSS_RELIVE_BOSS hadRelive */
            hadRelive?: (boolean|null);
        }

        /** Represents a S_GUILD_BOSS_RELIVE_BOSS. */
        class S_GUILD_BOSS_RELIVE_BOSS implements IS_GUILD_BOSS_RELIVE_BOSS {

            /**
             * Constructs a new S_GUILD_BOSS_RELIVE_BOSS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_BOSS_RELIVE_BOSS);

            /** S_GUILD_BOSS_RELIVE_BOSS guildId. */
            public guildId: (number|Long);

            /** S_GUILD_BOSS_RELIVE_BOSS guildBossMsg. */
            public guildBossMsg: com.message.IGuildBossMsg[];

            /** S_GUILD_BOSS_RELIVE_BOSS guildMemberBossMsg. */
            public guildMemberBossMsg?: (com.message.IGuildMemberBossMsg|null);

            /** S_GUILD_BOSS_RELIVE_BOSS dieBossIds. */
            public dieBossIds: string;

            /** S_GUILD_BOSS_RELIVE_BOSS hadRelive. */
            public hadRelive: boolean;

            /**
             * Encodes the specified S_GUILD_BOSS_RELIVE_BOSS message. Does not implicitly {@link com.message.S_GUILD_BOSS_RELIVE_BOSS.verify|verify} messages.
             * @param message S_GUILD_BOSS_RELIVE_BOSS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_BOSS_RELIVE_BOSS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_BOSS_RELIVE_BOSS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_BOSS_RELIVE_BOSS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_BOSS_RELIVE_BOSS;
        }

        /** Properties of a GuildFeedBossMsg. */
        interface IGuildFeedBossMsg {

            /** GuildFeedBossMsg level */
            level?: (number|null);

            /** GuildFeedBossMsg exp */
            exp?: (number|Long|null);

            /** GuildFeedBossMsg state */
            state?: (number|null);
        }

        /** Represents a GuildFeedBossMsg. */
        class GuildFeedBossMsg implements IGuildFeedBossMsg {

            /**
             * Constructs a new GuildFeedBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildFeedBossMsg);

            /** GuildFeedBossMsg level. */
            public level: number;

            /** GuildFeedBossMsg exp. */
            public exp: (number|Long);

            /** GuildFeedBossMsg state. */
            public state: number;

            /**
             * Encodes the specified GuildFeedBossMsg message. Does not implicitly {@link com.message.GuildFeedBossMsg.verify|verify} messages.
             * @param message GuildFeedBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildFeedBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildFeedBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildFeedBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildFeedBossMsg;
        }

        /** Properties of a FeedBossMsg. */
        interface IFeedBossMsg {

            /** FeedBossMsg bossId */
            bossId?: (number|null);

            /** FeedBossMsg bossHp */
            bossHp?: (number|Long|null);

            /** FeedBossMsg bossMaxHp */
            bossMaxHp?: (number|Long|null);

            /** FeedBossMsg damageRankMg */
            damageRankMg?: (com.message.IFeedBossDamageRankMsg[]|null);
        }

        /** Represents a FeedBossMsg. */
        class FeedBossMsg implements IFeedBossMsg {

            /**
             * Constructs a new FeedBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFeedBossMsg);

            /** FeedBossMsg bossId. */
            public bossId: number;

            /** FeedBossMsg bossHp. */
            public bossHp: (number|Long);

            /** FeedBossMsg bossMaxHp. */
            public bossMaxHp: (number|Long);

            /** FeedBossMsg damageRankMg. */
            public damageRankMg: com.message.IFeedBossDamageRankMsg[];

            /**
             * Encodes the specified FeedBossMsg message. Does not implicitly {@link com.message.FeedBossMsg.verify|verify} messages.
             * @param message FeedBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFeedBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FeedBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FeedBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FeedBossMsg;
        }

        /** Properties of a FeedBossDamageRankMsg. */
        interface IFeedBossDamageRankMsg {

            /** FeedBossDamageRankMsg rank */
            rank?: (number|null);

            /** FeedBossDamageRankMsg playerId */
            playerId?: (number|Long|null);

            /** FeedBossDamageRankMsg playerName */
            playerName?: (string|null);

            /** FeedBossDamageRankMsg damage */
            damage?: (number|Long|null);
        }

        /** Represents a FeedBossDamageRankMsg. */
        class FeedBossDamageRankMsg implements IFeedBossDamageRankMsg {

            /**
             * Constructs a new FeedBossDamageRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFeedBossDamageRankMsg);

            /** FeedBossDamageRankMsg rank. */
            public rank: number;

            /** FeedBossDamageRankMsg playerId. */
            public playerId: (number|Long);

            /** FeedBossDamageRankMsg playerName. */
            public playerName: string;

            /** FeedBossDamageRankMsg damage. */
            public damage: (number|Long);

            /**
             * Encodes the specified FeedBossDamageRankMsg message. Does not implicitly {@link com.message.FeedBossDamageRankMsg.verify|verify} messages.
             * @param message FeedBossDamageRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFeedBossDamageRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FeedBossDamageRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FeedBossDamageRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FeedBossDamageRankMsg;
        }

        /** Properties of a C_GUILD_FEED_BOSS_INFO. */
        interface IC_GUILD_FEED_BOSS_INFO {

            /** C_GUILD_FEED_BOSS_INFO guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_FEED_BOSS_INFO. */
        class C_GUILD_FEED_BOSS_INFO implements IC_GUILD_FEED_BOSS_INFO {

            /**
             * Constructs a new C_GUILD_FEED_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_FEED_BOSS_INFO);

            /** C_GUILD_FEED_BOSS_INFO guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_FEED_BOSS_INFO message. Does not implicitly {@link com.message.C_GUILD_FEED_BOSS_INFO.verify|verify} messages.
             * @param message C_GUILD_FEED_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_FEED_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_FEED_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_FEED_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_FEED_BOSS_INFO;
        }

        /** Properties of a S_GUILD_FEED_BOSS_INFO. */
        interface IS_GUILD_FEED_BOSS_INFO {

            /** S_GUILD_FEED_BOSS_INFO guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_FEED_BOSS_INFO feedBossBaseMsg */
            feedBossBaseMsg?: (com.message.IGuildFeedBossMsg|null);

            /** S_GUILD_FEED_BOSS_INFO feedBossMsg */
            feedBossMsg?: (com.message.IFeedBossMsg|null);
        }

        /** Represents a S_GUILD_FEED_BOSS_INFO. */
        class S_GUILD_FEED_BOSS_INFO implements IS_GUILD_FEED_BOSS_INFO {

            /**
             * Constructs a new S_GUILD_FEED_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_FEED_BOSS_INFO);

            /** S_GUILD_FEED_BOSS_INFO guildId. */
            public guildId: (number|Long);

            /** S_GUILD_FEED_BOSS_INFO feedBossBaseMsg. */
            public feedBossBaseMsg?: (com.message.IGuildFeedBossMsg|null);

            /** S_GUILD_FEED_BOSS_INFO feedBossMsg. */
            public feedBossMsg?: (com.message.IFeedBossMsg|null);

            /**
             * Encodes the specified S_GUILD_FEED_BOSS_INFO message. Does not implicitly {@link com.message.S_GUILD_FEED_BOSS_INFO.verify|verify} messages.
             * @param message S_GUILD_FEED_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_FEED_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_FEED_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_FEED_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_FEED_BOSS_INFO;
        }

        /** Properties of a C_GUILD_FEED_BOSS. */
        interface IC_GUILD_FEED_BOSS {

            /** C_GUILD_FEED_BOSS guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_FEED_BOSS. */
        class C_GUILD_FEED_BOSS implements IC_GUILD_FEED_BOSS {

            /**
             * Constructs a new C_GUILD_FEED_BOSS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_FEED_BOSS);

            /** C_GUILD_FEED_BOSS guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_FEED_BOSS message. Does not implicitly {@link com.message.C_GUILD_FEED_BOSS.verify|verify} messages.
             * @param message C_GUILD_FEED_BOSS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_FEED_BOSS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_FEED_BOSS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_FEED_BOSS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_FEED_BOSS;
        }

        /** Properties of a S_GUILD_FEED_BOSS. */
        interface IS_GUILD_FEED_BOSS {

            /** S_GUILD_FEED_BOSS guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_FEED_BOSS feedBossBaseMsg */
            feedBossBaseMsg?: (com.message.IGuildFeedBossMsg|null);
        }

        /** Represents a S_GUILD_FEED_BOSS. */
        class S_GUILD_FEED_BOSS implements IS_GUILD_FEED_BOSS {

            /**
             * Constructs a new S_GUILD_FEED_BOSS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_FEED_BOSS);

            /** S_GUILD_FEED_BOSS guildId. */
            public guildId: (number|Long);

            /** S_GUILD_FEED_BOSS feedBossBaseMsg. */
            public feedBossBaseMsg?: (com.message.IGuildFeedBossMsg|null);

            /**
             * Encodes the specified S_GUILD_FEED_BOSS message. Does not implicitly {@link com.message.S_GUILD_FEED_BOSS.verify|verify} messages.
             * @param message S_GUILD_FEED_BOSS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_FEED_BOSS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_FEED_BOSS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_FEED_BOSS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_FEED_BOSS;
        }

        /** Properties of a C_GUILD_FEED_BOSS_CHAT. */
        interface IC_GUILD_FEED_BOSS_CHAT {

            /** C_GUILD_FEED_BOSS_CHAT bossId */
            bossId?: (number|null);

            /** C_GUILD_FEED_BOSS_CHAT guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_FEED_BOSS_CHAT chatContent */
            chatContent?: (string|null);
        }

        /** Represents a C_GUILD_FEED_BOSS_CHAT. */
        class C_GUILD_FEED_BOSS_CHAT implements IC_GUILD_FEED_BOSS_CHAT {

            /**
             * Constructs a new C_GUILD_FEED_BOSS_CHAT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_FEED_BOSS_CHAT);

            /** C_GUILD_FEED_BOSS_CHAT bossId. */
            public bossId: number;

            /** C_GUILD_FEED_BOSS_CHAT guildId. */
            public guildId: (number|Long);

            /** C_GUILD_FEED_BOSS_CHAT chatContent. */
            public chatContent: string;

            /**
             * Encodes the specified C_GUILD_FEED_BOSS_CHAT message. Does not implicitly {@link com.message.C_GUILD_FEED_BOSS_CHAT.verify|verify} messages.
             * @param message C_GUILD_FEED_BOSS_CHAT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_FEED_BOSS_CHAT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_FEED_BOSS_CHAT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_FEED_BOSS_CHAT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_FEED_BOSS_CHAT;
        }

        /** Properties of a S_GUILD_FEED_BOSS_CHAT. */
        interface IS_GUILD_FEED_BOSS_CHAT {

            /** S_GUILD_FEED_BOSS_CHAT bossId */
            bossId?: (number|null);

            /** S_GUILD_FEED_BOSS_CHAT guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_FEED_BOSS_CHAT chatContent */
            chatContent?: (string|null);
        }

        /** Represents a S_GUILD_FEED_BOSS_CHAT. */
        class S_GUILD_FEED_BOSS_CHAT implements IS_GUILD_FEED_BOSS_CHAT {

            /**
             * Constructs a new S_GUILD_FEED_BOSS_CHAT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_FEED_BOSS_CHAT);

            /** S_GUILD_FEED_BOSS_CHAT bossId. */
            public bossId: number;

            /** S_GUILD_FEED_BOSS_CHAT guildId. */
            public guildId: (number|Long);

            /** S_GUILD_FEED_BOSS_CHAT chatContent. */
            public chatContent: string;

            /**
             * Encodes the specified S_GUILD_FEED_BOSS_CHAT message. Does not implicitly {@link com.message.S_GUILD_FEED_BOSS_CHAT.verify|verify} messages.
             * @param message S_GUILD_FEED_BOSS_CHAT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_FEED_BOSS_CHAT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_FEED_BOSS_CHAT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_FEED_BOSS_CHAT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_FEED_BOSS_CHAT;
        }

        /** Properties of a C_ONE_KEY_FEED_BOSS. */
        interface IC_ONE_KEY_FEED_BOSS {

            /** C_ONE_KEY_FEED_BOSS guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_ONE_KEY_FEED_BOSS. */
        class C_ONE_KEY_FEED_BOSS implements IC_ONE_KEY_FEED_BOSS {

            /**
             * Constructs a new C_ONE_KEY_FEED_BOSS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONE_KEY_FEED_BOSS);

            /** C_ONE_KEY_FEED_BOSS guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_ONE_KEY_FEED_BOSS message. Does not implicitly {@link com.message.C_ONE_KEY_FEED_BOSS.verify|verify} messages.
             * @param message C_ONE_KEY_FEED_BOSS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONE_KEY_FEED_BOSS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONE_KEY_FEED_BOSS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONE_KEY_FEED_BOSS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONE_KEY_FEED_BOSS;
        }

        /** Properties of a S_ONE_KEY_FEED_BOSS. */
        interface IS_ONE_KEY_FEED_BOSS {

            /** S_ONE_KEY_FEED_BOSS guildId */
            guildId?: (number|Long|null);

            /** S_ONE_KEY_FEED_BOSS feedBossBaseMsg */
            feedBossBaseMsg?: (com.message.IGuildFeedBossMsg|null);
        }

        /** Represents a S_ONE_KEY_FEED_BOSS. */
        class S_ONE_KEY_FEED_BOSS implements IS_ONE_KEY_FEED_BOSS {

            /**
             * Constructs a new S_ONE_KEY_FEED_BOSS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ONE_KEY_FEED_BOSS);

            /** S_ONE_KEY_FEED_BOSS guildId. */
            public guildId: (number|Long);

            /** S_ONE_KEY_FEED_BOSS feedBossBaseMsg. */
            public feedBossBaseMsg?: (com.message.IGuildFeedBossMsg|null);

            /**
             * Encodes the specified S_ONE_KEY_FEED_BOSS message. Does not implicitly {@link com.message.S_ONE_KEY_FEED_BOSS.verify|verify} messages.
             * @param message S_ONE_KEY_FEED_BOSS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ONE_KEY_FEED_BOSS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ONE_KEY_FEED_BOSS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ONE_KEY_FEED_BOSS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ONE_KEY_FEED_BOSS;
        }

        /** Properties of a NewGuildTaskMsg. */
        interface INewGuildTaskMsg {

            /** NewGuildTaskMsg playerId */
            playerId?: (number|Long|null);

            /** NewGuildTaskMsg count */
            count?: (number|null);

            /** NewGuildTaskMsg taskId */
            taskId?: (number|null);

            /** NewGuildTaskMsg taskState */
            taskState?: (number|null);

            /** NewGuildTaskMsg taskProcess */
            taskProcess?: (string|null);

            /** NewGuildTaskMsg stageReward */
            stageReward?: (string|null);

            /** NewGuildTaskMsg instanceStr */
            instanceStr?: (string|null);

            /** NewGuildTaskMsg scene */
            scene?: (number|null);
        }

        /** Represents a NewGuildTaskMsg. */
        class NewGuildTaskMsg implements INewGuildTaskMsg {

            /**
             * Constructs a new NewGuildTaskMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INewGuildTaskMsg);

            /** NewGuildTaskMsg playerId. */
            public playerId: (number|Long);

            /** NewGuildTaskMsg count. */
            public count: number;

            /** NewGuildTaskMsg taskId. */
            public taskId: number;

            /** NewGuildTaskMsg taskState. */
            public taskState: number;

            /** NewGuildTaskMsg taskProcess. */
            public taskProcess: string;

            /** NewGuildTaskMsg stageReward. */
            public stageReward: string;

            /** NewGuildTaskMsg instanceStr. */
            public instanceStr: string;

            /** NewGuildTaskMsg scene. */
            public scene: number;

            /**
             * Encodes the specified NewGuildTaskMsg message. Does not implicitly {@link com.message.NewGuildTaskMsg.verify|verify} messages.
             * @param message NewGuildTaskMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INewGuildTaskMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NewGuildTaskMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NewGuildTaskMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NewGuildTaskMsg;
        }

        /** Properties of a C_GET_NEW_GUILD_TASK_INFO. */
        interface IC_GET_NEW_GUILD_TASK_INFO {

            /** C_GET_NEW_GUILD_TASK_INFO guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_NEW_GUILD_TASK_INFO. */
        class C_GET_NEW_GUILD_TASK_INFO implements IC_GET_NEW_GUILD_TASK_INFO {

            /**
             * Constructs a new C_GET_NEW_GUILD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_NEW_GUILD_TASK_INFO);

            /** C_GET_NEW_GUILD_TASK_INFO guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_NEW_GUILD_TASK_INFO message. Does not implicitly {@link com.message.C_GET_NEW_GUILD_TASK_INFO.verify|verify} messages.
             * @param message C_GET_NEW_GUILD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_NEW_GUILD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_NEW_GUILD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_NEW_GUILD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_NEW_GUILD_TASK_INFO;
        }

        /** Properties of a S_GET_NEW_GUILD_TASK_INFO. */
        interface IS_GET_NEW_GUILD_TASK_INFO {

            /** S_GET_NEW_GUILD_TASK_INFO guildId */
            guildId?: (number|Long|null);

            /** S_GET_NEW_GUILD_TASK_INFO guildTaskMsg */
            guildTaskMsg?: (com.message.INewGuildTaskMsg|null);
        }

        /** Represents a S_GET_NEW_GUILD_TASK_INFO. */
        class S_GET_NEW_GUILD_TASK_INFO implements IS_GET_NEW_GUILD_TASK_INFO {

            /**
             * Constructs a new S_GET_NEW_GUILD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_NEW_GUILD_TASK_INFO);

            /** S_GET_NEW_GUILD_TASK_INFO guildId. */
            public guildId: (number|Long);

            /** S_GET_NEW_GUILD_TASK_INFO guildTaskMsg. */
            public guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /**
             * Encodes the specified S_GET_NEW_GUILD_TASK_INFO message. Does not implicitly {@link com.message.S_GET_NEW_GUILD_TASK_INFO.verify|verify} messages.
             * @param message S_GET_NEW_GUILD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_NEW_GUILD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_NEW_GUILD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_NEW_GUILD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_NEW_GUILD_TASK_INFO;
        }

        /** Properties of a C_GUILD_TASK_SUBMIT. */
        interface IC_GUILD_TASK_SUBMIT {

            /** C_GUILD_TASK_SUBMIT guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_TASK_SUBMIT. */
        class C_GUILD_TASK_SUBMIT implements IC_GUILD_TASK_SUBMIT {

            /**
             * Constructs a new C_GUILD_TASK_SUBMIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_TASK_SUBMIT);

            /** C_GUILD_TASK_SUBMIT guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_TASK_SUBMIT message. Does not implicitly {@link com.message.C_GUILD_TASK_SUBMIT.verify|verify} messages.
             * @param message C_GUILD_TASK_SUBMIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_TASK_SUBMIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_TASK_SUBMIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_TASK_SUBMIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_TASK_SUBMIT;
        }

        /** Properties of a S_GUILD_TASK_SUBMIT. */
        interface IS_GUILD_TASK_SUBMIT {

            /** S_GUILD_TASK_SUBMIT guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_TASK_SUBMIT guildTaskMsg */
            guildTaskMsg?: (com.message.INewGuildTaskMsg|null);
        }

        /** Represents a S_GUILD_TASK_SUBMIT. */
        class S_GUILD_TASK_SUBMIT implements IS_GUILD_TASK_SUBMIT {

            /**
             * Constructs a new S_GUILD_TASK_SUBMIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_TASK_SUBMIT);

            /** S_GUILD_TASK_SUBMIT guildId. */
            public guildId: (number|Long);

            /** S_GUILD_TASK_SUBMIT guildTaskMsg. */
            public guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /**
             * Encodes the specified S_GUILD_TASK_SUBMIT message. Does not implicitly {@link com.message.S_GUILD_TASK_SUBMIT.verify|verify} messages.
             * @param message S_GUILD_TASK_SUBMIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_TASK_SUBMIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_TASK_SUBMIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_TASK_SUBMIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_TASK_SUBMIT;
        }

        /** Properties of a C_GUILD_TASK_COLLECT. */
        interface IC_GUILD_TASK_COLLECT {

            /** C_GUILD_TASK_COLLECT guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_TASK_COLLECT id */
            id?: (number|null);
        }

        /** Represents a C_GUILD_TASK_COLLECT. */
        class C_GUILD_TASK_COLLECT implements IC_GUILD_TASK_COLLECT {

            /**
             * Constructs a new C_GUILD_TASK_COLLECT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_TASK_COLLECT);

            /** C_GUILD_TASK_COLLECT guildId. */
            public guildId: (number|Long);

            /** C_GUILD_TASK_COLLECT id. */
            public id: number;

            /**
             * Encodes the specified C_GUILD_TASK_COLLECT message. Does not implicitly {@link com.message.C_GUILD_TASK_COLLECT.verify|verify} messages.
             * @param message C_GUILD_TASK_COLLECT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_TASK_COLLECT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_TASK_COLLECT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_TASK_COLLECT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_TASK_COLLECT;
        }

        /** Properties of a S_GUILD_TASK_COLLECT. */
        interface IS_GUILD_TASK_COLLECT {

            /** S_GUILD_TASK_COLLECT guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_TASK_COLLECT id */
            id?: (number|null);

            /** S_GUILD_TASK_COLLECT guildTaskMsg */
            guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GUILD_TASK_COLLECT timed */
            timed?: (number|Long|null);
        }

        /** Represents a S_GUILD_TASK_COLLECT. */
        class S_GUILD_TASK_COLLECT implements IS_GUILD_TASK_COLLECT {

            /**
             * Constructs a new S_GUILD_TASK_COLLECT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_TASK_COLLECT);

            /** S_GUILD_TASK_COLLECT guildId. */
            public guildId: (number|Long);

            /** S_GUILD_TASK_COLLECT id. */
            public id: number;

            /** S_GUILD_TASK_COLLECT guildTaskMsg. */
            public guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GUILD_TASK_COLLECT timed. */
            public timed: (number|Long);

            /**
             * Encodes the specified S_GUILD_TASK_COLLECT message. Does not implicitly {@link com.message.S_GUILD_TASK_COLLECT.verify|verify} messages.
             * @param message S_GUILD_TASK_COLLECT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_TASK_COLLECT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_TASK_COLLECT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_TASK_COLLECT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_TASK_COLLECT;
        }

        /** Properties of a C_GUILD_TASK_SEARCH. */
        interface IC_GUILD_TASK_SEARCH {

            /** C_GUILD_TASK_SEARCH guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_TASK_SEARCH id */
            id?: (number|null);
        }

        /** Represents a C_GUILD_TASK_SEARCH. */
        class C_GUILD_TASK_SEARCH implements IC_GUILD_TASK_SEARCH {

            /**
             * Constructs a new C_GUILD_TASK_SEARCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_TASK_SEARCH);

            /** C_GUILD_TASK_SEARCH guildId. */
            public guildId: (number|Long);

            /** C_GUILD_TASK_SEARCH id. */
            public id: number;

            /**
             * Encodes the specified C_GUILD_TASK_SEARCH message. Does not implicitly {@link com.message.C_GUILD_TASK_SEARCH.verify|verify} messages.
             * @param message C_GUILD_TASK_SEARCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_TASK_SEARCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_TASK_SEARCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_TASK_SEARCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_TASK_SEARCH;
        }

        /** Properties of a S_GUILD_TASK_SEARCH. */
        interface IS_GUILD_TASK_SEARCH {

            /** S_GUILD_TASK_SEARCH guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_TASK_SEARCH id */
            id?: (number|null);

            /** S_GUILD_TASK_SEARCH guildTaskMsg */
            guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GUILD_TASK_SEARCH timed */
            timed?: (number|Long|null);
        }

        /** Represents a S_GUILD_TASK_SEARCH. */
        class S_GUILD_TASK_SEARCH implements IS_GUILD_TASK_SEARCH {

            /**
             * Constructs a new S_GUILD_TASK_SEARCH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_TASK_SEARCH);

            /** S_GUILD_TASK_SEARCH guildId. */
            public guildId: (number|Long);

            /** S_GUILD_TASK_SEARCH id. */
            public id: number;

            /** S_GUILD_TASK_SEARCH guildTaskMsg. */
            public guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GUILD_TASK_SEARCH timed. */
            public timed: (number|Long);

            /**
             * Encodes the specified S_GUILD_TASK_SEARCH message. Does not implicitly {@link com.message.S_GUILD_TASK_SEARCH.verify|verify} messages.
             * @param message S_GUILD_TASK_SEARCH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_TASK_SEARCH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_TASK_SEARCH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_TASK_SEARCH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_TASK_SEARCH;
        }

        /** Properties of a S_SYNC_GUILD_TASK_FINISH. */
        interface IS_SYNC_GUILD_TASK_FINISH {

            /** S_SYNC_GUILD_TASK_FINISH guildId */
            guildId?: (number|Long|null);

            /** S_SYNC_GUILD_TASK_FINISH id */
            id?: (number|null);

            /** S_SYNC_GUILD_TASK_FINISH guildTaskMsg */
            guildTaskMsg?: (com.message.INewGuildTaskMsg|null);
        }

        /** Represents a S_SYNC_GUILD_TASK_FINISH. */
        class S_SYNC_GUILD_TASK_FINISH implements IS_SYNC_GUILD_TASK_FINISH {

            /**
             * Constructs a new S_SYNC_GUILD_TASK_FINISH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_GUILD_TASK_FINISH);

            /** S_SYNC_GUILD_TASK_FINISH guildId. */
            public guildId: (number|Long);

            /** S_SYNC_GUILD_TASK_FINISH id. */
            public id: number;

            /** S_SYNC_GUILD_TASK_FINISH guildTaskMsg. */
            public guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /**
             * Encodes the specified S_SYNC_GUILD_TASK_FINISH message. Does not implicitly {@link com.message.S_SYNC_GUILD_TASK_FINISH.verify|verify} messages.
             * @param message S_SYNC_GUILD_TASK_FINISH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_GUILD_TASK_FINISH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_GUILD_TASK_FINISH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_GUILD_TASK_FINISH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_GUILD_TASK_FINISH;
        }

        /** Properties of a C_GET_GUILD_TASK_REWARD. */
        interface IC_GET_GUILD_TASK_REWARD {

            /** C_GET_GUILD_TASK_REWARD guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_TASK_REWARD. */
        class C_GET_GUILD_TASK_REWARD implements IC_GET_GUILD_TASK_REWARD {

            /**
             * Constructs a new C_GET_GUILD_TASK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_TASK_REWARD);

            /** C_GET_GUILD_TASK_REWARD guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_TASK_REWARD message. Does not implicitly {@link com.message.C_GET_GUILD_TASK_REWARD.verify|verify} messages.
             * @param message C_GET_GUILD_TASK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_TASK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_TASK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_TASK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_TASK_REWARD;
        }

        /** Properties of a S_GET_GUILD_TASK_REWARD. */
        interface IS_GET_GUILD_TASK_REWARD {

            /** S_GET_GUILD_TASK_REWARD guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_TASK_REWARD guildTaskMsg */
            guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GET_GUILD_TASK_REWARD reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_GUILD_TASK_REWARD. */
        class S_GET_GUILD_TASK_REWARD implements IS_GET_GUILD_TASK_REWARD {

            /**
             * Constructs a new S_GET_GUILD_TASK_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_TASK_REWARD);

            /** S_GET_GUILD_TASK_REWARD guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_TASK_REWARD guildTaskMsg. */
            public guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GET_GUILD_TASK_REWARD reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_GUILD_TASK_REWARD message. Does not implicitly {@link com.message.S_GET_GUILD_TASK_REWARD.verify|verify} messages.
             * @param message S_GET_GUILD_TASK_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_TASK_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_TASK_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_TASK_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_TASK_REWARD;
        }

        /** Properties of a C_GET_GUILD_TASK_STAGE_REWARD. */
        interface IC_GET_GUILD_TASK_STAGE_REWARD {

            /** C_GET_GUILD_TASK_STAGE_REWARD guildId */
            guildId?: (number|Long|null);

            /** C_GET_GUILD_TASK_STAGE_REWARD id */
            id?: (number|null);
        }

        /** Represents a C_GET_GUILD_TASK_STAGE_REWARD. */
        class C_GET_GUILD_TASK_STAGE_REWARD implements IC_GET_GUILD_TASK_STAGE_REWARD {

            /**
             * Constructs a new C_GET_GUILD_TASK_STAGE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_TASK_STAGE_REWARD);

            /** C_GET_GUILD_TASK_STAGE_REWARD guildId. */
            public guildId: (number|Long);

            /** C_GET_GUILD_TASK_STAGE_REWARD id. */
            public id: number;

            /**
             * Encodes the specified C_GET_GUILD_TASK_STAGE_REWARD message. Does not implicitly {@link com.message.C_GET_GUILD_TASK_STAGE_REWARD.verify|verify} messages.
             * @param message C_GET_GUILD_TASK_STAGE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_TASK_STAGE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_TASK_STAGE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_TASK_STAGE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_TASK_STAGE_REWARD;
        }

        /** Properties of a S_GET_GUILD_TASK_STAGE_REWARD. */
        interface IS_GET_GUILD_TASK_STAGE_REWARD {

            /** S_GET_GUILD_TASK_STAGE_REWARD guildId */
            guildId?: (number|Long|null);

            /** S_GET_GUILD_TASK_STAGE_REWARD id */
            id?: (number|null);

            /** S_GET_GUILD_TASK_STAGE_REWARD guildTaskMsg */
            guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GET_GUILD_TASK_STAGE_REWARD reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_GUILD_TASK_STAGE_REWARD. */
        class S_GET_GUILD_TASK_STAGE_REWARD implements IS_GET_GUILD_TASK_STAGE_REWARD {

            /**
             * Constructs a new S_GET_GUILD_TASK_STAGE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_TASK_STAGE_REWARD);

            /** S_GET_GUILD_TASK_STAGE_REWARD guildId. */
            public guildId: (number|Long);

            /** S_GET_GUILD_TASK_STAGE_REWARD id. */
            public id: number;

            /** S_GET_GUILD_TASK_STAGE_REWARD guildTaskMsg. */
            public guildTaskMsg?: (com.message.INewGuildTaskMsg|null);

            /** S_GET_GUILD_TASK_STAGE_REWARD reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_GUILD_TASK_STAGE_REWARD message. Does not implicitly {@link com.message.S_GET_GUILD_TASK_STAGE_REWARD.verify|verify} messages.
             * @param message S_GET_GUILD_TASK_STAGE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_TASK_STAGE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_TASK_STAGE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_TASK_STAGE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_TASK_STAGE_REWARD;
        }

        /** Properties of a GuildDamageMsg. */
        interface IGuildDamageMsg {

            /** GuildDamageMsg guildId */
            guildId?: (number|Long|null);

            /** GuildDamageMsg name */
            name?: (string|null);

            /** GuildDamageMsg rank */
            rank?: (number|null);

            /** GuildDamageMsg damageVal */
            damageVal?: (number|Long|null);
        }

        /** Represents a GuildDamageMsg. */
        class GuildDamageMsg implements IGuildDamageMsg {

            /**
             * Constructs a new GuildDamageMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildDamageMsg);

            /** GuildDamageMsg guildId. */
            public guildId: (number|Long);

            /** GuildDamageMsg name. */
            public name: string;

            /** GuildDamageMsg rank. */
            public rank: number;

            /** GuildDamageMsg damageVal. */
            public damageVal: (number|Long);

            /**
             * Encodes the specified GuildDamageMsg message. Does not implicitly {@link com.message.GuildDamageMsg.verify|verify} messages.
             * @param message GuildDamageMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildDamageMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildDamageMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildDamageMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildDamageMsg;
        }

        /** Properties of a GuildGateMsg. */
        interface IGuildGateMsg {

            /** GuildGateMsg gateId */
            gateId?: (number|null);

            /** GuildGateMsg blood */
            blood?: (number|Long|null);

            /** GuildGateMsg maxBlood */
            maxBlood?: (number|Long|null);

            /** GuildGateMsg damageList */
            damageList?: (com.message.IGuildDamageMsg[]|null);
        }

        /** Represents a GuildGateMsg. */
        class GuildGateMsg implements IGuildGateMsg {

            /**
             * Constructs a new GuildGateMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildGateMsg);

            /** GuildGateMsg gateId. */
            public gateId: number;

            /** GuildGateMsg blood. */
            public blood: (number|Long);

            /** GuildGateMsg maxBlood. */
            public maxBlood: (number|Long);

            /** GuildGateMsg damageList. */
            public damageList: com.message.IGuildDamageMsg[];

            /**
             * Encodes the specified GuildGateMsg message. Does not implicitly {@link com.message.GuildGateMsg.verify|verify} messages.
             * @param message GuildGateMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildGateMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildGateMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildGateMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildGateMsg;
        }

        /** Properties of a GuildWarFormationMsg. */
        interface IGuildWarFormationMsg {

            /** GuildWarFormationMsg indexHeroId */
            indexHeroId?: (number[]|null);

            /** GuildWarFormationMsg posHeroId */
            posHeroId?: (number[]|null);
        }

        /** Represents a GuildWarFormationMsg. */
        class GuildWarFormationMsg implements IGuildWarFormationMsg {

            /**
             * Constructs a new GuildWarFormationMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildWarFormationMsg);

            /** GuildWarFormationMsg indexHeroId. */
            public indexHeroId: number[];

            /** GuildWarFormationMsg posHeroId. */
            public posHeroId: number[];

            /**
             * Encodes the specified GuildWarFormationMsg message. Does not implicitly {@link com.message.GuildWarFormationMsg.verify|verify} messages.
             * @param message GuildWarFormationMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildWarFormationMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildWarFormationMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildWarFormationMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildWarFormationMsg;
        }

        /** Properties of a GuildWarMsg. */
        interface IGuildWarMsg {

            /** GuildWarMsg guildId */
            guildId?: (number|Long|null);

            /** GuildWarMsg name */
            name?: (string|null);

            /** GuildWarMsg gateId */
            gateId?: (number|null);

            /** GuildWarMsg gateBlood */
            gateBlood?: (number|Long|null);

            /** GuildWarMsg gateMaxBlood */
            gateMaxBlood?: (number|Long|null);

            /** GuildWarMsg bossId */
            bossId?: (number|null);

            /** GuildWarMsg blood */
            blood?: (number|Long|null);

            /** GuildWarMsg maxBlood */
            maxBlood?: (number|Long|null);

            /** GuildWarMsg level */
            level?: (number|null);

            /** GuildWarMsg damageList */
            damageList?: (com.message.IGuildDamageMsg[]|null);

            /** GuildWarMsg updateSate */
            updateSate?: (boolean|null);
        }

        /** Represents a GuildWarMsg. */
        class GuildWarMsg implements IGuildWarMsg {

            /**
             * Constructs a new GuildWarMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildWarMsg);

            /** GuildWarMsg guildId. */
            public guildId: (number|Long);

            /** GuildWarMsg name. */
            public name: string;

            /** GuildWarMsg gateId. */
            public gateId: number;

            /** GuildWarMsg gateBlood. */
            public gateBlood: (number|Long);

            /** GuildWarMsg gateMaxBlood. */
            public gateMaxBlood: (number|Long);

            /** GuildWarMsg bossId. */
            public bossId: number;

            /** GuildWarMsg blood. */
            public blood: (number|Long);

            /** GuildWarMsg maxBlood. */
            public maxBlood: (number|Long);

            /** GuildWarMsg level. */
            public level: number;

            /** GuildWarMsg damageList. */
            public damageList: com.message.IGuildDamageMsg[];

            /** GuildWarMsg updateSate. */
            public updateSate: boolean;

            /**
             * Encodes the specified GuildWarMsg message. Does not implicitly {@link com.message.GuildWarMsg.verify|verify} messages.
             * @param message GuildWarMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildWarMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildWarMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildWarMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildWarMsg;
        }

        /** Properties of a GuildWarMyMsg. */
        interface IGuildWarMyMsg {

            /** GuildWarMyMsg guildDec */
            guildDec?: (string|null);

            /** GuildWarMyMsg partIn */
            partIn?: (number|null);

            /** GuildWarMyMsg reviveTime */
            reviveTime?: (number|Long|null);

            /** GuildWarMyMsg dailyReward */
            dailyReward?: (boolean|null);

            /** GuildWarMyMsg dailyDianZan */
            dailyDianZan?: (boolean|null);

            /** GuildWarMyMsg inDefend */
            inDefend?: (boolean|null);
        }

        /** Represents a GuildWarMyMsg. */
        class GuildWarMyMsg implements IGuildWarMyMsg {

            /**
             * Constructs a new GuildWarMyMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildWarMyMsg);

            /** GuildWarMyMsg guildDec. */
            public guildDec: string;

            /** GuildWarMyMsg partIn. */
            public partIn: number;

            /** GuildWarMyMsg reviveTime. */
            public reviveTime: (number|Long);

            /** GuildWarMyMsg dailyReward. */
            public dailyReward: boolean;

            /** GuildWarMyMsg dailyDianZan. */
            public dailyDianZan: boolean;

            /** GuildWarMyMsg inDefend. */
            public inDefend: boolean;

            /**
             * Encodes the specified GuildWarMyMsg message. Does not implicitly {@link com.message.GuildWarMyMsg.verify|verify} messages.
             * @param message GuildWarMyMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildWarMyMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildWarMyMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildWarMyMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildWarMyMsg;
        }

        /** Properties of a C_GET_GUILD_WAR_INFO. */
        interface IC_GET_GUILD_WAR_INFO {

            /** C_GET_GUILD_WAR_INFO guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GET_GUILD_WAR_INFO. */
        class C_GET_GUILD_WAR_INFO implements IC_GET_GUILD_WAR_INFO {

            /**
             * Constructs a new C_GET_GUILD_WAR_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_WAR_INFO);

            /** C_GET_GUILD_WAR_INFO guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GET_GUILD_WAR_INFO message. Does not implicitly {@link com.message.C_GET_GUILD_WAR_INFO.verify|verify} messages.
             * @param message C_GET_GUILD_WAR_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_WAR_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_WAR_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_WAR_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_WAR_INFO;
        }

        /** Properties of a S_GET_GUILD_WAR_INFO. */
        interface IS_GET_GUILD_WAR_INFO {

            /** S_GET_GUILD_WAR_INFO gateList */
            gateList?: (com.message.IGuildGateMsg[]|null);

            /** S_GET_GUILD_WAR_INFO guildWarMsg */
            guildWarMsg?: (com.message.IGuildWarMsg|null);

            /** S_GET_GUILD_WAR_INFO formationMsg */
            formationMsg?: (com.message.IGuildWarFormationMsg|null);

            /** S_GET_GUILD_WAR_INFO myGuildWarMsg */
            myGuildWarMsg?: (com.message.IGuildWarMyMsg|null);

            /** S_GET_GUILD_WAR_INFO starTime */
            starTime?: (number|Long|null);

            /** S_GET_GUILD_WAR_INFO endTime */
            endTime?: (number|Long|null);
        }

        /** Represents a S_GET_GUILD_WAR_INFO. */
        class S_GET_GUILD_WAR_INFO implements IS_GET_GUILD_WAR_INFO {

            /**
             * Constructs a new S_GET_GUILD_WAR_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_WAR_INFO);

            /** S_GET_GUILD_WAR_INFO gateList. */
            public gateList: com.message.IGuildGateMsg[];

            /** S_GET_GUILD_WAR_INFO guildWarMsg. */
            public guildWarMsg?: (com.message.IGuildWarMsg|null);

            /** S_GET_GUILD_WAR_INFO formationMsg. */
            public formationMsg?: (com.message.IGuildWarFormationMsg|null);

            /** S_GET_GUILD_WAR_INFO myGuildWarMsg. */
            public myGuildWarMsg?: (com.message.IGuildWarMyMsg|null);

            /** S_GET_GUILD_WAR_INFO starTime. */
            public starTime: (number|Long);

            /** S_GET_GUILD_WAR_INFO endTime. */
            public endTime: (number|Long);

            /**
             * Encodes the specified S_GET_GUILD_WAR_INFO message. Does not implicitly {@link com.message.S_GET_GUILD_WAR_INFO.verify|verify} messages.
             * @param message S_GET_GUILD_WAR_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_WAR_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_WAR_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_WAR_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_WAR_INFO;
        }

        /** Properties of a C_GUILD_WAR_PART_IN. */
        interface IC_GUILD_WAR_PART_IN {

            /** C_GUILD_WAR_PART_IN guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_WAR_PART_IN. */
        class C_GUILD_WAR_PART_IN implements IC_GUILD_WAR_PART_IN {

            /**
             * Constructs a new C_GUILD_WAR_PART_IN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_WAR_PART_IN);

            /** C_GUILD_WAR_PART_IN guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_WAR_PART_IN message. Does not implicitly {@link com.message.C_GUILD_WAR_PART_IN.verify|verify} messages.
             * @param message C_GUILD_WAR_PART_IN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_WAR_PART_IN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_WAR_PART_IN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_WAR_PART_IN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_WAR_PART_IN;
        }

        /** Properties of a S_GUILD_WAR_PART_IN. */
        interface IS_GUILD_WAR_PART_IN {

            /** S_GUILD_WAR_PART_IN guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_WAR_PART_IN partIn */
            partIn?: (number|null);

            /** S_GUILD_WAR_PART_IN reviveTime */
            reviveTime?: (number|Long|null);
        }

        /** Represents a S_GUILD_WAR_PART_IN. */
        class S_GUILD_WAR_PART_IN implements IS_GUILD_WAR_PART_IN {

            /**
             * Constructs a new S_GUILD_WAR_PART_IN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_WAR_PART_IN);

            /** S_GUILD_WAR_PART_IN guildId. */
            public guildId: (number|Long);

            /** S_GUILD_WAR_PART_IN partIn. */
            public partIn: number;

            /** S_GUILD_WAR_PART_IN reviveTime. */
            public reviveTime: (number|Long);

            /**
             * Encodes the specified S_GUILD_WAR_PART_IN message. Does not implicitly {@link com.message.S_GUILD_WAR_PART_IN.verify|verify} messages.
             * @param message S_GUILD_WAR_PART_IN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_WAR_PART_IN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_WAR_PART_IN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_WAR_PART_IN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_WAR_PART_IN;
        }

        /** Properties of a C_GUILD_WAR_REVIVE. */
        interface IC_GUILD_WAR_REVIVE {

            /** C_GUILD_WAR_REVIVE guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_WAR_REVIVE. */
        class C_GUILD_WAR_REVIVE implements IC_GUILD_WAR_REVIVE {

            /**
             * Constructs a new C_GUILD_WAR_REVIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_WAR_REVIVE);

            /** C_GUILD_WAR_REVIVE guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_WAR_REVIVE message. Does not implicitly {@link com.message.C_GUILD_WAR_REVIVE.verify|verify} messages.
             * @param message C_GUILD_WAR_REVIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_WAR_REVIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_WAR_REVIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_WAR_REVIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_WAR_REVIVE;
        }

        /** Properties of a S_GUILD_WAR_REVIVE. */
        interface IS_GUILD_WAR_REVIVE {

            /** S_GUILD_WAR_REVIVE guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_WAR_REVIVE partIn */
            partIn?: (number|null);

            /** S_GUILD_WAR_REVIVE reviveTime */
            reviveTime?: (number|Long|null);
        }

        /** Represents a S_GUILD_WAR_REVIVE. */
        class S_GUILD_WAR_REVIVE implements IS_GUILD_WAR_REVIVE {

            /**
             * Constructs a new S_GUILD_WAR_REVIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_WAR_REVIVE);

            /** S_GUILD_WAR_REVIVE guildId. */
            public guildId: (number|Long);

            /** S_GUILD_WAR_REVIVE partIn. */
            public partIn: number;

            /** S_GUILD_WAR_REVIVE reviveTime. */
            public reviveTime: (number|Long);

            /**
             * Encodes the specified S_GUILD_WAR_REVIVE message. Does not implicitly {@link com.message.S_GUILD_WAR_REVIVE.verify|verify} messages.
             * @param message S_GUILD_WAR_REVIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_WAR_REVIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_WAR_REVIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_WAR_REVIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_WAR_REVIVE;
        }

        /** Properties of a C_GUILD_WAR_EDIT_DEC. */
        interface IC_GUILD_WAR_EDIT_DEC {

            /** C_GUILD_WAR_EDIT_DEC guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_WAR_EDIT_DEC guildDec */
            guildDec?: (string|null);
        }

        /** Represents a C_GUILD_WAR_EDIT_DEC. */
        class C_GUILD_WAR_EDIT_DEC implements IC_GUILD_WAR_EDIT_DEC {

            /**
             * Constructs a new C_GUILD_WAR_EDIT_DEC.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_WAR_EDIT_DEC);

            /** C_GUILD_WAR_EDIT_DEC guildId. */
            public guildId: (number|Long);

            /** C_GUILD_WAR_EDIT_DEC guildDec. */
            public guildDec: string;

            /**
             * Encodes the specified C_GUILD_WAR_EDIT_DEC message. Does not implicitly {@link com.message.C_GUILD_WAR_EDIT_DEC.verify|verify} messages.
             * @param message C_GUILD_WAR_EDIT_DEC message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_WAR_EDIT_DEC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_WAR_EDIT_DEC message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_WAR_EDIT_DEC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_WAR_EDIT_DEC;
        }

        /** Properties of a S_GUILD_WAR_EDIT_DEC. */
        interface IS_GUILD_WAR_EDIT_DEC {

            /** S_GUILD_WAR_EDIT_DEC guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_WAR_EDIT_DEC guildDec */
            guildDec?: (string|null);
        }

        /** Represents a S_GUILD_WAR_EDIT_DEC. */
        class S_GUILD_WAR_EDIT_DEC implements IS_GUILD_WAR_EDIT_DEC {

            /**
             * Constructs a new S_GUILD_WAR_EDIT_DEC.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_WAR_EDIT_DEC);

            /** S_GUILD_WAR_EDIT_DEC guildId. */
            public guildId: (number|Long);

            /** S_GUILD_WAR_EDIT_DEC guildDec. */
            public guildDec: string;

            /**
             * Encodes the specified S_GUILD_WAR_EDIT_DEC message. Does not implicitly {@link com.message.S_GUILD_WAR_EDIT_DEC.verify|verify} messages.
             * @param message S_GUILD_WAR_EDIT_DEC message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_WAR_EDIT_DEC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_WAR_EDIT_DEC message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_WAR_EDIT_DEC
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_WAR_EDIT_DEC;
        }

        /** Properties of a C_GUILD_WAR_REWARD. */
        interface IC_GUILD_WAR_REWARD {

            /** C_GUILD_WAR_REWARD guildId */
            guildId?: (number|Long|null);

            /** C_GUILD_WAR_REWARD type */
            type?: (number|null);
        }

        /** Represents a C_GUILD_WAR_REWARD. */
        class C_GUILD_WAR_REWARD implements IC_GUILD_WAR_REWARD {

            /**
             * Constructs a new C_GUILD_WAR_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_WAR_REWARD);

            /** C_GUILD_WAR_REWARD guildId. */
            public guildId: (number|Long);

            /** C_GUILD_WAR_REWARD type. */
            public type: number;

            /**
             * Encodes the specified C_GUILD_WAR_REWARD message. Does not implicitly {@link com.message.C_GUILD_WAR_REWARD.verify|verify} messages.
             * @param message C_GUILD_WAR_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_WAR_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_WAR_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_WAR_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_WAR_REWARD;
        }

        /** Properties of a S_GUILD_WAR_REWARD. */
        interface IS_GUILD_WAR_REWARD {

            /** S_GUILD_WAR_REWARD guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_WAR_REWARD type */
            type?: (number|null);

            /** S_GUILD_WAR_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_GUILD_WAR_REWARD. */
        class S_GUILD_WAR_REWARD implements IS_GUILD_WAR_REWARD {

            /**
             * Constructs a new S_GUILD_WAR_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_WAR_REWARD);

            /** S_GUILD_WAR_REWARD guildId. */
            public guildId: (number|Long);

            /** S_GUILD_WAR_REWARD type. */
            public type: number;

            /** S_GUILD_WAR_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_GUILD_WAR_REWARD message. Does not implicitly {@link com.message.S_GUILD_WAR_REWARD.verify|verify} messages.
             * @param message S_GUILD_WAR_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_WAR_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_WAR_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_WAR_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_WAR_REWARD;
        }

        /** Properties of a GuildWarBattleMsg. */
        interface IGuildWarBattleMsg {

            /** GuildWarBattleMsg instanceId */
            instanceId?: (number|null);

            /** GuildWarBattleMsg blood */
            blood?: (number|Long|null);

            /** GuildWarBattleMsg type */
            type?: (number|null);

            /** GuildWarBattleMsg myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildWarBattleMsg enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildWarBattleMsg fighterRoundMsg */
            fighterRoundMsg?: (com.message.IFighterRoundMsg[]|null);

            /** GuildWarBattleMsg roundNum */
            roundNum?: (number|null);

            /** GuildWarBattleMsg win */
            win?: (boolean|null);
        }

        /** Represents a GuildWarBattleMsg. */
        class GuildWarBattleMsg implements IGuildWarBattleMsg {

            /**
             * Constructs a new GuildWarBattleMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildWarBattleMsg);

            /** GuildWarBattleMsg instanceId. */
            public instanceId: number;

            /** GuildWarBattleMsg blood. */
            public blood: (number|Long);

            /** GuildWarBattleMsg type. */
            public type: number;

            /** GuildWarBattleMsg myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildWarBattleMsg enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** GuildWarBattleMsg fighterRoundMsg. */
            public fighterRoundMsg: com.message.IFighterRoundMsg[];

            /** GuildWarBattleMsg roundNum. */
            public roundNum: number;

            /** GuildWarBattleMsg win. */
            public win: boolean;

            /**
             * Encodes the specified GuildWarBattleMsg message. Does not implicitly {@link com.message.GuildWarBattleMsg.verify|verify} messages.
             * @param message GuildWarBattleMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildWarBattleMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildWarBattleMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildWarBattleMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildWarBattleMsg;
        }

        /** Properties of a C_GUILD_WAR_DEFEND. */
        interface IC_GUILD_WAR_DEFEND {

            /** C_GUILD_WAR_DEFEND guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_WAR_DEFEND. */
        class C_GUILD_WAR_DEFEND implements IC_GUILD_WAR_DEFEND {

            /**
             * Constructs a new C_GUILD_WAR_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_WAR_DEFEND);

            /** C_GUILD_WAR_DEFEND guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_WAR_DEFEND message. Does not implicitly {@link com.message.C_GUILD_WAR_DEFEND.verify|verify} messages.
             * @param message C_GUILD_WAR_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_WAR_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_WAR_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_WAR_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_WAR_DEFEND;
        }

        /** Properties of a S_GUILD_WAR_DEFEND. */
        interface IS_GUILD_WAR_DEFEND {

            /** S_GUILD_WAR_DEFEND guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_WAR_DEFEND suceess */
            suceess?: (boolean|null);
        }

        /** Represents a S_GUILD_WAR_DEFEND. */
        class S_GUILD_WAR_DEFEND implements IS_GUILD_WAR_DEFEND {

            /**
             * Constructs a new S_GUILD_WAR_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_WAR_DEFEND);

            /** S_GUILD_WAR_DEFEND guildId. */
            public guildId: (number|Long);

            /** S_GUILD_WAR_DEFEND suceess. */
            public suceess: boolean;

            /**
             * Encodes the specified S_GUILD_WAR_DEFEND message. Does not implicitly {@link com.message.S_GUILD_WAR_DEFEND.verify|verify} messages.
             * @param message S_GUILD_WAR_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_WAR_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_WAR_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_WAR_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_WAR_DEFEND;
        }

        /** Properties of a C_GUILD_WAR_CANCEL_DEFEND. */
        interface IC_GUILD_WAR_CANCEL_DEFEND {

            /** C_GUILD_WAR_CANCEL_DEFEND guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a C_GUILD_WAR_CANCEL_DEFEND. */
        class C_GUILD_WAR_CANCEL_DEFEND implements IC_GUILD_WAR_CANCEL_DEFEND {

            /**
             * Constructs a new C_GUILD_WAR_CANCEL_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GUILD_WAR_CANCEL_DEFEND);

            /** C_GUILD_WAR_CANCEL_DEFEND guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified C_GUILD_WAR_CANCEL_DEFEND message. Does not implicitly {@link com.message.C_GUILD_WAR_CANCEL_DEFEND.verify|verify} messages.
             * @param message C_GUILD_WAR_CANCEL_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GUILD_WAR_CANCEL_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GUILD_WAR_CANCEL_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GUILD_WAR_CANCEL_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GUILD_WAR_CANCEL_DEFEND;
        }

        /** Properties of a S_GUILD_WAR_CANCEL_DEFEND. */
        interface IS_GUILD_WAR_CANCEL_DEFEND {

            /** S_GUILD_WAR_CANCEL_DEFEND guildId */
            guildId?: (number|Long|null);

            /** S_GUILD_WAR_CANCEL_DEFEND suceess */
            suceess?: (boolean|null);
        }

        /** Represents a S_GUILD_WAR_CANCEL_DEFEND. */
        class S_GUILD_WAR_CANCEL_DEFEND implements IS_GUILD_WAR_CANCEL_DEFEND {

            /**
             * Constructs a new S_GUILD_WAR_CANCEL_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GUILD_WAR_CANCEL_DEFEND);

            /** S_GUILD_WAR_CANCEL_DEFEND guildId. */
            public guildId: (number|Long);

            /** S_GUILD_WAR_CANCEL_DEFEND suceess. */
            public suceess: boolean;

            /**
             * Encodes the specified S_GUILD_WAR_CANCEL_DEFEND message. Does not implicitly {@link com.message.S_GUILD_WAR_CANCEL_DEFEND.verify|verify} messages.
             * @param message S_GUILD_WAR_CANCEL_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GUILD_WAR_CANCEL_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GUILD_WAR_CANCEL_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GUILD_WAR_CANCEL_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GUILD_WAR_CANCEL_DEFEND;
        }

        /** Properties of a SYNC_GUILD_WAR_FINISH. */
        interface ISYNC_GUILD_WAR_FINISH {

            /** SYNC_GUILD_WAR_FINISH guildId */
            guildId?: (number|Long|null);

            /** SYNC_GUILD_WAR_FINISH win */
            win?: (boolean|null);

            /** SYNC_GUILD_WAR_FINISH guildName */
            guildName?: (string|null);

            /** SYNC_GUILD_WAR_FINISH reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a SYNC_GUILD_WAR_FINISH. */
        class SYNC_GUILD_WAR_FINISH implements ISYNC_GUILD_WAR_FINISH {

            /**
             * Constructs a new SYNC_GUILD_WAR_FINISH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ISYNC_GUILD_WAR_FINISH);

            /** SYNC_GUILD_WAR_FINISH guildId. */
            public guildId: (number|Long);

            /** SYNC_GUILD_WAR_FINISH win. */
            public win: boolean;

            /** SYNC_GUILD_WAR_FINISH guildName. */
            public guildName: string;

            /** SYNC_GUILD_WAR_FINISH reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified SYNC_GUILD_WAR_FINISH message. Does not implicitly {@link com.message.SYNC_GUILD_WAR_FINISH.verify|verify} messages.
             * @param message SYNC_GUILD_WAR_FINISH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ISYNC_GUILD_WAR_FINISH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SYNC_GUILD_WAR_FINISH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SYNC_GUILD_WAR_FINISH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.SYNC_GUILD_WAR_FINISH;
        }

        /** Properties of a CROSS_C_GET_GUILD_WAR_INFO. */
        interface ICROSS_C_GET_GUILD_WAR_INFO {

            /** CROSS_C_GET_GUILD_WAR_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_GUILD_WAR_INFO playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_GUILD_WAR_INFO. */
        class CROSS_C_GET_GUILD_WAR_INFO implements ICROSS_C_GET_GUILD_WAR_INFO {

            /**
             * Constructs a new CROSS_C_GET_GUILD_WAR_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_GUILD_WAR_INFO);

            /** CROSS_C_GET_GUILD_WAR_INFO serverId. */
            public serverId: number;

            /** CROSS_C_GET_GUILD_WAR_INFO playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_GUILD_WAR_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_GUILD_WAR_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_GUILD_WAR_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_GUILD_WAR_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_GUILD_WAR_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_GUILD_WAR_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_GUILD_WAR_INFO;
        }

        /** Properties of a CROSS_S_GET_GUILD_WAR_INFO. */
        interface ICROSS_S_GET_GUILD_WAR_INFO {

            /** CROSS_S_GET_GUILD_WAR_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_GUILD_WAR_INFO gateList */
            gateList?: (com.message.IGuildGateMsg[]|null);

            /** CROSS_S_GET_GUILD_WAR_INFO guildWarMsg */
            guildWarMsg?: (com.message.IGuildWarMsg|null);

            /** CROSS_S_GET_GUILD_WAR_INFO inDefend */
            inDefend?: (boolean|null);

            /** CROSS_S_GET_GUILD_WAR_INFO starTime */
            starTime?: (number|Long|null);

            /** CROSS_S_GET_GUILD_WAR_INFO endTime */
            endTime?: (number|Long|null);
        }

        /** Represents a CROSS_S_GET_GUILD_WAR_INFO. */
        class CROSS_S_GET_GUILD_WAR_INFO implements ICROSS_S_GET_GUILD_WAR_INFO {

            /**
             * Constructs a new CROSS_S_GET_GUILD_WAR_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_GUILD_WAR_INFO);

            /** CROSS_S_GET_GUILD_WAR_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_GUILD_WAR_INFO gateList. */
            public gateList: com.message.IGuildGateMsg[];

            /** CROSS_S_GET_GUILD_WAR_INFO guildWarMsg. */
            public guildWarMsg?: (com.message.IGuildWarMsg|null);

            /** CROSS_S_GET_GUILD_WAR_INFO inDefend. */
            public inDefend: boolean;

            /** CROSS_S_GET_GUILD_WAR_INFO starTime. */
            public starTime: (number|Long);

            /** CROSS_S_GET_GUILD_WAR_INFO endTime. */
            public endTime: (number|Long);

            /**
             * Encodes the specified CROSS_S_GET_GUILD_WAR_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_GUILD_WAR_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_GUILD_WAR_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_GUILD_WAR_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_GUILD_WAR_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_GUILD_WAR_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_GUILD_WAR_INFO;
        }

        /** Properties of a CROSS_C_GUILD_WAR_DAMAGE. */
        interface ICROSS_C_GUILD_WAR_DAMAGE {

            /** CROSS_C_GUILD_WAR_DAMAGE serverId */
            serverId?: (number|null);

            /** CROSS_C_GUILD_WAR_DAMAGE guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_WAR_DAMAGE damageVal */
            damageVal?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_WAR_DAMAGE. */
        class CROSS_C_GUILD_WAR_DAMAGE implements ICROSS_C_GUILD_WAR_DAMAGE {

            /**
             * Constructs a new CROSS_C_GUILD_WAR_DAMAGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_WAR_DAMAGE);

            /** CROSS_C_GUILD_WAR_DAMAGE serverId. */
            public serverId: number;

            /** CROSS_C_GUILD_WAR_DAMAGE guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_WAR_DAMAGE damageVal. */
            public damageVal: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_WAR_DAMAGE message. Does not implicitly {@link com.message.CROSS_C_GUILD_WAR_DAMAGE.verify|verify} messages.
             * @param message CROSS_C_GUILD_WAR_DAMAGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_WAR_DAMAGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_WAR_DAMAGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_WAR_DAMAGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_WAR_DAMAGE;
        }

        /** Properties of a CROSS_S_GUILD_WAR_DAMAGE. */
        interface ICROSS_S_GUILD_WAR_DAMAGE {

            /** CROSS_S_GUILD_WAR_DAMAGE gateList */
            gateList?: (com.message.IGuildGateMsg[]|null);

            /** CROSS_S_GUILD_WAR_DAMAGE guildWarMsg */
            guildWarMsg?: (com.message.IGuildWarMsg|null);
        }

        /** Represents a CROSS_S_GUILD_WAR_DAMAGE. */
        class CROSS_S_GUILD_WAR_DAMAGE implements ICROSS_S_GUILD_WAR_DAMAGE {

            /**
             * Constructs a new CROSS_S_GUILD_WAR_DAMAGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_WAR_DAMAGE);

            /** CROSS_S_GUILD_WAR_DAMAGE gateList. */
            public gateList: com.message.IGuildGateMsg[];

            /** CROSS_S_GUILD_WAR_DAMAGE guildWarMsg. */
            public guildWarMsg?: (com.message.IGuildWarMsg|null);

            /**
             * Encodes the specified CROSS_S_GUILD_WAR_DAMAGE message. Does not implicitly {@link com.message.CROSS_S_GUILD_WAR_DAMAGE.verify|verify} messages.
             * @param message CROSS_S_GUILD_WAR_DAMAGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_WAR_DAMAGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_WAR_DAMAGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_WAR_DAMAGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_WAR_DAMAGE;
        }

        /** Properties of a CROSS_C_GUILD_WAR_DEFEND. */
        interface ICROSS_C_GUILD_WAR_DEFEND {

            /** CROSS_C_GUILD_WAR_DEFEND serverId */
            serverId?: (number|null);

            /** CROSS_C_GUILD_WAR_DEFEND guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_WAR_DEFEND playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GUILD_WAR_DEFEND myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_C_GUILD_WAR_DEFEND. */
        class CROSS_C_GUILD_WAR_DEFEND implements ICROSS_C_GUILD_WAR_DEFEND {

            /**
             * Constructs a new CROSS_C_GUILD_WAR_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_WAR_DEFEND);

            /** CROSS_C_GUILD_WAR_DEFEND serverId. */
            public serverId: number;

            /** CROSS_C_GUILD_WAR_DEFEND guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_WAR_DEFEND playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GUILD_WAR_DEFEND myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_C_GUILD_WAR_DEFEND message. Does not implicitly {@link com.message.CROSS_C_GUILD_WAR_DEFEND.verify|verify} messages.
             * @param message CROSS_C_GUILD_WAR_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_WAR_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_WAR_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_WAR_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_WAR_DEFEND;
        }

        /** Properties of a CROSS_S_GUILD_WAR_DEFEND. */
        interface ICROSS_S_GUILD_WAR_DEFEND {

            /** CROSS_S_GUILD_WAR_DEFEND playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_WAR_DEFEND suceess */
            suceess?: (boolean|null);
        }

        /** Represents a CROSS_S_GUILD_WAR_DEFEND. */
        class CROSS_S_GUILD_WAR_DEFEND implements ICROSS_S_GUILD_WAR_DEFEND {

            /**
             * Constructs a new CROSS_S_GUILD_WAR_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_WAR_DEFEND);

            /** CROSS_S_GUILD_WAR_DEFEND playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_WAR_DEFEND suceess. */
            public suceess: boolean;

            /**
             * Encodes the specified CROSS_S_GUILD_WAR_DEFEND message. Does not implicitly {@link com.message.CROSS_S_GUILD_WAR_DEFEND.verify|verify} messages.
             * @param message CROSS_S_GUILD_WAR_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_WAR_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_WAR_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_WAR_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_WAR_DEFEND;
        }

        /** Properties of a CROSS_C_GUILD_WAR_CANCEL_DEFEND. */
        interface ICROSS_C_GUILD_WAR_CANCEL_DEFEND {

            /** CROSS_C_GUILD_WAR_CANCEL_DEFEND serverId */
            serverId?: (number|null);

            /** CROSS_C_GUILD_WAR_CANCEL_DEFEND guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GUILD_WAR_CANCEL_DEFEND playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GUILD_WAR_CANCEL_DEFEND. */
        class CROSS_C_GUILD_WAR_CANCEL_DEFEND implements ICROSS_C_GUILD_WAR_CANCEL_DEFEND {

            /**
             * Constructs a new CROSS_C_GUILD_WAR_CANCEL_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GUILD_WAR_CANCEL_DEFEND);

            /** CROSS_C_GUILD_WAR_CANCEL_DEFEND serverId. */
            public serverId: number;

            /** CROSS_C_GUILD_WAR_CANCEL_DEFEND guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GUILD_WAR_CANCEL_DEFEND playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GUILD_WAR_CANCEL_DEFEND message. Does not implicitly {@link com.message.CROSS_C_GUILD_WAR_CANCEL_DEFEND.verify|verify} messages.
             * @param message CROSS_C_GUILD_WAR_CANCEL_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GUILD_WAR_CANCEL_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GUILD_WAR_CANCEL_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GUILD_WAR_CANCEL_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GUILD_WAR_CANCEL_DEFEND;
        }

        /** Properties of a CROSS_S_GUILD_WAR_CANCEL_DEFEND. */
        interface ICROSS_S_GUILD_WAR_CANCEL_DEFEND {

            /** CROSS_S_GUILD_WAR_CANCEL_DEFEND playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GUILD_WAR_CANCEL_DEFEND suceess */
            suceess?: (boolean|null);
        }

        /** Represents a CROSS_S_GUILD_WAR_CANCEL_DEFEND. */
        class CROSS_S_GUILD_WAR_CANCEL_DEFEND implements ICROSS_S_GUILD_WAR_CANCEL_DEFEND {

            /**
             * Constructs a new CROSS_S_GUILD_WAR_CANCEL_DEFEND.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GUILD_WAR_CANCEL_DEFEND);

            /** CROSS_S_GUILD_WAR_CANCEL_DEFEND playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GUILD_WAR_CANCEL_DEFEND suceess. */
            public suceess: boolean;

            /**
             * Encodes the specified CROSS_S_GUILD_WAR_CANCEL_DEFEND message. Does not implicitly {@link com.message.CROSS_S_GUILD_WAR_CANCEL_DEFEND.verify|verify} messages.
             * @param message CROSS_S_GUILD_WAR_CANCEL_DEFEND message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GUILD_WAR_CANCEL_DEFEND, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GUILD_WAR_CANCEL_DEFEND message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GUILD_WAR_CANCEL_DEFEND
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GUILD_WAR_CANCEL_DEFEND;
        }

        /** Properties of a CROSS_SYNC_GUILD_WAR_FINISH. */
        interface ICROSS_SYNC_GUILD_WAR_FINISH {

            /** CROSS_SYNC_GUILD_WAR_FINISH guildId */
            guildId?: (number|Long|null);

            /** CROSS_SYNC_GUILD_WAR_FINISH win */
            win?: (boolean|null);

            /** CROSS_SYNC_GUILD_WAR_FINISH guildName */
            guildName?: (string|null);

            /** CROSS_SYNC_GUILD_WAR_FINISH level */
            level?: (number|null);
        }

        /** Represents a CROSS_SYNC_GUILD_WAR_FINISH. */
        class CROSS_SYNC_GUILD_WAR_FINISH implements ICROSS_SYNC_GUILD_WAR_FINISH {

            /**
             * Constructs a new CROSS_SYNC_GUILD_WAR_FINISH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_SYNC_GUILD_WAR_FINISH);

            /** CROSS_SYNC_GUILD_WAR_FINISH guildId. */
            public guildId: (number|Long);

            /** CROSS_SYNC_GUILD_WAR_FINISH win. */
            public win: boolean;

            /** CROSS_SYNC_GUILD_WAR_FINISH guildName. */
            public guildName: string;

            /** CROSS_SYNC_GUILD_WAR_FINISH level. */
            public level: number;

            /**
             * Encodes the specified CROSS_SYNC_GUILD_WAR_FINISH message. Does not implicitly {@link com.message.CROSS_SYNC_GUILD_WAR_FINISH.verify|verify} messages.
             * @param message CROSS_SYNC_GUILD_WAR_FINISH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_SYNC_GUILD_WAR_FINISH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_SYNC_GUILD_WAR_FINISH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_SYNC_GUILD_WAR_FINISH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_SYNC_GUILD_WAR_FINISH;
        }

        /** Properties of a CROSS_SYNC_GUILD_WAR_LEVEL_UP. */
        interface ICROSS_SYNC_GUILD_WAR_LEVEL_UP {

            /** CROSS_SYNC_GUILD_WAR_LEVEL_UP serverId */
            serverId?: (number|null);

            /** CROSS_SYNC_GUILD_WAR_LEVEL_UP guildId */
            guildId?: (number|Long|null);

            /** CROSS_SYNC_GUILD_WAR_LEVEL_UP guildNewLevel */
            guildNewLevel?: (number|null);
        }

        /** Represents a CROSS_SYNC_GUILD_WAR_LEVEL_UP. */
        class CROSS_SYNC_GUILD_WAR_LEVEL_UP implements ICROSS_SYNC_GUILD_WAR_LEVEL_UP {

            /**
             * Constructs a new CROSS_SYNC_GUILD_WAR_LEVEL_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_SYNC_GUILD_WAR_LEVEL_UP);

            /** CROSS_SYNC_GUILD_WAR_LEVEL_UP serverId. */
            public serverId: number;

            /** CROSS_SYNC_GUILD_WAR_LEVEL_UP guildId. */
            public guildId: (number|Long);

            /** CROSS_SYNC_GUILD_WAR_LEVEL_UP guildNewLevel. */
            public guildNewLevel: number;

            /**
             * Encodes the specified CROSS_SYNC_GUILD_WAR_LEVEL_UP message. Does not implicitly {@link com.message.CROSS_SYNC_GUILD_WAR_LEVEL_UP.verify|verify} messages.
             * @param message CROSS_SYNC_GUILD_WAR_LEVEL_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_SYNC_GUILD_WAR_LEVEL_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_SYNC_GUILD_WAR_LEVEL_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_SYNC_GUILD_WAR_LEVEL_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_SYNC_GUILD_WAR_LEVEL_UP;
        }

        /** Properties of a CROSS_SYNC_GUILD_WAR_DISSOLVE. */
        interface ICROSS_SYNC_GUILD_WAR_DISSOLVE {

            /** CROSS_SYNC_GUILD_WAR_DISSOLVE serverId */
            serverId?: (number|null);

            /** CROSS_SYNC_GUILD_WAR_DISSOLVE guildId */
            guildId?: (number|Long|null);
        }

        /** Represents a CROSS_SYNC_GUILD_WAR_DISSOLVE. */
        class CROSS_SYNC_GUILD_WAR_DISSOLVE implements ICROSS_SYNC_GUILD_WAR_DISSOLVE {

            /**
             * Constructs a new CROSS_SYNC_GUILD_WAR_DISSOLVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_SYNC_GUILD_WAR_DISSOLVE);

            /** CROSS_SYNC_GUILD_WAR_DISSOLVE serverId. */
            public serverId: number;

            /** CROSS_SYNC_GUILD_WAR_DISSOLVE guildId. */
            public guildId: (number|Long);

            /**
             * Encodes the specified CROSS_SYNC_GUILD_WAR_DISSOLVE message. Does not implicitly {@link com.message.CROSS_SYNC_GUILD_WAR_DISSOLVE.verify|verify} messages.
             * @param message CROSS_SYNC_GUILD_WAR_DISSOLVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_SYNC_GUILD_WAR_DISSOLVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_SYNC_GUILD_WAR_DISSOLVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_SYNC_GUILD_WAR_DISSOLVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_SYNC_GUILD_WAR_DISSOLVE;
        }

        /** Properties of a C_GET_HELL_INFO. */
        interface IC_GET_HELL_INFO {
        }

        /** Represents a C_GET_HELL_INFO. */
        class C_GET_HELL_INFO implements IC_GET_HELL_INFO {

            /**
             * Constructs a new C_GET_HELL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HELL_INFO);

            /**
             * Encodes the specified C_GET_HELL_INFO message. Does not implicitly {@link com.message.C_GET_HELL_INFO.verify|verify} messages.
             * @param message C_GET_HELL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HELL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HELL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HELL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HELL_INFO;
        }

        /** Properties of a S_GET_HELL_INFO. */
        interface IS_GET_HELL_INFO {

            /** S_GET_HELL_INFO hellBreaks */
            hellBreaks?: (string|null);

            /** S_GET_HELL_INFO hellRankMsg */
            hellRankMsg?: (com.message.IHellRankMsg[]|null);

            /** S_GET_HELL_INFO hellMsg */
            hellMsg?: (com.message.IHellMsg|null);
        }

        /** Represents a S_GET_HELL_INFO. */
        class S_GET_HELL_INFO implements IS_GET_HELL_INFO {

            /**
             * Constructs a new S_GET_HELL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HELL_INFO);

            /** S_GET_HELL_INFO hellBreaks. */
            public hellBreaks: string;

            /** S_GET_HELL_INFO hellRankMsg. */
            public hellRankMsg: com.message.IHellRankMsg[];

            /** S_GET_HELL_INFO hellMsg. */
            public hellMsg?: (com.message.IHellMsg|null);

            /**
             * Encodes the specified S_GET_HELL_INFO message. Does not implicitly {@link com.message.S_GET_HELL_INFO.verify|verify} messages.
             * @param message S_GET_HELL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HELL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HELL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HELL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HELL_INFO;
        }

        /** Properties of a HellMsg. */
        interface IHellMsg {

            /** HellMsg playerId */
            playerId?: (number|Long|null);

            /** HellMsg passHellInsId */
            passHellInsId?: (number|null);

            /** HellMsg dailyReward */
            dailyReward?: (number|null);

            /** HellMsg lotteryId */
            lotteryId?: (number|null);

            /** HellMsg lotteryCount */
            lotteryCount?: (number|null);

            /** HellMsg rewardList */
            rewardList?: (number[]|null);
        }

        /** Represents a HellMsg. */
        class HellMsg implements IHellMsg {

            /**
             * Constructs a new HellMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHellMsg);

            /** HellMsg playerId. */
            public playerId: (number|Long);

            /** HellMsg passHellInsId. */
            public passHellInsId: number;

            /** HellMsg dailyReward. */
            public dailyReward: number;

            /** HellMsg lotteryId. */
            public lotteryId: number;

            /** HellMsg lotteryCount. */
            public lotteryCount: number;

            /** HellMsg rewardList. */
            public rewardList: number[];

            /**
             * Encodes the specified HellMsg message. Does not implicitly {@link com.message.HellMsg.verify|verify} messages.
             * @param message HellMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHellMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HellMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HellMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HellMsg;
        }

        /** Properties of a HellRankMsg. */
        interface IHellRankMsg {

            /** HellRankMsg rank */
            rank?: (number|null);

            /** HellRankMsg playerId */
            playerId?: (number|Long|null);

            /** HellRankMsg playerName */
            playerName?: (string|null);

            /** HellRankMsg passHellInsId */
            passHellInsId?: (number|null);
        }

        /** Represents a HellRankMsg. */
        class HellRankMsg implements IHellRankMsg {

            /**
             * Constructs a new HellRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHellRankMsg);

            /** HellRankMsg rank. */
            public rank: number;

            /** HellRankMsg playerId. */
            public playerId: (number|Long);

            /** HellRankMsg playerName. */
            public playerName: string;

            /** HellRankMsg passHellInsId. */
            public passHellInsId: number;

            /**
             * Encodes the specified HellRankMsg message. Does not implicitly {@link com.message.HellRankMsg.verify|verify} messages.
             * @param message HellRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHellRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HellRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HellRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HellRankMsg;
        }

        /** Properties of a C_GET_HELL_DAILY_REWARD. */
        interface IC_GET_HELL_DAILY_REWARD {
        }

        /** Represents a C_GET_HELL_DAILY_REWARD. */
        class C_GET_HELL_DAILY_REWARD implements IC_GET_HELL_DAILY_REWARD {

            /**
             * Constructs a new C_GET_HELL_DAILY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HELL_DAILY_REWARD);

            /**
             * Encodes the specified C_GET_HELL_DAILY_REWARD message. Does not implicitly {@link com.message.C_GET_HELL_DAILY_REWARD.verify|verify} messages.
             * @param message C_GET_HELL_DAILY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HELL_DAILY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HELL_DAILY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HELL_DAILY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HELL_DAILY_REWARD;
        }

        /** Properties of a S_GET_HELL_DAILY_REWARD. */
        interface IS_GET_HELL_DAILY_REWARD {

            /** S_GET_HELL_DAILY_REWARD dailyReward */
            dailyReward?: (number|null);

            /** S_GET_HELL_DAILY_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_GET_HELL_DAILY_REWARD. */
        class S_GET_HELL_DAILY_REWARD implements IS_GET_HELL_DAILY_REWARD {

            /**
             * Constructs a new S_GET_HELL_DAILY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HELL_DAILY_REWARD);

            /** S_GET_HELL_DAILY_REWARD dailyReward. */
            public dailyReward: number;

            /** S_GET_HELL_DAILY_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_GET_HELL_DAILY_REWARD message. Does not implicitly {@link com.message.S_GET_HELL_DAILY_REWARD.verify|verify} messages.
             * @param message S_GET_HELL_DAILY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HELL_DAILY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HELL_DAILY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HELL_DAILY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HELL_DAILY_REWARD;
        }

        /** Properties of a C_HELL_LOTTERY. */
        interface IC_HELL_LOTTERY {
        }

        /** Represents a C_HELL_LOTTERY. */
        class C_HELL_LOTTERY implements IC_HELL_LOTTERY {

            /**
             * Constructs a new C_HELL_LOTTERY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HELL_LOTTERY);

            /**
             * Encodes the specified C_HELL_LOTTERY message. Does not implicitly {@link com.message.C_HELL_LOTTERY.verify|verify} messages.
             * @param message C_HELL_LOTTERY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HELL_LOTTERY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HELL_LOTTERY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HELL_LOTTERY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HELL_LOTTERY;
        }

        /** Properties of a S_HELL_LOTTERY. */
        interface IS_HELL_LOTTERY {

            /** S_HELL_LOTTERY lotteryId */
            lotteryId?: (number|null);

            /** S_HELL_LOTTERY lotteryCount */
            lotteryCount?: (number|null);

            /** S_HELL_LOTTERY rewardIndex */
            rewardIndex?: (number|null);
        }

        /** Represents a S_HELL_LOTTERY. */
        class S_HELL_LOTTERY implements IS_HELL_LOTTERY {

            /**
             * Constructs a new S_HELL_LOTTERY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HELL_LOTTERY);

            /** S_HELL_LOTTERY lotteryId. */
            public lotteryId: number;

            /** S_HELL_LOTTERY lotteryCount. */
            public lotteryCount: number;

            /** S_HELL_LOTTERY rewardIndex. */
            public rewardIndex: number;

            /**
             * Encodes the specified S_HELL_LOTTERY message. Does not implicitly {@link com.message.S_HELL_LOTTERY.verify|verify} messages.
             * @param message S_HELL_LOTTERY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HELL_LOTTERY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HELL_LOTTERY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HELL_LOTTERY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HELL_LOTTERY;
        }

        /** Properties of a C_HELL_ANNE_LEVEL_UP. */
        interface IC_HELL_ANNE_LEVEL_UP {

            /** C_HELL_ANNE_LEVEL_UP goodsId */
            goodsId?: (number|Long|null);
        }

        /** Represents a C_HELL_ANNE_LEVEL_UP. */
        class C_HELL_ANNE_LEVEL_UP implements IC_HELL_ANNE_LEVEL_UP {

            /**
             * Constructs a new C_HELL_ANNE_LEVEL_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HELL_ANNE_LEVEL_UP);

            /** C_HELL_ANNE_LEVEL_UP goodsId. */
            public goodsId: (number|Long);

            /**
             * Encodes the specified C_HELL_ANNE_LEVEL_UP message. Does not implicitly {@link com.message.C_HELL_ANNE_LEVEL_UP.verify|verify} messages.
             * @param message C_HELL_ANNE_LEVEL_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HELL_ANNE_LEVEL_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HELL_ANNE_LEVEL_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HELL_ANNE_LEVEL_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HELL_ANNE_LEVEL_UP;
        }

        /** Properties of a S_HELL_ANNE_LEVEL_UP. */
        interface IS_HELL_ANNE_LEVEL_UP {

            /** S_HELL_ANNE_LEVEL_UP goodsId */
            goodsId?: (number|Long|null);

            /** S_HELL_ANNE_LEVEL_UP anneId */
            anneId?: (number|null);

            /** S_HELL_ANNE_LEVEL_UP anneLevel */
            anneLevel?: (number|null);
        }

        /** Represents a S_HELL_ANNE_LEVEL_UP. */
        class S_HELL_ANNE_LEVEL_UP implements IS_HELL_ANNE_LEVEL_UP {

            /**
             * Constructs a new S_HELL_ANNE_LEVEL_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HELL_ANNE_LEVEL_UP);

            /** S_HELL_ANNE_LEVEL_UP goodsId. */
            public goodsId: (number|Long);

            /** S_HELL_ANNE_LEVEL_UP anneId. */
            public anneId: number;

            /** S_HELL_ANNE_LEVEL_UP anneLevel. */
            public anneLevel: number;

            /**
             * Encodes the specified S_HELL_ANNE_LEVEL_UP message. Does not implicitly {@link com.message.S_HELL_ANNE_LEVEL_UP.verify|verify} messages.
             * @param message S_HELL_ANNE_LEVEL_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HELL_ANNE_LEVEL_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HELL_ANNE_LEVEL_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HELL_ANNE_LEVEL_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HELL_ANNE_LEVEL_UP;
        }

        /** Properties of a C_HELL_ANNE_DECOMPOSE. */
        interface IC_HELL_ANNE_DECOMPOSE {

            /** C_HELL_ANNE_DECOMPOSE goodsId */
            goodsId?: ((number|Long)[]|null);
        }

        /** Represents a C_HELL_ANNE_DECOMPOSE. */
        class C_HELL_ANNE_DECOMPOSE implements IC_HELL_ANNE_DECOMPOSE {

            /**
             * Constructs a new C_HELL_ANNE_DECOMPOSE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HELL_ANNE_DECOMPOSE);

            /** C_HELL_ANNE_DECOMPOSE goodsId. */
            public goodsId: (number|Long)[];

            /**
             * Encodes the specified C_HELL_ANNE_DECOMPOSE message. Does not implicitly {@link com.message.C_HELL_ANNE_DECOMPOSE.verify|verify} messages.
             * @param message C_HELL_ANNE_DECOMPOSE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HELL_ANNE_DECOMPOSE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HELL_ANNE_DECOMPOSE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HELL_ANNE_DECOMPOSE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HELL_ANNE_DECOMPOSE;
        }

        /** Properties of a S_HELL_ANNE_DECOMPOSE. */
        interface IS_HELL_ANNE_DECOMPOSE {

            /** S_HELL_ANNE_DECOMPOSE reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_HELL_ANNE_DECOMPOSE. */
        class S_HELL_ANNE_DECOMPOSE implements IS_HELL_ANNE_DECOMPOSE {

            /**
             * Constructs a new S_HELL_ANNE_DECOMPOSE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HELL_ANNE_DECOMPOSE);

            /** S_HELL_ANNE_DECOMPOSE reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_HELL_ANNE_DECOMPOSE message. Does not implicitly {@link com.message.S_HELL_ANNE_DECOMPOSE.verify|verify} messages.
             * @param message S_HELL_ANNE_DECOMPOSE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HELL_ANNE_DECOMPOSE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HELL_ANNE_DECOMPOSE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HELL_ANNE_DECOMPOSE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HELL_ANNE_DECOMPOSE;
        }

        /** Properties of a C_HELL_REMEMBER. */
        interface IC_HELL_REMEMBER {

            /** C_HELL_REMEMBER hellBreaks */
            hellBreaks?: (string|null);
        }

        /** Represents a C_HELL_REMEMBER. */
        class C_HELL_REMEMBER implements IC_HELL_REMEMBER {

            /**
             * Constructs a new C_HELL_REMEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HELL_REMEMBER);

            /** C_HELL_REMEMBER hellBreaks. */
            public hellBreaks: string;

            /**
             * Encodes the specified C_HELL_REMEMBER message. Does not implicitly {@link com.message.C_HELL_REMEMBER.verify|verify} messages.
             * @param message C_HELL_REMEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HELL_REMEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HELL_REMEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HELL_REMEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HELL_REMEMBER;
        }

        /** Properties of a S_HELL_REMEMBER. */
        interface IS_HELL_REMEMBER {

            /** S_HELL_REMEMBER hellBreaks */
            hellBreaks?: (string|null);
        }

        /** Represents a S_HELL_REMEMBER. */
        class S_HELL_REMEMBER implements IS_HELL_REMEMBER {

            /**
             * Constructs a new S_HELL_REMEMBER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HELL_REMEMBER);

            /** S_HELL_REMEMBER hellBreaks. */
            public hellBreaks: string;

            /**
             * Encodes the specified S_HELL_REMEMBER message. Does not implicitly {@link com.message.S_HELL_REMEMBER.verify|verify} messages.
             * @param message S_HELL_REMEMBER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HELL_REMEMBER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HELL_REMEMBER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HELL_REMEMBER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HELL_REMEMBER;
        }

        /** Properties of a C_GET_HANGUP_WAR_REPORT. */
        interface IC_GET_HANGUP_WAR_REPORT {
        }

        /** Represents a C_GET_HANGUP_WAR_REPORT. */
        class C_GET_HANGUP_WAR_REPORT implements IC_GET_HANGUP_WAR_REPORT {

            /**
             * Constructs a new C_GET_HANGUP_WAR_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HANGUP_WAR_REPORT);

            /**
             * Encodes the specified C_GET_HANGUP_WAR_REPORT message. Does not implicitly {@link com.message.C_GET_HANGUP_WAR_REPORT.verify|verify} messages.
             * @param message C_GET_HANGUP_WAR_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HANGUP_WAR_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HANGUP_WAR_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HANGUP_WAR_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HANGUP_WAR_REPORT;
        }

        /** Properties of a S_GET_HANGUP_WAR_REPORT. */
        interface IS_GET_HANGUP_WAR_REPORT {

            /** S_GET_HANGUP_WAR_REPORT instanceId */
            instanceId?: (number|null);

            /** S_GET_HANGUP_WAR_REPORT myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_HANGUP_WAR_REPORT hangUpMsg */
            hangUpMsg?: (com.message.IHangUpRoundMsg[]|null);
        }

        /** Represents a S_GET_HANGUP_WAR_REPORT. */
        class S_GET_HANGUP_WAR_REPORT implements IS_GET_HANGUP_WAR_REPORT {

            /**
             * Constructs a new S_GET_HANGUP_WAR_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HANGUP_WAR_REPORT);

            /** S_GET_HANGUP_WAR_REPORT instanceId. */
            public instanceId: number;

            /** S_GET_HANGUP_WAR_REPORT myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_HANGUP_WAR_REPORT hangUpMsg. */
            public hangUpMsg: com.message.IHangUpRoundMsg[];

            /**
             * Encodes the specified S_GET_HANGUP_WAR_REPORT message. Does not implicitly {@link com.message.S_GET_HANGUP_WAR_REPORT.verify|verify} messages.
             * @param message S_GET_HANGUP_WAR_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HANGUP_WAR_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HANGUP_WAR_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HANGUP_WAR_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HANGUP_WAR_REPORT;
        }

        /** Properties of a HangUpRoundMsg. */
        interface IHangUpRoundMsg {

            /** HangUpRoundMsg enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** HangUpRoundMsg fighterRoundMsg */
            fighterRoundMsg?: (com.message.IFighterRoundMsg[]|null);
        }

        /** Represents a HangUpRoundMsg. */
        class HangUpRoundMsg implements IHangUpRoundMsg {

            /**
             * Constructs a new HangUpRoundMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHangUpRoundMsg);

            /** HangUpRoundMsg enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** HangUpRoundMsg fighterRoundMsg. */
            public fighterRoundMsg: com.message.IFighterRoundMsg[];

            /**
             * Encodes the specified HangUpRoundMsg message. Does not implicitly {@link com.message.HangUpRoundMsg.verify|verify} messages.
             * @param message HangUpRoundMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHangUpRoundMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HangUpRoundMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HangUpRoundMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HangUpRoundMsg;
        }

        /** Properties of a C_SYNC_DEFEAT_NUM. */
        interface IC_SYNC_DEFEAT_NUM {
        }

        /** Represents a C_SYNC_DEFEAT_NUM. */
        class C_SYNC_DEFEAT_NUM implements IC_SYNC_DEFEAT_NUM {

            /**
             * Constructs a new C_SYNC_DEFEAT_NUM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SYNC_DEFEAT_NUM);

            /**
             * Encodes the specified C_SYNC_DEFEAT_NUM message. Does not implicitly {@link com.message.C_SYNC_DEFEAT_NUM.verify|verify} messages.
             * @param message C_SYNC_DEFEAT_NUM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SYNC_DEFEAT_NUM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SYNC_DEFEAT_NUM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SYNC_DEFEAT_NUM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SYNC_DEFEAT_NUM;
        }

        /** Properties of a S_SYNC_DEFEAT_NUM. */
        interface IS_SYNC_DEFEAT_NUM {

            /** S_SYNC_DEFEAT_NUM num */
            num?: (number|null);

            /** S_SYNC_DEFEAT_NUM exp */
            exp?: (number|Long|null);

            /** S_SYNC_DEFEAT_NUM money */
            money?: (number|Long|null);

            /** S_SYNC_DEFEAT_NUM itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_SYNC_DEFEAT_NUM time */
            time?: (number|Long|null);
        }

        /** Represents a S_SYNC_DEFEAT_NUM. */
        class S_SYNC_DEFEAT_NUM implements IS_SYNC_DEFEAT_NUM {

            /**
             * Constructs a new S_SYNC_DEFEAT_NUM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_DEFEAT_NUM);

            /** S_SYNC_DEFEAT_NUM num. */
            public num: number;

            /** S_SYNC_DEFEAT_NUM exp. */
            public exp: (number|Long);

            /** S_SYNC_DEFEAT_NUM money. */
            public money: (number|Long);

            /** S_SYNC_DEFEAT_NUM itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_SYNC_DEFEAT_NUM time. */
            public time: (number|Long);

            /**
             * Encodes the specified S_SYNC_DEFEAT_NUM message. Does not implicitly {@link com.message.S_SYNC_DEFEAT_NUM.verify|verify} messages.
             * @param message S_SYNC_DEFEAT_NUM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_DEFEAT_NUM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_DEFEAT_NUM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_DEFEAT_NUM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_DEFEAT_NUM;
        }

        /** Properties of a C_OFF_LINE_CHALLENGE. */
        interface IC_OFF_LINE_CHALLENGE {

            /** C_OFF_LINE_CHALLENGE state */
            state?: (number|null);
        }

        /** Represents a C_OFF_LINE_CHALLENGE. */
        class C_OFF_LINE_CHALLENGE implements IC_OFF_LINE_CHALLENGE {

            /**
             * Constructs a new C_OFF_LINE_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OFF_LINE_CHALLENGE);

            /** C_OFF_LINE_CHALLENGE state. */
            public state: number;

            /**
             * Encodes the specified C_OFF_LINE_CHALLENGE message. Does not implicitly {@link com.message.C_OFF_LINE_CHALLENGE.verify|verify} messages.
             * @param message C_OFF_LINE_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OFF_LINE_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OFF_LINE_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OFF_LINE_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OFF_LINE_CHALLENGE;
        }

        /** Properties of a S_OFF_LINE_CHALLENGE. */
        interface IS_OFF_LINE_CHALLENGE {

            /** S_OFF_LINE_CHALLENGE state */
            state?: (number|null);
        }

        /** Represents a S_OFF_LINE_CHALLENGE. */
        class S_OFF_LINE_CHALLENGE implements IS_OFF_LINE_CHALLENGE {

            /**
             * Constructs a new S_OFF_LINE_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OFF_LINE_CHALLENGE);

            /** S_OFF_LINE_CHALLENGE state. */
            public state: number;

            /**
             * Encodes the specified S_OFF_LINE_CHALLENGE message. Does not implicitly {@link com.message.S_OFF_LINE_CHALLENGE.verify|verify} messages.
             * @param message S_OFF_LINE_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OFF_LINE_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OFF_LINE_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OFF_LINE_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OFF_LINE_CHALLENGE;
        }

        /** Properties of a C_GET_HANGUP_RANK_INFO. */
        interface IC_GET_HANGUP_RANK_INFO {
        }

        /** Represents a C_GET_HANGUP_RANK_INFO. */
        class C_GET_HANGUP_RANK_INFO implements IC_GET_HANGUP_RANK_INFO {

            /**
             * Constructs a new C_GET_HANGUP_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HANGUP_RANK_INFO);

            /**
             * Encodes the specified C_GET_HANGUP_RANK_INFO message. Does not implicitly {@link com.message.C_GET_HANGUP_RANK_INFO.verify|verify} messages.
             * @param message C_GET_HANGUP_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HANGUP_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HANGUP_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HANGUP_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HANGUP_RANK_INFO;
        }

        /** Properties of a S_GET_HANGUP_RANK_INFO. */
        interface IS_GET_HANGUP_RANK_INFO {

            /** S_GET_HANGUP_RANK_INFO rankInfos */
            rankInfos?: (com.message.IHANGUP_RANK_INFO[]|null);
        }

        /** Represents a S_GET_HANGUP_RANK_INFO. */
        class S_GET_HANGUP_RANK_INFO implements IS_GET_HANGUP_RANK_INFO {

            /**
             * Constructs a new S_GET_HANGUP_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HANGUP_RANK_INFO);

            /** S_GET_HANGUP_RANK_INFO rankInfos. */
            public rankInfos: com.message.IHANGUP_RANK_INFO[];

            /**
             * Encodes the specified S_GET_HANGUP_RANK_INFO message. Does not implicitly {@link com.message.S_GET_HANGUP_RANK_INFO.verify|verify} messages.
             * @param message S_GET_HANGUP_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HANGUP_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HANGUP_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HANGUP_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HANGUP_RANK_INFO;
        }

        /** Properties of a HANGUP_RANK_INFO. */
        interface IHANGUP_RANK_INFO {

            /** HANGUP_RANK_INFO playerId */
            playerId?: (number|Long|null);

            /** HANGUP_RANK_INFO nickName */
            nickName?: (string|null);

            /** HANGUP_RANK_INFO instanceId */
            instanceId?: (number|null);

            /** HANGUP_RANK_INFO fight */
            fight?: (number|Long|null);

            /** HANGUP_RANK_INFO rank */
            rank?: (number|null);
        }

        /** Represents a HANGUP_RANK_INFO. */
        class HANGUP_RANK_INFO implements IHANGUP_RANK_INFO {

            /**
             * Constructs a new HANGUP_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHANGUP_RANK_INFO);

            /** HANGUP_RANK_INFO playerId. */
            public playerId: (number|Long);

            /** HANGUP_RANK_INFO nickName. */
            public nickName: string;

            /** HANGUP_RANK_INFO instanceId. */
            public instanceId: number;

            /** HANGUP_RANK_INFO fight. */
            public fight: (number|Long);

            /** HANGUP_RANK_INFO rank. */
            public rank: number;

            /**
             * Encodes the specified HANGUP_RANK_INFO message. Does not implicitly {@link com.message.HANGUP_RANK_INFO.verify|verify} messages.
             * @param message HANGUP_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHANGUP_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HANGUP_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HANGUP_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HANGUP_RANK_INFO;
        }

        /** Properties of a C_HERO_LISTS. */
        interface IC_HERO_LISTS {
        }

        /** Represents a C_HERO_LISTS. */
        class C_HERO_LISTS implements IC_HERO_LISTS {

            /**
             * Constructs a new C_HERO_LISTS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_LISTS);

            /**
             * Encodes the specified C_HERO_LISTS message. Does not implicitly {@link com.message.C_HERO_LISTS.verify|verify} messages.
             * @param message C_HERO_LISTS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_LISTS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_LISTS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_LISTS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_LISTS;
        }

        /** Properties of a S_HERO_LISTS. */
        interface IS_HERO_LISTS {

            /** S_HERO_LISTS herosInfo */
            herosInfo?: (com.message.IHerosInfo[]|null);
        }

        /** Represents a S_HERO_LISTS. */
        class S_HERO_LISTS implements IS_HERO_LISTS {

            /**
             * Constructs a new S_HERO_LISTS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_LISTS);

            /** S_HERO_LISTS herosInfo. */
            public herosInfo: com.message.IHerosInfo[];

            /**
             * Encodes the specified S_HERO_LISTS message. Does not implicitly {@link com.message.S_HERO_LISTS.verify|verify} messages.
             * @param message S_HERO_LISTS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_LISTS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_LISTS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_LISTS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_LISTS;
        }

        /** Properties of a HerosInfo. */
        interface IHerosInfo {

            /** HerosInfo heroId */
            heroId?: (number|null);

            /** HerosInfo heroLevel */
            heroLevel?: (number|null);

            /** HerosInfo heroStar */
            heroStar?: (number|null);

            /** HerosInfo heroQuailty */
            heroQuailty?: (number|null);

            /** HerosInfo heroExp */
            heroExp?: (number|Long|null);

            /** HerosInfo heroStarExp */
            heroStarExp?: (number|null);

            /** HerosInfo heroWakeLevel */
            heroWakeLevel?: (number|null);

            /** HerosInfo heroTuPoLevel */
            heroTuPoLevel?: (number|null);

            /** HerosInfo heroFlyLevel */
            heroFlyLevel?: (number|null);

            /** HerosInfo starPieceNums */
            starPieceNums?: (number|null);
        }

        /** Represents a HerosInfo. */
        class HerosInfo implements IHerosInfo {

            /**
             * Constructs a new HerosInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHerosInfo);

            /** HerosInfo heroId. */
            public heroId: number;

            /** HerosInfo heroLevel. */
            public heroLevel: number;

            /** HerosInfo heroStar. */
            public heroStar: number;

            /** HerosInfo heroQuailty. */
            public heroQuailty: number;

            /** HerosInfo heroExp. */
            public heroExp: (number|Long);

            /** HerosInfo heroStarExp. */
            public heroStarExp: number;

            /** HerosInfo heroWakeLevel. */
            public heroWakeLevel: number;

            /** HerosInfo heroTuPoLevel. */
            public heroTuPoLevel: number;

            /** HerosInfo heroFlyLevel. */
            public heroFlyLevel: number;

            /** HerosInfo starPieceNums. */
            public starPieceNums: number;

            /**
             * Encodes the specified HerosInfo message. Does not implicitly {@link com.message.HerosInfo.verify|verify} messages.
             * @param message HerosInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHerosInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HerosInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HerosInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HerosInfo;
        }

        /** Properties of a C_ACTICATION_HERO. */
        interface IC_ACTICATION_HERO {

            /** C_ACTICATION_HERO heroId */
            heroId?: (number|null);
        }

        /** Represents a C_ACTICATION_HERO. */
        class C_ACTICATION_HERO implements IC_ACTICATION_HERO {

            /**
             * Constructs a new C_ACTICATION_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ACTICATION_HERO);

            /** C_ACTICATION_HERO heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_ACTICATION_HERO message. Does not implicitly {@link com.message.C_ACTICATION_HERO.verify|verify} messages.
             * @param message C_ACTICATION_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ACTICATION_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ACTICATION_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ACTICATION_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ACTICATION_HERO;
        }

        /** Properties of a S_ACTICATION_HERO. */
        interface IS_ACTICATION_HERO {

            /** S_ACTICATION_HERO herosInfo */
            herosInfo?: (com.message.IHerosInfo|null);
        }

        /** Represents a S_ACTICATION_HERO. */
        class S_ACTICATION_HERO implements IS_ACTICATION_HERO {

            /**
             * Constructs a new S_ACTICATION_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ACTICATION_HERO);

            /** S_ACTICATION_HERO herosInfo. */
            public herosInfo?: (com.message.IHerosInfo|null);

            /**
             * Encodes the specified S_ACTICATION_HERO message. Does not implicitly {@link com.message.S_ACTICATION_HERO.verify|verify} messages.
             * @param message S_ACTICATION_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ACTICATION_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ACTICATION_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ACTICATION_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ACTICATION_HERO;
        }

        /** Properties of a C_UPGRADE_HERO_LEVEL. */
        interface IC_UPGRADE_HERO_LEVEL {

            /** C_UPGRADE_HERO_LEVEL heroId */
            heroId?: (number|null);
        }

        /** Represents a C_UPGRADE_HERO_LEVEL. */
        class C_UPGRADE_HERO_LEVEL implements IC_UPGRADE_HERO_LEVEL {

            /**
             * Constructs a new C_UPGRADE_HERO_LEVEL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_UPGRADE_HERO_LEVEL);

            /** C_UPGRADE_HERO_LEVEL heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_UPGRADE_HERO_LEVEL message. Does not implicitly {@link com.message.C_UPGRADE_HERO_LEVEL.verify|verify} messages.
             * @param message C_UPGRADE_HERO_LEVEL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_UPGRADE_HERO_LEVEL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_UPGRADE_HERO_LEVEL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_UPGRADE_HERO_LEVEL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_UPGRADE_HERO_LEVEL;
        }

        /** Properties of a S_UPGRADE_HERO_LEVEL. */
        interface IS_UPGRADE_HERO_LEVEL {

            /** S_UPGRADE_HERO_LEVEL heroId */
            heroId?: (number|null);

            /** S_UPGRADE_HERO_LEVEL heroLevel */
            heroLevel?: (number|null);
        }

        /** Represents a S_UPGRADE_HERO_LEVEL. */
        class S_UPGRADE_HERO_LEVEL implements IS_UPGRADE_HERO_LEVEL {

            /**
             * Constructs a new S_UPGRADE_HERO_LEVEL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPGRADE_HERO_LEVEL);

            /** S_UPGRADE_HERO_LEVEL heroId. */
            public heroId: number;

            /** S_UPGRADE_HERO_LEVEL heroLevel. */
            public heroLevel: number;

            /**
             * Encodes the specified S_UPGRADE_HERO_LEVEL message. Does not implicitly {@link com.message.S_UPGRADE_HERO_LEVEL.verify|verify} messages.
             * @param message S_UPGRADE_HERO_LEVEL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPGRADE_HERO_LEVEL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPGRADE_HERO_LEVEL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPGRADE_HERO_LEVEL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPGRADE_HERO_LEVEL;
        }

        /** Properties of a C_UPGRADE_HERO_STAR. */
        interface IC_UPGRADE_HERO_STAR {

            /** C_UPGRADE_HERO_STAR heroId */
            heroId?: (number|null);

            /** C_UPGRADE_HERO_STAR itemListMsg */
            itemListMsg?: (com.message.IItemListMsg|null);
        }

        /** Represents a C_UPGRADE_HERO_STAR. */
        class C_UPGRADE_HERO_STAR implements IC_UPGRADE_HERO_STAR {

            /**
             * Constructs a new C_UPGRADE_HERO_STAR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_UPGRADE_HERO_STAR);

            /** C_UPGRADE_HERO_STAR heroId. */
            public heroId: number;

            /** C_UPGRADE_HERO_STAR itemListMsg. */
            public itemListMsg?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified C_UPGRADE_HERO_STAR message. Does not implicitly {@link com.message.C_UPGRADE_HERO_STAR.verify|verify} messages.
             * @param message C_UPGRADE_HERO_STAR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_UPGRADE_HERO_STAR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_UPGRADE_HERO_STAR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_UPGRADE_HERO_STAR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_UPGRADE_HERO_STAR;
        }

        /** Properties of a S_UPGRADE_HERO_STAR. */
        interface IS_UPGRADE_HERO_STAR {

            /** S_UPGRADE_HERO_STAR heroId */
            heroId?: (number|null);

            /** S_UPGRADE_HERO_STAR heroStar */
            heroStar?: (number|null);

            /** S_UPGRADE_HERO_STAR heroStarExp */
            heroStarExp?: (number|null);

            /** S_UPGRADE_HERO_STAR starPieceNums */
            starPieceNums?: (number|null);
        }

        /** Represents a S_UPGRADE_HERO_STAR. */
        class S_UPGRADE_HERO_STAR implements IS_UPGRADE_HERO_STAR {

            /**
             * Constructs a new S_UPGRADE_HERO_STAR.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPGRADE_HERO_STAR);

            /** S_UPGRADE_HERO_STAR heroId. */
            public heroId: number;

            /** S_UPGRADE_HERO_STAR heroStar. */
            public heroStar: number;

            /** S_UPGRADE_HERO_STAR heroStarExp. */
            public heroStarExp: number;

            /** S_UPGRADE_HERO_STAR starPieceNums. */
            public starPieceNums: number;

            /**
             * Encodes the specified S_UPGRADE_HERO_STAR message. Does not implicitly {@link com.message.S_UPGRADE_HERO_STAR.verify|verify} messages.
             * @param message S_UPGRADE_HERO_STAR message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPGRADE_HERO_STAR, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPGRADE_HERO_STAR message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPGRADE_HERO_STAR
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPGRADE_HERO_STAR;
        }

        /** Properties of a C_HERO_WAKE. */
        interface IC_HERO_WAKE {

            /** C_HERO_WAKE heroId */
            heroId?: (number|null);
        }

        /** Represents a C_HERO_WAKE. */
        class C_HERO_WAKE implements IC_HERO_WAKE {

            /**
             * Constructs a new C_HERO_WAKE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_WAKE);

            /** C_HERO_WAKE heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_HERO_WAKE message. Does not implicitly {@link com.message.C_HERO_WAKE.verify|verify} messages.
             * @param message C_HERO_WAKE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_WAKE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_WAKE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_WAKE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_WAKE;
        }

        /** Properties of a S_HERO_WAKE. */
        interface IS_HERO_WAKE {

            /** S_HERO_WAKE heroId */
            heroId?: (number|null);

            /** S_HERO_WAKE heroWakeLevel */
            heroWakeLevel?: (number|null);

            /** S_HERO_WAKE success */
            success?: (number|null);
        }

        /** Represents a S_HERO_WAKE. */
        class S_HERO_WAKE implements IS_HERO_WAKE {

            /**
             * Constructs a new S_HERO_WAKE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_WAKE);

            /** S_HERO_WAKE heroId. */
            public heroId: number;

            /** S_HERO_WAKE heroWakeLevel. */
            public heroWakeLevel: number;

            /** S_HERO_WAKE success. */
            public success: number;

            /**
             * Encodes the specified S_HERO_WAKE message. Does not implicitly {@link com.message.S_HERO_WAKE.verify|verify} messages.
             * @param message S_HERO_WAKE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_WAKE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_WAKE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_WAKE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_WAKE;
        }

        /** Properties of a C_HERO_LEVEL_UP. */
        interface IC_HERO_LEVEL_UP {

            /** C_HERO_LEVEL_UP heroId */
            heroId?: (number|null);

            /** C_HERO_LEVEL_UP isTen */
            isTen?: (boolean|null);
        }

        /** Represents a C_HERO_LEVEL_UP. */
        class C_HERO_LEVEL_UP implements IC_HERO_LEVEL_UP {

            /**
             * Constructs a new C_HERO_LEVEL_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_LEVEL_UP);

            /** C_HERO_LEVEL_UP heroId. */
            public heroId: number;

            /** C_HERO_LEVEL_UP isTen. */
            public isTen: boolean;

            /**
             * Encodes the specified C_HERO_LEVEL_UP message. Does not implicitly {@link com.message.C_HERO_LEVEL_UP.verify|verify} messages.
             * @param message C_HERO_LEVEL_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_LEVEL_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_LEVEL_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_LEVEL_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_LEVEL_UP;
        }

        /** Properties of a S_HERO_LEVEL_UP. */
        interface IS_HERO_LEVEL_UP {

            /** S_HERO_LEVEL_UP heroId */
            heroId?: (number|null);

            /** S_HERO_LEVEL_UP heroLevel */
            heroLevel?: (number|null);

            /** S_HERO_LEVEL_UP currExp */
            currExp?: (number|Long|null);
        }

        /** Represents a S_HERO_LEVEL_UP. */
        class S_HERO_LEVEL_UP implements IS_HERO_LEVEL_UP {

            /**
             * Constructs a new S_HERO_LEVEL_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_LEVEL_UP);

            /** S_HERO_LEVEL_UP heroId. */
            public heroId: number;

            /** S_HERO_LEVEL_UP heroLevel. */
            public heroLevel: number;

            /** S_HERO_LEVEL_UP currExp. */
            public currExp: (number|Long);

            /**
             * Encodes the specified S_HERO_LEVEL_UP message. Does not implicitly {@link com.message.S_HERO_LEVEL_UP.verify|verify} messages.
             * @param message S_HERO_LEVEL_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_LEVEL_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_LEVEL_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_LEVEL_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_LEVEL_UP;
        }

        /** Properties of a C_HERO_RELIVE. */
        interface IC_HERO_RELIVE {

            /** C_HERO_RELIVE heroId */
            heroId?: (number|null);
        }

        /** Represents a C_HERO_RELIVE. */
        class C_HERO_RELIVE implements IC_HERO_RELIVE {

            /**
             * Constructs a new C_HERO_RELIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_RELIVE);

            /** C_HERO_RELIVE heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_HERO_RELIVE message. Does not implicitly {@link com.message.C_HERO_RELIVE.verify|verify} messages.
             * @param message C_HERO_RELIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_RELIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_RELIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_RELIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_RELIVE;
        }

        /** Properties of a S_HERO_RELIVE. */
        interface IS_HERO_RELIVE {

            /** S_HERO_RELIVE heroId */
            heroId?: (number|null);

            /** S_HERO_RELIVE heroLevel */
            heroLevel?: (number|null);

            /** S_HERO_RELIVE currExp */
            currExp?: (number|Long|null);

            /** S_HERO_RELIVE heroTuPo */
            heroTuPo?: (number|null);

            /** S_HERO_RELIVE heroWake */
            heroWake?: (number|null);

            /** S_HERO_RELIVE itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_HERO_RELIVE heroFly */
            heroFly?: (number|null);

            /** S_HERO_RELIVE heroStar */
            heroStar?: (number|null);
        }

        /** Represents a S_HERO_RELIVE. */
        class S_HERO_RELIVE implements IS_HERO_RELIVE {

            /**
             * Constructs a new S_HERO_RELIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_RELIVE);

            /** S_HERO_RELIVE heroId. */
            public heroId: number;

            /** S_HERO_RELIVE heroLevel. */
            public heroLevel: number;

            /** S_HERO_RELIVE currExp. */
            public currExp: (number|Long);

            /** S_HERO_RELIVE heroTuPo. */
            public heroTuPo: number;

            /** S_HERO_RELIVE heroWake. */
            public heroWake: number;

            /** S_HERO_RELIVE itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_HERO_RELIVE heroFly. */
            public heroFly: number;

            /** S_HERO_RELIVE heroStar. */
            public heroStar: number;

            /**
             * Encodes the specified S_HERO_RELIVE message. Does not implicitly {@link com.message.S_HERO_RELIVE.verify|verify} messages.
             * @param message S_HERO_RELIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_RELIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_RELIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_RELIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_RELIVE;
        }

        /** Properties of a C_HERO_TUPO. */
        interface IC_HERO_TUPO {

            /** C_HERO_TUPO heroId */
            heroId?: (number|null);
        }

        /** Represents a C_HERO_TUPO. */
        class C_HERO_TUPO implements IC_HERO_TUPO {

            /**
             * Constructs a new C_HERO_TUPO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_TUPO);

            /** C_HERO_TUPO heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_HERO_TUPO message. Does not implicitly {@link com.message.C_HERO_TUPO.verify|verify} messages.
             * @param message C_HERO_TUPO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_TUPO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_TUPO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_TUPO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_TUPO;
        }

        /** Properties of a S_HERO_TUPO. */
        interface IS_HERO_TUPO {

            /** S_HERO_TUPO heroId */
            heroId?: (number|null);

            /** S_HERO_TUPO tuPoLevel */
            tuPoLevel?: (number|null);

            /** S_HERO_TUPO success */
            success?: (number|null);
        }

        /** Represents a S_HERO_TUPO. */
        class S_HERO_TUPO implements IS_HERO_TUPO {

            /**
             * Constructs a new S_HERO_TUPO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_TUPO);

            /** S_HERO_TUPO heroId. */
            public heroId: number;

            /** S_HERO_TUPO tuPoLevel. */
            public tuPoLevel: number;

            /** S_HERO_TUPO success. */
            public success: number;

            /**
             * Encodes the specified S_HERO_TUPO message. Does not implicitly {@link com.message.S_HERO_TUPO.verify|verify} messages.
             * @param message S_HERO_TUPO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_TUPO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_TUPO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_TUPO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_TUPO;
        }

        /** Properties of a C_HERO_FLY. */
        interface IC_HERO_FLY {

            /** C_HERO_FLY heroId */
            heroId?: (number|null);
        }

        /** Represents a C_HERO_FLY. */
        class C_HERO_FLY implements IC_HERO_FLY {

            /**
             * Constructs a new C_HERO_FLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_FLY);

            /** C_HERO_FLY heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_HERO_FLY message. Does not implicitly {@link com.message.C_HERO_FLY.verify|verify} messages.
             * @param message C_HERO_FLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_FLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_FLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_FLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_FLY;
        }

        /** Properties of a S_HERO_FLY. */
        interface IS_HERO_FLY {

            /** S_HERO_FLY heroId */
            heroId?: (number|null);

            /** S_HERO_FLY flyLevel */
            flyLevel?: (number|null);
        }

        /** Represents a S_HERO_FLY. */
        class S_HERO_FLY implements IS_HERO_FLY {

            /**
             * Constructs a new S_HERO_FLY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_FLY);

            /** S_HERO_FLY heroId. */
            public heroId: number;

            /** S_HERO_FLY flyLevel. */
            public flyLevel: number;

            /**
             * Encodes the specified S_HERO_FLY message. Does not implicitly {@link com.message.S_HERO_FLY.verify|verify} messages.
             * @param message S_HERO_FLY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_FLY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_FLY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_FLY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_FLY;
        }

        /** Properties of a C_GET_HERO_COLLECTOR_INFO. */
        interface IC_GET_HERO_COLLECTOR_INFO {
        }

        /** Represents a C_GET_HERO_COLLECTOR_INFO. */
        class C_GET_HERO_COLLECTOR_INFO implements IC_GET_HERO_COLLECTOR_INFO {

            /**
             * Constructs a new C_GET_HERO_COLLECTOR_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HERO_COLLECTOR_INFO);

            /**
             * Encodes the specified C_GET_HERO_COLLECTOR_INFO message. Does not implicitly {@link com.message.C_GET_HERO_COLLECTOR_INFO.verify|verify} messages.
             * @param message C_GET_HERO_COLLECTOR_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HERO_COLLECTOR_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HERO_COLLECTOR_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HERO_COLLECTOR_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HERO_COLLECTOR_INFO;
        }

        /** Properties of a S_GET_HERO_COLLECTOR_INFO. */
        interface IS_GET_HERO_COLLECTOR_INFO {

            /** S_GET_HERO_COLLECTOR_INFO infos */
            infos?: (com.message.IHERO_COLLECTOR_INFO[]|null);
        }

        /** Represents a S_GET_HERO_COLLECTOR_INFO. */
        class S_GET_HERO_COLLECTOR_INFO implements IS_GET_HERO_COLLECTOR_INFO {

            /**
             * Constructs a new S_GET_HERO_COLLECTOR_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HERO_COLLECTOR_INFO);

            /** S_GET_HERO_COLLECTOR_INFO infos. */
            public infos: com.message.IHERO_COLLECTOR_INFO[];

            /**
             * Encodes the specified S_GET_HERO_COLLECTOR_INFO message. Does not implicitly {@link com.message.S_GET_HERO_COLLECTOR_INFO.verify|verify} messages.
             * @param message S_GET_HERO_COLLECTOR_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HERO_COLLECTOR_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HERO_COLLECTOR_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HERO_COLLECTOR_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HERO_COLLECTOR_INFO;
        }

        /** Properties of a HERO_COLLECTOR_INFO. */
        interface IHERO_COLLECTOR_INFO {

            /** HERO_COLLECTOR_INFO id */
            id?: (number|null);

            /** HERO_COLLECTOR_INFO endTime */
            endTime?: (number|Long|null);

            /** HERO_COLLECTOR_INFO isCanGet */
            isCanGet?: (boolean|null);

            /** HERO_COLLECTOR_INFO isAlreadyGet */
            isAlreadyGet?: (boolean|null);
        }

        /** Represents a HERO_COLLECTOR_INFO. */
        class HERO_COLLECTOR_INFO implements IHERO_COLLECTOR_INFO {

            /**
             * Constructs a new HERO_COLLECTOR_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHERO_COLLECTOR_INFO);

            /** HERO_COLLECTOR_INFO id. */
            public id: number;

            /** HERO_COLLECTOR_INFO endTime. */
            public endTime: (number|Long);

            /** HERO_COLLECTOR_INFO isCanGet. */
            public isCanGet: boolean;

            /** HERO_COLLECTOR_INFO isAlreadyGet. */
            public isAlreadyGet: boolean;

            /**
             * Encodes the specified HERO_COLLECTOR_INFO message. Does not implicitly {@link com.message.HERO_COLLECTOR_INFO.verify|verify} messages.
             * @param message HERO_COLLECTOR_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHERO_COLLECTOR_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HERO_COLLECTOR_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HERO_COLLECTOR_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HERO_COLLECTOR_INFO;
        }

        /** Properties of a C_GET_HERO_COLLECTOR_REWARD. */
        interface IC_GET_HERO_COLLECTOR_REWARD {

            /** C_GET_HERO_COLLECTOR_REWARD id */
            id?: (number|null);
        }

        /** Represents a C_GET_HERO_COLLECTOR_REWARD. */
        class C_GET_HERO_COLLECTOR_REWARD implements IC_GET_HERO_COLLECTOR_REWARD {

            /**
             * Constructs a new C_GET_HERO_COLLECTOR_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HERO_COLLECTOR_REWARD);

            /** C_GET_HERO_COLLECTOR_REWARD id. */
            public id: number;

            /**
             * Encodes the specified C_GET_HERO_COLLECTOR_REWARD message. Does not implicitly {@link com.message.C_GET_HERO_COLLECTOR_REWARD.verify|verify} messages.
             * @param message C_GET_HERO_COLLECTOR_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HERO_COLLECTOR_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HERO_COLLECTOR_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HERO_COLLECTOR_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HERO_COLLECTOR_REWARD;
        }

        /** Properties of a S_GET_HERO_COLLECTOR_REWARD. */
        interface IS_GET_HERO_COLLECTOR_REWARD {

            /** S_GET_HERO_COLLECTOR_REWARD id */
            id?: (number|null);

            /** S_GET_HERO_COLLECTOR_REWARD reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_HERO_COLLECTOR_REWARD. */
        class S_GET_HERO_COLLECTOR_REWARD implements IS_GET_HERO_COLLECTOR_REWARD {

            /**
             * Constructs a new S_GET_HERO_COLLECTOR_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HERO_COLLECTOR_REWARD);

            /** S_GET_HERO_COLLECTOR_REWARD id. */
            public id: number;

            /** S_GET_HERO_COLLECTOR_REWARD reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_HERO_COLLECTOR_REWARD message. Does not implicitly {@link com.message.S_GET_HERO_COLLECTOR_REWARD.verify|verify} messages.
             * @param message S_GET_HERO_COLLECTOR_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HERO_COLLECTOR_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HERO_COLLECTOR_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HERO_COLLECTOR_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HERO_COLLECTOR_REWARD;
        }

        /** Properties of a C_GET_HERO_INSTANCE_INFO. */
        interface IC_GET_HERO_INSTANCE_INFO {
        }

        /** Represents a C_GET_HERO_INSTANCE_INFO. */
        class C_GET_HERO_INSTANCE_INFO implements IC_GET_HERO_INSTANCE_INFO {

            /**
             * Constructs a new C_GET_HERO_INSTANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HERO_INSTANCE_INFO);

            /**
             * Encodes the specified C_GET_HERO_INSTANCE_INFO message. Does not implicitly {@link com.message.C_GET_HERO_INSTANCE_INFO.verify|verify} messages.
             * @param message C_GET_HERO_INSTANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HERO_INSTANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HERO_INSTANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HERO_INSTANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HERO_INSTANCE_INFO;
        }

        /** Properties of a S_GET_HERO_INSTANCE_INFO. */
        interface IS_GET_HERO_INSTANCE_INFO {

            /** S_GET_HERO_INSTANCE_INFO playTimes */
            playTimes?: (number|null);

            /** S_GET_HERO_INSTANCE_INFO infos */
            infos?: (com.message.IHERO_CHAPTER_INFO[]|null);

            /** S_GET_HERO_INSTANCE_INFO buyTimes */
            buyTimes?: (number|null);

            /** S_GET_HERO_INSTANCE_INFO resetTime */
            resetTime?: (number|Long|null);
        }

        /** Represents a S_GET_HERO_INSTANCE_INFO. */
        class S_GET_HERO_INSTANCE_INFO implements IS_GET_HERO_INSTANCE_INFO {

            /**
             * Constructs a new S_GET_HERO_INSTANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HERO_INSTANCE_INFO);

            /** S_GET_HERO_INSTANCE_INFO playTimes. */
            public playTimes: number;

            /** S_GET_HERO_INSTANCE_INFO infos. */
            public infos: com.message.IHERO_CHAPTER_INFO[];

            /** S_GET_HERO_INSTANCE_INFO buyTimes. */
            public buyTimes: number;

            /** S_GET_HERO_INSTANCE_INFO resetTime. */
            public resetTime: (number|Long);

            /**
             * Encodes the specified S_GET_HERO_INSTANCE_INFO message. Does not implicitly {@link com.message.S_GET_HERO_INSTANCE_INFO.verify|verify} messages.
             * @param message S_GET_HERO_INSTANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HERO_INSTANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HERO_INSTANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HERO_INSTANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HERO_INSTANCE_INFO;
        }

        /** Properties of a HERO_CHAPTER_INFO. */
        interface IHERO_CHAPTER_INFO {

            /** HERO_CHAPTER_INFO chapterId */
            chapterId?: (number|null);

            /** HERO_CHAPTER_INFO stars */
            stars?: (string|null);

            /** HERO_CHAPTER_INFO simpleBoxs */
            simpleBoxs?: (string|null);

            /** HERO_CHAPTER_INFO harsBoxs */
            harsBoxs?: (string|null);

            /** HERO_CHAPTER_INFO specialBoxs */
            specialBoxs?: (string|null);

            /** HERO_CHAPTER_INFO instanceTimes */
            instanceTimes?: (string|null);
        }

        /** Represents a HERO_CHAPTER_INFO. */
        class HERO_CHAPTER_INFO implements IHERO_CHAPTER_INFO {

            /**
             * Constructs a new HERO_CHAPTER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHERO_CHAPTER_INFO);

            /** HERO_CHAPTER_INFO chapterId. */
            public chapterId: number;

            /** HERO_CHAPTER_INFO stars. */
            public stars: string;

            /** HERO_CHAPTER_INFO simpleBoxs. */
            public simpleBoxs: string;

            /** HERO_CHAPTER_INFO harsBoxs. */
            public harsBoxs: string;

            /** HERO_CHAPTER_INFO specialBoxs. */
            public specialBoxs: string;

            /** HERO_CHAPTER_INFO instanceTimes. */
            public instanceTimes: string;

            /**
             * Encodes the specified HERO_CHAPTER_INFO message. Does not implicitly {@link com.message.HERO_CHAPTER_INFO.verify|verify} messages.
             * @param message HERO_CHAPTER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHERO_CHAPTER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HERO_CHAPTER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HERO_CHAPTER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HERO_CHAPTER_INFO;
        }

        /** Properties of a C_GET_HERO_INSTANCE_REWARD. */
        interface IC_GET_HERO_INSTANCE_REWARD {

            /** C_GET_HERO_INSTANCE_REWARD boxId */
            boxId?: (number|null);
        }

        /** Represents a C_GET_HERO_INSTANCE_REWARD. */
        class C_GET_HERO_INSTANCE_REWARD implements IC_GET_HERO_INSTANCE_REWARD {

            /**
             * Constructs a new C_GET_HERO_INSTANCE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HERO_INSTANCE_REWARD);

            /** C_GET_HERO_INSTANCE_REWARD boxId. */
            public boxId: number;

            /**
             * Encodes the specified C_GET_HERO_INSTANCE_REWARD message. Does not implicitly {@link com.message.C_GET_HERO_INSTANCE_REWARD.verify|verify} messages.
             * @param message C_GET_HERO_INSTANCE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HERO_INSTANCE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HERO_INSTANCE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HERO_INSTANCE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HERO_INSTANCE_REWARD;
        }

        /** Properties of a S_GET_HERO_INSTANCE_REWARD. */
        interface IS_GET_HERO_INSTANCE_REWARD {

            /** S_GET_HERO_INSTANCE_REWARD boxId */
            boxId?: (number|null);

            /** S_GET_HERO_INSTANCE_REWARD reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_HERO_INSTANCE_REWARD. */
        class S_GET_HERO_INSTANCE_REWARD implements IS_GET_HERO_INSTANCE_REWARD {

            /**
             * Constructs a new S_GET_HERO_INSTANCE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HERO_INSTANCE_REWARD);

            /** S_GET_HERO_INSTANCE_REWARD boxId. */
            public boxId: number;

            /** S_GET_HERO_INSTANCE_REWARD reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_HERO_INSTANCE_REWARD message. Does not implicitly {@link com.message.S_GET_HERO_INSTANCE_REWARD.verify|verify} messages.
             * @param message S_GET_HERO_INSTANCE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HERO_INSTANCE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HERO_INSTANCE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HERO_INSTANCE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HERO_INSTANCE_REWARD;
        }

        /** Properties of a C_HERO_INSTANCE_SWEEP. */
        interface IC_HERO_INSTANCE_SWEEP {

            /** C_HERO_INSTANCE_SWEEP instanceId */
            instanceId?: (number|null);

            /** C_HERO_INSTANCE_SWEEP count */
            count?: (number|null);
        }

        /** Represents a C_HERO_INSTANCE_SWEEP. */
        class C_HERO_INSTANCE_SWEEP implements IC_HERO_INSTANCE_SWEEP {

            /**
             * Constructs a new C_HERO_INSTANCE_SWEEP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_INSTANCE_SWEEP);

            /** C_HERO_INSTANCE_SWEEP instanceId. */
            public instanceId: number;

            /** C_HERO_INSTANCE_SWEEP count. */
            public count: number;

            /**
             * Encodes the specified C_HERO_INSTANCE_SWEEP message. Does not implicitly {@link com.message.C_HERO_INSTANCE_SWEEP.verify|verify} messages.
             * @param message C_HERO_INSTANCE_SWEEP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_INSTANCE_SWEEP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_INSTANCE_SWEEP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_INSTANCE_SWEEP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_INSTANCE_SWEEP;
        }

        /** Properties of a S_HERO_INSTANCE_SWEEP. */
        interface IS_HERO_INSTANCE_SWEEP {

            /** S_HERO_INSTANCE_SWEEP instanceId */
            instanceId?: (number|null);

            /** S_HERO_INSTANCE_SWEEP reward */
            reward?: (com.message.IItemListMsg|null);

            /** S_HERO_INSTANCE_SWEEP playTimes */
            playTimes?: (number|null);

            /** S_HERO_INSTANCE_SWEEP instanceTimes */
            instanceTimes?: (string|null);

            /** S_HERO_INSTANCE_SWEEP resetTime */
            resetTime?: (number|Long|null);
        }

        /** Represents a S_HERO_INSTANCE_SWEEP. */
        class S_HERO_INSTANCE_SWEEP implements IS_HERO_INSTANCE_SWEEP {

            /**
             * Constructs a new S_HERO_INSTANCE_SWEEP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_INSTANCE_SWEEP);

            /** S_HERO_INSTANCE_SWEEP instanceId. */
            public instanceId: number;

            /** S_HERO_INSTANCE_SWEEP reward. */
            public reward?: (com.message.IItemListMsg|null);

            /** S_HERO_INSTANCE_SWEEP playTimes. */
            public playTimes: number;

            /** S_HERO_INSTANCE_SWEEP instanceTimes. */
            public instanceTimes: string;

            /** S_HERO_INSTANCE_SWEEP resetTime. */
            public resetTime: (number|Long);

            /**
             * Encodes the specified S_HERO_INSTANCE_SWEEP message. Does not implicitly {@link com.message.S_HERO_INSTANCE_SWEEP.verify|verify} messages.
             * @param message S_HERO_INSTANCE_SWEEP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_INSTANCE_SWEEP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_INSTANCE_SWEEP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_INSTANCE_SWEEP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_INSTANCE_SWEEP;
        }

        /** Properties of a C_HERO_INSTANCE_BUY. */
        interface IC_HERO_INSTANCE_BUY {

            /** C_HERO_INSTANCE_BUY buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a C_HERO_INSTANCE_BUY. */
        class C_HERO_INSTANCE_BUY implements IC_HERO_INSTANCE_BUY {

            /**
             * Constructs a new C_HERO_INSTANCE_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_INSTANCE_BUY);

            /** C_HERO_INSTANCE_BUY buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified C_HERO_INSTANCE_BUY message. Does not implicitly {@link com.message.C_HERO_INSTANCE_BUY.verify|verify} messages.
             * @param message C_HERO_INSTANCE_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_INSTANCE_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_INSTANCE_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_INSTANCE_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_INSTANCE_BUY;
        }

        /** Properties of a S_HERO_INSTANCE_BUY. */
        interface IS_HERO_INSTANCE_BUY {

            /** S_HERO_INSTANCE_BUY playTimes */
            playTimes?: (number|null);

            /** S_HERO_INSTANCE_BUY buyTimes */
            buyTimes?: (number|null);

            /** S_HERO_INSTANCE_BUY resetTime */
            resetTime?: (number|Long|null);
        }

        /** Represents a S_HERO_INSTANCE_BUY. */
        class S_HERO_INSTANCE_BUY implements IS_HERO_INSTANCE_BUY {

            /**
             * Constructs a new S_HERO_INSTANCE_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_INSTANCE_BUY);

            /** S_HERO_INSTANCE_BUY playTimes. */
            public playTimes: number;

            /** S_HERO_INSTANCE_BUY buyTimes. */
            public buyTimes: number;

            /** S_HERO_INSTANCE_BUY resetTime. */
            public resetTime: (number|Long);

            /**
             * Encodes the specified S_HERO_INSTANCE_BUY message. Does not implicitly {@link com.message.S_HERO_INSTANCE_BUY.verify|verify} messages.
             * @param message S_HERO_INSTANCE_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_INSTANCE_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_INSTANCE_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_INSTANCE_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_INSTANCE_BUY;
        }

        /** Properties of a C_HERO_PUZZLE_INFO. */
        interface IC_HERO_PUZZLE_INFO {

            /** C_HERO_PUZZLE_INFO heroId */
            heroId?: (number|null);
        }

        /** Represents a C_HERO_PUZZLE_INFO. */
        class C_HERO_PUZZLE_INFO implements IC_HERO_PUZZLE_INFO {

            /**
             * Constructs a new C_HERO_PUZZLE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_PUZZLE_INFO);

            /** C_HERO_PUZZLE_INFO heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_HERO_PUZZLE_INFO message. Does not implicitly {@link com.message.C_HERO_PUZZLE_INFO.verify|verify} messages.
             * @param message C_HERO_PUZZLE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_PUZZLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_PUZZLE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_PUZZLE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_PUZZLE_INFO;
        }

        /** Properties of a S_HERO_PUZZLE_INFO. */
        interface IS_HERO_PUZZLE_INFO {

            /** S_HERO_PUZZLE_INFO heroId */
            heroId?: (number|null);

            /** S_HERO_PUZZLE_INFO isActive */
            isActive?: (boolean|null);

            /** S_HERO_PUZZLE_INFO taskInfo */
            taskInfo?: (com.message.IHERO_PUZZLE_TASK_INFO[]|null);
        }

        /** Represents a S_HERO_PUZZLE_INFO. */
        class S_HERO_PUZZLE_INFO implements IS_HERO_PUZZLE_INFO {

            /**
             * Constructs a new S_HERO_PUZZLE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_PUZZLE_INFO);

            /** S_HERO_PUZZLE_INFO heroId. */
            public heroId: number;

            /** S_HERO_PUZZLE_INFO isActive. */
            public isActive: boolean;

            /** S_HERO_PUZZLE_INFO taskInfo. */
            public taskInfo: com.message.IHERO_PUZZLE_TASK_INFO[];

            /**
             * Encodes the specified S_HERO_PUZZLE_INFO message. Does not implicitly {@link com.message.S_HERO_PUZZLE_INFO.verify|verify} messages.
             * @param message S_HERO_PUZZLE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_PUZZLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_PUZZLE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_PUZZLE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_PUZZLE_INFO;
        }

        /** Properties of a C_HERO_PUZZLE_LIGHT. */
        interface IC_HERO_PUZZLE_LIGHT {

            /** C_HERO_PUZZLE_LIGHT heroId */
            heroId?: (number|null);

            /** C_HERO_PUZZLE_LIGHT splitId */
            splitId?: (number|null);
        }

        /** Represents a C_HERO_PUZZLE_LIGHT. */
        class C_HERO_PUZZLE_LIGHT implements IC_HERO_PUZZLE_LIGHT {

            /**
             * Constructs a new C_HERO_PUZZLE_LIGHT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_PUZZLE_LIGHT);

            /** C_HERO_PUZZLE_LIGHT heroId. */
            public heroId: number;

            /** C_HERO_PUZZLE_LIGHT splitId. */
            public splitId: number;

            /**
             * Encodes the specified C_HERO_PUZZLE_LIGHT message. Does not implicitly {@link com.message.C_HERO_PUZZLE_LIGHT.verify|verify} messages.
             * @param message C_HERO_PUZZLE_LIGHT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_PUZZLE_LIGHT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_PUZZLE_LIGHT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_PUZZLE_LIGHT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_PUZZLE_LIGHT;
        }

        /** Properties of a S_HERO_PUZZLE_LIGHT. */
        interface IS_HERO_PUZZLE_LIGHT {

            /** S_HERO_PUZZLE_LIGHT heroId */
            heroId?: (number|null);

            /** S_HERO_PUZZLE_LIGHT splitId */
            splitId?: (number|null);

            /** S_HERO_PUZZLE_LIGHT isActive */
            isActive?: (boolean|null);
        }

        /** Represents a S_HERO_PUZZLE_LIGHT. */
        class S_HERO_PUZZLE_LIGHT implements IS_HERO_PUZZLE_LIGHT {

            /**
             * Constructs a new S_HERO_PUZZLE_LIGHT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_PUZZLE_LIGHT);

            /** S_HERO_PUZZLE_LIGHT heroId. */
            public heroId: number;

            /** S_HERO_PUZZLE_LIGHT splitId. */
            public splitId: number;

            /** S_HERO_PUZZLE_LIGHT isActive. */
            public isActive: boolean;

            /**
             * Encodes the specified S_HERO_PUZZLE_LIGHT message. Does not implicitly {@link com.message.S_HERO_PUZZLE_LIGHT.verify|verify} messages.
             * @param message S_HERO_PUZZLE_LIGHT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_PUZZLE_LIGHT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_PUZZLE_LIGHT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_PUZZLE_LIGHT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_PUZZLE_LIGHT;
        }

        /** Properties of a S_HERO_PUZZLE_TASK. */
        interface IS_HERO_PUZZLE_TASK {

            /** S_HERO_PUZZLE_TASK heroId */
            heroId?: (number|null);

            /** S_HERO_PUZZLE_TASK taskInfo */
            taskInfo?: (com.message.IHERO_PUZZLE_TASK_INFO[]|null);
        }

        /** Represents a S_HERO_PUZZLE_TASK. */
        class S_HERO_PUZZLE_TASK implements IS_HERO_PUZZLE_TASK {

            /**
             * Constructs a new S_HERO_PUZZLE_TASK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_PUZZLE_TASK);

            /** S_HERO_PUZZLE_TASK heroId. */
            public heroId: number;

            /** S_HERO_PUZZLE_TASK taskInfo. */
            public taskInfo: com.message.IHERO_PUZZLE_TASK_INFO[];

            /**
             * Encodes the specified S_HERO_PUZZLE_TASK message. Does not implicitly {@link com.message.S_HERO_PUZZLE_TASK.verify|verify} messages.
             * @param message S_HERO_PUZZLE_TASK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_PUZZLE_TASK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_PUZZLE_TASK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_PUZZLE_TASK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_PUZZLE_TASK;
        }

        /** Properties of a HERO_PUZZLE_TASK_INFO. */
        interface IHERO_PUZZLE_TASK_INFO {

            /** HERO_PUZZLE_TASK_INFO splitId */
            splitId?: (number|null);

            /** HERO_PUZZLE_TASK_INFO splitState */
            splitState?: (number|null);

            /** HERO_PUZZLE_TASK_INFO processValue */
            processValue?: (number|null);
        }

        /** Represents a HERO_PUZZLE_TASK_INFO. */
        class HERO_PUZZLE_TASK_INFO implements IHERO_PUZZLE_TASK_INFO {

            /**
             * Constructs a new HERO_PUZZLE_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHERO_PUZZLE_TASK_INFO);

            /** HERO_PUZZLE_TASK_INFO splitId. */
            public splitId: number;

            /** HERO_PUZZLE_TASK_INFO splitState. */
            public splitState: number;

            /** HERO_PUZZLE_TASK_INFO processValue. */
            public processValue: number;

            /**
             * Encodes the specified HERO_PUZZLE_TASK_INFO message. Does not implicitly {@link com.message.HERO_PUZZLE_TASK_INFO.verify|verify} messages.
             * @param message HERO_PUZZLE_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHERO_PUZZLE_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HERO_PUZZLE_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HERO_PUZZLE_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HERO_PUZZLE_TASK_INFO;
        }

        /** Properties of a C_GET_HERO_SHOP_INFO. */
        interface IC_GET_HERO_SHOP_INFO {
        }

        /** Represents a C_GET_HERO_SHOP_INFO. */
        class C_GET_HERO_SHOP_INFO implements IC_GET_HERO_SHOP_INFO {

            /**
             * Constructs a new C_GET_HERO_SHOP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HERO_SHOP_INFO);

            /**
             * Encodes the specified C_GET_HERO_SHOP_INFO message. Does not implicitly {@link com.message.C_GET_HERO_SHOP_INFO.verify|verify} messages.
             * @param message C_GET_HERO_SHOP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HERO_SHOP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HERO_SHOP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HERO_SHOP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HERO_SHOP_INFO;
        }

        /** Properties of a S_GET_HERO_SHOP_INFO. */
        interface IS_GET_HERO_SHOP_INFO {

            /** S_GET_HERO_SHOP_INFO rmbNum */
            rmbNum?: (number|null);

            /** S_GET_HERO_SHOP_INFO hadRewards */
            hadRewards?: (string|null);
        }

        /** Represents a S_GET_HERO_SHOP_INFO. */
        class S_GET_HERO_SHOP_INFO implements IS_GET_HERO_SHOP_INFO {

            /**
             * Constructs a new S_GET_HERO_SHOP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HERO_SHOP_INFO);

            /** S_GET_HERO_SHOP_INFO rmbNum. */
            public rmbNum: number;

            /** S_GET_HERO_SHOP_INFO hadRewards. */
            public hadRewards: string;

            /**
             * Encodes the specified S_GET_HERO_SHOP_INFO message. Does not implicitly {@link com.message.S_GET_HERO_SHOP_INFO.verify|verify} messages.
             * @param message S_GET_HERO_SHOP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HERO_SHOP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HERO_SHOP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HERO_SHOP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HERO_SHOP_INFO;
        }

        /** Properties of a C_HERO_SHOP_BUY_REWARD. */
        interface IC_HERO_SHOP_BUY_REWARD {

            /** C_HERO_SHOP_BUY_REWARD buyId */
            buyId?: (number|null);
        }

        /** Represents a C_HERO_SHOP_BUY_REWARD. */
        class C_HERO_SHOP_BUY_REWARD implements IC_HERO_SHOP_BUY_REWARD {

            /**
             * Constructs a new C_HERO_SHOP_BUY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HERO_SHOP_BUY_REWARD);

            /** C_HERO_SHOP_BUY_REWARD buyId. */
            public buyId: number;

            /**
             * Encodes the specified C_HERO_SHOP_BUY_REWARD message. Does not implicitly {@link com.message.C_HERO_SHOP_BUY_REWARD.verify|verify} messages.
             * @param message C_HERO_SHOP_BUY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HERO_SHOP_BUY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HERO_SHOP_BUY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HERO_SHOP_BUY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HERO_SHOP_BUY_REWARD;
        }

        /** Properties of a S_HERO_SHOP_BUY_REWARD. */
        interface IS_HERO_SHOP_BUY_REWARD {

            /** S_HERO_SHOP_BUY_REWARD buyId */
            buyId?: (number|null);

            /** S_HERO_SHOP_BUY_REWARD hadRewards */
            hadRewards?: (string|null);

            /** S_HERO_SHOP_BUY_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_HERO_SHOP_BUY_REWARD. */
        class S_HERO_SHOP_BUY_REWARD implements IS_HERO_SHOP_BUY_REWARD {

            /**
             * Constructs a new S_HERO_SHOP_BUY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HERO_SHOP_BUY_REWARD);

            /** S_HERO_SHOP_BUY_REWARD buyId. */
            public buyId: number;

            /** S_HERO_SHOP_BUY_REWARD hadRewards. */
            public hadRewards: string;

            /** S_HERO_SHOP_BUY_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_HERO_SHOP_BUY_REWARD message. Does not implicitly {@link com.message.S_HERO_SHOP_BUY_REWARD.verify|verify} messages.
             * @param message S_HERO_SHOP_BUY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HERO_SHOP_BUY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HERO_SHOP_BUY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HERO_SHOP_BUY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HERO_SHOP_BUY_REWARD;
        }

        /** Properties of a C_GET_HOME_BOSS_INFO. */
        interface IC_GET_HOME_BOSS_INFO {

            /** C_GET_HOME_BOSS_INFO vipLevelType */
            vipLevelType?: (number|null);
        }

        /** Represents a C_GET_HOME_BOSS_INFO. */
        class C_GET_HOME_BOSS_INFO implements IC_GET_HOME_BOSS_INFO {

            /**
             * Constructs a new C_GET_HOME_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HOME_BOSS_INFO);

            /** C_GET_HOME_BOSS_INFO vipLevelType. */
            public vipLevelType: number;

            /**
             * Encodes the specified C_GET_HOME_BOSS_INFO message. Does not implicitly {@link com.message.C_GET_HOME_BOSS_INFO.verify|verify} messages.
             * @param message C_GET_HOME_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HOME_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HOME_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HOME_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HOME_BOSS_INFO;
        }

        /** Properties of a S_GET_HOME_BOSS_INFO. */
        interface IS_GET_HOME_BOSS_INFO {

            /** S_GET_HOME_BOSS_INFO vipLevelType */
            vipLevelType?: (number|null);

            /** S_GET_HOME_BOSS_INFO bossMsg */
            bossMsg?: (com.message.IHomeBossMsg[]|null);

            /** S_GET_HOME_BOSS_INFO playerBossMsg */
            playerBossMsg?: (com.message.IPlayerHomeBossMsg|null);

            /** S_GET_HOME_BOSS_INFO hadRewardNum */
            hadRewardNum?: (number|null);
        }

        /** Represents a S_GET_HOME_BOSS_INFO. */
        class S_GET_HOME_BOSS_INFO implements IS_GET_HOME_BOSS_INFO {

            /**
             * Constructs a new S_GET_HOME_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HOME_BOSS_INFO);

            /** S_GET_HOME_BOSS_INFO vipLevelType. */
            public vipLevelType: number;

            /** S_GET_HOME_BOSS_INFO bossMsg. */
            public bossMsg: com.message.IHomeBossMsg[];

            /** S_GET_HOME_BOSS_INFO playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerHomeBossMsg|null);

            /** S_GET_HOME_BOSS_INFO hadRewardNum. */
            public hadRewardNum: number;

            /**
             * Encodes the specified S_GET_HOME_BOSS_INFO message. Does not implicitly {@link com.message.S_GET_HOME_BOSS_INFO.verify|verify} messages.
             * @param message S_GET_HOME_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HOME_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HOME_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HOME_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HOME_BOSS_INFO;
        }

        /** Properties of a PlayerHomeBossMsg. */
        interface IPlayerHomeBossMsg {

            /** PlayerHomeBossMsg playerId */
            playerId?: (number|Long|null);

            /** PlayerHomeBossMsg instanceId */
            instanceId?: (number[]|null);

            /** PlayerHomeBossMsg challengeBossAll */
            challengeBossAll?: (number|null);
        }

        /** Represents a PlayerHomeBossMsg. */
        class PlayerHomeBossMsg implements IPlayerHomeBossMsg {

            /**
             * Constructs a new PlayerHomeBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerHomeBossMsg);

            /** PlayerHomeBossMsg playerId. */
            public playerId: (number|Long);

            /** PlayerHomeBossMsg instanceId. */
            public instanceId: number[];

            /** PlayerHomeBossMsg challengeBossAll. */
            public challengeBossAll: number;

            /**
             * Encodes the specified PlayerHomeBossMsg message. Does not implicitly {@link com.message.PlayerHomeBossMsg.verify|verify} messages.
             * @param message PlayerHomeBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerHomeBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerHomeBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerHomeBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerHomeBossMsg;
        }

        /** Properties of a HomeBossMsg. */
        interface IHomeBossMsg {

            /** HomeBossMsg bossId */
            bossId?: (number|null);

            /** HomeBossMsg bossHp */
            bossHp?: (number|Long|null);

            /** HomeBossMsg bossMaxHp */
            bossMaxHp?: (number|Long|null);

            /** HomeBossMsg runTime */
            runTime?: (number|Long|null);

            /** HomeBossMsg nextStartTime */
            nextStartTime?: (number|Long|null);

            /** HomeBossMsg notice */
            notice?: (number|null);

            /** HomeBossMsg damageRankMg */
            damageRankMg?: (com.message.IDamageRankMsg[]|null);
        }

        /** Represents a HomeBossMsg. */
        class HomeBossMsg implements IHomeBossMsg {

            /**
             * Constructs a new HomeBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHomeBossMsg);

            /** HomeBossMsg bossId. */
            public bossId: number;

            /** HomeBossMsg bossHp. */
            public bossHp: (number|Long);

            /** HomeBossMsg bossMaxHp. */
            public bossMaxHp: (number|Long);

            /** HomeBossMsg runTime. */
            public runTime: (number|Long);

            /** HomeBossMsg nextStartTime. */
            public nextStartTime: (number|Long);

            /** HomeBossMsg notice. */
            public notice: number;

            /** HomeBossMsg damageRankMg. */
            public damageRankMg: com.message.IDamageRankMsg[];

            /**
             * Encodes the specified HomeBossMsg message. Does not implicitly {@link com.message.HomeBossMsg.verify|verify} messages.
             * @param message HomeBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHomeBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HomeBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HomeBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HomeBossMsg;
        }

        /** Properties of a C_HOME_BOSS_NOTICE. */
        interface IC_HOME_BOSS_NOTICE {

            /** C_HOME_BOSS_NOTICE vipLevelType */
            vipLevelType?: (number|null);

            /** C_HOME_BOSS_NOTICE bossId */
            bossId?: (number|null);

            /** C_HOME_BOSS_NOTICE notice */
            notice?: (number|null);
        }

        /** Represents a C_HOME_BOSS_NOTICE. */
        class C_HOME_BOSS_NOTICE implements IC_HOME_BOSS_NOTICE {

            /**
             * Constructs a new C_HOME_BOSS_NOTICE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HOME_BOSS_NOTICE);

            /** C_HOME_BOSS_NOTICE vipLevelType. */
            public vipLevelType: number;

            /** C_HOME_BOSS_NOTICE bossId. */
            public bossId: number;

            /** C_HOME_BOSS_NOTICE notice. */
            public notice: number;

            /**
             * Encodes the specified C_HOME_BOSS_NOTICE message. Does not implicitly {@link com.message.C_HOME_BOSS_NOTICE.verify|verify} messages.
             * @param message C_HOME_BOSS_NOTICE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HOME_BOSS_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HOME_BOSS_NOTICE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HOME_BOSS_NOTICE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HOME_BOSS_NOTICE;
        }

        /** Properties of a S_HOME_BOSS_NOTICE. */
        interface IS_HOME_BOSS_NOTICE {

            /** S_HOME_BOSS_NOTICE vipLevelType */
            vipLevelType?: (number|null);

            /** S_HOME_BOSS_NOTICE bossId */
            bossId?: (number|null);

            /** S_HOME_BOSS_NOTICE notice */
            notice?: (number|null);
        }

        /** Represents a S_HOME_BOSS_NOTICE. */
        class S_HOME_BOSS_NOTICE implements IS_HOME_BOSS_NOTICE {

            /**
             * Constructs a new S_HOME_BOSS_NOTICE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HOME_BOSS_NOTICE);

            /** S_HOME_BOSS_NOTICE vipLevelType. */
            public vipLevelType: number;

            /** S_HOME_BOSS_NOTICE bossId. */
            public bossId: number;

            /** S_HOME_BOSS_NOTICE notice. */
            public notice: number;

            /**
             * Encodes the specified S_HOME_BOSS_NOTICE message. Does not implicitly {@link com.message.S_HOME_BOSS_NOTICE.verify|verify} messages.
             * @param message S_HOME_BOSS_NOTICE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HOME_BOSS_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HOME_BOSS_NOTICE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HOME_BOSS_NOTICE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HOME_BOSS_NOTICE;
        }

        /** Properties of a C_HOME_BOSS_CHALLENGE. */
        interface IC_HOME_BOSS_CHALLENGE {

            /** C_HOME_BOSS_CHALLENGE instanceId */
            instanceId?: (number|null);

            /** C_HOME_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a C_HOME_BOSS_CHALLENGE. */
        class C_HOME_BOSS_CHALLENGE implements IC_HOME_BOSS_CHALLENGE {

            /**
             * Constructs a new C_HOME_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HOME_BOSS_CHALLENGE);

            /** C_HOME_BOSS_CHALLENGE instanceId. */
            public instanceId: number;

            /** C_HOME_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified C_HOME_BOSS_CHALLENGE message. Does not implicitly {@link com.message.C_HOME_BOSS_CHALLENGE.verify|verify} messages.
             * @param message C_HOME_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HOME_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HOME_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HOME_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HOME_BOSS_CHALLENGE;
        }

        /** Properties of a S_HOME_BOSS_CHALLENGE. */
        interface IS_HOME_BOSS_CHALLENGE {

            /** S_HOME_BOSS_CHALLENGE instanceId */
            instanceId?: (number|null);

            /** S_HOME_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a S_HOME_BOSS_CHALLENGE. */
        class S_HOME_BOSS_CHALLENGE implements IS_HOME_BOSS_CHALLENGE {

            /**
             * Constructs a new S_HOME_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HOME_BOSS_CHALLENGE);

            /** S_HOME_BOSS_CHALLENGE instanceId. */
            public instanceId: number;

            /** S_HOME_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified S_HOME_BOSS_CHALLENGE message. Does not implicitly {@link com.message.S_HOME_BOSS_CHALLENGE.verify|verify} messages.
             * @param message S_HOME_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HOME_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HOME_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HOME_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HOME_BOSS_CHALLENGE;
        }

        /** Properties of a C_HOME_BOSS_CHALLENGE_ALL. */
        interface IC_HOME_BOSS_CHALLENGE_ALL {

            /** C_HOME_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a C_HOME_BOSS_CHALLENGE_ALL. */
        class C_HOME_BOSS_CHALLENGE_ALL implements IC_HOME_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new C_HOME_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_HOME_BOSS_CHALLENGE_ALL);

            /** C_HOME_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified C_HOME_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.C_HOME_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message C_HOME_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_HOME_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_HOME_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_HOME_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_HOME_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a S_HOME_BOSS_CHALLENGE_ALL. */
        interface IS_HOME_BOSS_CHALLENGE_ALL {

            /** S_HOME_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a S_HOME_BOSS_CHALLENGE_ALL. */
        class S_HOME_BOSS_CHALLENGE_ALL implements IS_HOME_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new S_HOME_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_HOME_BOSS_CHALLENGE_ALL);

            /** S_HOME_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified S_HOME_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.S_HOME_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message S_HOME_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_HOME_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_HOME_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_HOME_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_HOME_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a C_GET_BOSS_INFO. */
        interface IC_GET_BOSS_INFO {
        }

        /** Represents a C_GET_BOSS_INFO. */
        class C_GET_BOSS_INFO implements IC_GET_BOSS_INFO {

            /**
             * Constructs a new C_GET_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_BOSS_INFO);

            /**
             * Encodes the specified C_GET_BOSS_INFO message. Does not implicitly {@link com.message.C_GET_BOSS_INFO.verify|verify} messages.
             * @param message C_GET_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_BOSS_INFO;
        }

        /** Properties of a S_GET_BOSS_INFO. */
        interface IS_GET_BOSS_INFO {

            /** S_GET_BOSS_INFO bossMsg */
            bossMsg?: (com.message.IWorldBossMsg[]|null);

            /** S_GET_BOSS_INFO playerBossMsg */
            playerBossMsg?: (com.message.IPlayerBossMsg|null);

            /** S_GET_BOSS_INFO buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_GET_BOSS_INFO. */
        class S_GET_BOSS_INFO implements IS_GET_BOSS_INFO {

            /**
             * Constructs a new S_GET_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_BOSS_INFO);

            /** S_GET_BOSS_INFO bossMsg. */
            public bossMsg: com.message.IWorldBossMsg[];

            /** S_GET_BOSS_INFO playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerBossMsg|null);

            /** S_GET_BOSS_INFO buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_GET_BOSS_INFO message. Does not implicitly {@link com.message.S_GET_BOSS_INFO.verify|verify} messages.
             * @param message S_GET_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_BOSS_INFO;
        }

        /** Properties of a PlayerBossMsg. */
        interface IPlayerBossMsg {

            /** PlayerBossMsg playerId */
            playerId?: (number|Long|null);

            /** PlayerBossMsg playCount */
            playCount?: (number|null);

            /** PlayerBossMsg addCountTime */
            addCountTime?: (number|Long|null);

            /** PlayerBossMsg instanceId */
            instanceId?: (number[]|null);

            /** PlayerBossMsg challengeBossAll */
            challengeBossAll?: (number|null);
        }

        /** Represents a PlayerBossMsg. */
        class PlayerBossMsg implements IPlayerBossMsg {

            /**
             * Constructs a new PlayerBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerBossMsg);

            /** PlayerBossMsg playerId. */
            public playerId: (number|Long);

            /** PlayerBossMsg playCount. */
            public playCount: number;

            /** PlayerBossMsg addCountTime. */
            public addCountTime: (number|Long);

            /** PlayerBossMsg instanceId. */
            public instanceId: number[];

            /** PlayerBossMsg challengeBossAll. */
            public challengeBossAll: number;

            /**
             * Encodes the specified PlayerBossMsg message. Does not implicitly {@link com.message.PlayerBossMsg.verify|verify} messages.
             * @param message PlayerBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerBossMsg;
        }

        /** Properties of a WorldBossMsg. */
        interface IWorldBossMsg {

            /** WorldBossMsg bossId */
            bossId?: (number|null);

            /** WorldBossMsg bossHp */
            bossHp?: (number|Long|null);

            /** WorldBossMsg bossMaxHp */
            bossMaxHp?: (number|Long|null);

            /** WorldBossMsg runTime */
            runTime?: (number|Long|null);

            /** WorldBossMsg nextStartTime */
            nextStartTime?: (number|Long|null);

            /** WorldBossMsg notice */
            notice?: (number|null);

            /** WorldBossMsg damageRankMg */
            damageRankMg?: (com.message.IDamageRankMsg[]|null);
        }

        /** Represents a WorldBossMsg. */
        class WorldBossMsg implements IWorldBossMsg {

            /**
             * Constructs a new WorldBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IWorldBossMsg);

            /** WorldBossMsg bossId. */
            public bossId: number;

            /** WorldBossMsg bossHp. */
            public bossHp: (number|Long);

            /** WorldBossMsg bossMaxHp. */
            public bossMaxHp: (number|Long);

            /** WorldBossMsg runTime. */
            public runTime: (number|Long);

            /** WorldBossMsg nextStartTime. */
            public nextStartTime: (number|Long);

            /** WorldBossMsg notice. */
            public notice: number;

            /** WorldBossMsg damageRankMg. */
            public damageRankMg: com.message.IDamageRankMsg[];

            /**
             * Encodes the specified WorldBossMsg message. Does not implicitly {@link com.message.WorldBossMsg.verify|verify} messages.
             * @param message WorldBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IWorldBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WorldBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WorldBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.WorldBossMsg;
        }

        /** Properties of a DamageRankMsg. */
        interface IDamageRankMsg {

            /** DamageRankMsg rank */
            rank?: (number|null);

            /** DamageRankMsg playerId */
            playerId?: (number|Long|null);

            /** DamageRankMsg playerName */
            playerName?: (string|null);

            /** DamageRankMsg damage */
            damage?: (number|Long|null);
        }

        /** Represents a DamageRankMsg. */
        class DamageRankMsg implements IDamageRankMsg {

            /**
             * Constructs a new DamageRankMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IDamageRankMsg);

            /** DamageRankMsg rank. */
            public rank: number;

            /** DamageRankMsg playerId. */
            public playerId: (number|Long);

            /** DamageRankMsg playerName. */
            public playerName: string;

            /** DamageRankMsg damage. */
            public damage: (number|Long);

            /**
             * Encodes the specified DamageRankMsg message. Does not implicitly {@link com.message.DamageRankMsg.verify|verify} messages.
             * @param message DamageRankMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IDamageRankMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DamageRankMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DamageRankMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.DamageRankMsg;
        }

        /** Properties of a C_WORLD_BOSS_NOTICE. */
        interface IC_WORLD_BOSS_NOTICE {

            /** C_WORLD_BOSS_NOTICE bossId */
            bossId?: (number|null);

            /** C_WORLD_BOSS_NOTICE notice */
            notice?: (number|null);
        }

        /** Represents a C_WORLD_BOSS_NOTICE. */
        class C_WORLD_BOSS_NOTICE implements IC_WORLD_BOSS_NOTICE {

            /**
             * Constructs a new C_WORLD_BOSS_NOTICE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_WORLD_BOSS_NOTICE);

            /** C_WORLD_BOSS_NOTICE bossId. */
            public bossId: number;

            /** C_WORLD_BOSS_NOTICE notice. */
            public notice: number;

            /**
             * Encodes the specified C_WORLD_BOSS_NOTICE message. Does not implicitly {@link com.message.C_WORLD_BOSS_NOTICE.verify|verify} messages.
             * @param message C_WORLD_BOSS_NOTICE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_WORLD_BOSS_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_WORLD_BOSS_NOTICE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_WORLD_BOSS_NOTICE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_WORLD_BOSS_NOTICE;
        }

        /** Properties of a S_WORLD_BOSS_NOTICE. */
        interface IS_WORLD_BOSS_NOTICE {

            /** S_WORLD_BOSS_NOTICE bossId */
            bossId?: (number|null);

            /** S_WORLD_BOSS_NOTICE notice */
            notice?: (number|null);
        }

        /** Represents a S_WORLD_BOSS_NOTICE. */
        class S_WORLD_BOSS_NOTICE implements IS_WORLD_BOSS_NOTICE {

            /**
             * Constructs a new S_WORLD_BOSS_NOTICE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_WORLD_BOSS_NOTICE);

            /** S_WORLD_BOSS_NOTICE bossId. */
            public bossId: number;

            /** S_WORLD_BOSS_NOTICE notice. */
            public notice: number;

            /**
             * Encodes the specified S_WORLD_BOSS_NOTICE message. Does not implicitly {@link com.message.S_WORLD_BOSS_NOTICE.verify|verify} messages.
             * @param message S_WORLD_BOSS_NOTICE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_WORLD_BOSS_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_WORLD_BOSS_NOTICE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_WORLD_BOSS_NOTICE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_WORLD_BOSS_NOTICE;
        }

        /** Properties of a C_WORLD_BOSS_CHALLENGE. */
        interface IC_WORLD_BOSS_CHALLENGE {

            /** C_WORLD_BOSS_CHALLENGE instanceId */
            instanceId?: (number|null);

            /** C_WORLD_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a C_WORLD_BOSS_CHALLENGE. */
        class C_WORLD_BOSS_CHALLENGE implements IC_WORLD_BOSS_CHALLENGE {

            /**
             * Constructs a new C_WORLD_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_WORLD_BOSS_CHALLENGE);

            /** C_WORLD_BOSS_CHALLENGE instanceId. */
            public instanceId: number;

            /** C_WORLD_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified C_WORLD_BOSS_CHALLENGE message. Does not implicitly {@link com.message.C_WORLD_BOSS_CHALLENGE.verify|verify} messages.
             * @param message C_WORLD_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_WORLD_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_WORLD_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_WORLD_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_WORLD_BOSS_CHALLENGE;
        }

        /** Properties of a S_WORLD_BOSS_CHALLENGE. */
        interface IS_WORLD_BOSS_CHALLENGE {

            /** S_WORLD_BOSS_CHALLENGE instanceId */
            instanceId?: (number|null);

            /** S_WORLD_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a S_WORLD_BOSS_CHALLENGE. */
        class S_WORLD_BOSS_CHALLENGE implements IS_WORLD_BOSS_CHALLENGE {

            /**
             * Constructs a new S_WORLD_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_WORLD_BOSS_CHALLENGE);

            /** S_WORLD_BOSS_CHALLENGE instanceId. */
            public instanceId: number;

            /** S_WORLD_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified S_WORLD_BOSS_CHALLENGE message. Does not implicitly {@link com.message.S_WORLD_BOSS_CHALLENGE.verify|verify} messages.
             * @param message S_WORLD_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_WORLD_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_WORLD_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_WORLD_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_WORLD_BOSS_CHALLENGE;
        }

        /** Properties of a C_BOSS_CHALLENGE_ALL. */
        interface IC_BOSS_CHALLENGE_ALL {

            /** C_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a C_BOSS_CHALLENGE_ALL. */
        class C_BOSS_CHALLENGE_ALL implements IC_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new C_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BOSS_CHALLENGE_ALL);

            /** C_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified C_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.C_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message C_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a S_BOSS_CHALLENGE_ALL. */
        interface IS_BOSS_CHALLENGE_ALL {

            /** S_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a S_BOSS_CHALLENGE_ALL. */
        class S_BOSS_CHALLENGE_ALL implements IS_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new S_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BOSS_CHALLENGE_ALL);

            /** S_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified S_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.S_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message S_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a S_SYNC_WORLD_BOSS_REFRESH. */
        interface IS_SYNC_WORLD_BOSS_REFRESH {

            /** S_SYNC_WORLD_BOSS_REFRESH type */
            type?: (number|null);

            /** S_SYNC_WORLD_BOSS_REFRESH instanceId */
            instanceId?: (number|null);
        }

        /** Represents a S_SYNC_WORLD_BOSS_REFRESH. */
        class S_SYNC_WORLD_BOSS_REFRESH implements IS_SYNC_WORLD_BOSS_REFRESH {

            /**
             * Constructs a new S_SYNC_WORLD_BOSS_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_WORLD_BOSS_REFRESH);

            /** S_SYNC_WORLD_BOSS_REFRESH type. */
            public type: number;

            /** S_SYNC_WORLD_BOSS_REFRESH instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified S_SYNC_WORLD_BOSS_REFRESH message. Does not implicitly {@link com.message.S_SYNC_WORLD_BOSS_REFRESH.verify|verify} messages.
             * @param message S_SYNC_WORLD_BOSS_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_WORLD_BOSS_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_WORLD_BOSS_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_WORLD_BOSS_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_WORLD_BOSS_REFRESH;
        }

        /** Properties of a C_WORLD_BOSS_BUY. */
        interface IC_WORLD_BOSS_BUY {

            /** C_WORLD_BOSS_BUY shopId */
            shopId?: (number|null);
        }

        /** Represents a C_WORLD_BOSS_BUY. */
        class C_WORLD_BOSS_BUY implements IC_WORLD_BOSS_BUY {

            /**
             * Constructs a new C_WORLD_BOSS_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_WORLD_BOSS_BUY);

            /** C_WORLD_BOSS_BUY shopId. */
            public shopId: number;

            /**
             * Encodes the specified C_WORLD_BOSS_BUY message. Does not implicitly {@link com.message.C_WORLD_BOSS_BUY.verify|verify} messages.
             * @param message C_WORLD_BOSS_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_WORLD_BOSS_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_WORLD_BOSS_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_WORLD_BOSS_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_WORLD_BOSS_BUY;
        }

        /** Properties of a S_WORLD_BOSS_BUY. */
        interface IS_WORLD_BOSS_BUY {

            /** S_WORLD_BOSS_BUY buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_WORLD_BOSS_BUY. */
        class S_WORLD_BOSS_BUY implements IS_WORLD_BOSS_BUY {

            /**
             * Constructs a new S_WORLD_BOSS_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_WORLD_BOSS_BUY);

            /** S_WORLD_BOSS_BUY buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_WORLD_BOSS_BUY message. Does not implicitly {@link com.message.S_WORLD_BOSS_BUY.verify|verify} messages.
             * @param message S_WORLD_BOSS_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_WORLD_BOSS_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_WORLD_BOSS_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_WORLD_BOSS_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_WORLD_BOSS_BUY;
        }

        /** Properties of a C_GET_HUOYUEDU_INFO. */
        interface IC_GET_HUOYUEDU_INFO {
        }

        /** Represents a C_GET_HUOYUEDU_INFO. */
        class C_GET_HUOYUEDU_INFO implements IC_GET_HUOYUEDU_INFO {

            /**
             * Constructs a new C_GET_HUOYUEDU_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HUOYUEDU_INFO);

            /**
             * Encodes the specified C_GET_HUOYUEDU_INFO message. Does not implicitly {@link com.message.C_GET_HUOYUEDU_INFO.verify|verify} messages.
             * @param message C_GET_HUOYUEDU_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HUOYUEDU_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HUOYUEDU_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HUOYUEDU_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HUOYUEDU_INFO;
        }

        /** Properties of a S_GET_HUOYUEDU_INFO. */
        interface IS_GET_HUOYUEDU_INFO {

            /** S_GET_HUOYUEDU_INFO totalValue */
            totalValue?: (number|null);

            /** S_GET_HUOYUEDU_INFO huoYueDuMsg */
            huoYueDuMsg?: (com.message.IHuoYueDuMsg[]|null);

            /** S_GET_HUOYUEDU_INFO rewardId */
            rewardId?: (number[]|null);

            /** S_GET_HUOYUEDU_INFO hadTypes */
            hadTypes?: (string|null);

            /** S_GET_HUOYUEDU_INFO weekValue */
            weekValue?: (number|null);

            /** S_GET_HUOYUEDU_INFO weekRewardId */
            weekRewardId?: (number[]|null);
        }

        /** Represents a S_GET_HUOYUEDU_INFO. */
        class S_GET_HUOYUEDU_INFO implements IS_GET_HUOYUEDU_INFO {

            /**
             * Constructs a new S_GET_HUOYUEDU_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HUOYUEDU_INFO);

            /** S_GET_HUOYUEDU_INFO totalValue. */
            public totalValue: number;

            /** S_GET_HUOYUEDU_INFO huoYueDuMsg. */
            public huoYueDuMsg: com.message.IHuoYueDuMsg[];

            /** S_GET_HUOYUEDU_INFO rewardId. */
            public rewardId: number[];

            /** S_GET_HUOYUEDU_INFO hadTypes. */
            public hadTypes: string;

            /** S_GET_HUOYUEDU_INFO weekValue. */
            public weekValue: number;

            /** S_GET_HUOYUEDU_INFO weekRewardId. */
            public weekRewardId: number[];

            /**
             * Encodes the specified S_GET_HUOYUEDU_INFO message. Does not implicitly {@link com.message.S_GET_HUOYUEDU_INFO.verify|verify} messages.
             * @param message S_GET_HUOYUEDU_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HUOYUEDU_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HUOYUEDU_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HUOYUEDU_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HUOYUEDU_INFO;
        }

        /** Properties of a HuoYueDuMsg. */
        interface IHuoYueDuMsg {

            /** HuoYueDuMsg type */
            type?: (number|null);

            /** HuoYueDuMsg count */
            count?: (number|null);
        }

        /** Represents a HuoYueDuMsg. */
        class HuoYueDuMsg implements IHuoYueDuMsg {

            /**
             * Constructs a new HuoYueDuMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHuoYueDuMsg);

            /** HuoYueDuMsg type. */
            public type: number;

            /** HuoYueDuMsg count. */
            public count: number;

            /**
             * Encodes the specified HuoYueDuMsg message. Does not implicitly {@link com.message.HuoYueDuMsg.verify|verify} messages.
             * @param message HuoYueDuMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHuoYueDuMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HuoYueDuMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HuoYueDuMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HuoYueDuMsg;
        }

        /** Properties of a C_GET_HUOYUEDU_REWARD. */
        interface IC_GET_HUOYUEDU_REWARD {

            /** C_GET_HUOYUEDU_REWARD id */
            id?: (number|null);

            /** C_GET_HUOYUEDU_REWARD type */
            type?: (number|null);
        }

        /** Represents a C_GET_HUOYUEDU_REWARD. */
        class C_GET_HUOYUEDU_REWARD implements IC_GET_HUOYUEDU_REWARD {

            /**
             * Constructs a new C_GET_HUOYUEDU_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HUOYUEDU_REWARD);

            /** C_GET_HUOYUEDU_REWARD id. */
            public id: number;

            /** C_GET_HUOYUEDU_REWARD type. */
            public type: number;

            /**
             * Encodes the specified C_GET_HUOYUEDU_REWARD message. Does not implicitly {@link com.message.C_GET_HUOYUEDU_REWARD.verify|verify} messages.
             * @param message C_GET_HUOYUEDU_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HUOYUEDU_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HUOYUEDU_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HUOYUEDU_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HUOYUEDU_REWARD;
        }

        /** Properties of a S_GET_HUOYUEDU_REWARD. */
        interface IS_GET_HUOYUEDU_REWARD {

            /** S_GET_HUOYUEDU_REWARD type */
            type?: (number|null);

            /** S_GET_HUOYUEDU_REWARD weekRewardId */
            weekRewardId?: (number[]|null);

            /** S_GET_HUOYUEDU_REWARD rewardId */
            rewardId?: (number[]|null);

            /** S_GET_HUOYUEDU_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_GET_HUOYUEDU_REWARD. */
        class S_GET_HUOYUEDU_REWARD implements IS_GET_HUOYUEDU_REWARD {

            /**
             * Constructs a new S_GET_HUOYUEDU_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HUOYUEDU_REWARD);

            /** S_GET_HUOYUEDU_REWARD type. */
            public type: number;

            /** S_GET_HUOYUEDU_REWARD weekRewardId. */
            public weekRewardId: number[];

            /** S_GET_HUOYUEDU_REWARD rewardId. */
            public rewardId: number[];

            /** S_GET_HUOYUEDU_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_GET_HUOYUEDU_REWARD message. Does not implicitly {@link com.message.S_GET_HUOYUEDU_REWARD.verify|verify} messages.
             * @param message S_GET_HUOYUEDU_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HUOYUEDU_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HUOYUEDU_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HUOYUEDU_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HUOYUEDU_REWARD;
        }

        /** Properties of a S_SYNC_HUOYUEDU_UPDATE. */
        interface IS_SYNC_HUOYUEDU_UPDATE {

            /** S_SYNC_HUOYUEDU_UPDATE totalValue */
            totalValue?: (number|null);

            /** S_SYNC_HUOYUEDU_UPDATE huoYueDuMsg */
            huoYueDuMsg?: (com.message.IHuoYueDuMsg|null);

            /** S_SYNC_HUOYUEDU_UPDATE weekValue */
            weekValue?: (number|null);
        }

        /** Represents a S_SYNC_HUOYUEDU_UPDATE. */
        class S_SYNC_HUOYUEDU_UPDATE implements IS_SYNC_HUOYUEDU_UPDATE {

            /**
             * Constructs a new S_SYNC_HUOYUEDU_UPDATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_HUOYUEDU_UPDATE);

            /** S_SYNC_HUOYUEDU_UPDATE totalValue. */
            public totalValue: number;

            /** S_SYNC_HUOYUEDU_UPDATE huoYueDuMsg. */
            public huoYueDuMsg?: (com.message.IHuoYueDuMsg|null);

            /** S_SYNC_HUOYUEDU_UPDATE weekValue. */
            public weekValue: number;

            /**
             * Encodes the specified S_SYNC_HUOYUEDU_UPDATE message. Does not implicitly {@link com.message.S_SYNC_HUOYUEDU_UPDATE.verify|verify} messages.
             * @param message S_SYNC_HUOYUEDU_UPDATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_HUOYUEDU_UPDATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_HUOYUEDU_UPDATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_HUOYUEDU_UPDATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_HUOYUEDU_UPDATE;
        }

        /** Properties of a C_GET_HUOYUEDU_TYPE. */
        interface IC_GET_HUOYUEDU_TYPE {

            /** C_GET_HUOYUEDU_TYPE typeId */
            typeId?: (number|null);
        }

        /** Represents a C_GET_HUOYUEDU_TYPE. */
        class C_GET_HUOYUEDU_TYPE implements IC_GET_HUOYUEDU_TYPE {

            /**
             * Constructs a new C_GET_HUOYUEDU_TYPE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_HUOYUEDU_TYPE);

            /** C_GET_HUOYUEDU_TYPE typeId. */
            public typeId: number;

            /**
             * Encodes the specified C_GET_HUOYUEDU_TYPE message. Does not implicitly {@link com.message.C_GET_HUOYUEDU_TYPE.verify|verify} messages.
             * @param message C_GET_HUOYUEDU_TYPE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_HUOYUEDU_TYPE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_HUOYUEDU_TYPE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_HUOYUEDU_TYPE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_HUOYUEDU_TYPE;
        }

        /** Properties of a S_GET_HUOYUEDU_TYPE. */
        interface IS_GET_HUOYUEDU_TYPE {

            /** S_GET_HUOYUEDU_TYPE totalValue */
            totalValue?: (number|null);

            /** S_GET_HUOYUEDU_TYPE huoYueDuMsg */
            huoYueDuMsg?: (com.message.IHuoYueDuMsg[]|null);

            /** S_GET_HUOYUEDU_TYPE reward */
            reward?: (com.message.IItemMsg[]|null);

            /** S_GET_HUOYUEDU_TYPE hadTypes */
            hadTypes?: (string|null);

            /** S_GET_HUOYUEDU_TYPE weekValue */
            weekValue?: (number|null);
        }

        /** Represents a S_GET_HUOYUEDU_TYPE. */
        class S_GET_HUOYUEDU_TYPE implements IS_GET_HUOYUEDU_TYPE {

            /**
             * Constructs a new S_GET_HUOYUEDU_TYPE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_HUOYUEDU_TYPE);

            /** S_GET_HUOYUEDU_TYPE totalValue. */
            public totalValue: number;

            /** S_GET_HUOYUEDU_TYPE huoYueDuMsg. */
            public huoYueDuMsg: com.message.IHuoYueDuMsg[];

            /** S_GET_HUOYUEDU_TYPE reward. */
            public reward: com.message.IItemMsg[];

            /** S_GET_HUOYUEDU_TYPE hadTypes. */
            public hadTypes: string;

            /** S_GET_HUOYUEDU_TYPE weekValue. */
            public weekValue: number;

            /**
             * Encodes the specified S_GET_HUOYUEDU_TYPE message. Does not implicitly {@link com.message.S_GET_HUOYUEDU_TYPE.verify|verify} messages.
             * @param message S_GET_HUOYUEDU_TYPE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_HUOYUEDU_TYPE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_HUOYUEDU_TYPE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_HUOYUEDU_TYPE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_HUOYUEDU_TYPE;
        }

        /** Properties of a C_GET_IMAGE_INFO. */
        interface IC_GET_IMAGE_INFO {

            /** C_GET_IMAGE_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_IMAGE_INFO. */
        class C_GET_IMAGE_INFO implements IC_GET_IMAGE_INFO {

            /**
             * Constructs a new C_GET_IMAGE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_IMAGE_INFO);

            /** C_GET_IMAGE_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_IMAGE_INFO message. Does not implicitly {@link com.message.C_GET_IMAGE_INFO.verify|verify} messages.
             * @param message C_GET_IMAGE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_IMAGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_IMAGE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_IMAGE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_IMAGE_INFO;
        }

        /** Properties of a S_GET_IMAGE_INFO. */
        interface IS_GET_IMAGE_INFO {

            /** S_GET_IMAGE_INFO type */
            type?: (number|null);

            /** S_GET_IMAGE_INFO imageInfo */
            imageInfo?: (com.message.IImageMsg[]|null);

            /** S_GET_IMAGE_INFO fightVal */
            fightVal?: (number|Long|null);
        }

        /** Represents a S_GET_IMAGE_INFO. */
        class S_GET_IMAGE_INFO implements IS_GET_IMAGE_INFO {

            /**
             * Constructs a new S_GET_IMAGE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_IMAGE_INFO);

            /** S_GET_IMAGE_INFO type. */
            public type: number;

            /** S_GET_IMAGE_INFO imageInfo. */
            public imageInfo: com.message.IImageMsg[];

            /** S_GET_IMAGE_INFO fightVal. */
            public fightVal: (number|Long);

            /**
             * Encodes the specified S_GET_IMAGE_INFO message. Does not implicitly {@link com.message.S_GET_IMAGE_INFO.verify|verify} messages.
             * @param message S_GET_IMAGE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_IMAGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_IMAGE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_IMAGE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_IMAGE_INFO;
        }

        /** Properties of a C_ACTIVE_IMAGE. */
        interface IC_ACTIVE_IMAGE {

            /** C_ACTIVE_IMAGE type */
            type?: (number|null);

            /** C_ACTIVE_IMAGE imageId */
            imageId?: (number|null);
        }

        /** Represents a C_ACTIVE_IMAGE. */
        class C_ACTIVE_IMAGE implements IC_ACTIVE_IMAGE {

            /**
             * Constructs a new C_ACTIVE_IMAGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ACTIVE_IMAGE);

            /** C_ACTIVE_IMAGE type. */
            public type: number;

            /** C_ACTIVE_IMAGE imageId. */
            public imageId: number;

            /**
             * Encodes the specified C_ACTIVE_IMAGE message. Does not implicitly {@link com.message.C_ACTIVE_IMAGE.verify|verify} messages.
             * @param message C_ACTIVE_IMAGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ACTIVE_IMAGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ACTIVE_IMAGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ACTIVE_IMAGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ACTIVE_IMAGE;
        }

        /** Properties of a S_ACTIVE_IMAGE. */
        interface IS_ACTIVE_IMAGE {

            /** S_ACTIVE_IMAGE type */
            type?: (number|null);

            /** S_ACTIVE_IMAGE imageInfo */
            imageInfo?: (com.message.IImageMsg|null);

            /** S_ACTIVE_IMAGE fightVal */
            fightVal?: (number|Long|null);
        }

        /** Represents a S_ACTIVE_IMAGE. */
        class S_ACTIVE_IMAGE implements IS_ACTIVE_IMAGE {

            /**
             * Constructs a new S_ACTIVE_IMAGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ACTIVE_IMAGE);

            /** S_ACTIVE_IMAGE type. */
            public type: number;

            /** S_ACTIVE_IMAGE imageInfo. */
            public imageInfo?: (com.message.IImageMsg|null);

            /** S_ACTIVE_IMAGE fightVal. */
            public fightVal: (number|Long);

            /**
             * Encodes the specified S_ACTIVE_IMAGE message. Does not implicitly {@link com.message.S_ACTIVE_IMAGE.verify|verify} messages.
             * @param message S_ACTIVE_IMAGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ACTIVE_IMAGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ACTIVE_IMAGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ACTIVE_IMAGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ACTIVE_IMAGE;
        }

        /** Properties of an ImageMsg. */
        interface IImageMsg {

            /** ImageMsg type */
            type?: (number|null);

            /** ImageMsg imageId */
            imageId?: (number|null);

            /** ImageMsg expireTime */
            expireTime?: (number|Long|null);

            /** ImageMsg state */
            state?: (number|null);

            /** ImageMsg star */
            star?: (number|null);
        }

        /** Represents an ImageMsg. */
        class ImageMsg implements IImageMsg {

            /**
             * Constructs a new ImageMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IImageMsg);

            /** ImageMsg type. */
            public type: number;

            /** ImageMsg imageId. */
            public imageId: number;

            /** ImageMsg expireTime. */
            public expireTime: (number|Long);

            /** ImageMsg state. */
            public state: number;

            /** ImageMsg star. */
            public star: number;

            /**
             * Encodes the specified ImageMsg message. Does not implicitly {@link com.message.ImageMsg.verify|verify} messages.
             * @param message ImageMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IImageMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ImageMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ImageMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ImageMsg;
        }

        /** Properties of a C_IMAGE_DRESS_ON. */
        interface IC_IMAGE_DRESS_ON {

            /** C_IMAGE_DRESS_ON type */
            type?: (number|null);

            /** C_IMAGE_DRESS_ON imageId */
            imageId?: (number|null);
        }

        /** Represents a C_IMAGE_DRESS_ON. */
        class C_IMAGE_DRESS_ON implements IC_IMAGE_DRESS_ON {

            /**
             * Constructs a new C_IMAGE_DRESS_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_IMAGE_DRESS_ON);

            /** C_IMAGE_DRESS_ON type. */
            public type: number;

            /** C_IMAGE_DRESS_ON imageId. */
            public imageId: number;

            /**
             * Encodes the specified C_IMAGE_DRESS_ON message. Does not implicitly {@link com.message.C_IMAGE_DRESS_ON.verify|verify} messages.
             * @param message C_IMAGE_DRESS_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_IMAGE_DRESS_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_IMAGE_DRESS_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_IMAGE_DRESS_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_IMAGE_DRESS_ON;
        }

        /** Properties of a S_IMAGE_DRESS_ON. */
        interface IS_IMAGE_DRESS_ON {

            /** S_IMAGE_DRESS_ON type */
            type?: (number|null);

            /** S_IMAGE_DRESS_ON imageId */
            imageId?: (number|null);
        }

        /** Represents a S_IMAGE_DRESS_ON. */
        class S_IMAGE_DRESS_ON implements IS_IMAGE_DRESS_ON {

            /**
             * Constructs a new S_IMAGE_DRESS_ON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_IMAGE_DRESS_ON);

            /** S_IMAGE_DRESS_ON type. */
            public type: number;

            /** S_IMAGE_DRESS_ON imageId. */
            public imageId: number;

            /**
             * Encodes the specified S_IMAGE_DRESS_ON message. Does not implicitly {@link com.message.S_IMAGE_DRESS_ON.verify|verify} messages.
             * @param message S_IMAGE_DRESS_ON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_IMAGE_DRESS_ON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_IMAGE_DRESS_ON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_IMAGE_DRESS_ON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_IMAGE_DRESS_ON;
        }

        /** Properties of a C_IMAGE_START_UP. */
        interface IC_IMAGE_START_UP {

            /** C_IMAGE_START_UP type */
            type?: (number|null);

            /** C_IMAGE_START_UP imageId */
            imageId?: (number|null);
        }

        /** Represents a C_IMAGE_START_UP. */
        class C_IMAGE_START_UP implements IC_IMAGE_START_UP {

            /**
             * Constructs a new C_IMAGE_START_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_IMAGE_START_UP);

            /** C_IMAGE_START_UP type. */
            public type: number;

            /** C_IMAGE_START_UP imageId. */
            public imageId: number;

            /**
             * Encodes the specified C_IMAGE_START_UP message. Does not implicitly {@link com.message.C_IMAGE_START_UP.verify|verify} messages.
             * @param message C_IMAGE_START_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_IMAGE_START_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_IMAGE_START_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_IMAGE_START_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_IMAGE_START_UP;
        }

        /** Properties of a S_IMAGE_START_UP. */
        interface IS_IMAGE_START_UP {

            /** S_IMAGE_START_UP type */
            type?: (number|null);

            /** S_IMAGE_START_UP imageId */
            imageId?: (number|null);

            /** S_IMAGE_START_UP star */
            star?: (number|null);

            /** S_IMAGE_START_UP fightVal */
            fightVal?: (number|Long|null);
        }

        /** Represents a S_IMAGE_START_UP. */
        class S_IMAGE_START_UP implements IS_IMAGE_START_UP {

            /**
             * Constructs a new S_IMAGE_START_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_IMAGE_START_UP);

            /** S_IMAGE_START_UP type. */
            public type: number;

            /** S_IMAGE_START_UP imageId. */
            public imageId: number;

            /** S_IMAGE_START_UP star. */
            public star: number;

            /** S_IMAGE_START_UP fightVal. */
            public fightVal: (number|Long);

            /**
             * Encodes the specified S_IMAGE_START_UP message. Does not implicitly {@link com.message.S_IMAGE_START_UP.verify|verify} messages.
             * @param message S_IMAGE_START_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_IMAGE_START_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_IMAGE_START_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_IMAGE_START_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_IMAGE_START_UP;
        }

        /** Properties of a C_GET_INSTANCE_LIST. */
        interface IC_GET_INSTANCE_LIST {

            /** C_GET_INSTANCE_LIST type */
            type?: (number|null);
        }

        /** Represents a C_GET_INSTANCE_LIST. */
        class C_GET_INSTANCE_LIST implements IC_GET_INSTANCE_LIST {

            /**
             * Constructs a new C_GET_INSTANCE_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_INSTANCE_LIST);

            /** C_GET_INSTANCE_LIST type. */
            public type: number;

            /**
             * Encodes the specified C_GET_INSTANCE_LIST message. Does not implicitly {@link com.message.C_GET_INSTANCE_LIST.verify|verify} messages.
             * @param message C_GET_INSTANCE_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_INSTANCE_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_INSTANCE_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_INSTANCE_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_INSTANCE_LIST;
        }

        /** Properties of a S_GET_INSTANCE_LIST. */
        interface IS_GET_INSTANCE_LIST {

            /** S_GET_INSTANCE_LIST type */
            type?: (number|null);

            /** S_GET_INSTANCE_LIST chapterList */
            chapterList?: (com.message.IChapterMsg[]|null);

            /** S_GET_INSTANCE_LIST instanceList */
            instanceList?: (com.message.IInstanceMsg[]|null);
        }

        /** Represents a S_GET_INSTANCE_LIST. */
        class S_GET_INSTANCE_LIST implements IS_GET_INSTANCE_LIST {

            /**
             * Constructs a new S_GET_INSTANCE_LIST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_INSTANCE_LIST);

            /** S_GET_INSTANCE_LIST type. */
            public type: number;

            /** S_GET_INSTANCE_LIST chapterList. */
            public chapterList: com.message.IChapterMsg[];

            /** S_GET_INSTANCE_LIST instanceList. */
            public instanceList: com.message.IInstanceMsg[];

            /**
             * Encodes the specified S_GET_INSTANCE_LIST message. Does not implicitly {@link com.message.S_GET_INSTANCE_LIST.verify|verify} messages.
             * @param message S_GET_INSTANCE_LIST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_INSTANCE_LIST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_INSTANCE_LIST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_INSTANCE_LIST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_INSTANCE_LIST;
        }

        /** Properties of a ChapterMsg. */
        interface IChapterMsg {

            /** ChapterMsg chapterId */
            chapterId?: (number|null);

            /** ChapterMsg receiveStar */
            receiveStar?: (number[]|null);

            /** ChapterMsg isReceiveReward */
            isReceiveReward?: (boolean|null);
        }

        /** Represents a ChapterMsg. */
        class ChapterMsg implements IChapterMsg {

            /**
             * Constructs a new ChapterMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IChapterMsg);

            /** ChapterMsg chapterId. */
            public chapterId: number;

            /** ChapterMsg receiveStar. */
            public receiveStar: number[];

            /** ChapterMsg isReceiveReward. */
            public isReceiveReward: boolean;

            /**
             * Encodes the specified ChapterMsg message. Does not implicitly {@link com.message.ChapterMsg.verify|verify} messages.
             * @param message ChapterMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IChapterMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ChapterMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ChapterMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ChapterMsg;
        }

        /** Properties of an InstanceMsg. */
        interface IInstanceMsg {

            /** InstanceMsg instanceId */
            instanceId?: (number|null);

            /** InstanceMsg star */
            star?: (number|null);

            /** InstanceMsg playTimes */
            playTimes?: (number|null);

            /** InstanceMsg receiveReward */
            receiveReward?: (boolean|null);

            /** InstanceMsg resetPlayTimes */
            resetPlayTimes?: (number|null);

            /** InstanceMsg resetTime */
            resetTime?: (number|Long|null);
        }

        /** Represents an InstanceMsg. */
        class InstanceMsg implements IInstanceMsg {

            /**
             * Constructs a new InstanceMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IInstanceMsg);

            /** InstanceMsg instanceId. */
            public instanceId: number;

            /** InstanceMsg star. */
            public star: number;

            /** InstanceMsg playTimes. */
            public playTimes: number;

            /** InstanceMsg receiveReward. */
            public receiveReward: boolean;

            /** InstanceMsg resetPlayTimes. */
            public resetPlayTimes: number;

            /** InstanceMsg resetTime. */
            public resetTime: (number|Long);

            /**
             * Encodes the specified InstanceMsg message. Does not implicitly {@link com.message.InstanceMsg.verify|verify} messages.
             * @param message InstanceMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IInstanceMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an InstanceMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns InstanceMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.InstanceMsg;
        }

        /** Properties of a C_ENTER_INSTANCE. */
        interface IC_ENTER_INSTANCE {

            /** C_ENTER_INSTANCE instanceId */
            instanceId?: (number|null);

            /** C_ENTER_INSTANCE type */
            type?: (number|null);

            /** C_ENTER_INSTANCE seq */
            seq?: (number|null);

            /** C_ENTER_INSTANCE otherParam */
            otherParam?: (number|null);
        }

        /** Represents a C_ENTER_INSTANCE. */
        class C_ENTER_INSTANCE implements IC_ENTER_INSTANCE {

            /**
             * Constructs a new C_ENTER_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ENTER_INSTANCE);

            /** C_ENTER_INSTANCE instanceId. */
            public instanceId: number;

            /** C_ENTER_INSTANCE type. */
            public type: number;

            /** C_ENTER_INSTANCE seq. */
            public seq: number;

            /** C_ENTER_INSTANCE otherParam. */
            public otherParam: number;

            /**
             * Encodes the specified C_ENTER_INSTANCE message. Does not implicitly {@link com.message.C_ENTER_INSTANCE.verify|verify} messages.
             * @param message C_ENTER_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ENTER_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ENTER_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ENTER_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ENTER_INSTANCE;
        }

        /** Properties of a S_ENTER_INSTANCE. */
        interface IS_ENTER_INSTANCE {

            /** S_ENTER_INSTANCE instanceId */
            instanceId?: (number|null);

            /** S_ENTER_INSTANCE type */
            type?: (number|null);

            /** S_ENTER_INSTANCE seed */
            seed?: (number|Long|null);

            /** S_ENTER_INSTANCE seq */
            seq?: (number|null);

            /** S_ENTER_INSTANCE battleId */
            battleId?: (number|Long|null);

            /** S_ENTER_INSTANCE myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_ENTER_INSTANCE enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a S_ENTER_INSTANCE. */
        class S_ENTER_INSTANCE implements IS_ENTER_INSTANCE {

            /**
             * Constructs a new S_ENTER_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ENTER_INSTANCE);

            /** S_ENTER_INSTANCE instanceId. */
            public instanceId: number;

            /** S_ENTER_INSTANCE type. */
            public type: number;

            /** S_ENTER_INSTANCE seed. */
            public seed: (number|Long);

            /** S_ENTER_INSTANCE seq. */
            public seq: number;

            /** S_ENTER_INSTANCE battleId. */
            public battleId: (number|Long);

            /** S_ENTER_INSTANCE myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_ENTER_INSTANCE enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified S_ENTER_INSTANCE message. Does not implicitly {@link com.message.S_ENTER_INSTANCE.verify|verify} messages.
             * @param message S_ENTER_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ENTER_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ENTER_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ENTER_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ENTER_INSTANCE;
        }

        /** Properties of a C_GET_WAR_REPORT. */
        interface IC_GET_WAR_REPORT {

            /** C_GET_WAR_REPORT battleId */
            battleId?: (number|Long|null);

            /** C_GET_WAR_REPORT seed */
            seed?: (number|Long|null);

            /** C_GET_WAR_REPORT type */
            type?: (number|null);

            /** C_GET_WAR_REPORT otherParam */
            otherParam?: (number|null);
        }

        /** Represents a C_GET_WAR_REPORT. */
        class C_GET_WAR_REPORT implements IC_GET_WAR_REPORT {

            /**
             * Constructs a new C_GET_WAR_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_WAR_REPORT);

            /** C_GET_WAR_REPORT battleId. */
            public battleId: (number|Long);

            /** C_GET_WAR_REPORT seed. */
            public seed: (number|Long);

            /** C_GET_WAR_REPORT type. */
            public type: number;

            /** C_GET_WAR_REPORT otherParam. */
            public otherParam: number;

            /**
             * Encodes the specified C_GET_WAR_REPORT message. Does not implicitly {@link com.message.C_GET_WAR_REPORT.verify|verify} messages.
             * @param message C_GET_WAR_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_WAR_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_WAR_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_WAR_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_WAR_REPORT;
        }

        /** Properties of a S_GET_WAR_REPORT. */
        interface IS_GET_WAR_REPORT {

            /** S_GET_WAR_REPORT myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_WAR_REPORT enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_WAR_REPORT fighterRoundMsg */
            fighterRoundMsg?: (com.message.IFighterRoundMsg[]|null);

            /** S_GET_WAR_REPORT roundNum */
            roundNum?: (number|null);

            /** S_GET_WAR_REPORT win */
            win?: (boolean|null);

            /** S_GET_WAR_REPORT totalDamage */
            totalDamage?: (number|Long|null);

            /** S_GET_WAR_REPORT totalBeDamage */
            totalBeDamage?: (number|Long|null);

            /** S_GET_WAR_REPORT selfDead */
            selfDead?: (boolean|null);

            /** S_GET_WAR_REPORT targetDeath */
            targetDeath?: (boolean|null);

            /** S_GET_WAR_REPORT selfDeadNum */
            selfDeadNum?: (number|null);

            /** S_GET_WAR_REPORT seq */
            seq?: (number|null);
        }

        /** Represents a S_GET_WAR_REPORT. */
        class S_GET_WAR_REPORT implements IS_GET_WAR_REPORT {

            /**
             * Constructs a new S_GET_WAR_REPORT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_WAR_REPORT);

            /** S_GET_WAR_REPORT myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_WAR_REPORT enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_WAR_REPORT fighterRoundMsg. */
            public fighterRoundMsg: com.message.IFighterRoundMsg[];

            /** S_GET_WAR_REPORT roundNum. */
            public roundNum: number;

            /** S_GET_WAR_REPORT win. */
            public win: boolean;

            /** S_GET_WAR_REPORT totalDamage. */
            public totalDamage: (number|Long);

            /** S_GET_WAR_REPORT totalBeDamage. */
            public totalBeDamage: (number|Long);

            /** S_GET_WAR_REPORT selfDead. */
            public selfDead: boolean;

            /** S_GET_WAR_REPORT targetDeath. */
            public targetDeath: boolean;

            /** S_GET_WAR_REPORT selfDeadNum. */
            public selfDeadNum: number;

            /** S_GET_WAR_REPORT seq. */
            public seq: number;

            /**
             * Encodes the specified S_GET_WAR_REPORT message. Does not implicitly {@link com.message.S_GET_WAR_REPORT.verify|verify} messages.
             * @param message S_GET_WAR_REPORT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_WAR_REPORT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_WAR_REPORT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_WAR_REPORT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_WAR_REPORT;
        }

        /** Properties of a C_FINISH_INSTANCE. */
        interface IC_FINISH_INSTANCE {

            /** C_FINISH_INSTANCE battleId */
            battleId?: (number|Long|null);

            /** C_FINISH_INSTANCE seed */
            seed?: (number|Long|null);

            /** C_FINISH_INSTANCE otherParam */
            otherParam?: (number|null);
        }

        /** Represents a C_FINISH_INSTANCE. */
        class C_FINISH_INSTANCE implements IC_FINISH_INSTANCE {

            /**
             * Constructs a new C_FINISH_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FINISH_INSTANCE);

            /** C_FINISH_INSTANCE battleId. */
            public battleId: (number|Long);

            /** C_FINISH_INSTANCE seed. */
            public seed: (number|Long);

            /** C_FINISH_INSTANCE otherParam. */
            public otherParam: number;

            /**
             * Encodes the specified C_FINISH_INSTANCE message. Does not implicitly {@link com.message.C_FINISH_INSTANCE.verify|verify} messages.
             * @param message C_FINISH_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FINISH_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FINISH_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FINISH_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FINISH_INSTANCE;
        }

        /** Properties of a S_FINISH_INSTANCE. */
        interface IS_FINISH_INSTANCE {

            /** S_FINISH_INSTANCE instanceId */
            instanceId?: (number|null);

            /** S_FINISH_INSTANCE nextHangInsId */
            nextHangInsId?: (number|null);

            /** S_FINISH_INSTANCE type */
            type?: (number|null);

            /** S_FINISH_INSTANCE star */
            star?: (number|null);

            /** S_FINISH_INSTANCE instance */
            instance?: (com.message.IInstanceMsg|null);

            /** S_FINISH_INSTANCE reward */
            reward?: (com.message.IItemMsg[]|null);

            /** S_FINISH_INSTANCE firstReward */
            firstReward?: (com.message.IItemMsg[]|null);

            /** S_FINISH_INSTANCE bossOwner */
            bossOwner?: (boolean|null);
        }

        /** Represents a S_FINISH_INSTANCE. */
        class S_FINISH_INSTANCE implements IS_FINISH_INSTANCE {

            /**
             * Constructs a new S_FINISH_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FINISH_INSTANCE);

            /** S_FINISH_INSTANCE instanceId. */
            public instanceId: number;

            /** S_FINISH_INSTANCE nextHangInsId. */
            public nextHangInsId: number;

            /** S_FINISH_INSTANCE type. */
            public type: number;

            /** S_FINISH_INSTANCE star. */
            public star: number;

            /** S_FINISH_INSTANCE instance. */
            public instance?: (com.message.IInstanceMsg|null);

            /** S_FINISH_INSTANCE reward. */
            public reward: com.message.IItemMsg[];

            /** S_FINISH_INSTANCE firstReward. */
            public firstReward: com.message.IItemMsg[];

            /** S_FINISH_INSTANCE bossOwner. */
            public bossOwner: boolean;

            /**
             * Encodes the specified S_FINISH_INSTANCE message. Does not implicitly {@link com.message.S_FINISH_INSTANCE.verify|verify} messages.
             * @param message S_FINISH_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FINISH_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FINISH_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FINISH_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FINISH_INSTANCE;
        }

        /** Properties of a C_FINISH_INSTANCE_SKIP. */
        interface IC_FINISH_INSTANCE_SKIP {

            /** C_FINISH_INSTANCE_SKIP instanceId */
            instanceId?: (number|null);

            /** C_FINISH_INSTANCE_SKIP type */
            type?: (number|null);

            /** C_FINISH_INSTANCE_SKIP seed */
            seed?: (number|Long|null);
        }

        /** Represents a C_FINISH_INSTANCE_SKIP. */
        class C_FINISH_INSTANCE_SKIP implements IC_FINISH_INSTANCE_SKIP {

            /**
             * Constructs a new C_FINISH_INSTANCE_SKIP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FINISH_INSTANCE_SKIP);

            /** C_FINISH_INSTANCE_SKIP instanceId. */
            public instanceId: number;

            /** C_FINISH_INSTANCE_SKIP type. */
            public type: number;

            /** C_FINISH_INSTANCE_SKIP seed. */
            public seed: (number|Long);

            /**
             * Encodes the specified C_FINISH_INSTANCE_SKIP message. Does not implicitly {@link com.message.C_FINISH_INSTANCE_SKIP.verify|verify} messages.
             * @param message C_FINISH_INSTANCE_SKIP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FINISH_INSTANCE_SKIP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FINISH_INSTANCE_SKIP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FINISH_INSTANCE_SKIP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FINISH_INSTANCE_SKIP;
        }

        /** Properties of a C_ONE_KEY_SWEEP_INSTANCE. */
        interface IC_ONE_KEY_SWEEP_INSTANCE {

            /** C_ONE_KEY_SWEEP_INSTANCE type */
            type?: (number|null);
        }

        /** Represents a C_ONE_KEY_SWEEP_INSTANCE. */
        class C_ONE_KEY_SWEEP_INSTANCE implements IC_ONE_KEY_SWEEP_INSTANCE {

            /**
             * Constructs a new C_ONE_KEY_SWEEP_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONE_KEY_SWEEP_INSTANCE);

            /** C_ONE_KEY_SWEEP_INSTANCE type. */
            public type: number;

            /**
             * Encodes the specified C_ONE_KEY_SWEEP_INSTANCE message. Does not implicitly {@link com.message.C_ONE_KEY_SWEEP_INSTANCE.verify|verify} messages.
             * @param message C_ONE_KEY_SWEEP_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONE_KEY_SWEEP_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONE_KEY_SWEEP_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONE_KEY_SWEEP_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONE_KEY_SWEEP_INSTANCE;
        }

        /** Properties of a S_ONE_KEY_SWEEP_INSTANCE. */
        interface IS_ONE_KEY_SWEEP_INSTANCE {

            /** S_ONE_KEY_SWEEP_INSTANCE reward */
            reward?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_ONE_KEY_SWEEP_INSTANCE. */
        class S_ONE_KEY_SWEEP_INSTANCE implements IS_ONE_KEY_SWEEP_INSTANCE {

            /**
             * Constructs a new S_ONE_KEY_SWEEP_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ONE_KEY_SWEEP_INSTANCE);

            /** S_ONE_KEY_SWEEP_INSTANCE reward. */
            public reward?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_ONE_KEY_SWEEP_INSTANCE message. Does not implicitly {@link com.message.S_ONE_KEY_SWEEP_INSTANCE.verify|verify} messages.
             * @param message S_ONE_KEY_SWEEP_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ONE_KEY_SWEEP_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ONE_KEY_SWEEP_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ONE_KEY_SWEEP_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ONE_KEY_SWEEP_INSTANCE;
        }

        /** Properties of a C_SWEEP_INSTANCE. */
        interface IC_SWEEP_INSTANCE {

            /** C_SWEEP_INSTANCE instanceId */
            instanceId?: (number|null);

            /** C_SWEEP_INSTANCE times */
            times?: (number|null);
        }

        /** Represents a C_SWEEP_INSTANCE. */
        class C_SWEEP_INSTANCE implements IC_SWEEP_INSTANCE {

            /**
             * Constructs a new C_SWEEP_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SWEEP_INSTANCE);

            /** C_SWEEP_INSTANCE instanceId. */
            public instanceId: number;

            /** C_SWEEP_INSTANCE times. */
            public times: number;

            /**
             * Encodes the specified C_SWEEP_INSTANCE message. Does not implicitly {@link com.message.C_SWEEP_INSTANCE.verify|verify} messages.
             * @param message C_SWEEP_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SWEEP_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SWEEP_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SWEEP_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SWEEP_INSTANCE;
        }

        /** Properties of a S_SWEEP_INSTANCE. */
        interface IS_SWEEP_INSTANCE {

            /** S_SWEEP_INSTANCE instance */
            instance?: (com.message.IInstanceMsg|null);

            /** S_SWEEP_INSTANCE reward */
            reward?: (com.message.IItemMsg[]|null);

            /** S_SWEEP_INSTANCE heroExpReward */
            heroExpReward?: (number|Long|null);

            /** S_SWEEP_INSTANCE expReward */
            expReward?: (number|Long|null);
        }

        /** Represents a S_SWEEP_INSTANCE. */
        class S_SWEEP_INSTANCE implements IS_SWEEP_INSTANCE {

            /**
             * Constructs a new S_SWEEP_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SWEEP_INSTANCE);

            /** S_SWEEP_INSTANCE instance. */
            public instance?: (com.message.IInstanceMsg|null);

            /** S_SWEEP_INSTANCE reward. */
            public reward: com.message.IItemMsg[];

            /** S_SWEEP_INSTANCE heroExpReward. */
            public heroExpReward: (number|Long);

            /** S_SWEEP_INSTANCE expReward. */
            public expReward: (number|Long);

            /**
             * Encodes the specified S_SWEEP_INSTANCE message. Does not implicitly {@link com.message.S_SWEEP_INSTANCE.verify|verify} messages.
             * @param message S_SWEEP_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SWEEP_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SWEEP_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SWEEP_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SWEEP_INSTANCE;
        }

        /** Properties of a C_RECEIVE_INSTANCE_REWARD. */
        interface IC_RECEIVE_INSTANCE_REWARD {

            /** C_RECEIVE_INSTANCE_REWARD instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_RECEIVE_INSTANCE_REWARD. */
        class C_RECEIVE_INSTANCE_REWARD implements IC_RECEIVE_INSTANCE_REWARD {

            /**
             * Constructs a new C_RECEIVE_INSTANCE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_RECEIVE_INSTANCE_REWARD);

            /** C_RECEIVE_INSTANCE_REWARD instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_RECEIVE_INSTANCE_REWARD message. Does not implicitly {@link com.message.C_RECEIVE_INSTANCE_REWARD.verify|verify} messages.
             * @param message C_RECEIVE_INSTANCE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_RECEIVE_INSTANCE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_RECEIVE_INSTANCE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_RECEIVE_INSTANCE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_RECEIVE_INSTANCE_REWARD;
        }

        /** Properties of a S_RECEIVE_INSTANCE_REWARD. */
        interface IS_RECEIVE_INSTANCE_REWARD {

            /** S_RECEIVE_INSTANCE_REWARD instanceId */
            instanceId?: (number|null);

            /** S_RECEIVE_INSTANCE_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_RECEIVE_INSTANCE_REWARD. */
        class S_RECEIVE_INSTANCE_REWARD implements IS_RECEIVE_INSTANCE_REWARD {

            /**
             * Constructs a new S_RECEIVE_INSTANCE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RECEIVE_INSTANCE_REWARD);

            /** S_RECEIVE_INSTANCE_REWARD instanceId. */
            public instanceId: number;

            /** S_RECEIVE_INSTANCE_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_RECEIVE_INSTANCE_REWARD message. Does not implicitly {@link com.message.S_RECEIVE_INSTANCE_REWARD.verify|verify} messages.
             * @param message S_RECEIVE_INSTANCE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RECEIVE_INSTANCE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RECEIVE_INSTANCE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RECEIVE_INSTANCE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RECEIVE_INSTANCE_REWARD;
        }

        /** Properties of a C_RECEIVE_CHAPTER_REWARD. */
        interface IC_RECEIVE_CHAPTER_REWARD {

            /** C_RECEIVE_CHAPTER_REWARD chapterId */
            chapterId?: (number|null);

            /** C_RECEIVE_CHAPTER_REWARD star */
            star?: (number|null);
        }

        /** Represents a C_RECEIVE_CHAPTER_REWARD. */
        class C_RECEIVE_CHAPTER_REWARD implements IC_RECEIVE_CHAPTER_REWARD {

            /**
             * Constructs a new C_RECEIVE_CHAPTER_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_RECEIVE_CHAPTER_REWARD);

            /** C_RECEIVE_CHAPTER_REWARD chapterId. */
            public chapterId: number;

            /** C_RECEIVE_CHAPTER_REWARD star. */
            public star: number;

            /**
             * Encodes the specified C_RECEIVE_CHAPTER_REWARD message. Does not implicitly {@link com.message.C_RECEIVE_CHAPTER_REWARD.verify|verify} messages.
             * @param message C_RECEIVE_CHAPTER_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_RECEIVE_CHAPTER_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_RECEIVE_CHAPTER_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_RECEIVE_CHAPTER_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_RECEIVE_CHAPTER_REWARD;
        }

        /** Properties of a S_RECEIVE_CHAPTER_REWARD. */
        interface IS_RECEIVE_CHAPTER_REWARD {

            /** S_RECEIVE_CHAPTER_REWARD chapterId */
            chapterId?: (number|null);

            /** S_RECEIVE_CHAPTER_REWARD star */
            star?: (number|null);

            /** S_RECEIVE_CHAPTER_REWARD instanceType */
            instanceType?: (number|null);

            /** S_RECEIVE_CHAPTER_REWARD reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_RECEIVE_CHAPTER_REWARD. */
        class S_RECEIVE_CHAPTER_REWARD implements IS_RECEIVE_CHAPTER_REWARD {

            /**
             * Constructs a new S_RECEIVE_CHAPTER_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RECEIVE_CHAPTER_REWARD);

            /** S_RECEIVE_CHAPTER_REWARD chapterId. */
            public chapterId: number;

            /** S_RECEIVE_CHAPTER_REWARD star. */
            public star: number;

            /** S_RECEIVE_CHAPTER_REWARD instanceType. */
            public instanceType: number;

            /** S_RECEIVE_CHAPTER_REWARD reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_RECEIVE_CHAPTER_REWARD message. Does not implicitly {@link com.message.S_RECEIVE_CHAPTER_REWARD.verify|verify} messages.
             * @param message S_RECEIVE_CHAPTER_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RECEIVE_CHAPTER_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RECEIVE_CHAPTER_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RECEIVE_CHAPTER_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RECEIVE_CHAPTER_REWARD;
        }

        /** Properties of a C_RECEIVE_CHAPTER_REWARD2. */
        interface IC_RECEIVE_CHAPTER_REWARD2 {

            /** C_RECEIVE_CHAPTER_REWARD2 chapterId */
            chapterId?: (number|null);
        }

        /** Represents a C_RECEIVE_CHAPTER_REWARD2. */
        class C_RECEIVE_CHAPTER_REWARD2 implements IC_RECEIVE_CHAPTER_REWARD2 {

            /**
             * Constructs a new C_RECEIVE_CHAPTER_REWARD2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_RECEIVE_CHAPTER_REWARD2);

            /** C_RECEIVE_CHAPTER_REWARD2 chapterId. */
            public chapterId: number;

            /**
             * Encodes the specified C_RECEIVE_CHAPTER_REWARD2 message. Does not implicitly {@link com.message.C_RECEIVE_CHAPTER_REWARD2.verify|verify} messages.
             * @param message C_RECEIVE_CHAPTER_REWARD2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_RECEIVE_CHAPTER_REWARD2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_RECEIVE_CHAPTER_REWARD2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_RECEIVE_CHAPTER_REWARD2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_RECEIVE_CHAPTER_REWARD2;
        }

        /** Properties of a S_RECEIVE_CHAPTER_REWARD2. */
        interface IS_RECEIVE_CHAPTER_REWARD2 {

            /** S_RECEIVE_CHAPTER_REWARD2 chapterId */
            chapterId?: (number|null);

            /** S_RECEIVE_CHAPTER_REWARD2 reward */
            reward?: (com.message.IItemMsg[]|null);
        }

        /** Represents a S_RECEIVE_CHAPTER_REWARD2. */
        class S_RECEIVE_CHAPTER_REWARD2 implements IS_RECEIVE_CHAPTER_REWARD2 {

            /**
             * Constructs a new S_RECEIVE_CHAPTER_REWARD2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RECEIVE_CHAPTER_REWARD2);

            /** S_RECEIVE_CHAPTER_REWARD2 chapterId. */
            public chapterId: number;

            /** S_RECEIVE_CHAPTER_REWARD2 reward. */
            public reward: com.message.IItemMsg[];

            /**
             * Encodes the specified S_RECEIVE_CHAPTER_REWARD2 message. Does not implicitly {@link com.message.S_RECEIVE_CHAPTER_REWARD2.verify|verify} messages.
             * @param message S_RECEIVE_CHAPTER_REWARD2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RECEIVE_CHAPTER_REWARD2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RECEIVE_CHAPTER_REWARD2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RECEIVE_CHAPTER_REWARD2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RECEIVE_CHAPTER_REWARD2;
        }

        /** Properties of a C_INSTANCE_RESET. */
        interface IC_INSTANCE_RESET {

            /** C_INSTANCE_RESET instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_INSTANCE_RESET. */
        class C_INSTANCE_RESET implements IC_INSTANCE_RESET {

            /**
             * Constructs a new C_INSTANCE_RESET.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_INSTANCE_RESET);

            /** C_INSTANCE_RESET instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_INSTANCE_RESET message. Does not implicitly {@link com.message.C_INSTANCE_RESET.verify|verify} messages.
             * @param message C_INSTANCE_RESET message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_INSTANCE_RESET, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_INSTANCE_RESET message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_INSTANCE_RESET
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_INSTANCE_RESET;
        }

        /** Properties of a S_INSTANCE_RESET. */
        interface IS_INSTANCE_RESET {

            /** S_INSTANCE_RESET instance */
            instance?: (com.message.IInstanceMsg|null);
        }

        /** Represents a S_INSTANCE_RESET. */
        class S_INSTANCE_RESET implements IS_INSTANCE_RESET {

            /**
             * Constructs a new S_INSTANCE_RESET.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_INSTANCE_RESET);

            /** S_INSTANCE_RESET instance. */
            public instance?: (com.message.IInstanceMsg|null);

            /**
             * Encodes the specified S_INSTANCE_RESET message. Does not implicitly {@link com.message.S_INSTANCE_RESET.verify|verify} messages.
             * @param message S_INSTANCE_RESET message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_INSTANCE_RESET, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_INSTANCE_RESET message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_INSTANCE_RESET
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_INSTANCE_RESET;
        }

        /** Properties of a C_ENTER_CHAPTER. */
        interface IC_ENTER_CHAPTER {

            /** C_ENTER_CHAPTER chapterId */
            chapterId?: (number|null);
        }

        /** Represents a C_ENTER_CHAPTER. */
        class C_ENTER_CHAPTER implements IC_ENTER_CHAPTER {

            /**
             * Constructs a new C_ENTER_CHAPTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ENTER_CHAPTER);

            /** C_ENTER_CHAPTER chapterId. */
            public chapterId: number;

            /**
             * Encodes the specified C_ENTER_CHAPTER message. Does not implicitly {@link com.message.C_ENTER_CHAPTER.verify|verify} messages.
             * @param message C_ENTER_CHAPTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ENTER_CHAPTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ENTER_CHAPTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ENTER_CHAPTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ENTER_CHAPTER;
        }

        /** Properties of a S_ENTER_CHAPTER. */
        interface IS_ENTER_CHAPTER {

            /** S_ENTER_CHAPTER chapterId */
            chapterId?: (number|null);
        }

        /** Represents a S_ENTER_CHAPTER. */
        class S_ENTER_CHAPTER implements IS_ENTER_CHAPTER {

            /**
             * Constructs a new S_ENTER_CHAPTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ENTER_CHAPTER);

            /** S_ENTER_CHAPTER chapterId. */
            public chapterId: number;

            /**
             * Encodes the specified S_ENTER_CHAPTER message. Does not implicitly {@link com.message.S_ENTER_CHAPTER.verify|verify} messages.
             * @param message S_ENTER_CHAPTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ENTER_CHAPTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ENTER_CHAPTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ENTER_CHAPTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ENTER_CHAPTER;
        }

        /** Properties of a CrossWarReportMsg. */
        interface ICrossWarReportMsg {

            /** CrossWarReportMsg instanceId */
            instanceId?: (number|null);

            /** CrossWarReportMsg blood */
            blood?: (number|Long|null);

            /** CrossWarReportMsg type */
            type?: (number|null);

            /** CrossWarReportMsg seq */
            seq?: (number|null);

            /** CrossWarReportMsg myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CrossWarReportMsg enemyFighter */
            enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** CrossWarReportMsg fighterRoundMsg */
            fighterRoundMsg?: (com.message.IFighterRoundMsg[]|null);

            /** CrossWarReportMsg roundNum */
            roundNum?: (number|null);

            /** CrossWarReportMsg win */
            win?: (boolean|null);

            /** CrossWarReportMsg totalDamage */
            totalDamage?: (number|Long|null);

            /** CrossWarReportMsg totalBeDamage */
            totalBeDamage?: (number|Long|null);

            /** CrossWarReportMsg selfDead */
            selfDead?: (boolean|null);

            /** CrossWarReportMsg targetDeath */
            targetDeath?: (boolean|null);

            /** CrossWarReportMsg star */
            star?: (number|null);
        }

        /** Represents a CrossWarReportMsg. */
        class CrossWarReportMsg implements ICrossWarReportMsg {

            /**
             * Constructs a new CrossWarReportMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICrossWarReportMsg);

            /** CrossWarReportMsg instanceId. */
            public instanceId: number;

            /** CrossWarReportMsg blood. */
            public blood: (number|Long);

            /** CrossWarReportMsg type. */
            public type: number;

            /** CrossWarReportMsg seq. */
            public seq: number;

            /** CrossWarReportMsg myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CrossWarReportMsg enemyFighter. */
            public enemyFighter?: (com.message.IBattlePlayerMsg|null);

            /** CrossWarReportMsg fighterRoundMsg. */
            public fighterRoundMsg: com.message.IFighterRoundMsg[];

            /** CrossWarReportMsg roundNum. */
            public roundNum: number;

            /** CrossWarReportMsg win. */
            public win: boolean;

            /** CrossWarReportMsg totalDamage. */
            public totalDamage: (number|Long);

            /** CrossWarReportMsg totalBeDamage. */
            public totalBeDamage: (number|Long);

            /** CrossWarReportMsg selfDead. */
            public selfDead: boolean;

            /** CrossWarReportMsg targetDeath. */
            public targetDeath: boolean;

            /** CrossWarReportMsg star. */
            public star: number;

            /**
             * Encodes the specified CrossWarReportMsg message. Does not implicitly {@link com.message.CrossWarReportMsg.verify|verify} messages.
             * @param message CrossWarReportMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICrossWarReportMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CrossWarReportMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrossWarReportMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CrossWarReportMsg;
        }

        /** Properties of a CrossGuildMsg. */
        interface ICrossGuildMsg {

            /** CrossGuildMsg guildId */
            guildId?: (number|Long|null);

            /** CrossGuildMsg name */
            name?: (string|null);

            /** CrossGuildMsg level */
            level?: (number|null);
        }

        /** Represents a CrossGuildMsg. */
        class CrossGuildMsg implements ICrossGuildMsg {

            /**
             * Constructs a new CrossGuildMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICrossGuildMsg);

            /** CrossGuildMsg guildId. */
            public guildId: (number|Long);

            /** CrossGuildMsg name. */
            public name: string;

            /** CrossGuildMsg level. */
            public level: number;

            /**
             * Encodes the specified CrossGuildMsg message. Does not implicitly {@link com.message.CrossGuildMsg.verify|verify} messages.
             * @param message CrossGuildMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICrossGuildMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CrossGuildMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrossGuildMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CrossGuildMsg;
        }

        /** Properties of a CrossPlayerMsg. */
        interface ICrossPlayerMsg {

            /** CrossPlayerMsg serverId */
            serverId?: (number|null);

            /** CrossPlayerMsg playerId */
            playerId?: (number|Long|null);

            /** CrossPlayerMsg name */
            name?: (string|null);
        }

        /** Represents a CrossPlayerMsg. */
        class CrossPlayerMsg implements ICrossPlayerMsg {

            /**
             * Constructs a new CrossPlayerMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICrossPlayerMsg);

            /** CrossPlayerMsg serverId. */
            public serverId: number;

            /** CrossPlayerMsg playerId. */
            public playerId: (number|Long);

            /** CrossPlayerMsg name. */
            public name: string;

            /**
             * Encodes the specified CrossPlayerMsg message. Does not implicitly {@link com.message.CrossPlayerMsg.verify|verify} messages.
             * @param message CrossPlayerMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICrossPlayerMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CrossPlayerMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrossPlayerMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CrossPlayerMsg;
        }

        /** Properties of a CrossInstanceCheckMsg. */
        interface ICrossInstanceCheckMsg {

            /** CrossInstanceCheckMsg instanceId */
            instanceId?: (number|null);

            /** CrossInstanceCheckMsg type */
            type?: (number|null);

            /** CrossInstanceCheckMsg seq */
            seq?: (number|null);

            /** CrossInstanceCheckMsg otherParam */
            otherParam?: (number|null);

            /** CrossInstanceCheckMsg crossGuildMsg */
            crossGuildMsg?: (com.message.ICrossGuildMsg|null);

            /** CrossInstanceCheckMsg crossPlayerMsg */
            crossPlayerMsg?: (com.message.ICrossPlayerMsg|null);

            /** CrossInstanceCheckMsg abiHellParams */
            abiHellParams?: (string|null);
        }

        /** Represents a CrossInstanceCheckMsg. */
        class CrossInstanceCheckMsg implements ICrossInstanceCheckMsg {

            /**
             * Constructs a new CrossInstanceCheckMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICrossInstanceCheckMsg);

            /** CrossInstanceCheckMsg instanceId. */
            public instanceId: number;

            /** CrossInstanceCheckMsg type. */
            public type: number;

            /** CrossInstanceCheckMsg seq. */
            public seq: number;

            /** CrossInstanceCheckMsg otherParam. */
            public otherParam: number;

            /** CrossInstanceCheckMsg crossGuildMsg. */
            public crossGuildMsg?: (com.message.ICrossGuildMsg|null);

            /** CrossInstanceCheckMsg crossPlayerMsg. */
            public crossPlayerMsg?: (com.message.ICrossPlayerMsg|null);

            /** CrossInstanceCheckMsg abiHellParams. */
            public abiHellParams: string;

            /**
             * Encodes the specified CrossInstanceCheckMsg message. Does not implicitly {@link com.message.CrossInstanceCheckMsg.verify|verify} messages.
             * @param message CrossInstanceCheckMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICrossInstanceCheckMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CrossInstanceCheckMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CrossInstanceCheckMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CrossInstanceCheckMsg;
        }

        /** Properties of a C_ENTER_CROSS_INSTANCE. */
        interface IC_ENTER_CROSS_INSTANCE {

            /** C_ENTER_CROSS_INSTANCE instanceId */
            instanceId?: (number|null);

            /** C_ENTER_CROSS_INSTANCE type */
            type?: (number|null);

            /** C_ENTER_CROSS_INSTANCE seq */
            seq?: (number|null);

            /** C_ENTER_CROSS_INSTANCE otherParam */
            otherParam?: (number|null);
        }

        /** Represents a C_ENTER_CROSS_INSTANCE. */
        class C_ENTER_CROSS_INSTANCE implements IC_ENTER_CROSS_INSTANCE {

            /**
             * Constructs a new C_ENTER_CROSS_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ENTER_CROSS_INSTANCE);

            /** C_ENTER_CROSS_INSTANCE instanceId. */
            public instanceId: number;

            /** C_ENTER_CROSS_INSTANCE type. */
            public type: number;

            /** C_ENTER_CROSS_INSTANCE seq. */
            public seq: number;

            /** C_ENTER_CROSS_INSTANCE otherParam. */
            public otherParam: number;

            /**
             * Encodes the specified C_ENTER_CROSS_INSTANCE message. Does not implicitly {@link com.message.C_ENTER_CROSS_INSTANCE.verify|verify} messages.
             * @param message C_ENTER_CROSS_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ENTER_CROSS_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ENTER_CROSS_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ENTER_CROSS_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ENTER_CROSS_INSTANCE;
        }

        /** Properties of a S_ENTER_CROSS_INSTANCE. */
        interface IS_ENTER_CROSS_INSTANCE {

            /** S_ENTER_CROSS_INSTANCE checkMsg */
            checkMsg?: (com.message.ICrossInstanceCheckMsg|null);

            /** S_ENTER_CROSS_INSTANCE warReportMsg */
            warReportMsg?: (com.message.ICrossWarReportMsg|null);
        }

        /** Represents a S_ENTER_CROSS_INSTANCE. */
        class S_ENTER_CROSS_INSTANCE implements IS_ENTER_CROSS_INSTANCE {

            /**
             * Constructs a new S_ENTER_CROSS_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ENTER_CROSS_INSTANCE);

            /** S_ENTER_CROSS_INSTANCE checkMsg. */
            public checkMsg?: (com.message.ICrossInstanceCheckMsg|null);

            /** S_ENTER_CROSS_INSTANCE warReportMsg. */
            public warReportMsg?: (com.message.ICrossWarReportMsg|null);

            /**
             * Encodes the specified S_ENTER_CROSS_INSTANCE message. Does not implicitly {@link com.message.S_ENTER_CROSS_INSTANCE.verify|verify} messages.
             * @param message S_ENTER_CROSS_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ENTER_CROSS_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ENTER_CROSS_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ENTER_CROSS_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ENTER_CROSS_INSTANCE;
        }

        /** Properties of a CROSS_C_BATTLE_INSTANCE. */
        interface ICROSS_C_BATTLE_INSTANCE {

            /** CROSS_C_BATTLE_INSTANCE serverId */
            serverId?: (number|null);

            /** CROSS_C_BATTLE_INSTANCE playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_BATTLE_INSTANCE checkMsg */
            checkMsg?: (com.message.ICrossInstanceCheckMsg|null);

            /** CROSS_C_BATTLE_INSTANCE myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_C_BATTLE_INSTANCE targetPlayerId */
            targetPlayerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_BATTLE_INSTANCE. */
        class CROSS_C_BATTLE_INSTANCE implements ICROSS_C_BATTLE_INSTANCE {

            /**
             * Constructs a new CROSS_C_BATTLE_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_BATTLE_INSTANCE);

            /** CROSS_C_BATTLE_INSTANCE serverId. */
            public serverId: number;

            /** CROSS_C_BATTLE_INSTANCE playerId. */
            public playerId: (number|Long);

            /** CROSS_C_BATTLE_INSTANCE checkMsg. */
            public checkMsg?: (com.message.ICrossInstanceCheckMsg|null);

            /** CROSS_C_BATTLE_INSTANCE myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_C_BATTLE_INSTANCE targetPlayerId. */
            public targetPlayerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_BATTLE_INSTANCE message. Does not implicitly {@link com.message.CROSS_C_BATTLE_INSTANCE.verify|verify} messages.
             * @param message CROSS_C_BATTLE_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_BATTLE_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_BATTLE_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_BATTLE_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_BATTLE_INSTANCE;
        }

        /** Properties of a CROSS_S_BATTLE_INSTANCE. */
        interface ICROSS_S_BATTLE_INSTANCE {

            /** CROSS_S_BATTLE_INSTANCE playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_BATTLE_INSTANCE suceess */
            suceess?: (boolean|null);

            /** CROSS_S_BATTLE_INSTANCE warReportMsg */
            warReportMsg?: (com.message.ICrossWarReportMsg|null);

            /** CROSS_S_BATTLE_INSTANCE checkMsg */
            checkMsg?: (com.message.ICrossInstanceCheckMsg|null);

            /** CROSS_S_BATTLE_INSTANCE isBattleFinish */
            isBattleFinish?: (boolean|null);
        }

        /** Represents a CROSS_S_BATTLE_INSTANCE. */
        class CROSS_S_BATTLE_INSTANCE implements ICROSS_S_BATTLE_INSTANCE {

            /**
             * Constructs a new CROSS_S_BATTLE_INSTANCE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_BATTLE_INSTANCE);

            /** CROSS_S_BATTLE_INSTANCE playerId. */
            public playerId: (number|Long);

            /** CROSS_S_BATTLE_INSTANCE suceess. */
            public suceess: boolean;

            /** CROSS_S_BATTLE_INSTANCE warReportMsg. */
            public warReportMsg?: (com.message.ICrossWarReportMsg|null);

            /** CROSS_S_BATTLE_INSTANCE checkMsg. */
            public checkMsg?: (com.message.ICrossInstanceCheckMsg|null);

            /** CROSS_S_BATTLE_INSTANCE isBattleFinish. */
            public isBattleFinish: boolean;

            /**
             * Encodes the specified CROSS_S_BATTLE_INSTANCE message. Does not implicitly {@link com.message.CROSS_S_BATTLE_INSTANCE.verify|verify} messages.
             * @param message CROSS_S_BATTLE_INSTANCE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_BATTLE_INSTANCE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_BATTLE_INSTANCE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_BATTLE_INSTANCE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_BATTLE_INSTANCE;
        }

        /** Properties of a C_GET_INVEST_INFO. */
        interface IC_GET_INVEST_INFO {

            /** C_GET_INVEST_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_INVEST_INFO. */
        class C_GET_INVEST_INFO implements IC_GET_INVEST_INFO {

            /**
             * Constructs a new C_GET_INVEST_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_INVEST_INFO);

            /** C_GET_INVEST_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_INVEST_INFO message. Does not implicitly {@link com.message.C_GET_INVEST_INFO.verify|verify} messages.
             * @param message C_GET_INVEST_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_INVEST_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_INVEST_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_INVEST_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_INVEST_INFO;
        }

        /** Properties of a S_GET_INVEST_INFO. */
        interface IS_GET_INVEST_INFO {

            /** S_GET_INVEST_INFO id */
            id?: (number|null);

            /** S_GET_INVEST_INFO prama */
            prama?: (number|null);

            /** S_GET_INVEST_INFO hasGet */
            hasGet?: (string|null);
        }

        /** Represents a S_GET_INVEST_INFO. */
        class S_GET_INVEST_INFO implements IS_GET_INVEST_INFO {

            /**
             * Constructs a new S_GET_INVEST_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_INVEST_INFO);

            /** S_GET_INVEST_INFO id. */
            public id: number;

            /** S_GET_INVEST_INFO prama. */
            public prama: number;

            /** S_GET_INVEST_INFO hasGet. */
            public hasGet: string;

            /**
             * Encodes the specified S_GET_INVEST_INFO message. Does not implicitly {@link com.message.S_GET_INVEST_INFO.verify|verify} messages.
             * @param message S_GET_INVEST_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_INVEST_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_INVEST_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_INVEST_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_INVEST_INFO;
        }

        /** Properties of a C_GET_INVEST_REWARD. */
        interface IC_GET_INVEST_REWARD {

            /** C_GET_INVEST_REWARD id */
            id?: (number|null);

            /** C_GET_INVEST_REWARD prama */
            prama?: (number|null);
        }

        /** Represents a C_GET_INVEST_REWARD. */
        class C_GET_INVEST_REWARD implements IC_GET_INVEST_REWARD {

            /**
             * Constructs a new C_GET_INVEST_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_INVEST_REWARD);

            /** C_GET_INVEST_REWARD id. */
            public id: number;

            /** C_GET_INVEST_REWARD prama. */
            public prama: number;

            /**
             * Encodes the specified C_GET_INVEST_REWARD message. Does not implicitly {@link com.message.C_GET_INVEST_REWARD.verify|verify} messages.
             * @param message C_GET_INVEST_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_INVEST_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_INVEST_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_INVEST_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_INVEST_REWARD;
        }

        /** Properties of a S_GET_INVEST_REWARD. */
        interface IS_GET_INVEST_REWARD {

            /** S_GET_INVEST_REWARD id */
            id?: (number|null);

            /** S_GET_INVEST_REWARD prama */
            prama?: (number|null);

            /** S_GET_INVEST_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_INVEST_REWARD. */
        class S_GET_INVEST_REWARD implements IS_GET_INVEST_REWARD {

            /**
             * Constructs a new S_GET_INVEST_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_INVEST_REWARD);

            /** S_GET_INVEST_REWARD id. */
            public id: number;

            /** S_GET_INVEST_REWARD prama. */
            public prama: number;

            /** S_GET_INVEST_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_INVEST_REWARD message. Does not implicitly {@link com.message.S_GET_INVEST_REWARD.verify|verify} messages.
             * @param message S_GET_INVEST_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_INVEST_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_INVEST_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_INVEST_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_INVEST_REWARD;
        }

        /** Properties of a C_BUY_INVEST. */
        interface IC_BUY_INVEST {

            /** C_BUY_INVEST id */
            id?: (number|null);
        }

        /** Represents a C_BUY_INVEST. */
        class C_BUY_INVEST implements IC_BUY_INVEST {

            /**
             * Constructs a new C_BUY_INVEST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_INVEST);

            /** C_BUY_INVEST id. */
            public id: number;

            /**
             * Encodes the specified C_BUY_INVEST message. Does not implicitly {@link com.message.C_BUY_INVEST.verify|verify} messages.
             * @param message C_BUY_INVEST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_INVEST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_INVEST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_INVEST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_INVEST;
        }

        /** Properties of a S_BUY_INVEST. */
        interface IS_BUY_INVEST {

            /** S_BUY_INVEST id */
            id?: (number|null);
        }

        /** Represents a S_BUY_INVEST. */
        class S_BUY_INVEST implements IS_BUY_INVEST {

            /**
             * Constructs a new S_BUY_INVEST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_INVEST);

            /** S_BUY_INVEST id. */
            public id: number;

            /**
             * Encodes the specified S_BUY_INVEST message. Does not implicitly {@link com.message.S_BUY_INVEST.verify|verify} messages.
             * @param message S_BUY_INVEST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_INVEST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_INVEST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_INVEST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_INVEST;
        }

        /** Properties of a C_GET_LADDER_INFO. */
        interface IC_GET_LADDER_INFO {
        }

        /** Represents a C_GET_LADDER_INFO. */
        class C_GET_LADDER_INFO implements IC_GET_LADDER_INFO {

            /**
             * Constructs a new C_GET_LADDER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LADDER_INFO);

            /**
             * Encodes the specified C_GET_LADDER_INFO message. Does not implicitly {@link com.message.C_GET_LADDER_INFO.verify|verify} messages.
             * @param message C_GET_LADDER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LADDER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LADDER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LADDER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LADDER_INFO;
        }

        /** Properties of a S_GET_LADDER_INFO. */
        interface IS_GET_LADDER_INFO {

            /** S_GET_LADDER_INFO id */
            id?: (number|null);

            /** S_GET_LADDER_INFO rank */
            rank?: (number|null);

            /** S_GET_LADDER_INFO win */
            win?: (number|null);

            /** S_GET_LADDER_INFO times */
            times?: (number|null);

            /** S_GET_LADDER_INFO time */
            time?: (number|Long|null);

            /** S_GET_LADDER_INFO buyTimes */
            buyTimes?: (number|null);

            /** S_GET_LADDER_INFO lastId */
            lastId?: (number|null);

            /** S_GET_LADDER_INFO lastRank */
            lastRank?: (number|null);

            /** S_GET_LADDER_INFO lastWin */
            lastWin?: (number|null);
        }

        /** Represents a S_GET_LADDER_INFO. */
        class S_GET_LADDER_INFO implements IS_GET_LADDER_INFO {

            /**
             * Constructs a new S_GET_LADDER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LADDER_INFO);

            /** S_GET_LADDER_INFO id. */
            public id: number;

            /** S_GET_LADDER_INFO rank. */
            public rank: number;

            /** S_GET_LADDER_INFO win. */
            public win: number;

            /** S_GET_LADDER_INFO times. */
            public times: number;

            /** S_GET_LADDER_INFO time. */
            public time: (number|Long);

            /** S_GET_LADDER_INFO buyTimes. */
            public buyTimes: number;

            /** S_GET_LADDER_INFO lastId. */
            public lastId: number;

            /** S_GET_LADDER_INFO lastRank. */
            public lastRank: number;

            /** S_GET_LADDER_INFO lastWin. */
            public lastWin: number;

            /**
             * Encodes the specified S_GET_LADDER_INFO message. Does not implicitly {@link com.message.S_GET_LADDER_INFO.verify|verify} messages.
             * @param message S_GET_LADDER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LADDER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LADDER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LADDER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LADDER_INFO;
        }

        /** Properties of a C_BUY_LADDER_TIMES. */
        interface IC_BUY_LADDER_TIMES {
        }

        /** Represents a C_BUY_LADDER_TIMES. */
        class C_BUY_LADDER_TIMES implements IC_BUY_LADDER_TIMES {

            /**
             * Constructs a new C_BUY_LADDER_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_LADDER_TIMES);

            /**
             * Encodes the specified C_BUY_LADDER_TIMES message. Does not implicitly {@link com.message.C_BUY_LADDER_TIMES.verify|verify} messages.
             * @param message C_BUY_LADDER_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_LADDER_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_LADDER_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_LADDER_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_LADDER_TIMES;
        }

        /** Properties of a S_BUY_LADDER_TIMES. */
        interface IS_BUY_LADDER_TIMES {

            /** S_BUY_LADDER_TIMES times */
            times?: (number|null);

            /** S_BUY_LADDER_TIMES buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_BUY_LADDER_TIMES. */
        class S_BUY_LADDER_TIMES implements IS_BUY_LADDER_TIMES {

            /**
             * Constructs a new S_BUY_LADDER_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_LADDER_TIMES);

            /** S_BUY_LADDER_TIMES times. */
            public times: number;

            /** S_BUY_LADDER_TIMES buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_BUY_LADDER_TIMES message. Does not implicitly {@link com.message.S_BUY_LADDER_TIMES.verify|verify} messages.
             * @param message S_BUY_LADDER_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_LADDER_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_LADDER_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_LADDER_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_LADDER_TIMES;
        }

        /** Properties of a C_MATCH_LADDER. */
        interface IC_MATCH_LADDER {
        }

        /** Represents a C_MATCH_LADDER. */
        class C_MATCH_LADDER implements IC_MATCH_LADDER {

            /**
             * Constructs a new C_MATCH_LADDER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_MATCH_LADDER);

            /**
             * Encodes the specified C_MATCH_LADDER message. Does not implicitly {@link com.message.C_MATCH_LADDER.verify|verify} messages.
             * @param message C_MATCH_LADDER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_MATCH_LADDER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_MATCH_LADDER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_MATCH_LADDER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_MATCH_LADDER;
        }

        /** Properties of a S_MATCH_LADDER. */
        interface IS_MATCH_LADDER {

            /** S_MATCH_LADDER playerName */
            playerName?: (string|null);

            /** S_MATCH_LADDER playerId */
            playerId?: (number|Long|null);

            /** S_MATCH_LADDER id */
            id?: (number|null);

            /** S_MATCH_LADDER heroId */
            heroId?: (number|null);

            /** S_MATCH_LADDER robot */
            robot?: (number|null);
        }

        /** Represents a S_MATCH_LADDER. */
        class S_MATCH_LADDER implements IS_MATCH_LADDER {

            /**
             * Constructs a new S_MATCH_LADDER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_MATCH_LADDER);

            /** S_MATCH_LADDER playerName. */
            public playerName: string;

            /** S_MATCH_LADDER playerId. */
            public playerId: (number|Long);

            /** S_MATCH_LADDER id. */
            public id: number;

            /** S_MATCH_LADDER heroId. */
            public heroId: number;

            /** S_MATCH_LADDER robot. */
            public robot: number;

            /**
             * Encodes the specified S_MATCH_LADDER message. Does not implicitly {@link com.message.S_MATCH_LADDER.verify|verify} messages.
             * @param message S_MATCH_LADDER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_MATCH_LADDER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_MATCH_LADDER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_MATCH_LADDER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_MATCH_LADDER;
        }

        /** Properties of a C_GET_LADDER_RANK. */
        interface IC_GET_LADDER_RANK {

            /** C_GET_LADDER_RANK type */
            type?: (number|null);
        }

        /** Represents a C_GET_LADDER_RANK. */
        class C_GET_LADDER_RANK implements IC_GET_LADDER_RANK {

            /**
             * Constructs a new C_GET_LADDER_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LADDER_RANK);

            /** C_GET_LADDER_RANK type. */
            public type: number;

            /**
             * Encodes the specified C_GET_LADDER_RANK message. Does not implicitly {@link com.message.C_GET_LADDER_RANK.verify|verify} messages.
             * @param message C_GET_LADDER_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LADDER_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LADDER_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LADDER_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LADDER_RANK;
        }

        /** Properties of a S_GET_LADDER_RANK. */
        interface IS_GET_LADDER_RANK {

            /** S_GET_LADDER_RANK rankList */
            rankList?: (com.message.ILADDER_RANK_INFO[]|null);
        }

        /** Represents a S_GET_LADDER_RANK. */
        class S_GET_LADDER_RANK implements IS_GET_LADDER_RANK {

            /**
             * Constructs a new S_GET_LADDER_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LADDER_RANK);

            /** S_GET_LADDER_RANK rankList. */
            public rankList: com.message.ILADDER_RANK_INFO[];

            /**
             * Encodes the specified S_GET_LADDER_RANK message. Does not implicitly {@link com.message.S_GET_LADDER_RANK.verify|verify} messages.
             * @param message S_GET_LADDER_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LADDER_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LADDER_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LADDER_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LADDER_RANK;
        }

        /** Properties of a LADDER_RANK_INFO. */
        interface ILADDER_RANK_INFO {

            /** LADDER_RANK_INFO rank */
            rank?: (number|null);

            /** LADDER_RANK_INFO id */
            id?: (number|null);

            /** LADDER_RANK_INFO name */
            name?: (string|null);

            /** LADDER_RANK_INFO win */
            win?: (number|null);

            /** LADDER_RANK_INFO playerId */
            playerId?: (number|Long|null);

            /** LADDER_RANK_INFO heroId */
            heroId?: (number|null);
        }

        /** Represents a LADDER_RANK_INFO. */
        class LADDER_RANK_INFO implements ILADDER_RANK_INFO {

            /**
             * Constructs a new LADDER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ILADDER_RANK_INFO);

            /** LADDER_RANK_INFO rank. */
            public rank: number;

            /** LADDER_RANK_INFO id. */
            public id: number;

            /** LADDER_RANK_INFO name. */
            public name: string;

            /** LADDER_RANK_INFO win. */
            public win: number;

            /** LADDER_RANK_INFO playerId. */
            public playerId: (number|Long);

            /** LADDER_RANK_INFO heroId. */
            public heroId: number;

            /**
             * Encodes the specified LADDER_RANK_INFO message. Does not implicitly {@link com.message.LADDER_RANK_INFO.verify|verify} messages.
             * @param message LADDER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ILADDER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a LADDER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LADDER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.LADDER_RANK_INFO;
        }

        /** Properties of a C_GET_LEVEL_BUY_INFO. */
        interface IC_GET_LEVEL_BUY_INFO {
        }

        /** Represents a C_GET_LEVEL_BUY_INFO. */
        class C_GET_LEVEL_BUY_INFO implements IC_GET_LEVEL_BUY_INFO {

            /**
             * Constructs a new C_GET_LEVEL_BUY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LEVEL_BUY_INFO);

            /**
             * Encodes the specified C_GET_LEVEL_BUY_INFO message. Does not implicitly {@link com.message.C_GET_LEVEL_BUY_INFO.verify|verify} messages.
             * @param message C_GET_LEVEL_BUY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LEVEL_BUY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LEVEL_BUY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LEVEL_BUY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LEVEL_BUY_INFO;
        }

        /** Properties of a S_GET_LEVEL_BUY_INFO. */
        interface IS_GET_LEVEL_BUY_INFO {

            /** S_GET_LEVEL_BUY_INFO activityId */
            activityId?: (number|null);

            /** S_GET_LEVEL_BUY_INFO leaveTime */
            leaveTime?: (number|null);
        }

        /** Represents a S_GET_LEVEL_BUY_INFO. */
        class S_GET_LEVEL_BUY_INFO implements IS_GET_LEVEL_BUY_INFO {

            /**
             * Constructs a new S_GET_LEVEL_BUY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LEVEL_BUY_INFO);

            /** S_GET_LEVEL_BUY_INFO activityId. */
            public activityId: number;

            /** S_GET_LEVEL_BUY_INFO leaveTime. */
            public leaveTime: number;

            /**
             * Encodes the specified S_GET_LEVEL_BUY_INFO message. Does not implicitly {@link com.message.S_GET_LEVEL_BUY_INFO.verify|verify} messages.
             * @param message S_GET_LEVEL_BUY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LEVEL_BUY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LEVEL_BUY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LEVEL_BUY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LEVEL_BUY_INFO;
        }

        /** Properties of a C_GET_LEVEL_BUY_REWRAD. */
        interface IC_GET_LEVEL_BUY_REWRAD {

            /** C_GET_LEVEL_BUY_REWRAD activityId */
            activityId?: (number|null);
        }

        /** Represents a C_GET_LEVEL_BUY_REWRAD. */
        class C_GET_LEVEL_BUY_REWRAD implements IC_GET_LEVEL_BUY_REWRAD {

            /**
             * Constructs a new C_GET_LEVEL_BUY_REWRAD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LEVEL_BUY_REWRAD);

            /** C_GET_LEVEL_BUY_REWRAD activityId. */
            public activityId: number;

            /**
             * Encodes the specified C_GET_LEVEL_BUY_REWRAD message. Does not implicitly {@link com.message.C_GET_LEVEL_BUY_REWRAD.verify|verify} messages.
             * @param message C_GET_LEVEL_BUY_REWRAD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LEVEL_BUY_REWRAD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LEVEL_BUY_REWRAD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LEVEL_BUY_REWRAD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LEVEL_BUY_REWRAD;
        }

        /** Properties of a S_GET_LEVEL_BUY_REWARD. */
        interface IS_GET_LEVEL_BUY_REWARD {

            /** S_GET_LEVEL_BUY_REWARD activityId */
            activityId?: (number|null);

            /** S_GET_LEVEL_BUY_REWARD nextActivityId */
            nextActivityId?: (number|null);

            /** S_GET_LEVEL_BUY_REWARD leaveTime */
            leaveTime?: (number|null);

            /** S_GET_LEVEL_BUY_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_LEVEL_BUY_REWARD. */
        class S_GET_LEVEL_BUY_REWARD implements IS_GET_LEVEL_BUY_REWARD {

            /**
             * Constructs a new S_GET_LEVEL_BUY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LEVEL_BUY_REWARD);

            /** S_GET_LEVEL_BUY_REWARD activityId. */
            public activityId: number;

            /** S_GET_LEVEL_BUY_REWARD nextActivityId. */
            public nextActivityId: number;

            /** S_GET_LEVEL_BUY_REWARD leaveTime. */
            public leaveTime: number;

            /** S_GET_LEVEL_BUY_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_LEVEL_BUY_REWARD message. Does not implicitly {@link com.message.S_GET_LEVEL_BUY_REWARD.verify|verify} messages.
             * @param message S_GET_LEVEL_BUY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LEVEL_BUY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LEVEL_BUY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LEVEL_BUY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LEVEL_BUY_REWARD;
        }

        /** Properties of a S_PUSH_LEVEL_BUY_INFO. */
        interface IS_PUSH_LEVEL_BUY_INFO {

            /** S_PUSH_LEVEL_BUY_INFO activityId */
            activityId?: (number|null);

            /** S_PUSH_LEVEL_BUY_INFO leaveTime */
            leaveTime?: (number|null);
        }

        /** Represents a S_PUSH_LEVEL_BUY_INFO. */
        class S_PUSH_LEVEL_BUY_INFO implements IS_PUSH_LEVEL_BUY_INFO {

            /**
             * Constructs a new S_PUSH_LEVEL_BUY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_PUSH_LEVEL_BUY_INFO);

            /** S_PUSH_LEVEL_BUY_INFO activityId. */
            public activityId: number;

            /** S_PUSH_LEVEL_BUY_INFO leaveTime. */
            public leaveTime: number;

            /**
             * Encodes the specified S_PUSH_LEVEL_BUY_INFO message. Does not implicitly {@link com.message.S_PUSH_LEVEL_BUY_INFO.verify|verify} messages.
             * @param message S_PUSH_LEVEL_BUY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_PUSH_LEVEL_BUY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_PUSH_LEVEL_BUY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_PUSH_LEVEL_BUY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_PUSH_LEVEL_BUY_INFO;
        }

        /** Properties of a C_GET_LIUYI_LUCKY_INFO. */
        interface IC_GET_LIUYI_LUCKY_INFO {
        }

        /** Represents a C_GET_LIUYI_LUCKY_INFO. */
        class C_GET_LIUYI_LUCKY_INFO implements IC_GET_LIUYI_LUCKY_INFO {

            /**
             * Constructs a new C_GET_LIUYI_LUCKY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LIUYI_LUCKY_INFO);

            /**
             * Encodes the specified C_GET_LIUYI_LUCKY_INFO message. Does not implicitly {@link com.message.C_GET_LIUYI_LUCKY_INFO.verify|verify} messages.
             * @param message C_GET_LIUYI_LUCKY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LIUYI_LUCKY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LIUYI_LUCKY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LIUYI_LUCKY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LIUYI_LUCKY_INFO;
        }

        /** Properties of a S_GET_LIUYI_LUCKY_INFO. */
        interface IS_GET_LIUYI_LUCKY_INFO {

            /** S_GET_LIUYI_LUCKY_INFO freeTimes */
            freeTimes?: (number|null);

            /** S_GET_LIUYI_LUCKY_INFO score */
            score?: (number|null);

            /** S_GET_LIUYI_LUCKY_INFO hadRewards */
            hadRewards?: (string|null);

            /** S_GET_LIUYI_LUCKY_INFO days */
            days?: (number|null);
        }

        /** Represents a S_GET_LIUYI_LUCKY_INFO. */
        class S_GET_LIUYI_LUCKY_INFO implements IS_GET_LIUYI_LUCKY_INFO {

            /**
             * Constructs a new S_GET_LIUYI_LUCKY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LIUYI_LUCKY_INFO);

            /** S_GET_LIUYI_LUCKY_INFO freeTimes. */
            public freeTimes: number;

            /** S_GET_LIUYI_LUCKY_INFO score. */
            public score: number;

            /** S_GET_LIUYI_LUCKY_INFO hadRewards. */
            public hadRewards: string;

            /** S_GET_LIUYI_LUCKY_INFO days. */
            public days: number;

            /**
             * Encodes the specified S_GET_LIUYI_LUCKY_INFO message. Does not implicitly {@link com.message.S_GET_LIUYI_LUCKY_INFO.verify|verify} messages.
             * @param message S_GET_LIUYI_LUCKY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LIUYI_LUCKY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LIUYI_LUCKY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LIUYI_LUCKY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LIUYI_LUCKY_INFO;
        }

        /** Properties of a C_LIUYI_LUCKY_XUNBAO. */
        interface IC_LIUYI_LUCKY_XUNBAO {

            /** C_LIUYI_LUCKY_XUNBAO xunBaoTimes */
            xunBaoTimes?: (number|null);
        }

        /** Represents a C_LIUYI_LUCKY_XUNBAO. */
        class C_LIUYI_LUCKY_XUNBAO implements IC_LIUYI_LUCKY_XUNBAO {

            /**
             * Constructs a new C_LIUYI_LUCKY_XUNBAO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LIUYI_LUCKY_XUNBAO);

            /** C_LIUYI_LUCKY_XUNBAO xunBaoTimes. */
            public xunBaoTimes: number;

            /**
             * Encodes the specified C_LIUYI_LUCKY_XUNBAO message. Does not implicitly {@link com.message.C_LIUYI_LUCKY_XUNBAO.verify|verify} messages.
             * @param message C_LIUYI_LUCKY_XUNBAO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LIUYI_LUCKY_XUNBAO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LIUYI_LUCKY_XUNBAO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LIUYI_LUCKY_XUNBAO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LIUYI_LUCKY_XUNBAO;
        }

        /** Properties of a S_LIUYI_LUCKY_XUNBAO. */
        interface IS_LIUYI_LUCKY_XUNBAO {

            /** S_LIUYI_LUCKY_XUNBAO freeTimes */
            freeTimes?: (number|null);

            /** S_LIUYI_LUCKY_XUNBAO score */
            score?: (number|null);

            /** S_LIUYI_LUCKY_XUNBAO rewardList */
            rewardList?: (com.message.IItemListMsg|null);

            /** S_LIUYI_LUCKY_XUNBAO days */
            days?: (number|null);
        }

        /** Represents a S_LIUYI_LUCKY_XUNBAO. */
        class S_LIUYI_LUCKY_XUNBAO implements IS_LIUYI_LUCKY_XUNBAO {

            /**
             * Constructs a new S_LIUYI_LUCKY_XUNBAO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LIUYI_LUCKY_XUNBAO);

            /** S_LIUYI_LUCKY_XUNBAO freeTimes. */
            public freeTimes: number;

            /** S_LIUYI_LUCKY_XUNBAO score. */
            public score: number;

            /** S_LIUYI_LUCKY_XUNBAO rewardList. */
            public rewardList?: (com.message.IItemListMsg|null);

            /** S_LIUYI_LUCKY_XUNBAO days. */
            public days: number;

            /**
             * Encodes the specified S_LIUYI_LUCKY_XUNBAO message. Does not implicitly {@link com.message.S_LIUYI_LUCKY_XUNBAO.verify|verify} messages.
             * @param message S_LIUYI_LUCKY_XUNBAO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LIUYI_LUCKY_XUNBAO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LIUYI_LUCKY_XUNBAO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LIUYI_LUCKY_XUNBAO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LIUYI_LUCKY_XUNBAO;
        }

        /** Properties of a C_GET_LIUYI_LOG_INFO. */
        interface IC_GET_LIUYI_LOG_INFO {

            /** C_GET_LIUYI_LOG_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_LIUYI_LOG_INFO. */
        class C_GET_LIUYI_LOG_INFO implements IC_GET_LIUYI_LOG_INFO {

            /**
             * Constructs a new C_GET_LIUYI_LOG_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LIUYI_LOG_INFO);

            /** C_GET_LIUYI_LOG_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_LIUYI_LOG_INFO message. Does not implicitly {@link com.message.C_GET_LIUYI_LOG_INFO.verify|verify} messages.
             * @param message C_GET_LIUYI_LOG_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LIUYI_LOG_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LIUYI_LOG_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LIUYI_LOG_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LIUYI_LOG_INFO;
        }

        /** Properties of a S_GET_LIUYI_LOG_INFO. */
        interface IS_GET_LIUYI_LOG_INFO {

            /** S_GET_LIUYI_LOG_INFO records */
            records?: (com.message.ILIUYI_LOG[]|null);
        }

        /** Represents a S_GET_LIUYI_LOG_INFO. */
        class S_GET_LIUYI_LOG_INFO implements IS_GET_LIUYI_LOG_INFO {

            /**
             * Constructs a new S_GET_LIUYI_LOG_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LIUYI_LOG_INFO);

            /** S_GET_LIUYI_LOG_INFO records. */
            public records: com.message.ILIUYI_LOG[];

            /**
             * Encodes the specified S_GET_LIUYI_LOG_INFO message. Does not implicitly {@link com.message.S_GET_LIUYI_LOG_INFO.verify|verify} messages.
             * @param message S_GET_LIUYI_LOG_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LIUYI_LOG_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LIUYI_LOG_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LIUYI_LOG_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LIUYI_LOG_INFO;
        }

        /** Properties of a LIUYI_LOG. */
        interface ILIUYI_LOG {

            /** LIUYI_LOG nickName */
            nickName?: (string|null);

            /** LIUYI_LOG rewardInfos */
            rewardInfos?: (string|null);

            /** LIUYI_LOG createTime */
            createTime?: (number|Long|null);
        }

        /** Represents a LIUYI_LOG. */
        class LIUYI_LOG implements ILIUYI_LOG {

            /**
             * Constructs a new LIUYI_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ILIUYI_LOG);

            /** LIUYI_LOG nickName. */
            public nickName: string;

            /** LIUYI_LOG rewardInfos. */
            public rewardInfos: string;

            /** LIUYI_LOG createTime. */
            public createTime: (number|Long);

            /**
             * Encodes the specified LIUYI_LOG message. Does not implicitly {@link com.message.LIUYI_LOG.verify|verify} messages.
             * @param message LIUYI_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ILIUYI_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a LIUYI_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LIUYI_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.LIUYI_LOG;
        }

        /** Properties of a C_LIUYI_LUCKY_SCORE_REWARD. */
        interface IC_LIUYI_LUCKY_SCORE_REWARD {

            /** C_LIUYI_LUCKY_SCORE_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_LIUYI_LUCKY_SCORE_REWARD. */
        class C_LIUYI_LUCKY_SCORE_REWARD implements IC_LIUYI_LUCKY_SCORE_REWARD {

            /**
             * Constructs a new C_LIUYI_LUCKY_SCORE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LIUYI_LUCKY_SCORE_REWARD);

            /** C_LIUYI_LUCKY_SCORE_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_LIUYI_LUCKY_SCORE_REWARD message. Does not implicitly {@link com.message.C_LIUYI_LUCKY_SCORE_REWARD.verify|verify} messages.
             * @param message C_LIUYI_LUCKY_SCORE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LIUYI_LUCKY_SCORE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LIUYI_LUCKY_SCORE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LIUYI_LUCKY_SCORE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LIUYI_LUCKY_SCORE_REWARD;
        }

        /** Properties of a S_LIUYI_LUCKY_SCORE_REWARD. */
        interface IS_LIUYI_LUCKY_SCORE_REWARD {

            /** S_LIUYI_LUCKY_SCORE_REWARD hadRewards */
            hadRewards?: (string|null);

            /** S_LIUYI_LUCKY_SCORE_REWARD rewardList */
            rewardList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_LIUYI_LUCKY_SCORE_REWARD. */
        class S_LIUYI_LUCKY_SCORE_REWARD implements IS_LIUYI_LUCKY_SCORE_REWARD {

            /**
             * Constructs a new S_LIUYI_LUCKY_SCORE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LIUYI_LUCKY_SCORE_REWARD);

            /** S_LIUYI_LUCKY_SCORE_REWARD hadRewards. */
            public hadRewards: string;

            /** S_LIUYI_LUCKY_SCORE_REWARD rewardList. */
            public rewardList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_LIUYI_LUCKY_SCORE_REWARD message. Does not implicitly {@link com.message.S_LIUYI_LUCKY_SCORE_REWARD.verify|verify} messages.
             * @param message S_LIUYI_LUCKY_SCORE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LIUYI_LUCKY_SCORE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LIUYI_LUCKY_SCORE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LIUYI_LUCKY_SCORE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LIUYI_LUCKY_SCORE_REWARD;
        }

        /** Properties of a C_LIUYI_LUCKY_RANK_DATA. */
        interface IC_LIUYI_LUCKY_RANK_DATA {
        }

        /** Represents a C_LIUYI_LUCKY_RANK_DATA. */
        class C_LIUYI_LUCKY_RANK_DATA implements IC_LIUYI_LUCKY_RANK_DATA {

            /**
             * Constructs a new C_LIUYI_LUCKY_RANK_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LIUYI_LUCKY_RANK_DATA);

            /**
             * Encodes the specified C_LIUYI_LUCKY_RANK_DATA message. Does not implicitly {@link com.message.C_LIUYI_LUCKY_RANK_DATA.verify|verify} messages.
             * @param message C_LIUYI_LUCKY_RANK_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LIUYI_LUCKY_RANK_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LIUYI_LUCKY_RANK_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LIUYI_LUCKY_RANK_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LIUYI_LUCKY_RANK_DATA;
        }

        /** Properties of a S_LIUYI_LUCKY_RANK_DATA. */
        interface IS_LIUYI_LUCKY_RANK_DATA {

            /** S_LIUYI_LUCKY_RANK_DATA ranks */
            ranks?: (com.message.ILIUYI_RANK[]|null);
        }

        /** Represents a S_LIUYI_LUCKY_RANK_DATA. */
        class S_LIUYI_LUCKY_RANK_DATA implements IS_LIUYI_LUCKY_RANK_DATA {

            /**
             * Constructs a new S_LIUYI_LUCKY_RANK_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LIUYI_LUCKY_RANK_DATA);

            /** S_LIUYI_LUCKY_RANK_DATA ranks. */
            public ranks: com.message.ILIUYI_RANK[];

            /**
             * Encodes the specified S_LIUYI_LUCKY_RANK_DATA message. Does not implicitly {@link com.message.S_LIUYI_LUCKY_RANK_DATA.verify|verify} messages.
             * @param message S_LIUYI_LUCKY_RANK_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LIUYI_LUCKY_RANK_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LIUYI_LUCKY_RANK_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LIUYI_LUCKY_RANK_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LIUYI_LUCKY_RANK_DATA;
        }

        /** Properties of a LIUYI_RANK. */
        interface ILIUYI_RANK {

            /** LIUYI_RANK playerId */
            playerId?: (number|Long|null);

            /** LIUYI_RANK nickName */
            nickName?: (string|null);

            /** LIUYI_RANK rank */
            rank?: (number|null);

            /** LIUYI_RANK score */
            score?: (number|null);
        }

        /** Represents a LIUYI_RANK. */
        class LIUYI_RANK implements ILIUYI_RANK {

            /**
             * Constructs a new LIUYI_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ILIUYI_RANK);

            /** LIUYI_RANK playerId. */
            public playerId: (number|Long);

            /** LIUYI_RANK nickName. */
            public nickName: string;

            /** LIUYI_RANK rank. */
            public rank: number;

            /** LIUYI_RANK score. */
            public score: number;

            /**
             * Encodes the specified LIUYI_RANK message. Does not implicitly {@link com.message.LIUYI_RANK.verify|verify} messages.
             * @param message LIUYI_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ILIUYI_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a LIUYI_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns LIUYI_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.LIUYI_RANK;
        }

        /** Properties of a C_USER_LOGIN. */
        interface IC_USER_LOGIN {

            /** C_USER_LOGIN username */
            username?: (string|null);

            /** C_USER_LOGIN gameSite */
            gameSite?: (string|null);

            /** C_USER_LOGIN sparam */
            sparam?: (string|null);
        }

        /** Represents a C_USER_LOGIN. */
        class C_USER_LOGIN implements IC_USER_LOGIN {

            /**
             * Constructs a new C_USER_LOGIN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_USER_LOGIN);

            /** C_USER_LOGIN username. */
            public username: string;

            /** C_USER_LOGIN gameSite. */
            public gameSite: string;

            /** C_USER_LOGIN sparam. */
            public sparam: string;

            /**
             * Encodes the specified C_USER_LOGIN message. Does not implicitly {@link com.message.C_USER_LOGIN.verify|verify} messages.
             * @param message C_USER_LOGIN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_USER_LOGIN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_USER_LOGIN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_USER_LOGIN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_USER_LOGIN;
        }

        /** Properties of a S_USER_LOGIN. */
        interface IS_USER_LOGIN {

            /** S_USER_LOGIN playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a S_USER_LOGIN. */
        class S_USER_LOGIN implements IS_USER_LOGIN {

            /**
             * Constructs a new S_USER_LOGIN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_USER_LOGIN);

            /** S_USER_LOGIN playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified S_USER_LOGIN message. Does not implicitly {@link com.message.S_USER_LOGIN.verify|verify} messages.
             * @param message S_USER_LOGIN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_USER_LOGIN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_USER_LOGIN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_USER_LOGIN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_USER_LOGIN;
        }

        /** Properties of a C_LOGIN_REGISTER. */
        interface IC_LOGIN_REGISTER {

            /** C_LOGIN_REGISTER username */
            username?: (string|null);

            /** C_LOGIN_REGISTER gameSite */
            gameSite?: (string|null);

            /** C_LOGIN_REGISTER nickname */
            nickname?: (string|null);

            /** C_LOGIN_REGISTER heroId */
            heroId?: (number|null);

            /** C_LOGIN_REGISTER sparam */
            sparam?: (string|null);
        }

        /** Represents a C_LOGIN_REGISTER. */
        class C_LOGIN_REGISTER implements IC_LOGIN_REGISTER {

            /**
             * Constructs a new C_LOGIN_REGISTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LOGIN_REGISTER);

            /** C_LOGIN_REGISTER username. */
            public username: string;

            /** C_LOGIN_REGISTER gameSite. */
            public gameSite: string;

            /** C_LOGIN_REGISTER nickname. */
            public nickname: string;

            /** C_LOGIN_REGISTER heroId. */
            public heroId: number;

            /** C_LOGIN_REGISTER sparam. */
            public sparam: string;

            /**
             * Encodes the specified C_LOGIN_REGISTER message. Does not implicitly {@link com.message.C_LOGIN_REGISTER.verify|verify} messages.
             * @param message C_LOGIN_REGISTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LOGIN_REGISTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LOGIN_REGISTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LOGIN_REGISTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LOGIN_REGISTER;
        }

        /** Properties of a C_USER_LOGOUT. */
        interface IC_USER_LOGOUT {

            /** C_USER_LOGOUT playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a C_USER_LOGOUT. */
        class C_USER_LOGOUT implements IC_USER_LOGOUT {

            /**
             * Constructs a new C_USER_LOGOUT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_USER_LOGOUT);

            /** C_USER_LOGOUT playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified C_USER_LOGOUT message. Does not implicitly {@link com.message.C_USER_LOGOUT.verify|verify} messages.
             * @param message C_USER_LOGOUT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_USER_LOGOUT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_USER_LOGOUT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_USER_LOGOUT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_USER_LOGOUT;
        }

        /** Properties of a S_USER_LOGOUT. */
        interface IS_USER_LOGOUT {

            /** S_USER_LOGOUT playerId */
            playerId?: (number|Long|null);

            /** S_USER_LOGOUT beKickOut */
            beKickOut?: (boolean|null);
        }

        /** Represents a S_USER_LOGOUT. */
        class S_USER_LOGOUT implements IS_USER_LOGOUT {

            /**
             * Constructs a new S_USER_LOGOUT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_USER_LOGOUT);

            /** S_USER_LOGOUT playerId. */
            public playerId: (number|Long);

            /** S_USER_LOGOUT beKickOut. */
            public beKickOut: boolean;

            /**
             * Encodes the specified S_USER_LOGOUT message. Does not implicitly {@link com.message.S_USER_LOGOUT.verify|verify} messages.
             * @param message S_USER_LOGOUT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_USER_LOGOUT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_USER_LOGOUT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_USER_LOGOUT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_USER_LOGOUT;
        }

        /** Properties of a S_USER_LOGIN_BAN. */
        interface IS_USER_LOGIN_BAN {
        }

        /** Represents a S_USER_LOGIN_BAN. */
        class S_USER_LOGIN_BAN implements IS_USER_LOGIN_BAN {

            /**
             * Constructs a new S_USER_LOGIN_BAN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_USER_LOGIN_BAN);

            /**
             * Encodes the specified S_USER_LOGIN_BAN message. Does not implicitly {@link com.message.S_USER_LOGIN_BAN.verify|verify} messages.
             * @param message S_USER_LOGIN_BAN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_USER_LOGIN_BAN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_USER_LOGIN_BAN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_USER_LOGIN_BAN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_USER_LOGIN_BAN;
        }

        /** Properties of a C_SYNC_TIME. */
        interface IC_SYNC_TIME {
        }

        /** Represents a C_SYNC_TIME. */
        class C_SYNC_TIME implements IC_SYNC_TIME {

            /**
             * Constructs a new C_SYNC_TIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SYNC_TIME);

            /**
             * Encodes the specified C_SYNC_TIME message. Does not implicitly {@link com.message.C_SYNC_TIME.verify|verify} messages.
             * @param message C_SYNC_TIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SYNC_TIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SYNC_TIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SYNC_TIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SYNC_TIME;
        }

        /** Properties of a S_SYNC_TIME. */
        interface IS_SYNC_TIME {

            /** S_SYNC_TIME time */
            time?: (number|Long|null);
        }

        /** Represents a S_SYNC_TIME. */
        class S_SYNC_TIME implements IS_SYNC_TIME {

            /**
             * Constructs a new S_SYNC_TIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_TIME);

            /** S_SYNC_TIME time. */
            public time: (number|Long);

            /**
             * Encodes the specified S_SYNC_TIME message. Does not implicitly {@link com.message.S_SYNC_TIME.verify|verify} messages.
             * @param message S_SYNC_TIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_TIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_TIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_TIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_TIME;
        }

        /** Properties of a C_GET_NICKNAME_INFO. */
        interface IC_GET_NICKNAME_INFO {

            /** C_GET_NICKNAME_INFO nickName */
            nickName?: (string|null);
        }

        /** Represents a C_GET_NICKNAME_INFO. */
        class C_GET_NICKNAME_INFO implements IC_GET_NICKNAME_INFO {

            /**
             * Constructs a new C_GET_NICKNAME_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_NICKNAME_INFO);

            /** C_GET_NICKNAME_INFO nickName. */
            public nickName: string;

            /**
             * Encodes the specified C_GET_NICKNAME_INFO message. Does not implicitly {@link com.message.C_GET_NICKNAME_INFO.verify|verify} messages.
             * @param message C_GET_NICKNAME_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_NICKNAME_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_NICKNAME_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_NICKNAME_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_NICKNAME_INFO;
        }

        /** Properties of a S_GET_NICKNAME_INFO. */
        interface IS_GET_NICKNAME_INFO {

            /** S_GET_NICKNAME_INFO nickName */
            nickName?: (string|null);

            /** S_GET_NICKNAME_INFO canUse */
            canUse?: (boolean|null);
        }

        /** Represents a S_GET_NICKNAME_INFO. */
        class S_GET_NICKNAME_INFO implements IS_GET_NICKNAME_INFO {

            /**
             * Constructs a new S_GET_NICKNAME_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_NICKNAME_INFO);

            /** S_GET_NICKNAME_INFO nickName. */
            public nickName: string;

            /** S_GET_NICKNAME_INFO canUse. */
            public canUse: boolean;

            /**
             * Encodes the specified S_GET_NICKNAME_INFO message. Does not implicitly {@link com.message.S_GET_NICKNAME_INFO.verify|verify} messages.
             * @param message S_GET_NICKNAME_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_NICKNAME_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_NICKNAME_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_NICKNAME_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_NICKNAME_INFO;
        }

        /** Properties of a C_SEND_SDK_DATA. */
        interface IC_SEND_SDK_DATA {

            /** C_SEND_SDK_DATA reportStr */
            reportStr?: (string|null);

            /** C_SEND_SDK_DATA reportUrl */
            reportUrl?: (string|null);
        }

        /** Represents a C_SEND_SDK_DATA. */
        class C_SEND_SDK_DATA implements IC_SEND_SDK_DATA {

            /**
             * Constructs a new C_SEND_SDK_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SEND_SDK_DATA);

            /** C_SEND_SDK_DATA reportStr. */
            public reportStr: string;

            /** C_SEND_SDK_DATA reportUrl. */
            public reportUrl: string;

            /**
             * Encodes the specified C_SEND_SDK_DATA message. Does not implicitly {@link com.message.C_SEND_SDK_DATA.verify|verify} messages.
             * @param message C_SEND_SDK_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SEND_SDK_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SEND_SDK_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SEND_SDK_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SEND_SDK_DATA;
        }

        /** Properties of a S_SEND_SDK_DATA. */
        interface IS_SEND_SDK_DATA {

            /** S_SEND_SDK_DATA canUse */
            canUse?: (boolean|null);
        }

        /** Represents a S_SEND_SDK_DATA. */
        class S_SEND_SDK_DATA implements IS_SEND_SDK_DATA {

            /**
             * Constructs a new S_SEND_SDK_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SEND_SDK_DATA);

            /** S_SEND_SDK_DATA canUse. */
            public canUse: boolean;

            /**
             * Encodes the specified S_SEND_SDK_DATA message. Does not implicitly {@link com.message.S_SEND_SDK_DATA.verify|verify} messages.
             * @param message S_SEND_SDK_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SEND_SDK_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SEND_SDK_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SEND_SDK_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SEND_SDK_DATA;
        }

        /** Properties of a C_USER_LOGIN_INIT_FINISH. */
        interface IC_USER_LOGIN_INIT_FINISH {
        }

        /** Represents a C_USER_LOGIN_INIT_FINISH. */
        class C_USER_LOGIN_INIT_FINISH implements IC_USER_LOGIN_INIT_FINISH {

            /**
             * Constructs a new C_USER_LOGIN_INIT_FINISH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_USER_LOGIN_INIT_FINISH);

            /**
             * Encodes the specified C_USER_LOGIN_INIT_FINISH message. Does not implicitly {@link com.message.C_USER_LOGIN_INIT_FINISH.verify|verify} messages.
             * @param message C_USER_LOGIN_INIT_FINISH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_USER_LOGIN_INIT_FINISH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_USER_LOGIN_INIT_FINISH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_USER_LOGIN_INIT_FINISH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_USER_LOGIN_INIT_FINISH;
        }

        /** Properties of a S_USER_LOGIN_INIT_FINISH. */
        interface IS_USER_LOGIN_INIT_FINISH {

            /** S_USER_LOGIN_INIT_FINISH playerId */
            playerId?: (number|Long|null);

            /** S_USER_LOGIN_INIT_FINISH nickname */
            nickname?: (string|null);

            /** S_USER_LOGIN_INIT_FINISH heroId */
            heroId?: (number|null);

            /** S_USER_LOGIN_INIT_FINISH property */
            property?: (com.message.IPlayerPropertyMsg|null);

            /** S_USER_LOGIN_INIT_FINISH extMsg */
            extMsg?: (com.message.IPlayerExtMsg|null);

            /** S_USER_LOGIN_INIT_FINISH offlineMsg */
            offlineMsg?: (com.message.IOfflineHangupMsg|null);

            /** S_USER_LOGIN_INIT_FINISH playerTaskMsg */
            playerTaskMsg?: (com.message.IPlayerTaskMsg|null);

            /** S_USER_LOGIN_INIT_FINISH openServerDay */
            openServerDay?: (number|null);

            /** S_USER_LOGIN_INIT_FINISH openServetTime */
            openServetTime?: (number|Long|null);

            /** S_USER_LOGIN_INIT_FINISH mergeServerDay */
            mergeServerDay?: (number|null);

            /** S_USER_LOGIN_INIT_FINISH mergeSeverTime */
            mergeSeverTime?: (number|Long|null);

            /** S_USER_LOGIN_INIT_FINISH backpack */
            backpack?: (com.message.IPlayerBackpackMsg|null);

            /** S_USER_LOGIN_INIT_FINISH guildId */
            guildId?: (number|Long|null);

            /** S_USER_LOGIN_INIT_FINISH time */
            time?: (number|Long|null);

            /** S_USER_LOGIN_INIT_FINISH createTime */
            createTime?: (number|Long|null);

            /** S_USER_LOGIN_INIT_FINISH useTitle */
            useTitle?: (number|null);

            /** S_USER_LOGIN_INIT_FINISH useHeadFrame */
            useHeadFrame?: (number|null);

            /** S_USER_LOGIN_INIT_FINISH gmFlag */
            gmFlag?: (number|null);
        }

        /** Represents a S_USER_LOGIN_INIT_FINISH. */
        class S_USER_LOGIN_INIT_FINISH implements IS_USER_LOGIN_INIT_FINISH {

            /**
             * Constructs a new S_USER_LOGIN_INIT_FINISH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_USER_LOGIN_INIT_FINISH);

            /** S_USER_LOGIN_INIT_FINISH playerId. */
            public playerId: (number|Long);

            /** S_USER_LOGIN_INIT_FINISH nickname. */
            public nickname: string;

            /** S_USER_LOGIN_INIT_FINISH heroId. */
            public heroId: number;

            /** S_USER_LOGIN_INIT_FINISH property. */
            public property?: (com.message.IPlayerPropertyMsg|null);

            /** S_USER_LOGIN_INIT_FINISH extMsg. */
            public extMsg?: (com.message.IPlayerExtMsg|null);

            /** S_USER_LOGIN_INIT_FINISH offlineMsg. */
            public offlineMsg?: (com.message.IOfflineHangupMsg|null);

            /** S_USER_LOGIN_INIT_FINISH playerTaskMsg. */
            public playerTaskMsg?: (com.message.IPlayerTaskMsg|null);

            /** S_USER_LOGIN_INIT_FINISH openServerDay. */
            public openServerDay: number;

            /** S_USER_LOGIN_INIT_FINISH openServetTime. */
            public openServetTime: (number|Long);

            /** S_USER_LOGIN_INIT_FINISH mergeServerDay. */
            public mergeServerDay: number;

            /** S_USER_LOGIN_INIT_FINISH mergeSeverTime. */
            public mergeSeverTime: (number|Long);

            /** S_USER_LOGIN_INIT_FINISH backpack. */
            public backpack?: (com.message.IPlayerBackpackMsg|null);

            /** S_USER_LOGIN_INIT_FINISH guildId. */
            public guildId: (number|Long);

            /** S_USER_LOGIN_INIT_FINISH time. */
            public time: (number|Long);

            /** S_USER_LOGIN_INIT_FINISH createTime. */
            public createTime: (number|Long);

            /** S_USER_LOGIN_INIT_FINISH useTitle. */
            public useTitle: number;

            /** S_USER_LOGIN_INIT_FINISH useHeadFrame. */
            public useHeadFrame: number;

            /** S_USER_LOGIN_INIT_FINISH gmFlag. */
            public gmFlag: number;

            /**
             * Encodes the specified S_USER_LOGIN_INIT_FINISH message. Does not implicitly {@link com.message.S_USER_LOGIN_INIT_FINISH.verify|verify} messages.
             * @param message S_USER_LOGIN_INIT_FINISH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_USER_LOGIN_INIT_FINISH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_USER_LOGIN_INIT_FINISH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_USER_LOGIN_INIT_FINISH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_USER_LOGIN_INIT_FINISH;
        }

        /** Properties of an OfflineHangupMsg. */
        interface IOfflineHangupMsg {

            /** OfflineHangupMsg time */
            time?: (number|Long|null);

            /** OfflineHangupMsg exp */
            exp?: (number|Long|null);

            /** OfflineHangupMsg money */
            money?: (number|Long|null);

            /** OfflineHangupMsg itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** OfflineHangupMsg heroExp */
            heroExp?: (number|Long|null);

            /** OfflineHangupMsg state */
            state?: (number|null);
        }

        /** Represents an OfflineHangupMsg. */
        class OfflineHangupMsg implements IOfflineHangupMsg {

            /**
             * Constructs a new OfflineHangupMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IOfflineHangupMsg);

            /** OfflineHangupMsg time. */
            public time: (number|Long);

            /** OfflineHangupMsg exp. */
            public exp: (number|Long);

            /** OfflineHangupMsg money. */
            public money: (number|Long);

            /** OfflineHangupMsg itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** OfflineHangupMsg heroExp. */
            public heroExp: (number|Long);

            /** OfflineHangupMsg state. */
            public state: number;

            /**
             * Encodes the specified OfflineHangupMsg message. Does not implicitly {@link com.message.OfflineHangupMsg.verify|verify} messages.
             * @param message OfflineHangupMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IOfflineHangupMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an OfflineHangupMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OfflineHangupMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.OfflineHangupMsg;
        }

        /** Properties of a PlayerTaskMsg. */
        interface IPlayerTaskMsg {

            /** PlayerTaskMsg mainTask */
            mainTask?: (com.message.ITaskMsg|null);

            /** PlayerTaskMsg dailyTaskList */
            dailyTaskList?: (com.message.ITaskMsg[]|null);
        }

        /** Represents a PlayerTaskMsg. */
        class PlayerTaskMsg implements IPlayerTaskMsg {

            /**
             * Constructs a new PlayerTaskMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerTaskMsg);

            /** PlayerTaskMsg mainTask. */
            public mainTask?: (com.message.ITaskMsg|null);

            /** PlayerTaskMsg dailyTaskList. */
            public dailyTaskList: com.message.ITaskMsg[];

            /**
             * Encodes the specified PlayerTaskMsg message. Does not implicitly {@link com.message.PlayerTaskMsg.verify|verify} messages.
             * @param message PlayerTaskMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerTaskMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerTaskMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerTaskMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerTaskMsg;
        }

        /** Properties of a C_GET_GUIDE_ID. */
        interface IC_GET_GUIDE_ID {
        }

        /** Represents a C_GET_GUIDE_ID. */
        class C_GET_GUIDE_ID implements IC_GET_GUIDE_ID {

            /**
             * Constructs a new C_GET_GUIDE_ID.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUIDE_ID);

            /**
             * Encodes the specified C_GET_GUIDE_ID message. Does not implicitly {@link com.message.C_GET_GUIDE_ID.verify|verify} messages.
             * @param message C_GET_GUIDE_ID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUIDE_ID, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUIDE_ID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUIDE_ID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUIDE_ID;
        }

        /** Properties of a S_GET_GUIDE_ID. */
        interface IS_GET_GUIDE_ID {

            /** S_GET_GUIDE_ID id */
            id?: (number|null);
        }

        /** Represents a S_GET_GUIDE_ID. */
        class S_GET_GUIDE_ID implements IS_GET_GUIDE_ID {

            /**
             * Constructs a new S_GET_GUIDE_ID.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUIDE_ID);

            /** S_GET_GUIDE_ID id. */
            public id: number;

            /**
             * Encodes the specified S_GET_GUIDE_ID message. Does not implicitly {@link com.message.S_GET_GUIDE_ID.verify|verify} messages.
             * @param message S_GET_GUIDE_ID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUIDE_ID, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUIDE_ID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUIDE_ID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUIDE_ID;
        }

        /** Properties of a C_SAVE_GUIDE_ID. */
        interface IC_SAVE_GUIDE_ID {

            /** C_SAVE_GUIDE_ID id */
            id?: (number|null);
        }

        /** Represents a C_SAVE_GUIDE_ID. */
        class C_SAVE_GUIDE_ID implements IC_SAVE_GUIDE_ID {

            /**
             * Constructs a new C_SAVE_GUIDE_ID.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SAVE_GUIDE_ID);

            /** C_SAVE_GUIDE_ID id. */
            public id: number;

            /**
             * Encodes the specified C_SAVE_GUIDE_ID message. Does not implicitly {@link com.message.C_SAVE_GUIDE_ID.verify|verify} messages.
             * @param message C_SAVE_GUIDE_ID message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SAVE_GUIDE_ID, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SAVE_GUIDE_ID message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SAVE_GUIDE_ID
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SAVE_GUIDE_ID;
        }

        /** Properties of a C_GET_MODULE_REWARD_INFO. */
        interface IC_GET_MODULE_REWARD_INFO {
        }

        /** Represents a C_GET_MODULE_REWARD_INFO. */
        class C_GET_MODULE_REWARD_INFO implements IC_GET_MODULE_REWARD_INFO {

            /**
             * Constructs a new C_GET_MODULE_REWARD_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MODULE_REWARD_INFO);

            /**
             * Encodes the specified C_GET_MODULE_REWARD_INFO message. Does not implicitly {@link com.message.C_GET_MODULE_REWARD_INFO.verify|verify} messages.
             * @param message C_GET_MODULE_REWARD_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MODULE_REWARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MODULE_REWARD_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MODULE_REWARD_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MODULE_REWARD_INFO;
        }

        /** Properties of a S_GET_MODULE_REWARD_INFO. */
        interface IS_GET_MODULE_REWARD_INFO {

            /** S_GET_MODULE_REWARD_INFO ids */
            ids?: (number[]|null);
        }

        /** Represents a S_GET_MODULE_REWARD_INFO. */
        class S_GET_MODULE_REWARD_INFO implements IS_GET_MODULE_REWARD_INFO {

            /**
             * Constructs a new S_GET_MODULE_REWARD_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MODULE_REWARD_INFO);

            /** S_GET_MODULE_REWARD_INFO ids. */
            public ids: number[];

            /**
             * Encodes the specified S_GET_MODULE_REWARD_INFO message. Does not implicitly {@link com.message.S_GET_MODULE_REWARD_INFO.verify|verify} messages.
             * @param message S_GET_MODULE_REWARD_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MODULE_REWARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MODULE_REWARD_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MODULE_REWARD_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MODULE_REWARD_INFO;
        }

        /** Properties of a C_GET_MODULE_REWARD. */
        interface IC_GET_MODULE_REWARD {

            /** C_GET_MODULE_REWARD id */
            id?: (number|null);
        }

        /** Represents a C_GET_MODULE_REWARD. */
        class C_GET_MODULE_REWARD implements IC_GET_MODULE_REWARD {

            /**
             * Constructs a new C_GET_MODULE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MODULE_REWARD);

            /** C_GET_MODULE_REWARD id. */
            public id: number;

            /**
             * Encodes the specified C_GET_MODULE_REWARD message. Does not implicitly {@link com.message.C_GET_MODULE_REWARD.verify|verify} messages.
             * @param message C_GET_MODULE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MODULE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MODULE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MODULE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MODULE_REWARD;
        }

        /** Properties of a S_GET_MODULE_REWARD. */
        interface IS_GET_MODULE_REWARD {

            /** S_GET_MODULE_REWARD id */
            id?: (number|null);

            /** S_GET_MODULE_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_MODULE_REWARD. */
        class S_GET_MODULE_REWARD implements IS_GET_MODULE_REWARD {

            /**
             * Constructs a new S_GET_MODULE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MODULE_REWARD);

            /** S_GET_MODULE_REWARD id. */
            public id: number;

            /** S_GET_MODULE_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_MODULE_REWARD message. Does not implicitly {@link com.message.S_GET_MODULE_REWARD.verify|verify} messages.
             * @param message S_GET_MODULE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MODULE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MODULE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MODULE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MODULE_REWARD;
        }

        /** Properties of a C_SYNC_LOAD_FINISH. */
        interface IC_SYNC_LOAD_FINISH {
        }

        /** Represents a C_SYNC_LOAD_FINISH. */
        class C_SYNC_LOAD_FINISH implements IC_SYNC_LOAD_FINISH {

            /**
             * Constructs a new C_SYNC_LOAD_FINISH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SYNC_LOAD_FINISH);

            /**
             * Encodes the specified C_SYNC_LOAD_FINISH message. Does not implicitly {@link com.message.C_SYNC_LOAD_FINISH.verify|verify} messages.
             * @param message C_SYNC_LOAD_FINISH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SYNC_LOAD_FINISH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SYNC_LOAD_FINISH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SYNC_LOAD_FINISH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SYNC_LOAD_FINISH;
        }

        /** Properties of a S_LOGIN_OFFLINE_HANGUP_PUSH. */
        interface IS_LOGIN_OFFLINE_HANGUP_PUSH {

            /** S_LOGIN_OFFLINE_HANGUP_PUSH offlineMsg */
            offlineMsg?: (com.message.IOfflineHangupMsg|null);
        }

        /** Represents a S_LOGIN_OFFLINE_HANGUP_PUSH. */
        class S_LOGIN_OFFLINE_HANGUP_PUSH implements IS_LOGIN_OFFLINE_HANGUP_PUSH {

            /**
             * Constructs a new S_LOGIN_OFFLINE_HANGUP_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LOGIN_OFFLINE_HANGUP_PUSH);

            /** S_LOGIN_OFFLINE_HANGUP_PUSH offlineMsg. */
            public offlineMsg?: (com.message.IOfflineHangupMsg|null);

            /**
             * Encodes the specified S_LOGIN_OFFLINE_HANGUP_PUSH message. Does not implicitly {@link com.message.S_LOGIN_OFFLINE_HANGUP_PUSH.verify|verify} messages.
             * @param message S_LOGIN_OFFLINE_HANGUP_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LOGIN_OFFLINE_HANGUP_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LOGIN_OFFLINE_HANGUP_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LOGIN_OFFLINE_HANGUP_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LOGIN_OFFLINE_HANGUP_PUSH;
        }

        /** Properties of a S_LOGIN_BACK_PACK_PUSH. */
        interface IS_LOGIN_BACK_PACK_PUSH {

            /** S_LOGIN_BACK_PACK_PUSH backpack */
            backpack?: (com.message.IPlayerBackpackMsg|null);
        }

        /** Represents a S_LOGIN_BACK_PACK_PUSH. */
        class S_LOGIN_BACK_PACK_PUSH implements IS_LOGIN_BACK_PACK_PUSH {

            /**
             * Constructs a new S_LOGIN_BACK_PACK_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LOGIN_BACK_PACK_PUSH);

            /** S_LOGIN_BACK_PACK_PUSH backpack. */
            public backpack?: (com.message.IPlayerBackpackMsg|null);

            /**
             * Encodes the specified S_LOGIN_BACK_PACK_PUSH message. Does not implicitly {@link com.message.S_LOGIN_BACK_PACK_PUSH.verify|verify} messages.
             * @param message S_LOGIN_BACK_PACK_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LOGIN_BACK_PACK_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LOGIN_BACK_PACK_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LOGIN_BACK_PACK_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LOGIN_BACK_PACK_PUSH;
        }

        /** Properties of a C_TASK_RECEIVE_REWARD. */
        interface IC_TASK_RECEIVE_REWARD {

            /** C_TASK_RECEIVE_REWARD type */
            type?: (number|null);

            /** C_TASK_RECEIVE_REWARD taskId */
            taskId?: (number|null);
        }

        /** Represents a C_TASK_RECEIVE_REWARD. */
        class C_TASK_RECEIVE_REWARD implements IC_TASK_RECEIVE_REWARD {

            /**
             * Constructs a new C_TASK_RECEIVE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TASK_RECEIVE_REWARD);

            /** C_TASK_RECEIVE_REWARD type. */
            public type: number;

            /** C_TASK_RECEIVE_REWARD taskId. */
            public taskId: number;

            /**
             * Encodes the specified C_TASK_RECEIVE_REWARD message. Does not implicitly {@link com.message.C_TASK_RECEIVE_REWARD.verify|verify} messages.
             * @param message C_TASK_RECEIVE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TASK_RECEIVE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TASK_RECEIVE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TASK_RECEIVE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TASK_RECEIVE_REWARD;
        }

        /** Properties of a S_TASK_RECEIVE_REWARD. */
        interface IS_TASK_RECEIVE_REWARD {

            /** S_TASK_RECEIVE_REWARD type */
            type?: (number|null);

            /** S_TASK_RECEIVE_REWARD taskId */
            taskId?: (number|null);

            /** S_TASK_RECEIVE_REWARD exp */
            exp?: (number|null);

            /** S_TASK_RECEIVE_REWARD money */
            money?: (number|null);

            /** S_TASK_RECEIVE_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_TASK_RECEIVE_REWARD nextTaskId */
            nextTaskId?: (number|null);
        }

        /** Represents a S_TASK_RECEIVE_REWARD. */
        class S_TASK_RECEIVE_REWARD implements IS_TASK_RECEIVE_REWARD {

            /**
             * Constructs a new S_TASK_RECEIVE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TASK_RECEIVE_REWARD);

            /** S_TASK_RECEIVE_REWARD type. */
            public type: number;

            /** S_TASK_RECEIVE_REWARD taskId. */
            public taskId: number;

            /** S_TASK_RECEIVE_REWARD exp. */
            public exp: number;

            /** S_TASK_RECEIVE_REWARD money. */
            public money: number;

            /** S_TASK_RECEIVE_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_TASK_RECEIVE_REWARD nextTaskId. */
            public nextTaskId: number;

            /**
             * Encodes the specified S_TASK_RECEIVE_REWARD message. Does not implicitly {@link com.message.S_TASK_RECEIVE_REWARD.verify|verify} messages.
             * @param message S_TASK_RECEIVE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TASK_RECEIVE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TASK_RECEIVE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TASK_RECEIVE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TASK_RECEIVE_REWARD;
        }

        /** Properties of a TaskMsg. */
        interface ITaskMsg {

            /** TaskMsg taskId */
            taskId?: (number|null);

            /** TaskMsg achieve */
            achieve?: (number|null);

            /** TaskMsg state */
            state?: (number|null);

            /** TaskMsg resetTime */
            resetTime?: (number|null);
        }

        /** Represents a TaskMsg. */
        class TaskMsg implements ITaskMsg {

            /**
             * Constructs a new TaskMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITaskMsg);

            /** TaskMsg taskId. */
            public taskId: number;

            /** TaskMsg achieve. */
            public achieve: number;

            /** TaskMsg state. */
            public state: number;

            /** TaskMsg resetTime. */
            public resetTime: number;

            /**
             * Encodes the specified TaskMsg message. Does not implicitly {@link com.message.TaskMsg.verify|verify} messages.
             * @param message TaskMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITaskMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TaskMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TaskMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TaskMsg;
        }

        /** Properties of a S_SYNC_TASK_UPDATE. */
        interface IS_SYNC_TASK_UPDATE {

            /** S_SYNC_TASK_UPDATE type */
            type?: (number|null);

            /** S_SYNC_TASK_UPDATE tasks */
            tasks?: (com.message.ITaskMsg[]|null);

            /** S_SYNC_TASK_UPDATE removes */
            removes?: (number|null);
        }

        /** Represents a S_SYNC_TASK_UPDATE. */
        class S_SYNC_TASK_UPDATE implements IS_SYNC_TASK_UPDATE {

            /**
             * Constructs a new S_SYNC_TASK_UPDATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_TASK_UPDATE);

            /** S_SYNC_TASK_UPDATE type. */
            public type: number;

            /** S_SYNC_TASK_UPDATE tasks. */
            public tasks: com.message.ITaskMsg[];

            /** S_SYNC_TASK_UPDATE removes. */
            public removes: number;

            /**
             * Encodes the specified S_SYNC_TASK_UPDATE message. Does not implicitly {@link com.message.S_SYNC_TASK_UPDATE.verify|verify} messages.
             * @param message S_SYNC_TASK_UPDATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_TASK_UPDATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_TASK_UPDATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_TASK_UPDATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_TASK_UPDATE;
        }

        /** Properties of a C_GET_TASK_INFO. */
        interface IC_GET_TASK_INFO {

            /** C_GET_TASK_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_TASK_INFO. */
        class C_GET_TASK_INFO implements IC_GET_TASK_INFO {

            /**
             * Constructs a new C_GET_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TASK_INFO);

            /** C_GET_TASK_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_TASK_INFO message. Does not implicitly {@link com.message.C_GET_TASK_INFO.verify|verify} messages.
             * @param message C_GET_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TASK_INFO;
        }

        /** Properties of a S_GET_TASK_INFO. */
        interface IS_GET_TASK_INFO {

            /** S_GET_TASK_INFO type */
            type?: (number|null);

            /** S_GET_TASK_INFO taskInfos */
            taskInfos?: (com.message.ITaskMsg[]|null);
        }

        /** Represents a S_GET_TASK_INFO. */
        class S_GET_TASK_INFO implements IS_GET_TASK_INFO {

            /**
             * Constructs a new S_GET_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TASK_INFO);

            /** S_GET_TASK_INFO type. */
            public type: number;

            /** S_GET_TASK_INFO taskInfos. */
            public taskInfos: com.message.ITaskMsg[];

            /**
             * Encodes the specified S_GET_TASK_INFO message. Does not implicitly {@link com.message.S_GET_TASK_INFO.verify|verify} messages.
             * @param message S_GET_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TASK_INFO;
        }

        /** Properties of a C_GET_GUILD_TASK_INFO. */
        interface IC_GET_GUILD_TASK_INFO {
        }

        /** Represents a C_GET_GUILD_TASK_INFO. */
        class C_GET_GUILD_TASK_INFO implements IC_GET_GUILD_TASK_INFO {

            /**
             * Constructs a new C_GET_GUILD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_GUILD_TASK_INFO);

            /**
             * Encodes the specified C_GET_GUILD_TASK_INFO message. Does not implicitly {@link com.message.C_GET_GUILD_TASK_INFO.verify|verify} messages.
             * @param message C_GET_GUILD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_GUILD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_GUILD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_GUILD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_GUILD_TASK_INFO;
        }

        /** Properties of a S_GET_GUILD_TASK_INFO. */
        interface IS_GET_GUILD_TASK_INFO {

            /** S_GET_GUILD_TASK_INFO guildTaskMsg */
            guildTaskMsg?: (com.message.IGuildTaskMsg|null);

            /** S_GET_GUILD_TASK_INFO tasks */
            tasks?: (com.message.ITaskMsg[]|null);
        }

        /** Represents a S_GET_GUILD_TASK_INFO. */
        class S_GET_GUILD_TASK_INFO implements IS_GET_GUILD_TASK_INFO {

            /**
             * Constructs a new S_GET_GUILD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_GUILD_TASK_INFO);

            /** S_GET_GUILD_TASK_INFO guildTaskMsg. */
            public guildTaskMsg?: (com.message.IGuildTaskMsg|null);

            /** S_GET_GUILD_TASK_INFO tasks. */
            public tasks: com.message.ITaskMsg[];

            /**
             * Encodes the specified S_GET_GUILD_TASK_INFO message. Does not implicitly {@link com.message.S_GET_GUILD_TASK_INFO.verify|verify} messages.
             * @param message S_GET_GUILD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_GUILD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_GUILD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_GUILD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_GUILD_TASK_INFO;
        }

        /** Properties of a GuildTaskMsg. */
        interface IGuildTaskMsg {

            /** GuildTaskMsg count */
            count?: (number|null);

            /** GuildTaskMsg refreshCount */
            refreshCount?: (number|null);

            /** GuildTaskMsg addCountTime */
            addCountTime?: (number|Long|null);
        }

        /** Represents a GuildTaskMsg. */
        class GuildTaskMsg implements IGuildTaskMsg {

            /**
             * Constructs a new GuildTaskMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGuildTaskMsg);

            /** GuildTaskMsg count. */
            public count: number;

            /** GuildTaskMsg refreshCount. */
            public refreshCount: number;

            /** GuildTaskMsg addCountTime. */
            public addCountTime: (number|Long);

            /**
             * Encodes the specified GuildTaskMsg message. Does not implicitly {@link com.message.GuildTaskMsg.verify|verify} messages.
             * @param message GuildTaskMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGuildTaskMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GuildTaskMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GuildTaskMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GuildTaskMsg;
        }

        /** Properties of a C_REFRESH_GUILD_TASK. */
        interface IC_REFRESH_GUILD_TASK {

            /** C_REFRESH_GUILD_TASK type */
            type?: (number|null);
        }

        /** Represents a C_REFRESH_GUILD_TASK. */
        class C_REFRESH_GUILD_TASK implements IC_REFRESH_GUILD_TASK {

            /**
             * Constructs a new C_REFRESH_GUILD_TASK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REFRESH_GUILD_TASK);

            /** C_REFRESH_GUILD_TASK type. */
            public type: number;

            /**
             * Encodes the specified C_REFRESH_GUILD_TASK message. Does not implicitly {@link com.message.C_REFRESH_GUILD_TASK.verify|verify} messages.
             * @param message C_REFRESH_GUILD_TASK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REFRESH_GUILD_TASK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REFRESH_GUILD_TASK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REFRESH_GUILD_TASK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REFRESH_GUILD_TASK;
        }

        /** Properties of a S_REFRESH_GUILD_TASK. */
        interface IS_REFRESH_GUILD_TASK {

            /** S_REFRESH_GUILD_TASK guildTaskMsg */
            guildTaskMsg?: (com.message.IGuildTaskMsg|null);

            /** S_REFRESH_GUILD_TASK tasks */
            tasks?: (com.message.ITaskMsg[]|null);
        }

        /** Represents a S_REFRESH_GUILD_TASK. */
        class S_REFRESH_GUILD_TASK implements IS_REFRESH_GUILD_TASK {

            /**
             * Constructs a new S_REFRESH_GUILD_TASK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REFRESH_GUILD_TASK);

            /** S_REFRESH_GUILD_TASK guildTaskMsg. */
            public guildTaskMsg?: (com.message.IGuildTaskMsg|null);

            /** S_REFRESH_GUILD_TASK tasks. */
            public tasks: com.message.ITaskMsg[];

            /**
             * Encodes the specified S_REFRESH_GUILD_TASK message. Does not implicitly {@link com.message.S_REFRESH_GUILD_TASK.verify|verify} messages.
             * @param message S_REFRESH_GUILD_TASK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REFRESH_GUILD_TASK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REFRESH_GUILD_TASK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REFRESH_GUILD_TASK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REFRESH_GUILD_TASK;
        }

        /** Properties of a C_UPDATE_TASK_DATA. */
        interface IC_UPDATE_TASK_DATA {

            /** C_UPDATE_TASK_DATA type */
            type?: (number|null);

            /** C_UPDATE_TASK_DATA taskId */
            taskId?: (number|null);

            /** C_UPDATE_TASK_DATA count */
            count?: (number|null);
        }

        /** Represents a C_UPDATE_TASK_DATA. */
        class C_UPDATE_TASK_DATA implements IC_UPDATE_TASK_DATA {

            /**
             * Constructs a new C_UPDATE_TASK_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_UPDATE_TASK_DATA);

            /** C_UPDATE_TASK_DATA type. */
            public type: number;

            /** C_UPDATE_TASK_DATA taskId. */
            public taskId: number;

            /** C_UPDATE_TASK_DATA count. */
            public count: number;

            /**
             * Encodes the specified C_UPDATE_TASK_DATA message. Does not implicitly {@link com.message.C_UPDATE_TASK_DATA.verify|verify} messages.
             * @param message C_UPDATE_TASK_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_UPDATE_TASK_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_UPDATE_TASK_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_UPDATE_TASK_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_UPDATE_TASK_DATA;
        }

        /** Properties of a S_UPDATE_TASK_DATA. */
        interface IS_UPDATE_TASK_DATA {

            /** S_UPDATE_TASK_DATA type */
            type?: (number|null);

            /** S_UPDATE_TASK_DATA taskId */
            taskId?: (number|null);
        }

        /** Represents a S_UPDATE_TASK_DATA. */
        class S_UPDATE_TASK_DATA implements IS_UPDATE_TASK_DATA {

            /**
             * Constructs a new S_UPDATE_TASK_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPDATE_TASK_DATA);

            /** S_UPDATE_TASK_DATA type. */
            public type: number;

            /** S_UPDATE_TASK_DATA taskId. */
            public taskId: number;

            /**
             * Encodes the specified S_UPDATE_TASK_DATA message. Does not implicitly {@link com.message.S_UPDATE_TASK_DATA.verify|verify} messages.
             * @param message S_UPDATE_TASK_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPDATE_TASK_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPDATE_TASK_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPDATE_TASK_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPDATE_TASK_DATA;
        }

        /** Properties of a C_GET_LUCK_CHANCE_INFO. */
        interface IC_GET_LUCK_CHANCE_INFO {
        }

        /** Represents a C_GET_LUCK_CHANCE_INFO. */
        class C_GET_LUCK_CHANCE_INFO implements IC_GET_LUCK_CHANCE_INFO {

            /**
             * Constructs a new C_GET_LUCK_CHANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LUCK_CHANCE_INFO);

            /**
             * Encodes the specified C_GET_LUCK_CHANCE_INFO message. Does not implicitly {@link com.message.C_GET_LUCK_CHANCE_INFO.verify|verify} messages.
             * @param message C_GET_LUCK_CHANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LUCK_CHANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LUCK_CHANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LUCK_CHANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LUCK_CHANCE_INFO;
        }

        /** Properties of a S_GET_LUCK_CHANCE_INFO. */
        interface IS_GET_LUCK_CHANCE_INFO {

            /** S_GET_LUCK_CHANCE_INFO leaveTime */
            leaveTime?: (number|null);

            /** S_GET_LUCK_CHANCE_INFO luckType */
            luckType?: (number|null);

            /** S_GET_LUCK_CHANCE_INFO player */
            player?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_LUCK_CHANCE_INFO shopId */
            shopId?: (number|null);

            /** S_GET_LUCK_CHANCE_INFO itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_GET_LUCK_CHANCE_INFO instanceId */
            instanceId?: (number|null);
        }

        /** Represents a S_GET_LUCK_CHANCE_INFO. */
        class S_GET_LUCK_CHANCE_INFO implements IS_GET_LUCK_CHANCE_INFO {

            /**
             * Constructs a new S_GET_LUCK_CHANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LUCK_CHANCE_INFO);

            /** S_GET_LUCK_CHANCE_INFO leaveTime. */
            public leaveTime: number;

            /** S_GET_LUCK_CHANCE_INFO luckType. */
            public luckType: number;

            /** S_GET_LUCK_CHANCE_INFO player. */
            public player?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_LUCK_CHANCE_INFO shopId. */
            public shopId: number;

            /** S_GET_LUCK_CHANCE_INFO itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_GET_LUCK_CHANCE_INFO instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified S_GET_LUCK_CHANCE_INFO message. Does not implicitly {@link com.message.S_GET_LUCK_CHANCE_INFO.verify|verify} messages.
             * @param message S_GET_LUCK_CHANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LUCK_CHANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LUCK_CHANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LUCK_CHANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LUCK_CHANCE_INFO;
        }

        /** Properties of a C_LUCK_CHANCE_OPEN. */
        interface IC_LUCK_CHANCE_OPEN {

            /** C_LUCK_CHANCE_OPEN luckType */
            luckType?: (number|null);
        }

        /** Represents a C_LUCK_CHANCE_OPEN. */
        class C_LUCK_CHANCE_OPEN implements IC_LUCK_CHANCE_OPEN {

            /**
             * Constructs a new C_LUCK_CHANCE_OPEN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LUCK_CHANCE_OPEN);

            /** C_LUCK_CHANCE_OPEN luckType. */
            public luckType: number;

            /**
             * Encodes the specified C_LUCK_CHANCE_OPEN message. Does not implicitly {@link com.message.C_LUCK_CHANCE_OPEN.verify|verify} messages.
             * @param message C_LUCK_CHANCE_OPEN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LUCK_CHANCE_OPEN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LUCK_CHANCE_OPEN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LUCK_CHANCE_OPEN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LUCK_CHANCE_OPEN;
        }

        /** Properties of a S_LUCK_CHANCE_OPEN. */
        interface IS_LUCK_CHANCE_OPEN {

            /** S_LUCK_CHANCE_OPEN itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_LUCK_CHANCE_OPEN. */
        class S_LUCK_CHANCE_OPEN implements IS_LUCK_CHANCE_OPEN {

            /**
             * Constructs a new S_LUCK_CHANCE_OPEN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LUCK_CHANCE_OPEN);

            /** S_LUCK_CHANCE_OPEN itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_LUCK_CHANCE_OPEN message. Does not implicitly {@link com.message.S_LUCK_CHANCE_OPEN.verify|verify} messages.
             * @param message S_LUCK_CHANCE_OPEN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LUCK_CHANCE_OPEN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LUCK_CHANCE_OPEN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LUCK_CHANCE_OPEN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LUCK_CHANCE_OPEN;
        }

        /** Properties of a S_LUCK_CHANCE_PUSH. */
        interface IS_LUCK_CHANCE_PUSH {

            /** S_LUCK_CHANCE_PUSH leaveTime */
            leaveTime?: (number|null);
        }

        /** Represents a S_LUCK_CHANCE_PUSH. */
        class S_LUCK_CHANCE_PUSH implements IS_LUCK_CHANCE_PUSH {

            /**
             * Constructs a new S_LUCK_CHANCE_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LUCK_CHANCE_PUSH);

            /** S_LUCK_CHANCE_PUSH leaveTime. */
            public leaveTime: number;

            /**
             * Encodes the specified S_LUCK_CHANCE_PUSH message. Does not implicitly {@link com.message.S_LUCK_CHANCE_PUSH.verify|verify} messages.
             * @param message S_LUCK_CHANCE_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LUCK_CHANCE_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LUCK_CHANCE_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LUCK_CHANCE_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LUCK_CHANCE_PUSH;
        }

        /** Properties of a MailHead. */
        interface IMailHead {

            /** MailHead mailId */
            mailId?: (number|Long|null);

            /** MailHead configId */
            configId?: (string|null);

            /** MailHead readable */
            readable?: (number|null);

            /** MailHead sendTime */
            sendTime?: (number|Long|null);

            /** MailHead hasAccessory */
            hasAccessory?: (number|null);

            /** MailHead accessoryReceived */
            accessoryReceived?: (number|null);
        }

        /** Represents a MailHead. */
        class MailHead implements IMailHead {

            /**
             * Constructs a new MailHead.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMailHead);

            /** MailHead mailId. */
            public mailId: (number|Long);

            /** MailHead configId. */
            public configId: string;

            /** MailHead readable. */
            public readable: number;

            /** MailHead sendTime. */
            public sendTime: (number|Long);

            /** MailHead hasAccessory. */
            public hasAccessory: number;

            /** MailHead accessoryReceived. */
            public accessoryReceived: number;

            /**
             * Encodes the specified MailHead message. Does not implicitly {@link com.message.MailHead.verify|verify} messages.
             * @param message MailHead message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMailHead, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MailHead message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MailHead
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MailHead;
        }

        /** Properties of a MailInfo. */
        interface IMailInfo {

            /** MailInfo mailId */
            mailId?: (number|Long|null);

            /** MailInfo configId */
            configId?: (string|null);

            /** MailInfo content */
            content?: (string|null);

            /** MailInfo readable */
            readable?: (number|null);

            /** MailInfo sendTime */
            sendTime?: (number|Long|null);

            /** MailInfo accessoryReceived */
            accessoryReceived?: (number|null);

            /** MailInfo accessory */
            accessory?: (com.message.IItemMsg[]|null);
        }

        /** Represents a MailInfo. */
        class MailInfo implements IMailInfo {

            /**
             * Constructs a new MailInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMailInfo);

            /** MailInfo mailId. */
            public mailId: (number|Long);

            /** MailInfo configId. */
            public configId: string;

            /** MailInfo content. */
            public content: string;

            /** MailInfo readable. */
            public readable: number;

            /** MailInfo sendTime. */
            public sendTime: (number|Long);

            /** MailInfo accessoryReceived. */
            public accessoryReceived: number;

            /** MailInfo accessory. */
            public accessory: com.message.IItemMsg[];

            /**
             * Encodes the specified MailInfo message. Does not implicitly {@link com.message.MailInfo.verify|verify} messages.
             * @param message MailInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMailInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MailInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MailInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MailInfo;
        }

        /** Properties of a C_LIST_MAIL. */
        interface IC_LIST_MAIL {
        }

        /** Represents a C_LIST_MAIL. */
        class C_LIST_MAIL implements IC_LIST_MAIL {

            /**
             * Constructs a new C_LIST_MAIL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LIST_MAIL);

            /**
             * Encodes the specified C_LIST_MAIL message. Does not implicitly {@link com.message.C_LIST_MAIL.verify|verify} messages.
             * @param message C_LIST_MAIL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LIST_MAIL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LIST_MAIL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LIST_MAIL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LIST_MAIL;
        }

        /** Properties of a S_LIST_MAIL. */
        interface IS_LIST_MAIL {

            /** S_LIST_MAIL mailList */
            mailList?: (com.message.IMailHead[]|null);
        }

        /** Represents a S_LIST_MAIL. */
        class S_LIST_MAIL implements IS_LIST_MAIL {

            /**
             * Constructs a new S_LIST_MAIL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LIST_MAIL);

            /** S_LIST_MAIL mailList. */
            public mailList: com.message.IMailHead[];

            /**
             * Encodes the specified S_LIST_MAIL message. Does not implicitly {@link com.message.S_LIST_MAIL.verify|verify} messages.
             * @param message S_LIST_MAIL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LIST_MAIL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LIST_MAIL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LIST_MAIL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LIST_MAIL;
        }

        /** Properties of a C_READ_MAILINFO. */
        interface IC_READ_MAILINFO {

            /** C_READ_MAILINFO mailId */
            mailId?: (number|Long|null);
        }

        /** Represents a C_READ_MAILINFO. */
        class C_READ_MAILINFO implements IC_READ_MAILINFO {

            /**
             * Constructs a new C_READ_MAILINFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_READ_MAILINFO);

            /** C_READ_MAILINFO mailId. */
            public mailId: (number|Long);

            /**
             * Encodes the specified C_READ_MAILINFO message. Does not implicitly {@link com.message.C_READ_MAILINFO.verify|verify} messages.
             * @param message C_READ_MAILINFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_READ_MAILINFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_READ_MAILINFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_READ_MAILINFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_READ_MAILINFO;
        }

        /** Properties of a S_READ_MAIL_INFO. */
        interface IS_READ_MAIL_INFO {

            /** S_READ_MAIL_INFO mailInfo */
            mailInfo?: (com.message.IMailInfo|null);
        }

        /** Represents a S_READ_MAIL_INFO. */
        class S_READ_MAIL_INFO implements IS_READ_MAIL_INFO {

            /**
             * Constructs a new S_READ_MAIL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_READ_MAIL_INFO);

            /** S_READ_MAIL_INFO mailInfo. */
            public mailInfo?: (com.message.IMailInfo|null);

            /**
             * Encodes the specified S_READ_MAIL_INFO message. Does not implicitly {@link com.message.S_READ_MAIL_INFO.verify|verify} messages.
             * @param message S_READ_MAIL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_READ_MAIL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_READ_MAIL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_READ_MAIL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_READ_MAIL_INFO;
        }

        /** Properties of a C_RECEIVE_MAIL_ACCESSORY. */
        interface IC_RECEIVE_MAIL_ACCESSORY {

            /** C_RECEIVE_MAIL_ACCESSORY mailId */
            mailId?: (number|Long|null);
        }

        /** Represents a C_RECEIVE_MAIL_ACCESSORY. */
        class C_RECEIVE_MAIL_ACCESSORY implements IC_RECEIVE_MAIL_ACCESSORY {

            /**
             * Constructs a new C_RECEIVE_MAIL_ACCESSORY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_RECEIVE_MAIL_ACCESSORY);

            /** C_RECEIVE_MAIL_ACCESSORY mailId. */
            public mailId: (number|Long);

            /**
             * Encodes the specified C_RECEIVE_MAIL_ACCESSORY message. Does not implicitly {@link com.message.C_RECEIVE_MAIL_ACCESSORY.verify|verify} messages.
             * @param message C_RECEIVE_MAIL_ACCESSORY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_RECEIVE_MAIL_ACCESSORY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_RECEIVE_MAIL_ACCESSORY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_RECEIVE_MAIL_ACCESSORY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_RECEIVE_MAIL_ACCESSORY;
        }

        /** Properties of a S_RECEIVE_MAIL_ACCESSORY. */
        interface IS_RECEIVE_MAIL_ACCESSORY {

            /** S_RECEIVE_MAIL_ACCESSORY mailId */
            mailId?: (number|Long|null);

            /** S_RECEIVE_MAIL_ACCESSORY itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_RECEIVE_MAIL_ACCESSORY. */
        class S_RECEIVE_MAIL_ACCESSORY implements IS_RECEIVE_MAIL_ACCESSORY {

            /**
             * Constructs a new S_RECEIVE_MAIL_ACCESSORY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RECEIVE_MAIL_ACCESSORY);

            /** S_RECEIVE_MAIL_ACCESSORY mailId. */
            public mailId: (number|Long);

            /** S_RECEIVE_MAIL_ACCESSORY itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_RECEIVE_MAIL_ACCESSORY message. Does not implicitly {@link com.message.S_RECEIVE_MAIL_ACCESSORY.verify|verify} messages.
             * @param message S_RECEIVE_MAIL_ACCESSORY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RECEIVE_MAIL_ACCESSORY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RECEIVE_MAIL_ACCESSORY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RECEIVE_MAIL_ACCESSORY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RECEIVE_MAIL_ACCESSORY;
        }

        /** Properties of a C_DELETE_MAIL. */
        interface IC_DELETE_MAIL {

            /** C_DELETE_MAIL mailId */
            mailId?: ((number|Long)[]|null);
        }

        /** Represents a C_DELETE_MAIL. */
        class C_DELETE_MAIL implements IC_DELETE_MAIL {

            /**
             * Constructs a new C_DELETE_MAIL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DELETE_MAIL);

            /** C_DELETE_MAIL mailId. */
            public mailId: (number|Long)[];

            /**
             * Encodes the specified C_DELETE_MAIL message. Does not implicitly {@link com.message.C_DELETE_MAIL.verify|verify} messages.
             * @param message C_DELETE_MAIL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DELETE_MAIL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DELETE_MAIL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DELETE_MAIL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DELETE_MAIL;
        }

        /** Properties of a S_DELETE_MAIL. */
        interface IS_DELETE_MAIL {

            /** S_DELETE_MAIL mailId */
            mailId?: ((number|Long)[]|null);
        }

        /** Represents a S_DELETE_MAIL. */
        class S_DELETE_MAIL implements IS_DELETE_MAIL {

            /**
             * Constructs a new S_DELETE_MAIL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DELETE_MAIL);

            /** S_DELETE_MAIL mailId. */
            public mailId: (number|Long)[];

            /**
             * Encodes the specified S_DELETE_MAIL message. Does not implicitly {@link com.message.S_DELETE_MAIL.verify|verify} messages.
             * @param message S_DELETE_MAIL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DELETE_MAIL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DELETE_MAIL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DELETE_MAIL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DELETE_MAIL;
        }

        /** Properties of a S_NOTIFY_NEW_MAIL. */
        interface IS_NOTIFY_NEW_MAIL {
        }

        /** Represents a S_NOTIFY_NEW_MAIL. */
        class S_NOTIFY_NEW_MAIL implements IS_NOTIFY_NEW_MAIL {

            /**
             * Constructs a new S_NOTIFY_NEW_MAIL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NOTIFY_NEW_MAIL);

            /**
             * Encodes the specified S_NOTIFY_NEW_MAIL message. Does not implicitly {@link com.message.S_NOTIFY_NEW_MAIL.verify|verify} messages.
             * @param message S_NOTIFY_NEW_MAIL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NOTIFY_NEW_MAIL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NOTIFY_NEW_MAIL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NOTIFY_NEW_MAIL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NOTIFY_NEW_MAIL;
        }

        /** Properties of a C_RECEIVE_ALL_MAIL. */
        interface IC_RECEIVE_ALL_MAIL {

            /** C_RECEIVE_ALL_MAIL mailId */
            mailId?: ((number|Long)[]|null);
        }

        /** Represents a C_RECEIVE_ALL_MAIL. */
        class C_RECEIVE_ALL_MAIL implements IC_RECEIVE_ALL_MAIL {

            /**
             * Constructs a new C_RECEIVE_ALL_MAIL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_RECEIVE_ALL_MAIL);

            /** C_RECEIVE_ALL_MAIL mailId. */
            public mailId: (number|Long)[];

            /**
             * Encodes the specified C_RECEIVE_ALL_MAIL message. Does not implicitly {@link com.message.C_RECEIVE_ALL_MAIL.verify|verify} messages.
             * @param message C_RECEIVE_ALL_MAIL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_RECEIVE_ALL_MAIL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_RECEIVE_ALL_MAIL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_RECEIVE_ALL_MAIL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_RECEIVE_ALL_MAIL;
        }

        /** Properties of a S_RECEIVE_ALL_MAIL. */
        interface IS_RECEIVE_ALL_MAIL {

            /** S_RECEIVE_ALL_MAIL itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_RECEIVE_ALL_MAIL. */
        class S_RECEIVE_ALL_MAIL implements IS_RECEIVE_ALL_MAIL {

            /**
             * Constructs a new S_RECEIVE_ALL_MAIL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RECEIVE_ALL_MAIL);

            /** S_RECEIVE_ALL_MAIL itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_RECEIVE_ALL_MAIL message. Does not implicitly {@link com.message.S_RECEIVE_ALL_MAIL.verify|verify} messages.
             * @param message S_RECEIVE_ALL_MAIL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RECEIVE_ALL_MAIL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RECEIVE_ALL_MAIL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RECEIVE_ALL_MAIL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RECEIVE_ALL_MAIL;
        }

        /** Properties of a BUY_GOODS_INFO. */
        interface IBUY_GOODS_INFO {

            /** BUY_GOODS_INFO marketId */
            marketId?: (number|null);

            /** BUY_GOODS_INFO count */
            count?: (number|null);
        }

        /** Represents a BUY_GOODS_INFO. */
        class BUY_GOODS_INFO implements IBUY_GOODS_INFO {

            /**
             * Constructs a new BUY_GOODS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IBUY_GOODS_INFO);

            /** BUY_GOODS_INFO marketId. */
            public marketId: number;

            /** BUY_GOODS_INFO count. */
            public count: number;

            /**
             * Encodes the specified BUY_GOODS_INFO message. Does not implicitly {@link com.message.BUY_GOODS_INFO.verify|verify} messages.
             * @param message BUY_GOODS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IBUY_GOODS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a BUY_GOODS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns BUY_GOODS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.BUY_GOODS_INFO;
        }

        /** Properties of a C_MARKET_BUY. */
        interface IC_MARKET_BUY {

            /** C_MARKET_BUY buyInfo */
            buyInfo?: (com.message.IBUY_GOODS_INFO|null);
        }

        /** Represents a C_MARKET_BUY. */
        class C_MARKET_BUY implements IC_MARKET_BUY {

            /**
             * Constructs a new C_MARKET_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_MARKET_BUY);

            /** C_MARKET_BUY buyInfo. */
            public buyInfo?: (com.message.IBUY_GOODS_INFO|null);

            /**
             * Encodes the specified C_MARKET_BUY message. Does not implicitly {@link com.message.C_MARKET_BUY.verify|verify} messages.
             * @param message C_MARKET_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_MARKET_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_MARKET_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_MARKET_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_MARKET_BUY;
        }

        /** Properties of a S_MARKET_BUY. */
        interface IS_MARKET_BUY {

            /** S_MARKET_BUY buyInfo */
            buyInfo?: (com.message.IBUY_GOODS_INFO|null);
        }

        /** Represents a S_MARKET_BUY. */
        class S_MARKET_BUY implements IS_MARKET_BUY {

            /**
             * Constructs a new S_MARKET_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_MARKET_BUY);

            /** S_MARKET_BUY buyInfo. */
            public buyInfo?: (com.message.IBUY_GOODS_INFO|null);

            /**
             * Encodes the specified S_MARKET_BUY message. Does not implicitly {@link com.message.S_MARKET_BUY.verify|verify} messages.
             * @param message S_MARKET_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_MARKET_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_MARKET_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_MARKET_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_MARKET_BUY;
        }

        /** Properties of a C_LIST_MARKET_LIMIT_INFO. */
        interface IC_LIST_MARKET_LIMIT_INFO {

            /** C_LIST_MARKET_LIMIT_INFO shopType */
            shopType?: (number|null);
        }

        /** Represents a C_LIST_MARKET_LIMIT_INFO. */
        class C_LIST_MARKET_LIMIT_INFO implements IC_LIST_MARKET_LIMIT_INFO {

            /**
             * Constructs a new C_LIST_MARKET_LIMIT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LIST_MARKET_LIMIT_INFO);

            /** C_LIST_MARKET_LIMIT_INFO shopType. */
            public shopType: number;

            /**
             * Encodes the specified C_LIST_MARKET_LIMIT_INFO message. Does not implicitly {@link com.message.C_LIST_MARKET_LIMIT_INFO.verify|verify} messages.
             * @param message C_LIST_MARKET_LIMIT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LIST_MARKET_LIMIT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LIST_MARKET_LIMIT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LIST_MARKET_LIMIT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LIST_MARKET_LIMIT_INFO;
        }

        /** Properties of a S_LIST_MARKET_LIMIT_INFO. */
        interface IS_LIST_MARKET_LIMIT_INFO {

            /** S_LIST_MARKET_LIMIT_INFO shopType */
            shopType?: (number|null);

            /** S_LIST_MARKET_LIMIT_INFO limitInfo */
            limitInfo?: (com.message.IBUY_GOODS_INFO[]|null);
        }

        /** Represents a S_LIST_MARKET_LIMIT_INFO. */
        class S_LIST_MARKET_LIMIT_INFO implements IS_LIST_MARKET_LIMIT_INFO {

            /**
             * Constructs a new S_LIST_MARKET_LIMIT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LIST_MARKET_LIMIT_INFO);

            /** S_LIST_MARKET_LIMIT_INFO shopType. */
            public shopType: number;

            /** S_LIST_MARKET_LIMIT_INFO limitInfo. */
            public limitInfo: com.message.IBUY_GOODS_INFO[];

            /**
             * Encodes the specified S_LIST_MARKET_LIMIT_INFO message. Does not implicitly {@link com.message.S_LIST_MARKET_LIMIT_INFO.verify|verify} messages.
             * @param message S_LIST_MARKET_LIMIT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LIST_MARKET_LIMIT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LIST_MARKET_LIMIT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LIST_MARKET_LIMIT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LIST_MARKET_LIMIT_INFO;
        }

        /** Properties of a C_GET_MARKET_DISCOUNT_INFO. */
        interface IC_GET_MARKET_DISCOUNT_INFO {
        }

        /** Represents a C_GET_MARKET_DISCOUNT_INFO. */
        class C_GET_MARKET_DISCOUNT_INFO implements IC_GET_MARKET_DISCOUNT_INFO {

            /**
             * Constructs a new C_GET_MARKET_DISCOUNT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MARKET_DISCOUNT_INFO);

            /**
             * Encodes the specified C_GET_MARKET_DISCOUNT_INFO message. Does not implicitly {@link com.message.C_GET_MARKET_DISCOUNT_INFO.verify|verify} messages.
             * @param message C_GET_MARKET_DISCOUNT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MARKET_DISCOUNT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MARKET_DISCOUNT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MARKET_DISCOUNT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MARKET_DISCOUNT_INFO;
        }

        /** Properties of a S_GET_MARKET_DISCOUNT_INFO. */
        interface IS_GET_MARKET_DISCOUNT_INFO {

            /** S_GET_MARKET_DISCOUNT_INFO marketInfos */
            marketInfos?: (com.message.IMARKET_DISCOUNT_INFO[]|null);

            /** S_GET_MARKET_DISCOUNT_INFO day */
            day?: (number|null);
        }

        /** Represents a S_GET_MARKET_DISCOUNT_INFO. */
        class S_GET_MARKET_DISCOUNT_INFO implements IS_GET_MARKET_DISCOUNT_INFO {

            /**
             * Constructs a new S_GET_MARKET_DISCOUNT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MARKET_DISCOUNT_INFO);

            /** S_GET_MARKET_DISCOUNT_INFO marketInfos. */
            public marketInfos: com.message.IMARKET_DISCOUNT_INFO[];

            /** S_GET_MARKET_DISCOUNT_INFO day. */
            public day: number;

            /**
             * Encodes the specified S_GET_MARKET_DISCOUNT_INFO message. Does not implicitly {@link com.message.S_GET_MARKET_DISCOUNT_INFO.verify|verify} messages.
             * @param message S_GET_MARKET_DISCOUNT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MARKET_DISCOUNT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MARKET_DISCOUNT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MARKET_DISCOUNT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MARKET_DISCOUNT_INFO;
        }

        /** Properties of a MARKET_DISCOUNT_INFO. */
        interface IMARKET_DISCOUNT_INFO {

            /** MARKET_DISCOUNT_INFO marketId */
            marketId?: (number|null);

            /** MARKET_DISCOUNT_INFO limitNum */
            limitNum?: (number|null);
        }

        /** Represents a MARKET_DISCOUNT_INFO. */
        class MARKET_DISCOUNT_INFO implements IMARKET_DISCOUNT_INFO {

            /**
             * Constructs a new MARKET_DISCOUNT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMARKET_DISCOUNT_INFO);

            /** MARKET_DISCOUNT_INFO marketId. */
            public marketId: number;

            /** MARKET_DISCOUNT_INFO limitNum. */
            public limitNum: number;

            /**
             * Encodes the specified MARKET_DISCOUNT_INFO message. Does not implicitly {@link com.message.MARKET_DISCOUNT_INFO.verify|verify} messages.
             * @param message MARKET_DISCOUNT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMARKET_DISCOUNT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MARKET_DISCOUNT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MARKET_DISCOUNT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MARKET_DISCOUNT_INFO;
        }

        /** Properties of a C_BUY_MARKET_DISCOUNT. */
        interface IC_BUY_MARKET_DISCOUNT {

            /** C_BUY_MARKET_DISCOUNT marketId */
            marketId?: (number|null);
        }

        /** Represents a C_BUY_MARKET_DISCOUNT. */
        class C_BUY_MARKET_DISCOUNT implements IC_BUY_MARKET_DISCOUNT {

            /**
             * Constructs a new C_BUY_MARKET_DISCOUNT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_MARKET_DISCOUNT);

            /** C_BUY_MARKET_DISCOUNT marketId. */
            public marketId: number;

            /**
             * Encodes the specified C_BUY_MARKET_DISCOUNT message. Does not implicitly {@link com.message.C_BUY_MARKET_DISCOUNT.verify|verify} messages.
             * @param message C_BUY_MARKET_DISCOUNT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_MARKET_DISCOUNT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_MARKET_DISCOUNT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_MARKET_DISCOUNT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_MARKET_DISCOUNT;
        }

        /** Properties of a S_BUY_MARKET_DISCOUNT. */
        interface IS_BUY_MARKET_DISCOUNT {

            /** S_BUY_MARKET_DISCOUNT marketInfo */
            marketInfo?: (com.message.IMARKET_DISCOUNT_INFO|null);
        }

        /** Represents a S_BUY_MARKET_DISCOUNT. */
        class S_BUY_MARKET_DISCOUNT implements IS_BUY_MARKET_DISCOUNT {

            /**
             * Constructs a new S_BUY_MARKET_DISCOUNT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_MARKET_DISCOUNT);

            /** S_BUY_MARKET_DISCOUNT marketInfo. */
            public marketInfo?: (com.message.IMARKET_DISCOUNT_INFO|null);

            /**
             * Encodes the specified S_BUY_MARKET_DISCOUNT message. Does not implicitly {@link com.message.S_BUY_MARKET_DISCOUNT.verify|verify} messages.
             * @param message S_BUY_MARKET_DISCOUNT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_MARKET_DISCOUNT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_MARKET_DISCOUNT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_MARKET_DISCOUNT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_MARKET_DISCOUNT;
        }

        /** Properties of a C_GET_MARKET_LUCKY_INFO. */
        interface IC_GET_MARKET_LUCKY_INFO {
        }

        /** Represents a C_GET_MARKET_LUCKY_INFO. */
        class C_GET_MARKET_LUCKY_INFO implements IC_GET_MARKET_LUCKY_INFO {

            /**
             * Constructs a new C_GET_MARKET_LUCKY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MARKET_LUCKY_INFO);

            /**
             * Encodes the specified C_GET_MARKET_LUCKY_INFO message. Does not implicitly {@link com.message.C_GET_MARKET_LUCKY_INFO.verify|verify} messages.
             * @param message C_GET_MARKET_LUCKY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MARKET_LUCKY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MARKET_LUCKY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MARKET_LUCKY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MARKET_LUCKY_INFO;
        }

        /** Properties of a S_GET_MARKET_LUCKY_INFO. */
        interface IS_GET_MARKET_LUCKY_INFO {

            /** S_GET_MARKET_LUCKY_INFO marketInfos */
            marketInfos?: (com.message.IMARKET_LUCKY_INFO[]|null);

            /** S_GET_MARKET_LUCKY_INFO refreshTime */
            refreshTime?: (number|Long|null);

            /** S_GET_MARKET_LUCKY_INFO itemRefreshCount */
            itemRefreshCount?: (number|null);
        }

        /** Represents a S_GET_MARKET_LUCKY_INFO. */
        class S_GET_MARKET_LUCKY_INFO implements IS_GET_MARKET_LUCKY_INFO {

            /**
             * Constructs a new S_GET_MARKET_LUCKY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MARKET_LUCKY_INFO);

            /** S_GET_MARKET_LUCKY_INFO marketInfos. */
            public marketInfos: com.message.IMARKET_LUCKY_INFO[];

            /** S_GET_MARKET_LUCKY_INFO refreshTime. */
            public refreshTime: (number|Long);

            /** S_GET_MARKET_LUCKY_INFO itemRefreshCount. */
            public itemRefreshCount: number;

            /**
             * Encodes the specified S_GET_MARKET_LUCKY_INFO message. Does not implicitly {@link com.message.S_GET_MARKET_LUCKY_INFO.verify|verify} messages.
             * @param message S_GET_MARKET_LUCKY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MARKET_LUCKY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MARKET_LUCKY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MARKET_LUCKY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MARKET_LUCKY_INFO;
        }

        /** Properties of a MARKET_LUCKY_INFO. */
        interface IMARKET_LUCKY_INFO {

            /** MARKET_LUCKY_INFO marketId */
            marketId?: (number|null);

            /** MARKET_LUCKY_INFO posId */
            posId?: (number|null);

            /** MARKET_LUCKY_INFO limitNum */
            limitNum?: (number|null);
        }

        /** Represents a MARKET_LUCKY_INFO. */
        class MARKET_LUCKY_INFO implements IMARKET_LUCKY_INFO {

            /**
             * Constructs a new MARKET_LUCKY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMARKET_LUCKY_INFO);

            /** MARKET_LUCKY_INFO marketId. */
            public marketId: number;

            /** MARKET_LUCKY_INFO posId. */
            public posId: number;

            /** MARKET_LUCKY_INFO limitNum. */
            public limitNum: number;

            /**
             * Encodes the specified MARKET_LUCKY_INFO message. Does not implicitly {@link com.message.MARKET_LUCKY_INFO.verify|verify} messages.
             * @param message MARKET_LUCKY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMARKET_LUCKY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MARKET_LUCKY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MARKET_LUCKY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MARKET_LUCKY_INFO;
        }

        /** Properties of a C_BUY_MARKET_LUCKY. */
        interface IC_BUY_MARKET_LUCKY {

            /** C_BUY_MARKET_LUCKY posId */
            posId?: (number|null);

            /** C_BUY_MARKET_LUCKY num */
            num?: (number|null);
        }

        /** Represents a C_BUY_MARKET_LUCKY. */
        class C_BUY_MARKET_LUCKY implements IC_BUY_MARKET_LUCKY {

            /**
             * Constructs a new C_BUY_MARKET_LUCKY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_MARKET_LUCKY);

            /** C_BUY_MARKET_LUCKY posId. */
            public posId: number;

            /** C_BUY_MARKET_LUCKY num. */
            public num: number;

            /**
             * Encodes the specified C_BUY_MARKET_LUCKY message. Does not implicitly {@link com.message.C_BUY_MARKET_LUCKY.verify|verify} messages.
             * @param message C_BUY_MARKET_LUCKY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_MARKET_LUCKY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_MARKET_LUCKY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_MARKET_LUCKY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_MARKET_LUCKY;
        }

        /** Properties of a S_BUY_MARKET_LUCKY. */
        interface IS_BUY_MARKET_LUCKY {

            /** S_BUY_MARKET_LUCKY marketInfo */
            marketInfo?: (com.message.IMARKET_LUCKY_INFO|null);
        }

        /** Represents a S_BUY_MARKET_LUCKY. */
        class S_BUY_MARKET_LUCKY implements IS_BUY_MARKET_LUCKY {

            /**
             * Constructs a new S_BUY_MARKET_LUCKY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_MARKET_LUCKY);

            /** S_BUY_MARKET_LUCKY marketInfo. */
            public marketInfo?: (com.message.IMARKET_LUCKY_INFO|null);

            /**
             * Encodes the specified S_BUY_MARKET_LUCKY message. Does not implicitly {@link com.message.S_BUY_MARKET_LUCKY.verify|verify} messages.
             * @param message S_BUY_MARKET_LUCKY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_MARKET_LUCKY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_MARKET_LUCKY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_MARKET_LUCKY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_MARKET_LUCKY;
        }

        /** Properties of a C_REFRESH_MARKET_LUCKY. */
        interface IC_REFRESH_MARKET_LUCKY {

            /** C_REFRESH_MARKET_LUCKY count */
            count?: (number|null);
        }

        /** Represents a C_REFRESH_MARKET_LUCKY. */
        class C_REFRESH_MARKET_LUCKY implements IC_REFRESH_MARKET_LUCKY {

            /**
             * Constructs a new C_REFRESH_MARKET_LUCKY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REFRESH_MARKET_LUCKY);

            /** C_REFRESH_MARKET_LUCKY count. */
            public count: number;

            /**
             * Encodes the specified C_REFRESH_MARKET_LUCKY message. Does not implicitly {@link com.message.C_REFRESH_MARKET_LUCKY.verify|verify} messages.
             * @param message C_REFRESH_MARKET_LUCKY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REFRESH_MARKET_LUCKY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REFRESH_MARKET_LUCKY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REFRESH_MARKET_LUCKY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REFRESH_MARKET_LUCKY;
        }

        /** Properties of a S_REFRESH_MARKET_LUCKY. */
        interface IS_REFRESH_MARKET_LUCKY {

            /** S_REFRESH_MARKET_LUCKY marketInfos */
            marketInfos?: (com.message.IMARKET_LUCKY_INFO[]|null);

            /** S_REFRESH_MARKET_LUCKY refreshTime */
            refreshTime?: (number|Long|null);

            /** S_REFRESH_MARKET_LUCKY itemRefreshCount */
            itemRefreshCount?: (number|null);
        }

        /** Represents a S_REFRESH_MARKET_LUCKY. */
        class S_REFRESH_MARKET_LUCKY implements IS_REFRESH_MARKET_LUCKY {

            /**
             * Constructs a new S_REFRESH_MARKET_LUCKY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REFRESH_MARKET_LUCKY);

            /** S_REFRESH_MARKET_LUCKY marketInfos. */
            public marketInfos: com.message.IMARKET_LUCKY_INFO[];

            /** S_REFRESH_MARKET_LUCKY refreshTime. */
            public refreshTime: (number|Long);

            /** S_REFRESH_MARKET_LUCKY itemRefreshCount. */
            public itemRefreshCount: number;

            /**
             * Encodes the specified S_REFRESH_MARKET_LUCKY message. Does not implicitly {@link com.message.S_REFRESH_MARKET_LUCKY.verify|verify} messages.
             * @param message S_REFRESH_MARKET_LUCKY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REFRESH_MARKET_LUCKY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REFRESH_MARKET_LUCKY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REFRESH_MARKET_LUCKY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REFRESH_MARKET_LUCKY;
        }

        /** Properties of a C_GET_MARKET_OVER_FLOW_INFO. */
        interface IC_GET_MARKET_OVER_FLOW_INFO {
        }

        /** Represents a C_GET_MARKET_OVER_FLOW_INFO. */
        class C_GET_MARKET_OVER_FLOW_INFO implements IC_GET_MARKET_OVER_FLOW_INFO {

            /**
             * Constructs a new C_GET_MARKET_OVER_FLOW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MARKET_OVER_FLOW_INFO);

            /**
             * Encodes the specified C_GET_MARKET_OVER_FLOW_INFO message. Does not implicitly {@link com.message.C_GET_MARKET_OVER_FLOW_INFO.verify|verify} messages.
             * @param message C_GET_MARKET_OVER_FLOW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MARKET_OVER_FLOW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MARKET_OVER_FLOW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MARKET_OVER_FLOW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MARKET_OVER_FLOW_INFO;
        }

        /** Properties of a S_GET_MARKET_OVER_FLOW_INFO. */
        interface IS_GET_MARKET_OVER_FLOW_INFO {

            /** S_GET_MARKET_OVER_FLOW_INFO marketInfos */
            marketInfos?: (com.message.IMARKET_OVER_FLOW_INFO[]|null);
        }

        /** Represents a S_GET_MARKET_OVER_FLOW_INFO. */
        class S_GET_MARKET_OVER_FLOW_INFO implements IS_GET_MARKET_OVER_FLOW_INFO {

            /**
             * Constructs a new S_GET_MARKET_OVER_FLOW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MARKET_OVER_FLOW_INFO);

            /** S_GET_MARKET_OVER_FLOW_INFO marketInfos. */
            public marketInfos: com.message.IMARKET_OVER_FLOW_INFO[];

            /**
             * Encodes the specified S_GET_MARKET_OVER_FLOW_INFO message. Does not implicitly {@link com.message.S_GET_MARKET_OVER_FLOW_INFO.verify|verify} messages.
             * @param message S_GET_MARKET_OVER_FLOW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MARKET_OVER_FLOW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MARKET_OVER_FLOW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MARKET_OVER_FLOW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MARKET_OVER_FLOW_INFO;
        }

        /** Properties of a MARKET_OVER_FLOW_INFO. */
        interface IMARKET_OVER_FLOW_INFO {

            /** MARKET_OVER_FLOW_INFO marketId */
            marketId?: (number|null);

            /** MARKET_OVER_FLOW_INFO limitNum */
            limitNum?: (number|null);

            /** MARKET_OVER_FLOW_INFO limitTime */
            limitTime?: (number|Long|null);
        }

        /** Represents a MARKET_OVER_FLOW_INFO. */
        class MARKET_OVER_FLOW_INFO implements IMARKET_OVER_FLOW_INFO {

            /**
             * Constructs a new MARKET_OVER_FLOW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMARKET_OVER_FLOW_INFO);

            /** MARKET_OVER_FLOW_INFO marketId. */
            public marketId: number;

            /** MARKET_OVER_FLOW_INFO limitNum. */
            public limitNum: number;

            /** MARKET_OVER_FLOW_INFO limitTime. */
            public limitTime: (number|Long);

            /**
             * Encodes the specified MARKET_OVER_FLOW_INFO message. Does not implicitly {@link com.message.MARKET_OVER_FLOW_INFO.verify|verify} messages.
             * @param message MARKET_OVER_FLOW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMARKET_OVER_FLOW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MARKET_OVER_FLOW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MARKET_OVER_FLOW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MARKET_OVER_FLOW_INFO;
        }

        /** Properties of a C_BUY_OVER_FLOW_LUCKY. */
        interface IC_BUY_OVER_FLOW_LUCKY {

            /** C_BUY_OVER_FLOW_LUCKY marketId */
            marketId?: (number|null);
        }

        /** Represents a C_BUY_OVER_FLOW_LUCKY. */
        class C_BUY_OVER_FLOW_LUCKY implements IC_BUY_OVER_FLOW_LUCKY {

            /**
             * Constructs a new C_BUY_OVER_FLOW_LUCKY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_OVER_FLOW_LUCKY);

            /** C_BUY_OVER_FLOW_LUCKY marketId. */
            public marketId: number;

            /**
             * Encodes the specified C_BUY_OVER_FLOW_LUCKY message. Does not implicitly {@link com.message.C_BUY_OVER_FLOW_LUCKY.verify|verify} messages.
             * @param message C_BUY_OVER_FLOW_LUCKY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_OVER_FLOW_LUCKY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_OVER_FLOW_LUCKY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_OVER_FLOW_LUCKY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_OVER_FLOW_LUCKY;
        }

        /** Properties of a S_BUY_OVER_FLOW_LUCKY. */
        interface IS_BUY_OVER_FLOW_LUCKY {

            /** S_BUY_OVER_FLOW_LUCKY marketInfo */
            marketInfo?: (com.message.IMARKET_OVER_FLOW_INFO|null);
        }

        /** Represents a S_BUY_OVER_FLOW_LUCKY. */
        class S_BUY_OVER_FLOW_LUCKY implements IS_BUY_OVER_FLOW_LUCKY {

            /**
             * Constructs a new S_BUY_OVER_FLOW_LUCKY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_OVER_FLOW_LUCKY);

            /** S_BUY_OVER_FLOW_LUCKY marketInfo. */
            public marketInfo?: (com.message.IMARKET_OVER_FLOW_INFO|null);

            /**
             * Encodes the specified S_BUY_OVER_FLOW_LUCKY message. Does not implicitly {@link com.message.S_BUY_OVER_FLOW_LUCKY.verify|verify} messages.
             * @param message S_BUY_OVER_FLOW_LUCKY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_OVER_FLOW_LUCKY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_OVER_FLOW_LUCKY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_OVER_FLOW_LUCKY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_OVER_FLOW_LUCKY;
        }

        /** Properties of a C_GET_MARKET_SOL_INFO. */
        interface IC_GET_MARKET_SOL_INFO {
        }

        /** Represents a C_GET_MARKET_SOL_INFO. */
        class C_GET_MARKET_SOL_INFO implements IC_GET_MARKET_SOL_INFO {

            /**
             * Constructs a new C_GET_MARKET_SOL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MARKET_SOL_INFO);

            /**
             * Encodes the specified C_GET_MARKET_SOL_INFO message. Does not implicitly {@link com.message.C_GET_MARKET_SOL_INFO.verify|verify} messages.
             * @param message C_GET_MARKET_SOL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MARKET_SOL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MARKET_SOL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MARKET_SOL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MARKET_SOL_INFO;
        }

        /** Properties of a S_GET_MARKET_SOL_INFO. */
        interface IS_GET_MARKET_SOL_INFO {

            /** S_GET_MARKET_SOL_INFO marketInfos */
            marketInfos?: (com.message.IMARKET_SOL_INFO[]|null);

            /** S_GET_MARKET_SOL_INFO refreshTime */
            refreshTime?: (number|Long|null);

            /** S_GET_MARKET_SOL_INFO refreshCount */
            refreshCount?: (number|null);

            /** S_GET_MARKET_SOL_INFO itemRefreshCount */
            itemRefreshCount?: (number|null);

            /** S_GET_MARKET_SOL_INFO maxBuyCount */
            maxBuyCount?: (number|null);
        }

        /** Represents a S_GET_MARKET_SOL_INFO. */
        class S_GET_MARKET_SOL_INFO implements IS_GET_MARKET_SOL_INFO {

            /**
             * Constructs a new S_GET_MARKET_SOL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MARKET_SOL_INFO);

            /** S_GET_MARKET_SOL_INFO marketInfos. */
            public marketInfos: com.message.IMARKET_SOL_INFO[];

            /** S_GET_MARKET_SOL_INFO refreshTime. */
            public refreshTime: (number|Long);

            /** S_GET_MARKET_SOL_INFO refreshCount. */
            public refreshCount: number;

            /** S_GET_MARKET_SOL_INFO itemRefreshCount. */
            public itemRefreshCount: number;

            /** S_GET_MARKET_SOL_INFO maxBuyCount. */
            public maxBuyCount: number;

            /**
             * Encodes the specified S_GET_MARKET_SOL_INFO message. Does not implicitly {@link com.message.S_GET_MARKET_SOL_INFO.verify|verify} messages.
             * @param message S_GET_MARKET_SOL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MARKET_SOL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MARKET_SOL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MARKET_SOL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MARKET_SOL_INFO;
        }

        /** Properties of a MARKET_SOL_INFO. */
        interface IMARKET_SOL_INFO {

            /** MARKET_SOL_INFO marketId */
            marketId?: (number|null);

            /** MARKET_SOL_INFO posId */
            posId?: (number|null);

            /** MARKET_SOL_INFO limitNum */
            limitNum?: (number|null);
        }

        /** Represents a MARKET_SOL_INFO. */
        class MARKET_SOL_INFO implements IMARKET_SOL_INFO {

            /**
             * Constructs a new MARKET_SOL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMARKET_SOL_INFO);

            /** MARKET_SOL_INFO marketId. */
            public marketId: number;

            /** MARKET_SOL_INFO posId. */
            public posId: number;

            /** MARKET_SOL_INFO limitNum. */
            public limitNum: number;

            /**
             * Encodes the specified MARKET_SOL_INFO message. Does not implicitly {@link com.message.MARKET_SOL_INFO.verify|verify} messages.
             * @param message MARKET_SOL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMARKET_SOL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MARKET_SOL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MARKET_SOL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MARKET_SOL_INFO;
        }

        /** Properties of a C_BUY_MARKET_SOL. */
        interface IC_BUY_MARKET_SOL {

            /** C_BUY_MARKET_SOL posId */
            posId?: (number|null);

            /** C_BUY_MARKET_SOL num */
            num?: (number|null);
        }

        /** Represents a C_BUY_MARKET_SOL. */
        class C_BUY_MARKET_SOL implements IC_BUY_MARKET_SOL {

            /**
             * Constructs a new C_BUY_MARKET_SOL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_MARKET_SOL);

            /** C_BUY_MARKET_SOL posId. */
            public posId: number;

            /** C_BUY_MARKET_SOL num. */
            public num: number;

            /**
             * Encodes the specified C_BUY_MARKET_SOL message. Does not implicitly {@link com.message.C_BUY_MARKET_SOL.verify|verify} messages.
             * @param message C_BUY_MARKET_SOL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_MARKET_SOL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_MARKET_SOL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_MARKET_SOL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_MARKET_SOL;
        }

        /** Properties of a S_BUY_MARKET_SOL. */
        interface IS_BUY_MARKET_SOL {

            /** S_BUY_MARKET_SOL marketInfo */
            marketInfo?: (com.message.IMARKET_SOL_INFO|null);
        }

        /** Represents a S_BUY_MARKET_SOL. */
        class S_BUY_MARKET_SOL implements IS_BUY_MARKET_SOL {

            /**
             * Constructs a new S_BUY_MARKET_SOL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_MARKET_SOL);

            /** S_BUY_MARKET_SOL marketInfo. */
            public marketInfo?: (com.message.IMARKET_SOL_INFO|null);

            /**
             * Encodes the specified S_BUY_MARKET_SOL message. Does not implicitly {@link com.message.S_BUY_MARKET_SOL.verify|verify} messages.
             * @param message S_BUY_MARKET_SOL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_MARKET_SOL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_MARKET_SOL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_MARKET_SOL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_MARKET_SOL;
        }

        /** Properties of a C_REFRESH_MARKET_SOL. */
        interface IC_REFRESH_MARKET_SOL {

            /** C_REFRESH_MARKET_SOL count */
            count?: (number|null);
        }

        /** Represents a C_REFRESH_MARKET_SOL. */
        class C_REFRESH_MARKET_SOL implements IC_REFRESH_MARKET_SOL {

            /**
             * Constructs a new C_REFRESH_MARKET_SOL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REFRESH_MARKET_SOL);

            /** C_REFRESH_MARKET_SOL count. */
            public count: number;

            /**
             * Encodes the specified C_REFRESH_MARKET_SOL message. Does not implicitly {@link com.message.C_REFRESH_MARKET_SOL.verify|verify} messages.
             * @param message C_REFRESH_MARKET_SOL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REFRESH_MARKET_SOL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REFRESH_MARKET_SOL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REFRESH_MARKET_SOL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REFRESH_MARKET_SOL;
        }

        /** Properties of a S_REFRESH_MARKET_SOL. */
        interface IS_REFRESH_MARKET_SOL {

            /** S_REFRESH_MARKET_SOL marketInfos */
            marketInfos?: (com.message.IMARKET_SOL_INFO[]|null);

            /** S_REFRESH_MARKET_SOL refreshTime */
            refreshTime?: (number|Long|null);

            /** S_REFRESH_MARKET_SOL refreshCount */
            refreshCount?: (number|null);

            /** S_REFRESH_MARKET_SOL itemRefreshCount */
            itemRefreshCount?: (number|null);

            /** S_REFRESH_MARKET_SOL maxBuyCount */
            maxBuyCount?: (number|null);
        }

        /** Represents a S_REFRESH_MARKET_SOL. */
        class S_REFRESH_MARKET_SOL implements IS_REFRESH_MARKET_SOL {

            /**
             * Constructs a new S_REFRESH_MARKET_SOL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REFRESH_MARKET_SOL);

            /** S_REFRESH_MARKET_SOL marketInfos. */
            public marketInfos: com.message.IMARKET_SOL_INFO[];

            /** S_REFRESH_MARKET_SOL refreshTime. */
            public refreshTime: (number|Long);

            /** S_REFRESH_MARKET_SOL refreshCount. */
            public refreshCount: number;

            /** S_REFRESH_MARKET_SOL itemRefreshCount. */
            public itemRefreshCount: number;

            /** S_REFRESH_MARKET_SOL maxBuyCount. */
            public maxBuyCount: number;

            /**
             * Encodes the specified S_REFRESH_MARKET_SOL message. Does not implicitly {@link com.message.S_REFRESH_MARKET_SOL.verify|verify} messages.
             * @param message S_REFRESH_MARKET_SOL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REFRESH_MARKET_SOL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REFRESH_MARKET_SOL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REFRESH_MARKET_SOL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REFRESH_MARKET_SOL;
        }

        /** Properties of a C_GET_MERGE_ACTIVITY_INFO. */
        interface IC_GET_MERGE_ACTIVITY_INFO {

            /** C_GET_MERGE_ACTIVITY_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_MERGE_ACTIVITY_INFO. */
        class C_GET_MERGE_ACTIVITY_INFO implements IC_GET_MERGE_ACTIVITY_INFO {

            /**
             * Constructs a new C_GET_MERGE_ACTIVITY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MERGE_ACTIVITY_INFO);

            /** C_GET_MERGE_ACTIVITY_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_MERGE_ACTIVITY_INFO message. Does not implicitly {@link com.message.C_GET_MERGE_ACTIVITY_INFO.verify|verify} messages.
             * @param message C_GET_MERGE_ACTIVITY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MERGE_ACTIVITY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MERGE_ACTIVITY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MERGE_ACTIVITY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MERGE_ACTIVITY_INFO;
        }

        /** Properties of a S_GET_MERGE_ACTIVITY_INFO. */
        interface IS_GET_MERGE_ACTIVITY_INFO {

            /** S_GET_MERGE_ACTIVITY_INFO activeId */
            activeId?: (number[]|null);

            /** S_GET_MERGE_ACTIVITY_INFO value */
            value?: (number|Long|null);

            /** S_GET_MERGE_ACTIVITY_INFO type */
            type?: (number|null);

            /** S_GET_MERGE_ACTIVITY_INFO hadRewards */
            hadRewards?: (string|null);

            /** S_GET_MERGE_ACTIVITY_INFO paramStr */
            paramStr?: (string|null);
        }

        /** Represents a S_GET_MERGE_ACTIVITY_INFO. */
        class S_GET_MERGE_ACTIVITY_INFO implements IS_GET_MERGE_ACTIVITY_INFO {

            /**
             * Constructs a new S_GET_MERGE_ACTIVITY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MERGE_ACTIVITY_INFO);

            /** S_GET_MERGE_ACTIVITY_INFO activeId. */
            public activeId: number[];

            /** S_GET_MERGE_ACTIVITY_INFO value. */
            public value: (number|Long);

            /** S_GET_MERGE_ACTIVITY_INFO type. */
            public type: number;

            /** S_GET_MERGE_ACTIVITY_INFO hadRewards. */
            public hadRewards: string;

            /** S_GET_MERGE_ACTIVITY_INFO paramStr. */
            public paramStr: string;

            /**
             * Encodes the specified S_GET_MERGE_ACTIVITY_INFO message. Does not implicitly {@link com.message.S_GET_MERGE_ACTIVITY_INFO.verify|verify} messages.
             * @param message S_GET_MERGE_ACTIVITY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MERGE_ACTIVITY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MERGE_ACTIVITY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MERGE_ACTIVITY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MERGE_ACTIVITY_INFO;
        }

        /** Properties of a C_GET_MERGE_ACTIVITY_REWARD. */
        interface IC_GET_MERGE_ACTIVITY_REWARD {

            /** C_GET_MERGE_ACTIVITY_REWARD id */
            id?: (number|null);

            /** C_GET_MERGE_ACTIVITY_REWARD type */
            type?: (number|null);
        }

        /** Represents a C_GET_MERGE_ACTIVITY_REWARD. */
        class C_GET_MERGE_ACTIVITY_REWARD implements IC_GET_MERGE_ACTIVITY_REWARD {

            /**
             * Constructs a new C_GET_MERGE_ACTIVITY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MERGE_ACTIVITY_REWARD);

            /** C_GET_MERGE_ACTIVITY_REWARD id. */
            public id: number;

            /** C_GET_MERGE_ACTIVITY_REWARD type. */
            public type: number;

            /**
             * Encodes the specified C_GET_MERGE_ACTIVITY_REWARD message. Does not implicitly {@link com.message.C_GET_MERGE_ACTIVITY_REWARD.verify|verify} messages.
             * @param message C_GET_MERGE_ACTIVITY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MERGE_ACTIVITY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MERGE_ACTIVITY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MERGE_ACTIVITY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MERGE_ACTIVITY_REWARD;
        }

        /** Properties of a S_GET_MERGE_ACTIVITY_REWARD. */
        interface IS_GET_MERGE_ACTIVITY_REWARD {

            /** S_GET_MERGE_ACTIVITY_REWARD id */
            id?: (number|null);

            /** S_GET_MERGE_ACTIVITY_REWARD type */
            type?: (number|null);
        }

        /** Represents a S_GET_MERGE_ACTIVITY_REWARD. */
        class S_GET_MERGE_ACTIVITY_REWARD implements IS_GET_MERGE_ACTIVITY_REWARD {

            /**
             * Constructs a new S_GET_MERGE_ACTIVITY_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MERGE_ACTIVITY_REWARD);

            /** S_GET_MERGE_ACTIVITY_REWARD id. */
            public id: number;

            /** S_GET_MERGE_ACTIVITY_REWARD type. */
            public type: number;

            /**
             * Encodes the specified S_GET_MERGE_ACTIVITY_REWARD message. Does not implicitly {@link com.message.S_GET_MERGE_ACTIVITY_REWARD.verify|verify} messages.
             * @param message S_GET_MERGE_ACTIVITY_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MERGE_ACTIVITY_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MERGE_ACTIVITY_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MERGE_ACTIVITY_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MERGE_ACTIVITY_REWARD;
        }

        /** Properties of a MsgEnum. */
        interface IMsgEnum {
        }

        /** Represents a MsgEnum. */
        class MsgEnum implements IMsgEnum {

            /**
             * Constructs a new MsgEnum.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMsgEnum);

            /**
             * Encodes the specified MsgEnum message. Does not implicitly {@link com.message.MsgEnum.verify|verify} messages.
             * @param message MsgEnum message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMsgEnum, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MsgEnum message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MsgEnum
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MsgEnum;
        }

        namespace MsgEnum {

            /** MsgCode enum. */
            enum MsgCode {
                MSG_EMPTY = 0,
                S_EXCEPTION_MSG = 900,
                C_USER_LOGIN = 1001,
                S_USER_LOGIN = 1002,
                S_USER_LOGIN_BAN = 1003,
                C_LOGIN_REGISTER = 1005,
                C_USER_LOGOUT = 1007,
                S_USER_LOGOUT = 1008,
                C_USER_LOGIN_INIT_FINISH = 1009,
                S_USER_LOGIN_INIT_FINISH = 1010,
                C_GET_GUIDE_ID = 1011,
                S_GET_GUIDE_ID = 1012,
                C_SAVE_GUIDE_ID = 1013,
                C_GET_MODULE_REWARD_INFO = 1014,
                S_GET_MODULE_REWARD_INFO = 1015,
                C_GET_MODULE_REWARD = 1016,
                S_GET_MODULE_REWARD = 1017,
                C_GET_PLAYER_INFO = 1021,
                S_GET_PLAYER_INFO = 1022,
                C_EDIT_PLAYER_NICKNAME = 1023,
                S_EDIT_PLAYER_NICKNAME = 1024,
                S_RECHARGE_RTN_PUSH = 1025,
                C_RECHARGE_RTN_REWARD = 1026,
                S_RECHARGE_RTN_REWARD = 1027,
                S_LOGIN_OFFLINE_HANGUP_PUSH = 1028,
                S_LOGIN_BACK_PACK_PUSH = 1029,
                C_GET_NICKNAME_INFO = 1030,
                S_GET_NICKNAME_INFO = 1031,
                C_SEND_SDK_DATA = 1032,
                S_SEND_SDK_DATA = 1033,
                C_SYNC_LOAD_FINISH = 2000,
                S_SYN_PROPERTY = 2001,
                S_SYN_SHOW_BUBBLE = 2002,
                C_SYNC_TIME = 2101,
                S_SYNC_TIME = 2102,
                C_GET_SKILL_INFO = 2103,
                S_GET_SKILL_INFO = 2104,
                C_LEARN_SKILL = 2105,
                S_LEARN_SKILL = 2106,
                C_LEARN_SKILL_ONEKEY = 2107,
                S_LEARN_SKILL_ONEKEY = 2108,
                S_SYNC_PLAYER_BACKPACK = 2201,
                C_USE_BACKPACK_ITEM = 2202,
                S_USE_BACKPACK_ITEM = 2203,
                C_TIDY_BACKPACK = 2204,
                S_TIDY_BACKPACK = 2205,
                C_OPEN_BACKPACK_GRID = 2206,
                S_OPEN_BACKPACK_GRID = 2207,
                C_GOODS_BREAK = 2208,
                S_GOODS_BREAK = 2209,
                C_GOODS_MERGE = 2210,
                S_GOODS_MERGE = 2211,
                C_GOODS_SPLIT_MERGE = 2212,
                S_GOODS_SPLIT_MERGE = 2213,
                C_FORMATION_LIST = 2301,
                S_FORMATION_LIST = 2302,
                C_FORMATION_HERO_SWITCH = 2303,
                S_FORMATION_HERO_SWITCH = 2304,
                C_FORMATION_HERO_OFF = 2305,
                S_FORMATION_HERO_OFF = 2306,
                C_FORMATION_HERO_ON = 2309,
                S_FORMATION_HERO_ON = 2310,
                C_FORMATION_JINGSHU_LEARN = 2311,
                S_FORMATION_JINGSHU_LEARN = 2312,
                C_GET_OTHER_FORMATION = 2313,
                S_GET_OTHER_FORMATION = 2314,
                C_SET_OTHER_FORMATION = 2315,
                S_SET_OTHER_FORMATION = 2316,
                C_FORMATION_HEROS_ON = 2317,
                S_FORMATION_HEROS_ON = 2318,
                C_GET_FIGHT_RANK_FORMATION_HERO_INFO = 2319,
                S_GET_FIGHT_RANK_FORMATION_HERO_INFO = 2320,
                C_FORMATION_JINGSHU_LOCK = 2321,
                S_FORMATION_JINGSHU_LOCK = 2322,
                C_FORMATION_HERO_POS = 2323,
                S_FORMATION_HERO_POS = 2324,
                C_FORMATION_HERO_SWITCH_INDEX = 2325,
                S_FORMATION_HERO_SWITCH_INDEX = 2326,
                C_FORMATION_JINGSHU_OPEN = 2327,
                S_FORMATION_JINGSHU_OPEN = 2328,
                C_GET_INSTANCE_LIST = 2401,
                S_GET_INSTANCE_LIST = 2402,
                C_ENTER_INSTANCE = 2403,
                S_ENTER_INSTANCE = 2404,
                C_FINISH_INSTANCE = 2405,
                S_FINISH_INSTANCE = 2406,
                C_SWEEP_INSTANCE = 2407,
                S_SWEEP_INSTANCE = 2408,
                C_RECEIVE_INSTANCE_REWARD = 2409,
                S_RECEIVE_INSTANCE_REWARD = 2410,
                C_RECEIVE_CHAPTER_REWARD = 2411,
                S_RECEIVE_CHAPTER_REWARD = 2412,
                C_INSTANCE_RESET = 2413,
                S_INSTANCE_RESET = 2414,
                C_FINISH_INSTANCE_SKIP = 2415,
                C_GET_WAR_REPORT = 2420,
                S_GET_WAR_REPORT = 2421,
                C_ONE_KEY_SWEEP_INSTANCE = 2422,
                S_ONE_KEY_SWEEP_INSTANCE = 2423,
                C_ENTER_CHAPTER = 2424,
                S_ENTER_CHAPTER = 2425,
                C_RECEIVE_CHAPTER_REWARD2 = 2426,
                S_RECEIVE_CHAPTER_REWARD2 = 2427,
                C_ENTER_CROSS_INSTANCE = 2430,
                S_ENTER_CROSS_INSTANCE = 2431,
                C_GET_HANGUP_WAR_REPORT = 2601,
                S_GET_HANGUP_WAR_REPORT = 2602,
                C_SYNC_DEFEAT_NUM = 2603,
                S_SYNC_DEFEAT_NUM = 2604,
                C_OFF_LINE_CHALLENGE = 2605,
                S_OFF_LINE_CHALLENGE = 2606,
                C_GET_HANGUP_RANK_INFO = 2607,
                S_GET_HANGUP_RANK_INFO = 2608,
                C_GET_BLESS_INFO = 2701,
                S_GET_BLESS_INFO = 2702,
                C_BLESS_STAR_UP = 2703,
                S_BLESS_STAR_UP = 2704,
                C_BLESS_EAT_PILL = 2705,
                S_BLESS_EAT_PILL = 2706,
                S_GET_BLESS_OTHER_INFO = 2707,
                C_BLESS_OTHER_UP = 2708,
                S_BLESS_OTHER_UP = 2709,
                C_GET_BLESS_ACTIVITY_INFO = 2711,
                S_GET_BLESS_ACTIVITY_INFO = 2712,
                C_BLESS_ACTIVITY_BUY = 2713,
                S_BLESS_ACTIVITY_BUY = 2714,
                S_BLESS_ACTIVITY_PUSH = 2715,
                C_GET_IMAGE_INFO = 2801,
                S_GET_IMAGE_INFO = 2802,
                C_ACTIVE_IMAGE = 2803,
                S_ACTIVE_IMAGE = 2804,
                C_IMAGE_DRESS_ON = 2805,
                S_IMAGE_DRESS_ON = 2806,
                C_IMAGE_START_UP = 2807,
                S_IMAGE_START_UP = 2808,
                C_TASK_RECEIVE_REWARD = 2901,
                S_TASK_RECEIVE_REWARD = 2902,
                S_SYNC_TASK_UPDATE = 2903,
                C_GET_GUILD_TASK_INFO = 2905,
                S_GET_GUILD_TASK_INFO = 2906,
                C_REFRESH_GUILD_TASK = 2907,
                S_REFRESH_GUILD_TASK = 2908,
                C_GET_TASK_INFO = 2909,
                S_GET_TASK_INFO = 2910,
                C_UPDATE_TASK_DATA = 2911,
                S_UPDATE_TASK_DATA = 2912,
                C_HERO_LISTS = 3001,
                S_HERO_LISTS = 3002,
                C_ACTICATION_HERO = 3003,
                S_ACTICATION_HERO = 3004,
                C_UPGRADE_HERO_LEVEL = 3005,
                S_UPGRADE_HERO_LEVEL = 3006,
                C_UPGRADE_HERO_STAR = 3007,
                S_UPGRADE_HERO_STAR = 3008,
                C_HERO_WAKE = 3009,
                S_HERO_WAKE = 3010,
                C_HERO_LEVEL_UP = 3011,
                S_HERO_LEVEL_UP = 3012,
                C_HERO_RELIVE = 3013,
                S_HERO_RELIVE = 3014,
                C_HERO_TUPO = 3015,
                S_HERO_TUPO = 3016,
                C_HERO_FLY = 3017,
                S_HERO_FLY = 3018,
                C_DEBUG_COMMON = 3101,
                S_DEBUG_COMMON = 3102,
                C_EQUIPMENT_SWITCH = 3201,
                S_EQUIPMENT_SWITCH = 3202,
                C_ONEKEY_EQUIPMENT_SWITCH = 3203,
                S_ONEKEY_EQUIPMENT_SWITCH = 3204,
                C_EQUIPMENT_STRENGTHEN = 3205,
                S_EQUIPMENT_STRENGTHEN = 3206,
                C_EQUIPMENT_GEM_UPGRADE = 3207,
                S_EQUIPMENT_GEM_UPGRADE = 3208,
                C_EQUIPMENT_UPGRADE = 3209,
                S_EQUIPMENT_UPGRADE = 3210,
                C_EQUIPMENT_SLOT_INFO = 3211,
                S_EQUIPMENT_SLOT_INFO = 3212,
                C_EQUIPMENT_UPGRADE_STAR = 3213,
                S_EQUIPMENT_UPGRADE_STAR = 3214,
                C_ONE_EQUIPMENT_UPGRADE_STAR = 3215,
                C_EQUIPMENT_ENCHANTING = 3216,
                S_EQUIPMENT_ENCHANTING = 3217,
                C_EQUIPMENT_SPRITE = 3218,
                S_EQUIPMENT_SPRITE = 3219,
                C_EQUIPMENT_WAKE = 3220,
                S_EQUIPMENT_WAKE = 3221,
                C_EQUIPMENT_SUIT_UPGRADE = 3222,
                S_EQUIPMENT_SUIT_UPGRADE = 3223,
                C_EQUIPMENT_STRENGTHEN_ONEKEY = 3224,
                S_EQUIPMENT_STRENGTHEN_ONEKEY = 3225,
                C_EQUIPMENT_GEM_UPGRADE_ONEKEY = 3226,
                S_EQUIPMENT_GEM_UPGRADE_ONEKEY = 3227,
                C_EQUIPMENT_DRESS_OFF = 3228,
                S_EQUIPMENT_DRESS_OFF = 3229,
                C_EQUIPMENT_FORMATION_SWITCH = 3230,
                S_EQUIPMENT_FORMATION_SWITCH = 3231,
                C_SLOT_UNLOCK_INDEX = 3301,
                S_SLOT_UNLOCK_INDEX = 3302,
                C_SLOT_WASH = 3303,
                S_SLOT_WASH = 3304,
                C_SLOT_WASH_REPLACE = 3305,
                S_SLOT_WASH_REPLACE = 3306,
                C_SLOT_WASH_INFO = 3307,
                S_SLOT_WASH_INFO = 3308,
                C_QUENCHING_SLOT = 3309,
                S_QUENCHING_SLOT = 3310,
                C_LOCK_INDEX = 3311,
                S_LOCK_INDEX = 3312,
                C_SAVE_QUENCHING_SLOT = 3313,
                S_SAVE_QUENCHING_SLOT = 3314,
                C_SEND_CHAT_INFO = 3401,
                S_SEND_CHAT_INFO = 3402,
                C_GET_FRIEND_INFO = 3403,
                S_GET_FRIEND_INFO = 3404,
                C_OPTION_FRIEND = 3405,
                S_OPTION_FRIEND = 3406,
                S_FRIEND_APPLY = 3407,
                S_FRIEND_AGREE_APPLY = 3408,
                C_GET_FRIEND_REFRESH = 3409,
                S_GET_FRIEND_REFRESH = 3410,
                C_ONE_FRIEND_APPLYS = 3411,
                S_ONE_FRIEND_APPLYS = 3412,
                C_FRIEND_SEND = 3413,
                S_FRIEND_SEND = 3414,
                C_ONE_FRIEND_SEND = 3415,
                S_ONE_FRIEND_SEND = 3416,
                C_FRIEND_REWARD = 3417,
                S_FRIEND_REWARD = 3418,
                C_ONE_FRIEND_REWARD = 3419,
                S_ONE_FRIEND_REWARD = 3420,
                C_ONE_OPTION_FRIEND = 3421,
                S_ONE_OPTION_FRIEND = 3422,
                C_CHAT_TIMES_INFO = 3423,
                S_CHAT_TIMES_INFO = 3424,
                C_LIST_MAIL = 3501,
                S_LIST_MAIL = 3502,
                C_DELETE_MAIL = 3503,
                S_DELETE_MAIL = 3504,
                C_READ_MAILINFO = 3505,
                S_READ_MAIL_INFO = 3506,
                C_RECEIVE_MAIL_ACCESSORY = 3507,
                S_RECEIVE_MAIL_ACCESSORY = 3508,
                S_NOTIFY_NEW_MAIL = 3509,
                C_RECEIVE_ALL_MAIL = 3510,
                S_RECEIVE_ALL_MAIL = 3511,
                C_GET_BOSS_INFO = 3601,
                S_GET_BOSS_INFO = 3602,
                C_WORLD_BOSS_NOTICE = 3604,
                S_WORLD_BOSS_NOTICE = 3605,
                C_WORLD_BOSS_CHALLENGE = 3606,
                S_WORLD_BOSS_CHALLENGE = 3607,
                C_BOSS_CHALLENGE_ALL = 3608,
                S_BOSS_CHALLENGE_ALL = 3609,
                S_SYNC_WORLD_BOSS_REFRESH = 3610,
                C_WORLD_BOSS_BUY = 3611,
                S_WORLD_BOSS_BUY = 3612,
                C_GET_OUT_BOSS_INFO = 3621,
                S_GET_OUT_BOSS_INFO = 3622,
                C_OUT_BOSS_NOTICE = 3624,
                S_OUT_BOSS_NOTICE = 3625,
                C_OUT_BOSS_CHALLENGE = 3626,
                S_OUT_BOSS_CHALLENGE = 3627,
                C_OUT_BOSS_CHALLENGE_ALL = 3628,
                S_OUT_BOSS_CHALLENGE_ALL = 3629,
                C_OUT_BOSS_INSPIRE = 3630,
                S_OUT_BOSS_INSPIRE = 3631,
                C_OUT_BOSS_BUY = 3632,
                S_OUT_BOSS_BUY = 3633,
                C_GET_HOME_BOSS_INFO = 3641,
                S_GET_HOME_BOSS_INFO = 3642,
                C_HOME_BOSS_NOTICE = 3644,
                S_HOME_BOSS_NOTICE = 3645,
                C_HOME_BOSS_CHALLENGE = 3646,
                S_HOME_BOSS_CHALLENGE = 3647,
                C_HOME_BOSS_CHALLENGE_ALL = 3648,
                S_HOME_BOSS_CHALLENGE_ALL = 3649,
                C_MARKET_BUY = 3701,
                S_MARKET_BUY = 3702,
                C_LIST_MARKET_LIMIT_INFO = 3703,
                S_LIST_MARKET_LIMIT_INFO = 3704,
                C_GET_MARKET_LUCKY_INFO = 3705,
                S_GET_MARKET_LUCKY_INFO = 3706,
                C_BUY_MARKET_LUCKY = 3707,
                S_BUY_MARKET_LUCKY = 3708,
                C_GET_MARKET_OVER_FLOW_INFO = 3709,
                S_GET_MARKET_OVER_FLOW_INFO = 3710,
                C_BUY_OVER_FLOW_LUCKY = 3711,
                S_BUY_OVER_FLOW_LUCKY = 3712,
                C_GET_MARKET_DISCOUNT_INFO = 3713,
                S_GET_MARKET_DISCOUNT_INFO = 3714,
                C_BUY_MARKET_DISCOUNT = 3715,
                S_BUY_MARKET_DISCOUNT = 3716,
                C_GET_MARKET_SOL_INFO = 3721,
                S_GET_MARKET_SOL_INFO = 3722,
                C_BUY_MARKET_SOL = 3723,
                S_BUY_MARKET_SOL = 3724,
                C_REFRESH_MARKET_SOL = 3725,
                S_REFRESH_MARKET_SOL = 3726,
                C_REFRESH_MARKET_LUCKY = 3727,
                S_REFRESH_MARKET_LUCKY = 3728,
                C_XUNBAO_GET_RECORD = 3801,
                S_XUNBAO_GET_RECORD = 3802,
                C_XUNBAO_START = 3803,
                S_XUNBAO_START = 3804,
                C_XUNBAO_GETLOG = 3805,
                S_XUNBAO_GETLOG = 3806,
                C_XUNBAO_NEW_GET_INFO = 3807,
                S_XUNBAO_NEW_GET_INFO = 3808,
                C_XUNBAO_NEW_START = 3809,
                S_XUNBAO_NEW_START = 3810,
                C_XUNBAO_NEW_GETLOG = 3811,
                S_XUNBAO_NEW_GETLOG = 3812,
                C_XUNBAO_NEW_CHANGE_HERO = 3813,
                S_XUNBAO_NEW_CHANGE_HERO = 3814,
                C_GET_XUNBAO_NEW_SCORE = 3815,
                S_GET_XUNBAO_NEW_SCORE = 3816,
                C_XUNBAO_WHEEL_INFO = 3821,
                S_XUNBAO_WHEEL_INFO = 3822,
                C_XUNBAO_WHEEL_START = 3823,
                S_XUNBAO_WHEEL_START = 3824,
                C_XUNBAO_WHEEL_REWARD = 3825,
                S_XUNBAO_WHEEL_REWARD = 3826,
                C_7DAYLOGIN_GETSTATE = 3901,
                S_7DAYLOGIN_GETSTATE = 3902,
                C_7DAYLOGIN_RECVREWARD = 3903,
                S_7DAYLOGIN_RECVREWARD = 3904,
                C_DAILY_SIGNIN_GETSTATE = 3921,
                S_DAILY_SIGNIN_GETSTATE = 3922,
                C_DAILY_SIGNIN_SIGN = 3923,
                S_DAILY_SIGNIN_SIGN = 3924,
                C_DAILY_SIGNIN_REWARD = 3925,
                S_DAILY_SIGNIN_REWARD = 3926,
                C_FIRST_RECHARGE_GETRECORD = 4001,
                S_FIRST_RECHARGE_GETRECORD = 4002,
                S_NOTIFY_FIRST_RECHARGE_RECORD = 4003,
                C_FIRST_RECHARGE_GETREWARD = 4004,
                S_FIRST_RECHARGE_GETREWARD = 4005,
                C_CUMULATE_RECHARGE_GETRECORD = 4010,
                S_CUMULATE_RECHARGE_GETRECORD = 4011,
                NOTIFY_CUMULATE_RECHARGE_RECORD = 4012,
                C_CUMULATE_RECHARGE_GETREWARD = 4013,
                S_CUMULATE_RECHARGE_GETREWARD = 4014,
                C_DAY_RECHARGE_INFO = 4015,
                S_DAY_RECHARGE_INFO = 4016,
                C_DAY_RECHARGE_GET_REWARD = 4017,
                S_DAY_RECHARGE_GET_REWARD = 4018,
                C_FABAO_GET_INFO = 4101,
                S_FABAO_GET_INFO = 4102,
                C_FABAO_OPERATION = 4103,
                S_FABAO_OPERATION = 4104,
                C_FABAO_DRESSUP = 4105,
                S_FABAO_DRESSUP = 4106,
                C_FABAO_UNDRESSUP = 4107,
                S_FABAO_UNDRESSUP = 4108,
                C_GET_HELL_INFO = 4201,
                S_GET_HELL_INFO = 4202,
                C_GET_HELL_DAILY_REWARD = 4203,
                S_GET_HELL_DAILY_REWARD = 4204,
                C_HELL_LOTTERY = 4205,
                S_HELL_LOTTERY = 4206,
                C_HELL_ANNE_LEVEL_UP = 4207,
                S_HELL_ANNE_LEVEL_UP = 4208,
                C_HELL_ANNE_DECOMPOSE = 4209,
                S_HELL_ANNE_DECOMPOSE = 4210,
                C_HELL_REMEMBER = 4211,
                S_HELL_REMEMBER = 4212,
                C_GET_ZHEN_FA_INFO = 4301,
                S_GET_ZHEN_FA_INFO = 4302,
                C_ZHEN_FA_STAR_UP = 4303,
                S_ZHEN_FA_STAR_UP = 4304,
                C_ZHEN_FA_USE = 4305,
                S_ZHEN_FA_USE = 4306,
                C_ZHEN_FA_MASTER = 4307,
                S_ZHEN_FA_MASTER = 4308,
                C_ZHEN_FA_RELIVE = 4309,
                S_ZHEN_FA_RELIVE = 4310,
                C_OPNE_SERVER_RANK_INFO = 4401,
                S_OPNE_SERVER_RANK_INFO = 4402,
                C_SERVER_RANK_INFO = 4403,
                S_SERVER_RANK_INFO = 4404,
                C_OPNE_SERVER_HISTORY_RANK_INFO = 4405,
                S_OPNE_SERVER_HISTORY_RANK_INFO = 4406,
                C_GET_GUILD_PAGE_LIST = 4501,
                S_GET_GUILD_PAGE_LIST = 4502,
                C_GET_GUILD_MEMBER_LIST = 4503,
                S_GET_GUILD_MEMBER_LIST = 4504,
                C_GET_GUILD_APPLY_LIST = 4505,
                S_GET_GUILD_APPLY_LIST = 4506,
                C_GET_GUILD_BASE_INFO = 4507,
                S_GET_GUILD_BASE_INFO = 4508,
                C_GET_MY_GUILD_APPLY = 4509,
                S_GET_MY_GUILD_APPLY = 4510,
                C_CREATE_GUILD = 4511,
                S_CREATE_GUILD = 4512,
                C_APPLY_JOIN_GUILD = 4513,
                S_APPLY_JOIN_GUILD = 4514,
                C_EXIT_GUILD = 4515,
                S_EXIT_GUILD = 4516,
                C_DROP_OUT_GUILD = 4517,
                S_DROP_OUT_GUILD = 4518,
                C_LEVEL_UP_GUILD = 4519,
                S_LEVEL_UP_GUILD = 4520,
                C_EDIT_GUILD_DESC = 4521,
                S_EDIT_GUILD_DESC = 4522,
                C_DONATE_GUILD = 4523,
                S_DONATE_GUILD = 4524,
                C_SET_AUTOJOIN_GUILD = 4525,
                S_SET_AUTOJOIN_GUILD = 4526,
                C_APPOINT_GUILD_MEMBER = 4527,
                S_APPOINT_GUILD_MEMBER = 4528,
                C_INHERIT_CHAIR = 4529,
                S_INHERIT_CHAIR = 4530,
                C_APPROVE_GUILD_MEMBER = 4531,
                S_APPROVE_GUILD_MEMBER = 4532,
                C_GET_GUILD_SKILL_LIST = 4533,
                S_GET_GUILD_SKILL_LIST = 4534,
                C_GUILD_SKILL_LEVELUP = 4535,
                S_GUILD_SKILL_LEVELUP = 4536,
                C_GUILD_TRANSFER_CHAIR = 4539,
                S_GUILD_TRANSFER_CHAIR = 4540,
                C_EDIT_GUILD_NAME = 4541,
                S_EDIT_GUILD_NAME = 4542,
                C_GET_BOX_REWARD = 4543,
                S_GET_BOX_REWARD = 4544,
                C_GET_GUILD_LOG = 4545,
                S_GET_GUILD_LOG = 4546,
                C_GET_GUILD_BOSS_INFO = 4550,
                S_GET_GUILD_BOSS_INFO = 4551,
                C_GUILD_BOSS_DAMAGE_RANK = 4552,
                S_GUILD_BOSS_DAMAGE_RANK = 4553,
                C_GET_GUILD_BOSS_REWARD = 4554,
                S_GET_GUILD_BOSS_REWARD = 4555,
                C_BUY_GUILD_BOSS_REVIVE = 4556,
                S_BUY_GUILD_BOSS_REVIVE = 4557,
                C_GUILD_RECRUIT = 4558,
                S_GUILD_RECRUIT = 4559,
                C_GET_GUILD_INST_INFO = 4560,
                S_GET_GUILD_INST_INFO = 4561,
                SYNC_GUILD_NOTICE = 4563,
                C_ONE_KEY_FEED_BOSS = 4564,
                S_ONE_KEY_FEED_BOSS = 4565,
                C_GET_GUILD_TASK_RANK = 4570,
                S_GET_GUILD_TASK_RANK = 4571,
                C_GUILD_BOSS_RELIVE_BOSS = 4572,
                S_GUILD_BOSS_RELIVE_BOSS = 4573,
                C_GUILD_FEED_BOSS_INFO = 4574,
                S_GUILD_FEED_BOSS_INFO = 4575,
                C_GUILD_FEED_BOSS = 4576,
                S_GUILD_FEED_BOSS = 4577,
                C_GUILD_FEED_BOSS_CHAT = 4578,
                S_GUILD_FEED_BOSS_CHAT = 4579,
                C_GET_NEW_GUILD_TASK_INFO = 4580,
                S_GET_NEW_GUILD_TASK_INFO = 4581,
                C_GUILD_TASK_SUBMIT = 4582,
                S_GUILD_TASK_SUBMIT = 4583,
                C_GUILD_TASK_COLLECT = 4584,
                S_GUILD_TASK_COLLECT = 4585,
                C_GUILD_TASK_SEARCH = 4586,
                S_GUILD_TASK_SEARCH = 4587,
                C_GET_GUILD_TASK_REWARD = 4588,
                S_GET_GUILD_TASK_REWARD = 4589,
                S_SYNC_GUILD_TASK_FINISH = 4590,
                C_GET_GUILD_TASK_STAGE_REWARD = 4591,
                S_GET_GUILD_TASK_STAGE_REWARD = 4592,
                C_GET_DAILY_TASK_BOSS_INFO = 4601,
                S_GET_DAILY_TASK_BOSS_INFO = 4602,
                C_DAILY_TASK_BOSS_CHALLENGE = 4603,
                S_DAILY_TASK_BOSS_CHALLENGE = 4604,
                C_DAILY_TASK_BOSS_CHALLENGE_ALL = 4605,
                S_DAILY_TASK_BOSS_CHALLENGE_ALL = 4606,
                C_DAILY_TASK_REFRESH = 4607,
                S_DAILY_TASK_REFRESH = 4608,
                C_DAILY_TASK_BUY_TIME = 4609,
                S_DAILY_TASK_BUY_TIME = 4610,
                C_GET_CONVOY_INFO = 4701,
                S_GET_CONVOY_INFO = 4702,
                C_GET_CONVOY_REWARD = 4703,
                S_GET_CONVOY_REWARD = 4704,
                C_CONVOY_REFRESH = 4705,
                S_CONVOY_REFRESH = 4706,
                C_GET_CONVOY_LOG = 4707,
                S_GET_CONVOY_LOG = 4708,
                C_CONVOY_STAR = 4709,
                S_CONVOY_STAR = 4710,
                C_GET_ACHIEVEMENT_INFO = 4801,
                S_GET_ACHIEVEMENT_INFO = 4802,
                S_CHANGE_ACHIEVEMENT_INFO = 4803,
                C_GET_ACHIEVEMENT_REWARD = 4804,
                S_GET_ACHIEVEMENT_REWARD = 4805,
                S_PUSH_ACHIEVEMENT_INFO = 4806,
                C_GET_ACHIEVEMENT_POINT_REWARD = 4807,
                S_GET_ACHIEVEMENT_POINT_REWARD = 4808,
                C_GET_VIP_INFO = 4901,
                S_GET_VIP_INFO = 4902,
                C_GET_VIP_REWARD = 4903,
                S_GET_VIP_REWARD = 4904,
                C_GET_INVEST_INFO = 4905,
                S_GET_INVEST_INFO = 4906,
                C_GET_INVEST_REWARD = 4907,
                S_GET_INVEST_REWARD = 4908,
                C_BUY_INVEST = 4909,
                S_BUY_INVEST = 4910,
                C_SKIP_BATTLE = 4911,
                S_SKIP_BATTLE = 4912,
                C_BUY_VIP_GIFT = 4913,
                S_BUY_VIP_GIFT = 4914,
                C_GET_ARENA_INFO = 5001,
                S_GET_ARENA_INFO = 5002,
                C_REFRESH_ARENA_INFO = 5003,
                S_REFRESH_ARENA_INFO = 5004,
                C_GET_ARENA_REWARD = 5005,
                S_GET_ARENA_REWARD = 5006,
                C_GET_ARENA_LOG = 5007,
                S_GET_ARENA_LOG = 5008,
                S_ARENA_SWEEP = 5009,
                S_ARENA_BE_CHALLENGE = 5010,
                C_ARENA_BUY_CHALLENGE = 5011,
                S_ARENA_BUY_CHALLENGE = 5012,
                C_GET_ANSWER_ACT_INFO = 5101,
                S_GET_ANSWER_ACT_INFO = 5102,
                C_ANSWER_SUBJECT = 5103,
                S_ANSWER_SUBJECT = 5104,
                C_GET_LADDER_INFO = 5201,
                S_GET_LADDER_INFO = 5202,
                C_BUY_LADDER_TIMES = 5203,
                S_BUY_LADDER_TIMES = 5204,
                C_MATCH_LADDER = 5205,
                S_MATCH_LADDER = 5206,
                C_GET_LADDER_RANK = 5207,
                S_GET_LADDER_RANK = 5208,
                C_GET_FETTER_INFO = 5301,
                S_GET_FETTER_INFO = 5302,
                SYNC_FETTER_ACTIVE = 5303,
                C_GET_FETTER_CALL_INFO = 5305,
                S_GET_FETTER_CALL_INFO = 5306,
                C_FETTER_CALL = 5307,
                S_FETTER_CALL = 5308,
                C_FREE_FETTER_CALL = 5309,
                S_FREE_FETTER_CALL = 5310,
                C_FETTER_CALLS_SELECT_HERO = 5311,
                S_FETTER_CALL_SELECT_HERO = 5312,
                C_GET_DEMON_INFO = 5401,
                S_GET_DEMON_INFO = 5402,
                C_SET_DEMON_FORMATION_INFO = 5403,
                S_SET_DEMON_FORMATION_INFO = 5404,
                C_DEMON_BUY_BUFF = 5405,
                S_DEMON_BUY_BUFF = 5406,
                C_DEMON_RESET = 5407,
                S_DEMON_RESET = 5408,
                C_DEMON_SWEEP = 5409,
                S_DEMON_SWEEP = 5410,
                C_DEMON_BUY_ITEM = 5411,
                S_DEMON_BUY_ITEM = 5412,
                C_GET_HUOYUEDU_INFO = 5501,
                S_GET_HUOYUEDU_INFO = 5502,
                C_GET_HUOYUEDU_REWARD = 5503,
                S_GET_HUOYUEDU_REWARD = 5504,
                S_SYNC_HUOYUEDU_UPDATE = 5506,
                C_GET_HUOYUEDU_TYPE = 5507,
                S_GET_HUOYUEDU_TYPE = 5508,
                C_GET_TEAM_INFO = 5601,
                S_GET_TEAM_INFO = 5602,
                C_GET_TEAM_INSTANCE_INFO = 5603,
                S_GET_TEAM_INSTANCE_INFO = 5604,
                C_JOIN_TEAM = 5607,
                S_JOIN_TEAM = 5608,
                C_QUICK_JOIN_TEAM = 5609,
                C_EXIT_TEAM = 5610,
                S_EXIT_TEAM = 5611,
                S_UPDATE_TEAM = 5612,
                C_SET_TEAM_HERO_POS = 5613,
                S_SET_TEAM_HERO_POS = 5614,
                C_FULL_TEAM = 5615,
                C_GET_TEAM2_INFO = 5651,
                S_GET_TEAM2_INFO = 5652,
                C_GET_TEAM2_INSTANCE_INFO = 5653,
                S_GET_TEAM2_INSTANCE_INFO = 5654,
                C_JOIN_TEAM2 = 5657,
                S_JOIN_TEAM2 = 5658,
                C_QUICK_JOIN_TEAM2 = 5659,
                C_EXIT_TEAM2 = 5660,
                S_EXIT_TEAM2 = 5661,
                S_UPDATE_TEAM2 = 5662,
                C_SET_TEAM2_HERO_POS = 5663,
                S_SET_TEAM2_HERO_POS = 5664,
                C_FULL_TEAM2 = 5665,
                C_GET_NEW_TEAM_INFO = 5671,
                S_GET_NEW_TEAM_INFO = 5672,
                C_CREATE_NEW_TEAM = 5673,
                S_CREATE_NEW_TEAM = 5674,
                C_JOIN_NEW_TEAM = 5675,
                S_JOIN_NEW_TEAM = 5676,
                C_QUICK_JOIN_NEW_TEAM = 5677,
                S_QUICK_JOIN_NEW_TEAM = 5678,
                C_EXIT_NEW_TEAM = 5679,
                S_EXIT_NEW_TEAM = 5680,
                S_UPDATE_NEW_TEAM = 5681,
                C_SET_NEW_TEAM_HERO_POS = 5682,
                S_SET_NEW_TEAM_HERO_POS = 5683,
                C_ONEKEY_FULL_NEW_TEAM = 5684,
                C_NEW_TEAM_STATE = 5685,
                S_NEW_TEAM_STATE = 5686,
                C_NEW_TEAM_INVITE = 5687,
                S_NEW_TEAM_INVITE = 5688,
                C_NEW_TEAM_CHANGE_POS = 5689,
                S_NEW_TEAM_CHANGE_POS = 5690,
                C_NEW_TEAM_INVITE_QUERY = 5691,
                S_NEW_TEAM_INVITE_QUERY = 5692,
                C_NEW_TEAM_INVITE_IGNORE = 5693,
                S_NEW_TEAM_INVITE_IGNORE = 5694,
                C_NEW_TEAM_INVITE_DATA = 5695,
                S_NEW_TEAM_INVITE_DATA = 5696,
                C_NEW_TEAM_BATTLE_TIMES = 5697,
                S_NEW_TEAM_BATTLE_TIMES = 5698,
                C_GET_SUPREME_INFO = 5700,
                S_GET_SUPREME_INFO = 5701,
                C_GET_SUPREME_RANK = 5702,
                S_GET_SUPREME_RANK = 5703,
                C_SUPREME_EXIT = 5704,
                S_SUPREME_EXIT = 5705,
                C_SUPREME_AUTO_CHALLENGE = 5706,
                S_SUPREME_AUTO_CHALLENGE = 5707,
                C_GET_SUPREME_REWARD = 5708,
                S_GET_SUPREME_REWARD = 5709,
                C_SUPREME_BUY_REVIVE = 5710,
                S_SUPREME_BUY_REVIVE = 5711,
                S_SUPREME_UP_DOWN_LAYER = 5712,
                S_SUPREME_SEND_SCORE = 5713,
                S_SUPREME_OVER = 5714,
                S_SYN_LAYER_NUM = 5715,
                S_SUPREME_SEND_REVICE_TIME = 5716,
                S_SUPREME_SEND_KILL = 5717,
                C_GET_PRACTICE_INFO = 5800,
                S_GET_PRACTICE_INFO = 5801,
                C_UPGRADE_PRACTICE_PART = 5802,
                S_UPGRADE_PRACTICE_PART = 5803,
                C_TORTOISE_GET_INFO = 5900,
                S_TORTOISE_GET_INFO = 5901,
                C_TORTOISE_STAKE = 5902,
                S_TORTOISE_STAKE = 5903,
                C_TORTOISE_USE_ITEM = 5904,
                S_TORTOISE_USE_ITEM = 5905,
                C_TORTOISE_SPEAK = 5906,
                S_TORTOISE_SPEAK = 5907,
                S_TORTOISE_START = 5908,
                S_TORTOISE_SYNC_INFO = 5909,
                S_TORTOISE_RESULT = 5910,
                S_STAKE_SYN = 5911,
                C_TORTOISE_GET_STAKE_INFO = 5912,
                S_TORTOISE_GET_STAKE_INFO = 5913,
                C_GET_REWARD_TASK_INFO = 6000,
                S_GET_REWARD_TASK_INFO = 6001,
                C_REFRESH_REWARD_TASK_INFO = 6002,
                S_REFRESH_REWARD_TASK_INFO = 6003,
                C_REWARD_TASK_SET_HERO = 6004,
                S_REWARD_TASK_SET_HERO = 6005,
                C_START_RWEARD_TASK = 6006,
                S_START_REWARD_TASK = 6007,
                C_REWARD_TASK_WATCH_AND_GET_REWARD = 6008,
                S_REWARD_TASK_WATCH_AND_GET_REWARD = 6009,
                C_GET_REWARD_TASK2_INFO = 6010,
                S_GET_REWARD_TASK2_INFO = 6011,
                C_REFRESH_REWARD_TASK2_INFO = 6012,
                S_REFRESH_REWARD_TASK2_INFO = 6013,
                C_START_RWEARD_TASK2 = 6016,
                S_START_REWARD_TASK2 = 6017,
                C_REWARD_TASK2_WATCH_AND_GET_REWARD = 6018,
                S_REWARD_TASK2_WATCH_AND_GET_REWARD = 6019,
                C_GET_GUILD_WAR_INFO = 6100,
                S_GET_GUILD_WAR_INFO = 6101,
                C_GUILD_WAR_PART_IN = 6102,
                S_GUILD_WAR_PART_IN = 6103,
                C_GUILD_WAR_REVIVE = 6104,
                S_GUILD_WAR_REVIVE = 6105,
                C_GUILD_WAR_EDIT_DEC = 6106,
                S_GUILD_WAR_EDIT_DEC = 6107,
                C_GUILD_WAR_REWARD = 6108,
                S_GUILD_WAR_REWARD = 6109,
                C_GUILD_WAR_DEFEND = 6112,
                S_GUILD_WAR_DEFEND = 6113,
                C_GUILD_WAR_CANCEL_DEFEND = 6114,
                S_GUILD_WAR_CANCEL_DEFEND = 6115,
                SYNC_GUILD_WAR_FINISH = 6116,
                S_SYN_MODULE_FIGHT = 6200,
                C_GET_STRONGER_INFO = 6201,
                S_GET_STRONGER_INFO = 6202,
                C_GET_STRONGER_REWARD = 6203,
                S_GET_STRONGER_REWARD = 6204,
                C_GET_ALL_MODULE_FIGHT = 6205,
                C_GET_WAR_BOSS_INFO = 6300,
                S_GET_WAR_BOSS_INFO = 6301,
                C_BUY_WAR_BOSS_TIMES = 6302,
                S_BUY_WAR_BOSS_TIMES = 6303,
                C_GET_DAY_SERVER_BOSS_INFO = 6310,
                S_GET_DAY_SERVER_BOSS_INFO = 6311,
                C_DAY_SERVER_BOSS_RANK = 6312,
                S_DAY_SERVER_BOSS_RANK = 6313,
                C_DAY_SERVER_BOSS_BUY = 6314,
                S_DAY_SERVER_BOSS_BUY = 6315,
                C_DAY_SERVER_BOSS_AUTO_PLAY = 6316,
                S_DAY_SERVER_BOSS_AUTO_PLAY = 6317,
                C_DAY_SERVER_BOSS_CHAT = 6318,
                S_DAY_SERVER_BOSS_CHAT = 6319,
                C_GET_SERVER_ACTIVE_INFO = 6400,
                S_GET_SERVER_ACTIVE_INFO = 6401,
                C_GET_SERVER_ACTIVE_REWARD = 6402,
                S_GET_SERVER_ACTIVE_REWARD = 6403,
                C_GET_OPACTIVE_INFO = 6404,
                S_GET_OPACTIVE_INFO = 6405,
                S_SEND_OPACTIVE_CHANGE = 6406,
                C_GET_ZERO_PREFERENTIAL_INFO = 6407,
                S_GET_ZERO_PREFERENTIAL_INFO = 6408,
                C_BUY_ZERO_PREFERENTIAL = 6409,
                S_BUY_ZERO_PREFERENTIAL = 6410,
                C_GET_ZERO_PREFERENTIAL_RETURN = 6411,
                S_GET_ZERO_PREFERENTIAL_RETURN = 6412,
                C_GET_OPACTIVE_TABLE = 6413,
                S_GET_OPACTIVE_TABLE = 6414,
                C_GET_OPACTIVE_TYPE_INFO = 6415,
                S_GET_OPACTIVE_TYPE_INFO = 6416,
                C_GET_OPACTIVE_REWARD = 6417,
                S_GET_OPACTIVE_REWARD = 6418,
                C_OPACTIVE_LOG = 6419,
                S_OPACTIVE_LOG = 6420,
                C_OP_LUCKY_HUNT = 6421,
                S_OP_LUCKY_HUNT = 6422,
                C_HERO_PUZZLE_INFO = 6423,
                S_HERO_PUZZLE_INFO = 6424,
                C_HERO_PUZZLE_LIGHT = 6425,
                S_HERO_PUZZLE_LIGHT = 6426,
                C_DIAMOND_WHEEL_INFO = 6427,
                S_DIAMOND_WHEEL_INFO = 6428,
                C_DIAMOND_WHEEL_REWARD = 6429,
                S_DIAMOND_WHEEL_REWARD = 6430,
                C_DIAMOND_WHEEL_RECORD = 6431,
                S_DIAMOND_WHEEL_RECORD = 6432,
                S_HERO_PUZZLE_TASK = 6433,
                C_XIANG_MO_LU_INFO = 6434,
                S_XIANG_MO_LU_INFO = 6435,
                C_XIANG_MO_LU_REWARD = 6436,
                S_XIANG_MO_LU_REWARD = 6437,
                S_XIANG_MO_LU_TASK = 6438,
                C_GET_HIT_GOLD_EGG_INFO = 6439,
                S_GET_HIT_GOLD_EGG_INFO = 6440,
                C_HIT_GOLD_EGG = 6441,
                S_HIT_GOLD_EGG = 6442,
                C_GET_OP_XUN_BAO_INFO = 6443,
                S_GET_OP_XUN_BAO_INFO = 6444,
                C_OP_XUN_BAO = 6445,
                S_OP_XUN_BAO = 6446,
                C_GET_ALL_HIGH_INFO = 6447,
                S_GET_ALL_HIGH_INFO = 6448,
                C_ALL_HIGH_TASK_REWARD = 6449,
                S_ALL_HIGH_TASK_REWARD = 6450,
                C_ALL_HIGH_REWARD = 6451,
                S_ALL_HIGH_REWARD = 6452,
                S_PUSH_ALL_HIGH_TASK = 6453,
                C_GET_LUCK_PAN_INFO = 6454,
                S_GET_LUCK_PAN_INFO = 6455,
                C_LUCK_PAN_BUY = 6456,
                S_LUCK_PAN_BUY = 6457,
                C_LUCK_PAN_SHOP = 6458,
                S_LUCK_PAN_SHOP = 6459,
                C_LUCK_PAN_TISHI = 6460,
                S_LUCK_PAN_TISHI = 6461,
                C_GET_SUPER_GIFT_INFO = 6462,
                S_GET_SUPER_GIFT_INFO = 6463,
                C_BUY_SUPER_GIFT = 6464,
                S_BUY_SUPER_GIFT = 6465,
                S_PUSH_SUPER_GIFT = 6466,
                C_GET_SEA_SHOP_INFO = 6467,
                S_GET_SEA_SHOP_INFO = 6468,
                C_SEA_SHOP_BUY = 6469,
                S_SEA_SHOP_BUY = 6470,
                C_SEA_SHOP_REFRESH = 6471,
                S_SEA_SHOP_REFRESH = 6472,
                C_SEA_SHOP_BUY_ALL = 6473,
                S_SEA_SHOP_BUY_ALL = 6474,
                C_GET_LIUYI_LUCKY_INFO = 6475,
                S_GET_LIUYI_LUCKY_INFO = 6476,
                C_LIUYI_LUCKY_XUNBAO = 6477,
                S_LIUYI_LUCKY_XUNBAO = 6478,
                C_GET_LIUYI_LOG_INFO = 6479,
                S_GET_LIUYI_LOG_INFO = 6480,
                C_LIUYI_LUCKY_SCORE_REWARD = 6481,
                S_LIUYI_LUCKY_SCORE_REWARD = 6482,
                C_LIUYI_LUCKY_RANK_DATA = 6483,
                S_LIUYI_LUCKY_RANK_DATA = 6484,
                C_CHECK_CDK_INFO = 6500,
                S_CHECK_CDK_INFO = 6501,
                C_GET_CDK_REWARD = 6502,
                S_GET_CDK_REWARD = 6503,
                C_GET_MERGE_ACTIVITY_INFO = 6510,
                S_GET_MERGE_ACTIVITY_INFO = 6511,
                C_GET_MERGE_ACTIVITY_REWARD = 6512,
                S_GET_MERGE_ACTIVITY_REWARD = 6513,
                C_GET_TOWER_INFO = 6600,
                S_GET_TOWER_INFO = 6601,
                C_GET_TOWER_RANK_INFO = 6602,
                S_GET_TOWER_RANK_INFO = 6603,
                C_TOWER_AUTO_CHALLENG = 6604,
                S_TOWER_AUTO_CHALLENG = 6605,
                C_GET_MONEY_TREE_INFO = 6700,
                S_GET_MONEY_TREE_INFO = 6701,
                C_MONEY_TREE_REWARD = 6702,
                S_MONEY_TREE_REWARD = 6703,
                C_MONEY_TREE_EXTEND_REWARD = 6704,
                S_MONEY_TREE_EXTEND_REWARD = 6705,
                C_GET_HERO_COLLECTOR_INFO = 6800,
                S_GET_HERO_COLLECTOR_INFO = 6801,
                C_GET_HERO_COLLECTOR_REWARD = 6802,
                S_GET_HERO_COLLECTOR_REWARD = 6803,
                C_GET_HERO_INSTANCE_INFO = 6810,
                S_GET_HERO_INSTANCE_INFO = 6811,
                C_GET_HERO_INSTANCE_REWARD = 6812,
                S_GET_HERO_INSTANCE_REWARD = 6813,
                C_HERO_INSTANCE_SWEEP = 6814,
                S_HERO_INSTANCE_SWEEP = 6815,
                C_HERO_INSTANCE_BUY = 6816,
                S_HERO_INSTANCE_BUY = 6817,
                C_GET_GUA_JI_BOX_INFO = 7001,
                S_GET_GUA_JI_BOX_INFO = 7002,
                C_GUA_JI_BOX_FORWARD = 7003,
                S_GUA_JI_BOX_FORWARD = 7004,
                C_GUA_JI_BOX_REWARD = 7005,
                S_GUA_JI_BOX_REWARD = 7006,
                C_GUA_JI_BOX_USEITEM = 7007,
                S_GUA_JI_BOX_USEITEM = 7008,
                C_GET_LUCK_CHANCE_INFO = 7101,
                S_GET_LUCK_CHANCE_INFO = 7102,
                C_LUCK_CHANCE_OPEN = 7103,
                S_LUCK_CHANCE_OPEN = 7104,
                S_LUCK_CHANCE_PUSH = 7105,
                C_GET_NAN_TIAN_GATE_INFO = 7201,
                S_GET_NAN_TIAN_GATE_INFO = 7202,
                C_NAN_TIAN_GATE_REFRESH = 7203,
                S_NAN_TIAN_GATE_REFRESH = 7204,
                C_NAN_TIAN_GATE_WIN_BOX = 7205,
                S_NAN_TIAN_GATE_WIN_BOX = 7206,
                C_NAN_TIAN_GATE_BOX = 7207,
                S_NAN_TIAN_GATE_BOX = 7208,
                C_NAN_TIAN_GATE_BUY_TIMES = 7209,
                S_NAN_TIAN_GATE_BUY_TIMES = 7210,
                C_NAN_TIAN_GATE_BUY_BUFF = 7211,
                S_NAN_TIAN_GATE_BUY_BUFF = 7212,
                C_NAN_TIAN_GATE_RANK = 7213,
                S_NAN_TIAN_GATE_RANK = 7214,
                C_GET_SHARE_REWARD_INFO = 7301,
                S_GET_SHARE_REWARD_INFO = 7302,
                C_GET_SHARE_REWARD = 7303,
                S_GET_SHARE_REWARD = 7304,
                C_GET_LEVEL_BUY_INFO = 7310,
                S_GET_LEVEL_BUY_INFO = 7311,
                C_GET_LEVEL_BUY_REWRAD = 7312,
                S_GET_LEVEL_BUY_REWARD = 7313,
                S_PUSH_LEVEL_BUY_INFO = 7314,
                C_GET_EVERYDAY_RTN_INFO = 7401,
                S_GET_EVERYDAY_RTN_INFO = 7402,
                C_EVERYDAY_RTN_REWARD = 7403,
                S_EVERYDAY_RTN_REWARD = 7404,
                S_EVERYDAY_RTN_PUSH = 7405,
                C_GET_CHARGE_PAN_INFO = 7406,
                S_GET_CHARGE_PAN_INFO = 7407,
                C_CHARGE_PAN_REWARD = 7408,
                S_CHARGE_PAN_REWARD = 7409,
                C_CHARGE_PAN_LUCK_REWARD = 7410,
                S_CHARGE_PAN_LUCK_REWARD = 7411,
                C_CHARGE_PAN_LOGS = 7412,
                S_CHARGE_PAN_LOGS = 7413,
                C_GET_TODAY_DISCOUNT_INFO = 7414,
                S_GET_TODAY_DISCOUNT_INFO = 7415,
                C_BUY_TODAY_DISCOUNT = 7416,
                S_BUY_TODAY_DISCOUNT = 7417,
                C_GET_EVERY_LOGIN_INFO = 7418,
                S_GET_EVERY_LOGIN_INFO = 7419,
                C_GET_EVERY_LOGIN_REWARD = 7420,
                S_GET_EVERY_LOGIN_REWARD = 7421,
                C_GET_XIANMAI_INFO = 7501,
                S_GET_XIANMAI_INFO = 7502,
                C_GET_XIANMAI_PLAYER = 7503,
                S_GET_XIANMAI_PLAYER = 7504,
                C_GET_XIANMAI_ADDTIME = 7505,
                S_GET_XIANMAI_ADDTIEM = 7506,
                C_GET_XIANMAI_GIVEUP = 7507,
                S_GET_XIANMAI_GIVEUP = 7508,
                C_GET_XIANMAI_BOXREWARD = 7509,
                S_GET_XIANMAI_BOXREWARD = 7510,
                C_GET_XIANMAI_ATTACK = 7511,
                S_GET_XIANMAI_ATTACK = 7512,
                C_GET_XIANMAI_SNEAK = 7513,
                S_GET_XIANMAI_SNEAK = 7514,
                C_GET_XIANMAI_LOGS = 7515,
                S_GET_XIANMAI_LOGS = 7516,
                C_GET_XIANMAI_TEACH_UP = 7517,
                S_GET_XIANMAI_TEACH_UP = 7518,
                C_GET_XIANMAI_BUY_TIMES = 7519,
                S_GET_XIANMAI_BUY_TIMES = 7520,
                C_GET_SHOW_INFO = 7601,
                S_GET_SHOW_INFO = 7602,
                C_UPDATE_USE_SHOW = 7603,
                S_UPDATE_USE_SHOW = 7604,
                C_ACTIVE_SHOW_INFO = 7605,
                S_ACTIVE_SHOW_INFO = 7606,
                C_GET_ABI_HELL_INFO = 7701,
                S_GET_ABI_HELL_INFO = 7702,
                C_GET_ABI_BOX_REWARD = 7703,
                S_GET_ABI_BOX_REWARD = 7704,
                C_GET_ABI_HELL_NEXT = 7705,
                S_GET_ABI_HELL_NEXT = 7706,
                C_GET_ABI_BUY_TIMES = 7707,
                S_GET_ABI_BUY_TIMES = 7708,
                C_GET_TOP_RANK_PLAY_INFO = 7801,
                S_GET_TOP_RANK_PLAY_INFO = 7802,
                C_GET_TOP_RANK_PLAY_WORSHIP = 7803,
                S_GET_TOP_RANK_PLAY_WORSHIP = 7804,
                C_GET_TOP_RANK_PLAY_WARRECORD = 7805,
                S_GET_TOP_RANK_PLAY_WARRECORD = 7806,
                C_GET_TOP_RANK_PLAY_FORMATION = 7807,
                S_GET_TOP_RANK_PLAY_FORMATION = 7808,
                C_UPDATE_TOP_RANK_PLAY_FORMATION = 7809,
                S_UPDATE_TOP_RANK_PLAY_FORMATION = 7810,
                C_GET_TOP_RANK_PLAY_APPLY = 7811,
                S_GET_TOP_RANK_PLAY_APPLY = 7812,
                C_GET_TOP_RANK_PLAY_WIN = 7813,
                S_GET_TOP_RANK_PLAY_WIN = 7814,
                C_GET_TOP_RANK_PLAY_GUESS = 7815,
                S_GET_TOP_RANK_PLAY_GUESS = 7816,
                C_GET_TOP_RANK_PLAY_CHAMPION = 7817,
                S_GET_TOP_RANK_PLAY_CHAMPION = 7818,
                C_GET_TOP_RANK_BATTLE = 7819,
                S_GET_TOP_RANK_BATTLE = 7820,
                C_GET_TOP_RANK_GUESS_RECORD = 7821,
                S_GET_TOP_RANK_GUESS_RECORD = 7822,
                C_GET_TOP_RANK_WARREPORT = 7823,
                S_GET_TOP_RANK_WARREPORT = 7824,
                S_GET_TOP_RANK_PUSH_RECORD = 7825,
                C_GET_CROSS_BOSS_NEW_INFO = 7901,
                S_GET_CROSS_BOSS_NEW_INFO = 7902,
                C_GET_CROSS_BOSS_ONE_INFO = 7903,
                S_GET_CROSS_BOSS_ONE_INFO = 7904,
                C_GET_CROSS_BOSS_NEW_RECORD = 7905,
                S_GET_CROSS_BOSS_NEW_RECORD = 7906,
                C_GET_CROSS_BOSS_NEW_FIND = 7907,
                S_GET_CROSS_BOSS_NEW_FIND = 7908,
                C_GET_CROSS_BOSS_NEW_EXIT = 7911,
                S_GET_CROSS_BOSS_NEW_EXIT = 7912,
                S_SYNC_CROSS_BOSS_KILL = 7913,
                C_GET_RED_PACKET_INFO = 8001,
                S_GET_RED_PACKET_INFO = 8002,
                C_GET_RED_PACKET_REWARD = 8003,
                S_GET_RED_PACKET_REWARD = 8004,
                S_GET_RED_PACKET_PUSH = 8005,
                S_RED_PACKET_PUSH_REWARD = 8006,
                C_GET_RED_WHEEL_INFO = 8010,
                S_GET_RED_WHEEL_INFO = 8011,
                C_GET_RED_WHEEL_PLAY = 8012,
                S_GET_RED_WHEEL_PLAY = 8013,
                C_GET_RED_WHEEL_RECORD = 8014,
                S_GET_RED_WHEEL_RECORD = 8015,
                C_GET_RED_WHEEL_MONEY = 8016,
                S_GET_RED_WHEEL_MONEY = 8017,
                C_GET_RED_WHEEL_MONEY_RECORD = 8018,
                S_GET_RED_WHEEL_MONEY_RECORD = 8019,
                S_GET_RED_MONEY_PUSH = 8020,
                S_RED_MONEY_PUSH_REWARD = 8021,
                C_GET_FORMATION_HELP_INFO = 9001,
                S_GET_FORMATION_HELP_INFO = 9002,
                C_FORMATION_HELP_HERO_ON = 9003,
                S_FORMATION_HELP_HERO_ON = 9004,
                C_FORMATION_HELP_LEVEL = 9005,
                S_FORMATION_HELP_LEVEL = 9006,
                C_GET_HERO_SHOP_INFO = 9101,
                S_GET_HERO_SHOP_INFO = 9102,
                C_HERO_SHOP_BUY_REWARD = 9103,
                S_HERO_SHOP_BUY_REWARD = 9104,
                C_GUILD_ARENA_APPLY = 9201,
                S_GUILD_ARENA_APPLY = 9202,
                C_GET_GUILD_ARENA_INFO = 9203,
                S_GET_GUILD_ARENA_INFO = 9204,
                C_GUILD_ARENA_HISTORY = 9205,
                S_GUILD_ARENA_HISTORY = 9206,
                C_GUILD_ARENA_RANK = 9207,
                S_GUILD_ARENA_RANK = 9208,
                C_GUILD_ARENA_PEAK = 9209,
                S_GUILD_ARENA_PEAK = 9210,
                C_GUILD_ARENA_TARGETS = 9211,
                S_GUILD_ARENA_TARGETS = 9212,
                C_GUILD_ARENA_RECORD = 9213,
                S_GUILD_ARENA_RECORD = 9214,
                C_GUILD_ARENA_REPORT = 9215,
                S_GUILD_ARENA_REPORT = 9216,
                C_GUILD_ARENA_BUY_TIMES = 9217,
                S_GUILD_ARENA_BUY_TIMES = 9218,
                C_GUILD_ARENA_ATTACK = 9219,
                S_GUILD_ARENA_ATTACK = 9220,
                C_GET_SUIT_COLLECT_INFO = 9301,
                S_GET_SUIT_COLLECT_INFO = 9302,
                C_GET_SUIT_COLLECT_REWARD = 9303,
                S_GET_SUIT_COLLECT_REWARD = 9304,
                S_SYNC_SUIT_COLLECT_UPDATE = 9305,
                CROSS_C_HEART_BEAT = 100001,
                CROSS_S_HEART_BEAT = 100002,
                CROSS_C_SERVER_REGISTER = 100003,
                CROSS_S_SERVER_REGISTER = 100004,
                CROSS_S_EXCEPTION_MSG = 100005,
                CROSS_C_SERVER_PUSH = 100006,
                CROSS_S_SERVER_PUSH = 100007,
                CROSS_C_HTTP_DATA = 100008,
                CROSS_C_GET_GUILD_WAR_INFO = 100100,
                CROSS_S_GET_GUILD_WAR_INFO = 100101,
                CROSS_C_GUILD_WAR_DAMAGE = 100102,
                CROSS_S_GUILD_WAR_DAMAGE = 100103,
                CROSS_C_GUILD_WAR_DEFEND = 100104,
                CROSS_S_GUILD_WAR_DEFEND = 100105,
                CROSS_C_GUILD_WAR_CANCEL_DEFEND = 100106,
                CROSS_S_GUILD_WAR_CANCEL_DEFEND = 100107,
                CROSS_SYNC_GUILD_WAR_FINISH = 100108,
                CROSS_SYNC_GUILD_WAR_LEVEL_UP = 100109,
                CROSS_SYNC_GUILD_WAR_DISSOLVE = 100110,
                CROSS_C_BATTLE_INSTANCE = 100190,
                CROSS_S_BATTLE_INSTANCE = 100191,
                CROSS_C_GET_TEAM_INFO = 100200,
                CROSS_S_GET_TEAM_INFO = 100201,
                CROSS_C_QUICK_JOIN_TEAM = 100202,
                CROSS_S_UPDATE_TEAM = 100203,
                CROSS_C_JOIN_TEAM = 100204,
                CROSS_S_JOIN_TEAM = 100205,
                CROSS_C_EXIT_TEAM = 100206,
                CROSS_S_EXIT_TEAM = 100207,
                CROSS_C_SET_TEAM_HERO_POS = 100208,
                CROSS_S_GET_TEAM2_INFO = 100251,
                CROSS_C_GET_TEAM2_INFO = 100250,
                CROSS_C_QUICK_JOIN_TEAM2 = 100252,
                CROSS_S_UPDATE_TEAM2 = 100253,
                CROSS_C_JOIN_TEAM2 = 100254,
                CROSS_S_JOIN_TEAM2 = 100255,
                CROSS_C_EXIT_TEAM2 = 100256,
                CROSS_S_EXIT_TEAM2 = 100257,
                CROSS_C_SET_TEAM2_HERO_POS = 100258,
                CROSS_C_SUPREME_ENTER = 100300,
                CROSS_C_SUPREME_EXIT = 100301,
                CROSS_S_SYN_LAYER_NUM = 100302,
                CROSS_C_GET_SUPREME_RANK = 100303,
                CROSS_S_GET_SUPREME_RANK = 100304,
                CROSS_S_SUPREME_UP_DOWN_LAYER = 100307,
                CROSS_S_SUPREME_SEND_SCORE = 100308,
                CROSS_S_SUPREME_OVER = 100309,
                CROSS_C_SUPREME_AUTO_CHALLENGE = 100305,
                CROSS_S_SUPREME_AUTO_CHALLENGE = 100306,
                CROSS_S_SYN_BATTLE_INFO = 100310,
                CROSS_C_GET_WAR_BOSS_INFO = 100400,
                CROSS_S_GET_WAR_BOSS_INFO = 100401,
                CROSS_S_WAR_BOSS_DEATH = 100403,
                CROSS_S_SYNC_BOSS_REFRESH = 100405,
                CROSS_C_GET_PLAYER_INFO = 100500,
                CROSS_S_GET_PLAYER_INFO = 100501,
                CROSS_C_RECHARGE_RTN = 100502,
                CROSS_S_RECHARGE_RTN = 100503,
                CROSS_C_SEND_CHAT_INFO = 100504,
                CROSS_S_SEND_CHAT_INFO = 100505,
                CROSS_C_SEND_PLYAER_DATA = 100506,
                CROSS_S_SEND_PLAYER_DATA = 100507,
                CROSS_C_GET_PLAYER_BATTLE_INFO = 100508,
                CROSS_S_GET_PLAYER_BATTLE_INFO = 100509,
                CROSS_C_GET_PLAYER_ABI_HELL = 100510,
                CROSS_S_GET_PLAYER_ABI_HELL = 100511,
                CROSS_C_PLAYER_SYS_BATTLE_INFO = 100512,
                CROSS_S_PLAYER_SYS_BATTLE_INFO = 100513,
                CROSS_C_PLAYER_QUERY_INFO = 100514,
                CROSS_S_PLAYER_QUERY_INFO = 100515,
                CROSS_C_GET_XIANMAI_INFO = 100600,
                CROSS_S_GET_XIANMAI_INFO = 100601,
                CROSS_C_GET_XIANMAI_PLAYER = 100602,
                CROSS_S_GET_XIANMAI_PLAYER = 100603,
                CROSS_C_XIANMAI_ADDTIME = 100604,
                CROSS_S_XIANMAI_ADDTIME = 100605,
                CROSS_C_XIANMAI_GIVEUP = 100606,
                CROSS_S_XIANMAI_GIVEUP = 100607,
                CROSS_C_XIANMAI_LOGS = 100608,
                CROSS_S_XIANMAI_LOGS = 100609,
                CROSS_S_XIANMAI_REWARD = 100610,
                CROSS_S_XIANMAI_GET = 100611,
                CROSS_S_XIANMAI_BATTLE_LOG = 100612,
                CROSS_C_XIANMAI_BATTLE_PLAYER = 100613,
                CROSS_C_GET_XIANMAI_TECH = 100614,
                CROSS_S_GET_XIANMAI_TECH = 100615,
                CROSS_C_GET_XIANMAI_GUILD = 100616,
                CROSS_S_GET_XIANMAI_GUILD = 100617,
                CROSS_C_GET_TOP_RANK_INFO = 100700,
                CROSS_S_GET_TOP_RANK_INFO = 100701,
                CROSS_C_TOP_RANK_WORSHIP = 100702,
                CROSS_S_TOP_RANK_WORSHIP = 100703,
                CROSS_C_TOP_RANK_APPLY = 100704,
                CROSS_S_TOP_RANK_APPLY = 100705,
                CROSS_C_GET_TOP_RANK_WARRECORD = 100706,
                CROSS_S_GET_TOP_RANK_WARRECORD = 100707,
                CROSS_C_GET_TOP_RANK_WIN = 100708,
                CROSS_S_GET_TOP_RANK_WIN = 100709,
                CROSS_C_GET_TOP_RANK_CHAMPION = 100710,
                CROSS_S_GET_TOP_RANK_CHAMPION = 100711,
                CROSS_C_GET_TOP_RANK_BATTLE = 100712,
                CROSS_S_GET_TOP_RANK_BATTLE = 100713,
                CROSS_C_GET_TOP_RANK_WARREPORT = 100714,
                CROSS_S_GET_TOP_RANK_WARREPORT = 100715,
                CROSS_S_TOP_RANK_CHAMPION_ID = 100716,
                CROSS_C_GET_TOP_RANK_GUESS = 100717,
                CROSS_S_GET_TOP_RANK_GUESS = 100718,
                CROSS_S_SEND_TOP_RANK_GUESS = 100719,
                CROSS_S_SEND_TOP_RANK_RANK = 100720,
                CROSS_C_CROSS_BOSS_NEW_RECORD = 100801,
                CROSS_S_CROSS_BOSS_NEW_RECORD = 100802,
                CROSS_C_CROSS_BOSS_NEW_FIND = 100803,
                CROSS_S_CROSS_BOSS_NEW_FIND = 100804,
                CROSS_S_CROSS_BOSS_NEW_REFRESH = 100807,
                CROSS_S_CROSS_BOSS_DEATH = 100808,
                CROSS_S_SYNC_CROSS_BOSS_REFRESH = 100809,
                CROSS_S_SYNC_CROSS_BOSS_KILL = 100810,
                CROSS_C_CROSS_BOSS_ONE_INFO = 100811,
                CROSS_S_CROSS_BOSS_ONE_INFO = 100812,
                CROSS_C_RED_PACKET_GET_INFO = 100901,
                CROSS_S_RED_PACKET_GET_INFO = 100902,
                CROSS_C_RED_PAKCET_REWARD = 100903,
                CROSS_S_RED_PAKCET_REWARD = 100904,
                CROSS_S_RED_PACKET_PUSH_REWARD = 100905,
                CROSS_C_RED_WHEEL_GET_INFO = 100911,
                CROSS_S_RED_WHEEL_GET_INFO = 100912,
                CROSS_C_RED_WHEEL_MONEY = 100913,
                CROSS_S_RED_WHEEL_MONEY = 100914,
                CROSS_C_RED_WHEEL_RECORD = 100915,
                CROSS_S_RED_WHEEL_RECORD = 100916,
                CROSS_C_RED_WHEEL_ADD_RECORD = 100917,
                CROSS_S_RED_WHEEL_ADD_RECORD = 100918,
                CROSS_S_RED_MONEY_PUSH_REWARD = 100919,
                CROSS_C_GET_GUILD_ARENA_INFO = 101001,
                CROSS_S_GET_GUILD_ARENA_INFO = 101002,
                CROSS_C_GUILD_ARENA_APPLY = 101003,
                CROSS_S_GUILD_ARENA_APPLY = 101004,
                CROSS_C_GUILD_ARENA_HISTORY = 101005,
                CROSS_S_GUILD_ARENA_HISTORY = 101006,
                CROSS_C_GUILD_ARENA_RANK = 101007,
                CROSS_S_GUILD_ARENA_RANK = 101008,
                CROSS_C_GUILD_ARENA_PEAK = 101009,
                CROSS_S_GUILD_ARENA_PEAK = 101010,
                CROSS_C_GUILD_ARENA_TARGETS = 101011,
                CROSS_S_GUILD_ARENA_TARGETS = 101012,
                CROSS_C_GUILD_ARENA_RECORD = 101013,
                CROSS_S_GUILD_ARENA_RECORD = 101014,
                CROSS_C_GUILD_ARENA_REPORT = 101015,
                CROSS_S_GUILD_ARENA_REPORT = 101016,
                CROSS_C_GUILD_ARENA_AUTO_APPLY = 101017,
                CROSS_S_GUILD_ARENA_AUTO_APPLY = 101018,
                CROSS_C_GUILD_ARENA_MEMBER = 101019,
                CROSS_S_GUILD_ARENA_MEMBER = 101020,
                CROSS_C_GUILD_ARENA_ATTACK = 101021,
                CROSS_S_GUILD_ARENA_ATTACK = 101022,
                CROSS_C_GUILD_ARENA_UNLOCK = 101023,
                CROSS_S_GUILD_ARENA_BATTLE_LOG = 101024,
                CROSS_C_GUILD_ARENA_NO_EXISTS = 101025,
                CROSS_S_GUILD_ARENA_RANK_REWARD = 101026
            }

            /** ExceptionCode enum. */
            enum ExceptionCode {
                EXCEPTION_EMPTY = 0,
                ERROR_INPUT_PARAMETER = 1001,
                ERROR_INPUT_NUMBER = 1002,
                NOT_ENOUGH_ITEM_GOODS = 1003,
                BAG_ITEM_CAN_NOT_USE = 1004,
                HERO_ALREADY_ACTICATION = 1005,
                HERO_ID_NOT_IN_CONFIG = 1006,
                GOODS_NOT_EXIST = 1007,
                FORMATION_EQUIP_HAS_ON = 1008,
                HERO_NOT_ACTICATION = 1009,
                SLOT_NOT_OPEN = 1010,
                HAVE_NO_HERO = 1011,
                HERO_HAS_ON_FORMATION = 1012,
                SLOT_HAS_HERO_ON = 1013,
                INSTANCE_NOT_EXIST = 1014,
                INSTANCE_ALREADY_IN = 1015,
                INSTANCE_NOT_PASS = 1016,
                NOT_ENOUGH_ENERGY = 1017,
                INSTANCE_PRE_NOT_PASS = 1018,
                NOT_ENOUGH_INSTANCE_TIMES = 1019,
                BLESS_MAX_LEVEL = 1020,
                BLESS_PILL_MAX_LEVEL = 1021,
                BLESS_EAT_PILL_LIMITED = 1022,
                BLESS_LEVEL_LIMITED = 1023,
                ERROR_CONFIG = 1030,
                IMAGE_HAVE = 1031,
                IMAGE_NOT_HAVE = 1032,
                IMAGE_OUT_OF_TIME = 1033,
                TASK_REWARD_ALREADY_RECEIVED = 1034,
                TASK_NOT_FINISH = 1035,
                TASK_NOT_EXIST = 1036,
                SKILL_MAX_LEVEL = 1037,
                PLAYER_LEVEL_LIMITED = 1038,
                EQUIPMENT_SLOT_ERROR = 1039,
                ROLE_FIELD_IS_NOT_UNLOCKED = 1040,
                CONFIG_DOES_NOT_HAVE_THIS_ITEM = 1041,
                INCONSISTENT_EQUIPMENT_TYPE = 1042,
                EQUIPMENT_SLOTS_ARE_INCONSISTENT = 1043,
                ENHANCED_SLOT_INCONSISTENCY = 1044,
                ENHANCED_CONFIGURATION_ERROR = 1045,
                INSUFFICIENT_LEVEL_OF_AWAKENING = 1046,
                ROLE_NOT_FOUND = 1047,
                MAIL_NOT_FOUND = 1048,
                MAIL_NO_ACCESSORY = 1049,
                MAIL_ACCESSORY_RECEIVED = 1050,
                MAIL_DELETEFAILD_BYACCESSORY = 1051,
                PLAYER_NOT_FOUND = 1052,
                VIP_LEVEL_NOT_ENOUGH = 1053,
                BOSS_INSTANCE_OVER = 1054,
                MONEY_NOT_ENOUGH = 1055,
                MARKET_ITEM_MAXBUY_LIMIT = 1056,
                REWARD_HAS_BEEN_RECEIVED = 1057,
                CURRDAY_HAS_BEEN_SIGNINED = 1058,
                FABAO_NOT_ACTIVE_FAILD = 1059,
                FABAO_MAX_LEVEL_LIMIT = 1060,
                FABAO_MAX_STAR_LIMIT = 1061,
                FABAO_HAS_BEEN_ACTIVED = 1062,
                FABAO_NOT_FOUND_FAILD = 1063,
                OUT_BOSS_ASC_HAVE = 1064,
                HELL_LOTTERY_NOT_ENOUGH = 1065,
                ITEM_CANNOT_MERGE = 1066,
                ITEM_CANNOT_RANDOM_MERGE = 1067,
                HELL_LAYER_NOT_ENOUGH = 1068,
                ZHENFA_MAX_LEVEL = 1069,
                GUILD_EXIST = 1070,
                PLAYER_HAS_GUILD = 1071,
                PLAYER_GUILD_TIME_LIMITED = 1072,
                GUILD_NOT_EXIST = 1073,
                GUILD_MAX_MEMBERS = 1074,
                GUILD_MAX_APPLAYS = 1075,
                PLAYER_HAS_NOT_GUILD = 1076,
                CHAIRMAN_CAN_NOT_LEAVE_GUILD = 1077,
                NOT_SAME_GUILD = 1078,
                PLAYER_HAS_NOT_RIGHT = 1079,
                GUILD_NOT_ENOUGH_DONATE = 1080,
                GUILD_GRADE_NUM_LIMITED = 1081,
                CHAIR_OFFTIME_NOT_ENOGHT = 1082,
                PLAYER_NOT_APPLY_GUILD = 1083,
                GUILD_GRADE_NOT_CHAIRMAN = 1084,
                GUILD_DONATE_HAVE_BUY = 1085,
                FREE_COUNT_MAX_LIMITED = 1086,
                GUILD_DONATE_NOT_ENOGHT = 1087,
                CONVEY_NOT_END_TIME = 1088,
                CONVEY_MAX_COUNT_LIMITED = 1089,
                CONVEY_ROB_COUNT_LIMITED = 1090,
                CONVEY_BE_ROB_COUNT_LIMITED = 1091,
                CONVEY_TARGET_CONVOY_FINISH = 1092,
                CONVEY_TARGET_BE_CONVOY = 1093,
                ACHIEVEMENT_REWARD_ALREADY_RECEIVED = 1094,
                ACHIEVEMENT_NOT_REACHED = 1095,
                GUILD_BOSS_NOT_DEATH = 1096,
                VIP_REWARD_ALREADY_RECEIVED = 1097,
                NOT_INT_ACT_TIME = 1098,
                INSTANCE_LEVEL_LIMITED = 1099,
                INSTANCE_MONSTER_NOT_EXIST = 1100,
                INSTANCE_STAR_NOT_ENOUGH_VALUE = 1101,
                REFRESH_TIMES_NOT_ENOGHT = 1102,
                FIGHT_VAL_NOT_ENOUGH = 1103,
                ARENA_DAY_RWEARD_ALREADY_RECEIVED = 1104,
                LADDER_TIMES_MAX = 1105,
                LADDER_TIMES_NOT_ENOUGH = 1106,
                ACTIVITY_ALREADY_BEEN_END = 1107,
                NO_OTHER_FORMATION = 1108,
                NO_ZHENFA = 1109,
                ARENA_NOT_SET_FORMATION = 1110,
                ARENA_NOT_ENOUGH_TIMES = 1111,
                HERO_LEVEL_NOT_ENOUGH = 1112,
                HERO_LEVEL_NOT_ENOUGH_UPGRADE = 1113,
                QUENCHING_PROP_NOT_HAVE = 1114,
                QUENCHING_PROP_NOT_SAVE = 1115,
                HANGUP_DEFEAT_NUM_NOT_ENOUGH = 1116,
                HANGUP_INSTANCE_HAS_PASS = 1117,
                ANSWER_SUBJECT_OUT_TIME = 1118,
                DEMON_CAN_NOT_CHANGE_FORMATION = 1119,
                DEMON_NOT_ENOUGH_RESET_TIMES = 1120,
                DEMON_NOT_ENOUGH_CHALLENGE_SCORE = 1121,
                DEMON_ALREADY_BUY = 1122,
                DEMON_CAN_NOT_SWEEP_NOT_ENOUGH_ID = 1123,
                DEMON_CAN_NOT_SWEEP_ALREADY_SWEEP = 1124,
                DEMON_CAN_NOT_SET_FORMATION = 1125,
                DEMON_CAN_NOT_REVIVE = 1126,
                DEMON_CAN_NOT_BUY_BUFF = 1127,
                DEMON_CAN_NOT_BUY_ITEM = 1128,
                DEMON_CAN_NOT_BUY_ITEM_NO_TIMES = 1129,
                DEMON_CAN_NOT_RESET_NO_CHALLENGE = 1130,
                DEMON_ALREADY_CHALLENGE = 1131,
                DEMON_NOT_ENOUGH_CHALLENGE = 1132,
                HUOYUEDU_NOT_ENOUGH_VALUE = 1133,
                DEMON_ALL_HERO_DIE = 1134,
                GUILD_TASK_MAX_REWARD = 1135,
                WASH_UNLOCK = 1136,
                GUILD_NAME_CAN_NOT_EMPTY = 1137,
                SUPREME_HAS_ALREADY_GET = 1138,
                SUPREME_NOT_ENOUGH_SCORE = 1139,
                SUPREME_NOT_REVIVE = 1140,
                PRACTICE_CAN_NOT_UPGRADE = 1141,
                PRACTICE_ALREADY_FULL = 1142,
                PRACTICE_NEED_BREAK = 1143,
                TORTOISE_CAN_NOT_STAKE = 1144,
                TORTOISE_ALREADY_STAKE_FULL = 1145,
                TORTOISE_ENT_TIME = 1146,
                TORTOISE_ITEM_CD = 1147,
                REWARD_TASK_ALREADY_START = 1148,
                REWARD_TASK_NO_SUCRATE = 1149,
                INVEST_NO_MONTH_CARD = 1150,
                INVEST_REWARD_ALREADY_GET = 1151,
                BAG_SIZE_NOT_ENOUGH = 1152,
                BE_STRONG_NO_REWARD = 1153,
                TEAM_NOT_EXIST = 1154,
                YOU_ARE_ALREDY_IN_TEAM = 1155,
                TEAM_ALREADY_FULL = 1156,
                YOU_ARE_ALREDY_OUT_TEAM = 1157,
                TEAM_MUST_HAVE_MAIN_HERO = 1158,
                TEAM_LEADER_CAN_FULL_TEAM = 1159,
                TEAM_INSTANCE_NO_TIMES = 1160,
                INSTANCE_NOT_CROSS = 1161,
                WAR_BOSS_ASP_COUNT_LIMITED = 1162,
                BLESS_OTHER_CONDITON_NOT_ENOGH = 1163,
                BLESS_OTHER_CAN_NOT_UPGRADE_AUTO_ACTIVE = 1164,
                FORMATION_ALL_DEATH = 1165,
                INT_ACT_TIME = 1166,
                BLESS_UP_NEED_MOUNT_LEVEL = 1167,
                ARENA_RANK_NO_REWARD = 1168,
                NO_INSTANCE_SWEEP = 1169,
                USERNAME_REPEATED = 1170,
                NICKNAME_REPEATED = 1171,
                CAN_NOT_USE_ILLEGAL_CHAR = 1172,
                CAN_NOT_USE_SENSITIVE_CHAR = 1173,
                GUILD_WAR_REVIVE_NOT_IN_TIME = 1174,
                GUILD_WAR_IS_MY_GUILD = 1175,
                GUILD_WAR_IS_TODAY = 1176,
                GUILD_WAR_IS_NOT_MY_GUILD = 1177,
                SIGN_DAY_LARGE = 1178,
                SIGN_DAY_NOT_ENOUGH = 1179,
                GUILD_RECRUIT_CD_TIME = 1180,
                PLAYER_NOT_EXIST = 1181,
                FRIEND_ALREADY_TO_WHITE = 1182,
                FRIEND_ALREADY_NO_TO_YOU = 1183,
                FRIEND_MAX_NUM = 1184,
                FRIEND_ALREADY_NO_IN_BLACK = 1185,
                FRIEND_NOT_APPLY_TO_YOU = 1186,
                FRIEND_ALREADY_TO_BLACK = 1187,
                MERGE_ILLEGAL_MARTIRIAL = 1188,
                MERGE_NOT_ENOUGH_MARTIRIAL = 1189,
                DIAMOND_NOT_ENOUGH = 1190,
                SKILL_ALREADY_LEAN = 1191,
                GUILD_MAX_LEVEL = 1192,
                INSTANCE_ALREADY_FULL = 1193,
                TARGERT_FRIEND_MAX_NUM = 1194,
                INVEST_NO_DEVELOPMENT_MONEY = 1195,
                INVEST_NO_INVEST_RETURN = 1196,
                INVEST_DAY_NOT_ENOUGH = 1197,
                INVEST_CONDITION_NOT_ENOUGH = 1198,
                INVEST_NOT_HAS_THIS_REWARD = 1199,
                INVEST_ALREADY_BUY = 1200,
                INVEST_CAN_NOT_BUY = 1201,
                SERVER_ACTIVE_NO_ID = 1202,
                SERVER_ACTIVE_NOT_ENOUGH_TARGET = 1203,
                SERVER_ACTIVE_ALREADY_HAS_GET = 1204,
                ZERO_PREFERENTIAL_HAS_BUY = 1205,
                ACTIVE_ALREADY_EXPRIRE = 1206,
                ZERO_PREFERENTIAL_CANT_GET_RETURN = 1207,
                ZERO_PREFERENTIAL_NOT_BUY = 1208,
                ACTIVE_NOT_START = 1209,
                ANNE_CAN_NOT_EQUIP_SAME = 1210,
                NOT_HAVE_MARKET_ID = 1211,
                ALREADY_MAX_INSTANCE = 1212,
                NOT_PASS_THIS_INSTANCE = 1213,
                CHAPTER_INSTANCE_NOT_ALL_PASS = 1214,
                ENTER_NEXT_CHAPTER = 1215,
                MAIN_HERO_MUST_INDEX_1 = 1216,
                PLEASE_REGISTER_NEW_SERVER = 1217,
                HERO_PUZZLE_HAD_LIGHT = 1218,
                XUNBAO_NEW_ALREADY_HERO_CHANGE = 1219,
                XUNBAO_NEW_SCORE_NOT_ENOUGT = 1220,
                CONVEY_HAD_BE_ROB = 1221,
                REWARD_TASK_DAY_NUM_OVER = 1222,
                CURR_PLAYER_LEVEL_LIMIT = 1223,
                INVEST_NO_WEEK_CARD = 1224,
                INVEST_NO_FOREVER_CARD = 1225,
                OVER_MAX_VALUE_ERROR = 1226,
                NOT_BUY_MIAO_SHA = 1227,
                TIME_CAN_NOT_OPERATION = 1228,
                GUILD_LEVEL_NO_FIT = 1229,
                INSTANCE_CHAPTER_STAR = 1230,
                XIAN_MAI_OVER_TIME = 1231,
                GUILD_NO_EDIT_DESC = 1232,
                NOT_HELP_TIMES = 1233,
                SUPERME_CD_TIMES = 1234,
                HAD_XIAN_MAI_TIME = 1235,
                THE_SAME_GUILD_ERROR = 1236,
                XIAN_MAI_MAX_SNEAK = 1237,
                XIAN_MAI_HAD_BEATTACK = 1238,
                XIAN_MAI_NEED_REFRESH = 1239,
                FORMATION_NO_HERO = 1240,
                NO_TEAM_CAN_JOIN = 1241,
                NO_FRIEND_AND_GUILD = 1242,
                REPEATED_INVITE = 1243,
                TEAM_NOT_ENOUGHT_TIMES = 1244,
                TEAM_NOT_FULL_FAILE = 1245,
                FRIEND_MAX_APPLY_NUM = 1246,
                NOT_APPLY_TO_YOU = 1247,
                FRIEND_ALREADY_SEND = 1248,
                FRIEND_NOT_REWARD_SCORE = 1249,
                SHOW_HAD_ACTIVE_ERROR = 1250,
                REWARD_TASK2_NOT_MATCH_HERO_NUM = 1251,
                REWARD_TASK2_NOT_MATCH_STATE = 1252,
                REWARD_TASK2_HERO_IN_TASK = 1253,
                REWARD_TASK2_HERO_TYPE_NOT = 1254,
                REWARD_TASK2_HERO_QUALITY_NOT = 1255,
                REWARD_TASK2_HERO_HAVE_NOT = 1256,
                WAR_BOSS_HAD_PLAY = 1257,
                TOP_RANK_HAD_APPLY = 1258,
                JING_SHU_MAX_LOCK_NUM = 1259,
                SOL_MARKET_MAX_TIME_FRESH = 1260,
                CROSS_BOSS_FIND_COUNT_LIMITED = 1261,
                CROSS_BOSS_ASC_COUNT_LIMITED = 1262,
                CROSS_BOSS_ASC_HAVE = 1263,
                CHAMPION_HAD_WORSHIP = 1264,
                CHAMPION_HAD_GUESS = 1265,
                CHAMPION_SELF_GUESS = 1266,
                CHAMPION_NO_START_GUESS = 1267,
                CHAMPION_END_GUESS = 1268,
                RED_MONEY_QQ_ERROR = 1269,
                RED_MONEY_QQ_FAIL = 1270,
                FETTER_CALL_COUNT_LIMITED = 1271,
                ARENA_RANK_NOT_ENOUGHT = 1272,
                COLLETC_WORD_LIMITED = 1273,
                EQUIPMENT_NOT_DRESS_ON = 1274,
                GUILD_TASK_COLLECT_FAST = 1275,
                GUILD_TASK_COLLECT_ENOUGH = 1276,
                GUILD_TASK_FINISH = 1277,
                GUILD_TASK_OVER = 1278,
                HERO_MAX_STAR = 1279,
                GUILD_FEED_BOSS_MAX_LEVEL = 1280,
                GUILD_FEED_BOSS_KILL_CD_TIME = 1281,
                GUILD_ARENA_NOT_JOIN = 1282,
                GUILD_ARENA_ENENGY_DEAD = 1283,
                GUILD_ARENA_ENENGY_BUZY = 1284,
                SUIT_COLLECT_REWARD_NOT_GOT = 1285
            }
        }

        /** Properties of a C_GET_MONEY_TREE_INFO. */
        interface IC_GET_MONEY_TREE_INFO {
        }

        /** Represents a C_GET_MONEY_TREE_INFO. */
        class C_GET_MONEY_TREE_INFO implements IC_GET_MONEY_TREE_INFO {

            /**
             * Constructs a new C_GET_MONEY_TREE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_MONEY_TREE_INFO);

            /**
             * Encodes the specified C_GET_MONEY_TREE_INFO message. Does not implicitly {@link com.message.C_GET_MONEY_TREE_INFO.verify|verify} messages.
             * @param message C_GET_MONEY_TREE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_MONEY_TREE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_MONEY_TREE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_MONEY_TREE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_MONEY_TREE_INFO;
        }

        /** Properties of a S_GET_MONEY_TREE_INFO. */
        interface IS_GET_MONEY_TREE_INFO {

            /** S_GET_MONEY_TREE_INFO costDiamond */
            costDiamond?: (number|null);

            /** S_GET_MONEY_TREE_INFO baseGold */
            baseGold?: (number|Long|null);

            /** S_GET_MONEY_TREE_INFO goldRate */
            goldRate?: (number|null);

            /** S_GET_MONEY_TREE_INFO hadTimes */
            hadTimes?: (number|null);

            /** S_GET_MONEY_TREE_INFO maxTimes */
            maxTimes?: (number|null);

            /** S_GET_MONEY_TREE_INFO extTimes */
            extTimes?: (number|null);

            /** S_GET_MONEY_TREE_INFO extRewardIds */
            extRewardIds?: (string|null);

            /** S_GET_MONEY_TREE_INFO addRate */
            addRate?: (number|null);

            /** S_GET_MONEY_TREE_INFO extIndex */
            extIndex?: (number|null);
        }

        /** Represents a S_GET_MONEY_TREE_INFO. */
        class S_GET_MONEY_TREE_INFO implements IS_GET_MONEY_TREE_INFO {

            /**
             * Constructs a new S_GET_MONEY_TREE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_MONEY_TREE_INFO);

            /** S_GET_MONEY_TREE_INFO costDiamond. */
            public costDiamond: number;

            /** S_GET_MONEY_TREE_INFO baseGold. */
            public baseGold: (number|Long);

            /** S_GET_MONEY_TREE_INFO goldRate. */
            public goldRate: number;

            /** S_GET_MONEY_TREE_INFO hadTimes. */
            public hadTimes: number;

            /** S_GET_MONEY_TREE_INFO maxTimes. */
            public maxTimes: number;

            /** S_GET_MONEY_TREE_INFO extTimes. */
            public extTimes: number;

            /** S_GET_MONEY_TREE_INFO extRewardIds. */
            public extRewardIds: string;

            /** S_GET_MONEY_TREE_INFO addRate. */
            public addRate: number;

            /** S_GET_MONEY_TREE_INFO extIndex. */
            public extIndex: number;

            /**
             * Encodes the specified S_GET_MONEY_TREE_INFO message. Does not implicitly {@link com.message.S_GET_MONEY_TREE_INFO.verify|verify} messages.
             * @param message S_GET_MONEY_TREE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_MONEY_TREE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_MONEY_TREE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_MONEY_TREE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_MONEY_TREE_INFO;
        }

        /** Properties of a C_MONEY_TREE_REWARD. */
        interface IC_MONEY_TREE_REWARD {

            /** C_MONEY_TREE_REWARD costDiamond */
            costDiamond?: (number|null);

            /** C_MONEY_TREE_REWARD baseGold */
            baseGold?: (number|Long|null);

            /** C_MONEY_TREE_REWARD goldRate */
            goldRate?: (number|null);
        }

        /** Represents a C_MONEY_TREE_REWARD. */
        class C_MONEY_TREE_REWARD implements IC_MONEY_TREE_REWARD {

            /**
             * Constructs a new C_MONEY_TREE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_MONEY_TREE_REWARD);

            /** C_MONEY_TREE_REWARD costDiamond. */
            public costDiamond: number;

            /** C_MONEY_TREE_REWARD baseGold. */
            public baseGold: (number|Long);

            /** C_MONEY_TREE_REWARD goldRate. */
            public goldRate: number;

            /**
             * Encodes the specified C_MONEY_TREE_REWARD message. Does not implicitly {@link com.message.C_MONEY_TREE_REWARD.verify|verify} messages.
             * @param message C_MONEY_TREE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_MONEY_TREE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_MONEY_TREE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_MONEY_TREE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_MONEY_TREE_REWARD;
        }

        /** Properties of a S_MONEY_TREE_REWARD. */
        interface IS_MONEY_TREE_REWARD {

            /** S_MONEY_TREE_REWARD rewardGold */
            rewardGold?: (number|Long|null);

            /** S_MONEY_TREE_REWARD costDiamond */
            costDiamond?: (number|null);

            /** S_MONEY_TREE_REWARD baseGold */
            baseGold?: (number|Long|null);

            /** S_MONEY_TREE_REWARD goldRate */
            goldRate?: (number|Long|null);

            /** S_MONEY_TREE_REWARD hadTimes */
            hadTimes?: (number|null);

            /** S_MONEY_TREE_REWARD maxTimes */
            maxTimes?: (number|null);

            /** S_MONEY_TREE_REWARD extTimes */
            extTimes?: (number|null);

            /** S_MONEY_TREE_REWARD extRewardIds */
            extRewardIds?: (string|null);

            /** S_MONEY_TREE_REWARD addRate */
            addRate?: (number|null);

            /** S_MONEY_TREE_REWARD extIndex */
            extIndex?: (number|null);
        }

        /** Represents a S_MONEY_TREE_REWARD. */
        class S_MONEY_TREE_REWARD implements IS_MONEY_TREE_REWARD {

            /**
             * Constructs a new S_MONEY_TREE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_MONEY_TREE_REWARD);

            /** S_MONEY_TREE_REWARD rewardGold. */
            public rewardGold: (number|Long);

            /** S_MONEY_TREE_REWARD costDiamond. */
            public costDiamond: number;

            /** S_MONEY_TREE_REWARD baseGold. */
            public baseGold: (number|Long);

            /** S_MONEY_TREE_REWARD goldRate. */
            public goldRate: (number|Long);

            /** S_MONEY_TREE_REWARD hadTimes. */
            public hadTimes: number;

            /** S_MONEY_TREE_REWARD maxTimes. */
            public maxTimes: number;

            /** S_MONEY_TREE_REWARD extTimes. */
            public extTimes: number;

            /** S_MONEY_TREE_REWARD extRewardIds. */
            public extRewardIds: string;

            /** S_MONEY_TREE_REWARD addRate. */
            public addRate: number;

            /** S_MONEY_TREE_REWARD extIndex. */
            public extIndex: number;

            /**
             * Encodes the specified S_MONEY_TREE_REWARD message. Does not implicitly {@link com.message.S_MONEY_TREE_REWARD.verify|verify} messages.
             * @param message S_MONEY_TREE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_MONEY_TREE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_MONEY_TREE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_MONEY_TREE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_MONEY_TREE_REWARD;
        }

        /** Properties of a C_MONEY_TREE_EXTEND_REWARD. */
        interface IC_MONEY_TREE_EXTEND_REWARD {
        }

        /** Represents a C_MONEY_TREE_EXTEND_REWARD. */
        class C_MONEY_TREE_EXTEND_REWARD implements IC_MONEY_TREE_EXTEND_REWARD {

            /**
             * Constructs a new C_MONEY_TREE_EXTEND_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_MONEY_TREE_EXTEND_REWARD);

            /**
             * Encodes the specified C_MONEY_TREE_EXTEND_REWARD message. Does not implicitly {@link com.message.C_MONEY_TREE_EXTEND_REWARD.verify|verify} messages.
             * @param message C_MONEY_TREE_EXTEND_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_MONEY_TREE_EXTEND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_MONEY_TREE_EXTEND_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_MONEY_TREE_EXTEND_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_MONEY_TREE_EXTEND_REWARD;
        }

        /** Properties of a S_MONEY_TREE_EXTEND_REWARD. */
        interface IS_MONEY_TREE_EXTEND_REWARD {

            /** S_MONEY_TREE_EXTEND_REWARD extTimes */
            extTimes?: (number|null);

            /** S_MONEY_TREE_EXTEND_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_MONEY_TREE_EXTEND_REWARD extRewardIds */
            extRewardIds?: (string|null);

            /** S_MONEY_TREE_EXTEND_REWARD extIndex */
            extIndex?: (number|null);
        }

        /** Represents a S_MONEY_TREE_EXTEND_REWARD. */
        class S_MONEY_TREE_EXTEND_REWARD implements IS_MONEY_TREE_EXTEND_REWARD {

            /**
             * Constructs a new S_MONEY_TREE_EXTEND_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_MONEY_TREE_EXTEND_REWARD);

            /** S_MONEY_TREE_EXTEND_REWARD extTimes. */
            public extTimes: number;

            /** S_MONEY_TREE_EXTEND_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_MONEY_TREE_EXTEND_REWARD extRewardIds. */
            public extRewardIds: string;

            /** S_MONEY_TREE_EXTEND_REWARD extIndex. */
            public extIndex: number;

            /**
             * Encodes the specified S_MONEY_TREE_EXTEND_REWARD message. Does not implicitly {@link com.message.S_MONEY_TREE_EXTEND_REWARD.verify|verify} messages.
             * @param message S_MONEY_TREE_EXTEND_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_MONEY_TREE_EXTEND_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_MONEY_TREE_EXTEND_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_MONEY_TREE_EXTEND_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_MONEY_TREE_EXTEND_REWARD;
        }

        /** Properties of a C_GET_NAN_TIAN_GATE_INFO. */
        interface IC_GET_NAN_TIAN_GATE_INFO {
        }

        /** Represents a C_GET_NAN_TIAN_GATE_INFO. */
        class C_GET_NAN_TIAN_GATE_INFO implements IC_GET_NAN_TIAN_GATE_INFO {

            /**
             * Constructs a new C_GET_NAN_TIAN_GATE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_NAN_TIAN_GATE_INFO);

            /**
             * Encodes the specified C_GET_NAN_TIAN_GATE_INFO message. Does not implicitly {@link com.message.C_GET_NAN_TIAN_GATE_INFO.verify|verify} messages.
             * @param message C_GET_NAN_TIAN_GATE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_NAN_TIAN_GATE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_NAN_TIAN_GATE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_NAN_TIAN_GATE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_NAN_TIAN_GATE_INFO;
        }

        /** Properties of a S_GET_NAN_TIAN_GATE_INFO. */
        interface IS_GET_NAN_TIAN_GATE_INFO {

            /** S_GET_NAN_TIAN_GATE_INFO hadCount */
            hadCount?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO buyCount */
            buyCount?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO refreshCount */
            refreshCount?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO dayScore */
            dayScore?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO box3 */
            box3?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO streakWin */
            streakWin?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO winBoxData */
            winBoxData?: (string|null);

            /** S_GET_NAN_TIAN_GATE_INFO buffTime */
            buffTime?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO datas */
            datas?: (com.message.INAN_TIAN_GATE_INFO[]|null);

            /** S_GET_NAN_TIAN_GATE_INFO box3Id */
            box3Id?: (number|null);

            /** S_GET_NAN_TIAN_GATE_INFO hadPlayerIds */
            hadPlayerIds?: (string|null);

            /** S_GET_NAN_TIAN_GATE_INFO buffBuyTime */
            buffBuyTime?: (number|null);
        }

        /** Represents a S_GET_NAN_TIAN_GATE_INFO. */
        class S_GET_NAN_TIAN_GATE_INFO implements IS_GET_NAN_TIAN_GATE_INFO {

            /**
             * Constructs a new S_GET_NAN_TIAN_GATE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_NAN_TIAN_GATE_INFO);

            /** S_GET_NAN_TIAN_GATE_INFO hadCount. */
            public hadCount: number;

            /** S_GET_NAN_TIAN_GATE_INFO buyCount. */
            public buyCount: number;

            /** S_GET_NAN_TIAN_GATE_INFO refreshCount. */
            public refreshCount: number;

            /** S_GET_NAN_TIAN_GATE_INFO dayScore. */
            public dayScore: number;

            /** S_GET_NAN_TIAN_GATE_INFO box3. */
            public box3: number;

            /** S_GET_NAN_TIAN_GATE_INFO streakWin. */
            public streakWin: number;

            /** S_GET_NAN_TIAN_GATE_INFO winBoxData. */
            public winBoxData: string;

            /** S_GET_NAN_TIAN_GATE_INFO buffTime. */
            public buffTime: number;

            /** S_GET_NAN_TIAN_GATE_INFO datas. */
            public datas: com.message.INAN_TIAN_GATE_INFO[];

            /** S_GET_NAN_TIAN_GATE_INFO box3Id. */
            public box3Id: number;

            /** S_GET_NAN_TIAN_GATE_INFO hadPlayerIds. */
            public hadPlayerIds: string;

            /** S_GET_NAN_TIAN_GATE_INFO buffBuyTime. */
            public buffBuyTime: number;

            /**
             * Encodes the specified S_GET_NAN_TIAN_GATE_INFO message. Does not implicitly {@link com.message.S_GET_NAN_TIAN_GATE_INFO.verify|verify} messages.
             * @param message S_GET_NAN_TIAN_GATE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_NAN_TIAN_GATE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_NAN_TIAN_GATE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_NAN_TIAN_GATE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_NAN_TIAN_GATE_INFO;
        }

        /** Properties of a C_NAN_TIAN_GATE_REFRESH. */
        interface IC_NAN_TIAN_GATE_REFRESH {

            /** C_NAN_TIAN_GATE_REFRESH refreshCount */
            refreshCount?: (number|null);
        }

        /** Represents a C_NAN_TIAN_GATE_REFRESH. */
        class C_NAN_TIAN_GATE_REFRESH implements IC_NAN_TIAN_GATE_REFRESH {

            /**
             * Constructs a new C_NAN_TIAN_GATE_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NAN_TIAN_GATE_REFRESH);

            /** C_NAN_TIAN_GATE_REFRESH refreshCount. */
            public refreshCount: number;

            /**
             * Encodes the specified C_NAN_TIAN_GATE_REFRESH message. Does not implicitly {@link com.message.C_NAN_TIAN_GATE_REFRESH.verify|verify} messages.
             * @param message C_NAN_TIAN_GATE_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NAN_TIAN_GATE_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NAN_TIAN_GATE_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NAN_TIAN_GATE_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NAN_TIAN_GATE_REFRESH;
        }

        /** Properties of a S_NAN_TIAN_GATE_REFRESH. */
        interface IS_NAN_TIAN_GATE_REFRESH {

            /** S_NAN_TIAN_GATE_REFRESH refreshCount */
            refreshCount?: (number|null);

            /** S_NAN_TIAN_GATE_REFRESH datas */
            datas?: (com.message.INAN_TIAN_GATE_INFO[]|null);

            /** S_NAN_TIAN_GATE_REFRESH box3Id */
            box3Id?: (number|null);

            /** S_NAN_TIAN_GATE_REFRESH hadPlayerIds */
            hadPlayerIds?: (string|null);
        }

        /** Represents a S_NAN_TIAN_GATE_REFRESH. */
        class S_NAN_TIAN_GATE_REFRESH implements IS_NAN_TIAN_GATE_REFRESH {

            /**
             * Constructs a new S_NAN_TIAN_GATE_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NAN_TIAN_GATE_REFRESH);

            /** S_NAN_TIAN_GATE_REFRESH refreshCount. */
            public refreshCount: number;

            /** S_NAN_TIAN_GATE_REFRESH datas. */
            public datas: com.message.INAN_TIAN_GATE_INFO[];

            /** S_NAN_TIAN_GATE_REFRESH box3Id. */
            public box3Id: number;

            /** S_NAN_TIAN_GATE_REFRESH hadPlayerIds. */
            public hadPlayerIds: string;

            /**
             * Encodes the specified S_NAN_TIAN_GATE_REFRESH message. Does not implicitly {@link com.message.S_NAN_TIAN_GATE_REFRESH.verify|verify} messages.
             * @param message S_NAN_TIAN_GATE_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NAN_TIAN_GATE_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NAN_TIAN_GATE_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NAN_TIAN_GATE_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NAN_TIAN_GATE_REFRESH;
        }

        /** Properties of a NAN_TIAN_GATE_INFO. */
        interface INAN_TIAN_GATE_INFO {

            /** NAN_TIAN_GATE_INFO player */
            player?: (com.message.IBattlePlayerMsg|null);

            /** NAN_TIAN_GATE_INFO rank */
            rank?: (number|null);

            /** NAN_TIAN_GATE_INFO score */
            score?: (number|null);
        }

        /** Represents a NAN_TIAN_GATE_INFO. */
        class NAN_TIAN_GATE_INFO implements INAN_TIAN_GATE_INFO {

            /**
             * Constructs a new NAN_TIAN_GATE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INAN_TIAN_GATE_INFO);

            /** NAN_TIAN_GATE_INFO player. */
            public player?: (com.message.IBattlePlayerMsg|null);

            /** NAN_TIAN_GATE_INFO rank. */
            public rank: number;

            /** NAN_TIAN_GATE_INFO score. */
            public score: number;

            /**
             * Encodes the specified NAN_TIAN_GATE_INFO message. Does not implicitly {@link com.message.NAN_TIAN_GATE_INFO.verify|verify} messages.
             * @param message NAN_TIAN_GATE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INAN_TIAN_GATE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NAN_TIAN_GATE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NAN_TIAN_GATE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NAN_TIAN_GATE_INFO;
        }

        /** Properties of a C_NAN_TIAN_GATE_WIN_BOX. */
        interface IC_NAN_TIAN_GATE_WIN_BOX {
        }

        /** Represents a C_NAN_TIAN_GATE_WIN_BOX. */
        class C_NAN_TIAN_GATE_WIN_BOX implements IC_NAN_TIAN_GATE_WIN_BOX {

            /**
             * Constructs a new C_NAN_TIAN_GATE_WIN_BOX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NAN_TIAN_GATE_WIN_BOX);

            /**
             * Encodes the specified C_NAN_TIAN_GATE_WIN_BOX message. Does not implicitly {@link com.message.C_NAN_TIAN_GATE_WIN_BOX.verify|verify} messages.
             * @param message C_NAN_TIAN_GATE_WIN_BOX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NAN_TIAN_GATE_WIN_BOX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NAN_TIAN_GATE_WIN_BOX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NAN_TIAN_GATE_WIN_BOX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NAN_TIAN_GATE_WIN_BOX;
        }

        /** Properties of a S_NAN_TIAN_GATE_WIN_BOX. */
        interface IS_NAN_TIAN_GATE_WIN_BOX {

            /** S_NAN_TIAN_GATE_WIN_BOX box3 */
            box3?: (number|null);

            /** S_NAN_TIAN_GATE_WIN_BOX itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_NAN_TIAN_GATE_WIN_BOX datas */
            datas?: (com.message.INAN_TIAN_GATE_INFO[]|null);

            /** S_NAN_TIAN_GATE_WIN_BOX box3Id */
            box3Id?: (number|null);
        }

        /** Represents a S_NAN_TIAN_GATE_WIN_BOX. */
        class S_NAN_TIAN_GATE_WIN_BOX implements IS_NAN_TIAN_GATE_WIN_BOX {

            /**
             * Constructs a new S_NAN_TIAN_GATE_WIN_BOX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NAN_TIAN_GATE_WIN_BOX);

            /** S_NAN_TIAN_GATE_WIN_BOX box3. */
            public box3: number;

            /** S_NAN_TIAN_GATE_WIN_BOX itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_NAN_TIAN_GATE_WIN_BOX datas. */
            public datas: com.message.INAN_TIAN_GATE_INFO[];

            /** S_NAN_TIAN_GATE_WIN_BOX box3Id. */
            public box3Id: number;

            /**
             * Encodes the specified S_NAN_TIAN_GATE_WIN_BOX message. Does not implicitly {@link com.message.S_NAN_TIAN_GATE_WIN_BOX.verify|verify} messages.
             * @param message S_NAN_TIAN_GATE_WIN_BOX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NAN_TIAN_GATE_WIN_BOX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NAN_TIAN_GATE_WIN_BOX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NAN_TIAN_GATE_WIN_BOX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NAN_TIAN_GATE_WIN_BOX;
        }

        /** Properties of a C_NAN_TIAN_GATE_BOX. */
        interface IC_NAN_TIAN_GATE_BOX {

            /** C_NAN_TIAN_GATE_BOX boxId */
            boxId?: (number|null);
        }

        /** Represents a C_NAN_TIAN_GATE_BOX. */
        class C_NAN_TIAN_GATE_BOX implements IC_NAN_TIAN_GATE_BOX {

            /**
             * Constructs a new C_NAN_TIAN_GATE_BOX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NAN_TIAN_GATE_BOX);

            /** C_NAN_TIAN_GATE_BOX boxId. */
            public boxId: number;

            /**
             * Encodes the specified C_NAN_TIAN_GATE_BOX message. Does not implicitly {@link com.message.C_NAN_TIAN_GATE_BOX.verify|verify} messages.
             * @param message C_NAN_TIAN_GATE_BOX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NAN_TIAN_GATE_BOX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NAN_TIAN_GATE_BOX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NAN_TIAN_GATE_BOX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NAN_TIAN_GATE_BOX;
        }

        /** Properties of a S_NAN_TIAN_GATE_BOX. */
        interface IS_NAN_TIAN_GATE_BOX {

            /** S_NAN_TIAN_GATE_BOX boxId */
            boxId?: (number|null);

            /** S_NAN_TIAN_GATE_BOX itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_NAN_TIAN_GATE_BOX boxDatas */
            boxDatas?: (string|null);
        }

        /** Represents a S_NAN_TIAN_GATE_BOX. */
        class S_NAN_TIAN_GATE_BOX implements IS_NAN_TIAN_GATE_BOX {

            /**
             * Constructs a new S_NAN_TIAN_GATE_BOX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NAN_TIAN_GATE_BOX);

            /** S_NAN_TIAN_GATE_BOX boxId. */
            public boxId: number;

            /** S_NAN_TIAN_GATE_BOX itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_NAN_TIAN_GATE_BOX boxDatas. */
            public boxDatas: string;

            /**
             * Encodes the specified S_NAN_TIAN_GATE_BOX message. Does not implicitly {@link com.message.S_NAN_TIAN_GATE_BOX.verify|verify} messages.
             * @param message S_NAN_TIAN_GATE_BOX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NAN_TIAN_GATE_BOX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NAN_TIAN_GATE_BOX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NAN_TIAN_GATE_BOX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NAN_TIAN_GATE_BOX;
        }

        /** Properties of a C_NAN_TIAN_GATE_BUY_TIMES. */
        interface IC_NAN_TIAN_GATE_BUY_TIMES {
        }

        /** Represents a C_NAN_TIAN_GATE_BUY_TIMES. */
        class C_NAN_TIAN_GATE_BUY_TIMES implements IC_NAN_TIAN_GATE_BUY_TIMES {

            /**
             * Constructs a new C_NAN_TIAN_GATE_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NAN_TIAN_GATE_BUY_TIMES);

            /**
             * Encodes the specified C_NAN_TIAN_GATE_BUY_TIMES message. Does not implicitly {@link com.message.C_NAN_TIAN_GATE_BUY_TIMES.verify|verify} messages.
             * @param message C_NAN_TIAN_GATE_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NAN_TIAN_GATE_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NAN_TIAN_GATE_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NAN_TIAN_GATE_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NAN_TIAN_GATE_BUY_TIMES;
        }

        /** Properties of a S_NAN_TIAN_GATE_BUY_TIMES. */
        interface IS_NAN_TIAN_GATE_BUY_TIMES {

            /** S_NAN_TIAN_GATE_BUY_TIMES hadBuy */
            hadBuy?: (number|null);
        }

        /** Represents a S_NAN_TIAN_GATE_BUY_TIMES. */
        class S_NAN_TIAN_GATE_BUY_TIMES implements IS_NAN_TIAN_GATE_BUY_TIMES {

            /**
             * Constructs a new S_NAN_TIAN_GATE_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NAN_TIAN_GATE_BUY_TIMES);

            /** S_NAN_TIAN_GATE_BUY_TIMES hadBuy. */
            public hadBuy: number;

            /**
             * Encodes the specified S_NAN_TIAN_GATE_BUY_TIMES message. Does not implicitly {@link com.message.S_NAN_TIAN_GATE_BUY_TIMES.verify|verify} messages.
             * @param message S_NAN_TIAN_GATE_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NAN_TIAN_GATE_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NAN_TIAN_GATE_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NAN_TIAN_GATE_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NAN_TIAN_GATE_BUY_TIMES;
        }

        /** Properties of a C_NAN_TIAN_GATE_BUY_BUFF. */
        interface IC_NAN_TIAN_GATE_BUY_BUFF {
        }

        /** Represents a C_NAN_TIAN_GATE_BUY_BUFF. */
        class C_NAN_TIAN_GATE_BUY_BUFF implements IC_NAN_TIAN_GATE_BUY_BUFF {

            /**
             * Constructs a new C_NAN_TIAN_GATE_BUY_BUFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NAN_TIAN_GATE_BUY_BUFF);

            /**
             * Encodes the specified C_NAN_TIAN_GATE_BUY_BUFF message. Does not implicitly {@link com.message.C_NAN_TIAN_GATE_BUY_BUFF.verify|verify} messages.
             * @param message C_NAN_TIAN_GATE_BUY_BUFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NAN_TIAN_GATE_BUY_BUFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NAN_TIAN_GATE_BUY_BUFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NAN_TIAN_GATE_BUY_BUFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NAN_TIAN_GATE_BUY_BUFF;
        }

        /** Properties of a S_NAN_TIAN_GATE_BUY_BUFF. */
        interface IS_NAN_TIAN_GATE_BUY_BUFF {

            /** S_NAN_TIAN_GATE_BUY_BUFF leaveTimes */
            leaveTimes?: (number|null);

            /** S_NAN_TIAN_GATE_BUY_BUFF buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_NAN_TIAN_GATE_BUY_BUFF. */
        class S_NAN_TIAN_GATE_BUY_BUFF implements IS_NAN_TIAN_GATE_BUY_BUFF {

            /**
             * Constructs a new S_NAN_TIAN_GATE_BUY_BUFF.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NAN_TIAN_GATE_BUY_BUFF);

            /** S_NAN_TIAN_GATE_BUY_BUFF leaveTimes. */
            public leaveTimes: number;

            /** S_NAN_TIAN_GATE_BUY_BUFF buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_NAN_TIAN_GATE_BUY_BUFF message. Does not implicitly {@link com.message.S_NAN_TIAN_GATE_BUY_BUFF.verify|verify} messages.
             * @param message S_NAN_TIAN_GATE_BUY_BUFF message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NAN_TIAN_GATE_BUY_BUFF, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NAN_TIAN_GATE_BUY_BUFF message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NAN_TIAN_GATE_BUY_BUFF
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NAN_TIAN_GATE_BUY_BUFF;
        }

        /** Properties of a C_NAN_TIAN_GATE_RANK. */
        interface IC_NAN_TIAN_GATE_RANK {
        }

        /** Represents a C_NAN_TIAN_GATE_RANK. */
        class C_NAN_TIAN_GATE_RANK implements IC_NAN_TIAN_GATE_RANK {

            /**
             * Constructs a new C_NAN_TIAN_GATE_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NAN_TIAN_GATE_RANK);

            /**
             * Encodes the specified C_NAN_TIAN_GATE_RANK message. Does not implicitly {@link com.message.C_NAN_TIAN_GATE_RANK.verify|verify} messages.
             * @param message C_NAN_TIAN_GATE_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NAN_TIAN_GATE_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NAN_TIAN_GATE_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NAN_TIAN_GATE_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NAN_TIAN_GATE_RANK;
        }

        /** Properties of a S_NAN_TIAN_GATE_RANK. */
        interface IS_NAN_TIAN_GATE_RANK {

            /** S_NAN_TIAN_GATE_RANK rankDatas */
            rankDatas?: (com.message.IGATE_RANK_INFO[]|null);

            /** S_NAN_TIAN_GATE_RANK curRank */
            curRank?: (number|null);
        }

        /** Represents a S_NAN_TIAN_GATE_RANK. */
        class S_NAN_TIAN_GATE_RANK implements IS_NAN_TIAN_GATE_RANK {

            /**
             * Constructs a new S_NAN_TIAN_GATE_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NAN_TIAN_GATE_RANK);

            /** S_NAN_TIAN_GATE_RANK rankDatas. */
            public rankDatas: com.message.IGATE_RANK_INFO[];

            /** S_NAN_TIAN_GATE_RANK curRank. */
            public curRank: number;

            /**
             * Encodes the specified S_NAN_TIAN_GATE_RANK message. Does not implicitly {@link com.message.S_NAN_TIAN_GATE_RANK.verify|verify} messages.
             * @param message S_NAN_TIAN_GATE_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NAN_TIAN_GATE_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NAN_TIAN_GATE_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NAN_TIAN_GATE_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NAN_TIAN_GATE_RANK;
        }

        /** Properties of a GATE_RANK_INFO. */
        interface IGATE_RANK_INFO {

            /** GATE_RANK_INFO nickName */
            nickName?: (string|null);

            /** GATE_RANK_INFO score */
            score?: (number|null);

            /** GATE_RANK_INFO rank */
            rank?: (number|null);

            /** GATE_RANK_INFO playerId */
            playerId?: (number|Long|null);

            /** GATE_RANK_INFO winCount */
            winCount?: (number|null);
        }

        /** Represents a GATE_RANK_INFO. */
        class GATE_RANK_INFO implements IGATE_RANK_INFO {

            /**
             * Constructs a new GATE_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGATE_RANK_INFO);

            /** GATE_RANK_INFO nickName. */
            public nickName: string;

            /** GATE_RANK_INFO score. */
            public score: number;

            /** GATE_RANK_INFO rank. */
            public rank: number;

            /** GATE_RANK_INFO playerId. */
            public playerId: (number|Long);

            /** GATE_RANK_INFO winCount. */
            public winCount: number;

            /**
             * Encodes the specified GATE_RANK_INFO message. Does not implicitly {@link com.message.GATE_RANK_INFO.verify|verify} messages.
             * @param message GATE_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGATE_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GATE_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GATE_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GATE_RANK_INFO;
        }

        /** Properties of a C_GET_LUCK_PAN_INFO. */
        interface IC_GET_LUCK_PAN_INFO {
        }

        /** Represents a C_GET_LUCK_PAN_INFO. */
        class C_GET_LUCK_PAN_INFO implements IC_GET_LUCK_PAN_INFO {

            /**
             * Constructs a new C_GET_LUCK_PAN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_LUCK_PAN_INFO);

            /**
             * Encodes the specified C_GET_LUCK_PAN_INFO message. Does not implicitly {@link com.message.C_GET_LUCK_PAN_INFO.verify|verify} messages.
             * @param message C_GET_LUCK_PAN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_LUCK_PAN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_LUCK_PAN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_LUCK_PAN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_LUCK_PAN_INFO;
        }

        /** Properties of a S_GET_LUCK_PAN_INFO. */
        interface IS_GET_LUCK_PAN_INFO {

            /** S_GET_LUCK_PAN_INFO luckScore */
            luckScore?: (number|null);

            /** S_GET_LUCK_PAN_INFO opDays */
            opDays?: (number|null);

            /** S_GET_LUCK_PAN_INFO hadItemIds */
            hadItemIds?: (string|null);

            /** S_GET_LUCK_PAN_INFO freeTimes */
            freeTimes?: (number|null);

            /** S_GET_LUCK_PAN_INFO redPointIds */
            redPointIds?: (string|null);
        }

        /** Represents a S_GET_LUCK_PAN_INFO. */
        class S_GET_LUCK_PAN_INFO implements IS_GET_LUCK_PAN_INFO {

            /**
             * Constructs a new S_GET_LUCK_PAN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_LUCK_PAN_INFO);

            /** S_GET_LUCK_PAN_INFO luckScore. */
            public luckScore: number;

            /** S_GET_LUCK_PAN_INFO opDays. */
            public opDays: number;

            /** S_GET_LUCK_PAN_INFO hadItemIds. */
            public hadItemIds: string;

            /** S_GET_LUCK_PAN_INFO freeTimes. */
            public freeTimes: number;

            /** S_GET_LUCK_PAN_INFO redPointIds. */
            public redPointIds: string;

            /**
             * Encodes the specified S_GET_LUCK_PAN_INFO message. Does not implicitly {@link com.message.S_GET_LUCK_PAN_INFO.verify|verify} messages.
             * @param message S_GET_LUCK_PAN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_LUCK_PAN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_LUCK_PAN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_LUCK_PAN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_LUCK_PAN_INFO;
        }

        /** Properties of a C_LUCK_PAN_BUY. */
        interface IC_LUCK_PAN_BUY {

            /** C_LUCK_PAN_BUY buyType */
            buyType?: (number|null);
        }

        /** Represents a C_LUCK_PAN_BUY. */
        class C_LUCK_PAN_BUY implements IC_LUCK_PAN_BUY {

            /**
             * Constructs a new C_LUCK_PAN_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LUCK_PAN_BUY);

            /** C_LUCK_PAN_BUY buyType. */
            public buyType: number;

            /**
             * Encodes the specified C_LUCK_PAN_BUY message. Does not implicitly {@link com.message.C_LUCK_PAN_BUY.verify|verify} messages.
             * @param message C_LUCK_PAN_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LUCK_PAN_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LUCK_PAN_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LUCK_PAN_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LUCK_PAN_BUY;
        }

        /** Properties of a S_LUCK_PAN_BUY. */
        interface IS_LUCK_PAN_BUY {

            /** S_LUCK_PAN_BUY luckScore */
            luckScore?: (number|null);

            /** S_LUCK_PAN_BUY panIndex */
            panIndex?: (number|null);

            /** S_LUCK_PAN_BUY itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_LUCK_PAN_BUY freeTimes */
            freeTimes?: (number|null);

            /** S_LUCK_PAN_BUY buyType */
            buyType?: (number|null);
        }

        /** Represents a S_LUCK_PAN_BUY. */
        class S_LUCK_PAN_BUY implements IS_LUCK_PAN_BUY {

            /**
             * Constructs a new S_LUCK_PAN_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LUCK_PAN_BUY);

            /** S_LUCK_PAN_BUY luckScore. */
            public luckScore: number;

            /** S_LUCK_PAN_BUY panIndex. */
            public panIndex: number;

            /** S_LUCK_PAN_BUY itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_LUCK_PAN_BUY freeTimes. */
            public freeTimes: number;

            /** S_LUCK_PAN_BUY buyType. */
            public buyType: number;

            /**
             * Encodes the specified S_LUCK_PAN_BUY message. Does not implicitly {@link com.message.S_LUCK_PAN_BUY.verify|verify} messages.
             * @param message S_LUCK_PAN_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LUCK_PAN_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LUCK_PAN_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LUCK_PAN_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LUCK_PAN_BUY;
        }

        /** Properties of a C_LUCK_PAN_SHOP. */
        interface IC_LUCK_PAN_SHOP {

            /** C_LUCK_PAN_SHOP shopId */
            shopId?: (number|null);

            /** C_LUCK_PAN_SHOP buyNum */
            buyNum?: (number|null);
        }

        /** Represents a C_LUCK_PAN_SHOP. */
        class C_LUCK_PAN_SHOP implements IC_LUCK_PAN_SHOP {

            /**
             * Constructs a new C_LUCK_PAN_SHOP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LUCK_PAN_SHOP);

            /** C_LUCK_PAN_SHOP shopId. */
            public shopId: number;

            /** C_LUCK_PAN_SHOP buyNum. */
            public buyNum: number;

            /**
             * Encodes the specified C_LUCK_PAN_SHOP message. Does not implicitly {@link com.message.C_LUCK_PAN_SHOP.verify|verify} messages.
             * @param message C_LUCK_PAN_SHOP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LUCK_PAN_SHOP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LUCK_PAN_SHOP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LUCK_PAN_SHOP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LUCK_PAN_SHOP;
        }

        /** Properties of a S_LUCK_PAN_SHOP. */
        interface IS_LUCK_PAN_SHOP {

            /** S_LUCK_PAN_SHOP luckScore */
            luckScore?: (number|null);

            /** S_LUCK_PAN_SHOP itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_LUCK_PAN_SHOP hadItemIds */
            hadItemIds?: (string|null);
        }

        /** Represents a S_LUCK_PAN_SHOP. */
        class S_LUCK_PAN_SHOP implements IS_LUCK_PAN_SHOP {

            /**
             * Constructs a new S_LUCK_PAN_SHOP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LUCK_PAN_SHOP);

            /** S_LUCK_PAN_SHOP luckScore. */
            public luckScore: number;

            /** S_LUCK_PAN_SHOP itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_LUCK_PAN_SHOP hadItemIds. */
            public hadItemIds: string;

            /**
             * Encodes the specified S_LUCK_PAN_SHOP message. Does not implicitly {@link com.message.S_LUCK_PAN_SHOP.verify|verify} messages.
             * @param message S_LUCK_PAN_SHOP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LUCK_PAN_SHOP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LUCK_PAN_SHOP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LUCK_PAN_SHOP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LUCK_PAN_SHOP;
        }

        /** Properties of a C_LUCK_PAN_TISHI. */
        interface IC_LUCK_PAN_TISHI {

            /** C_LUCK_PAN_TISHI redPointIds */
            redPointIds?: (string|null);
        }

        /** Represents a C_LUCK_PAN_TISHI. */
        class C_LUCK_PAN_TISHI implements IC_LUCK_PAN_TISHI {

            /**
             * Constructs a new C_LUCK_PAN_TISHI.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LUCK_PAN_TISHI);

            /** C_LUCK_PAN_TISHI redPointIds. */
            public redPointIds: string;

            /**
             * Encodes the specified C_LUCK_PAN_TISHI message. Does not implicitly {@link com.message.C_LUCK_PAN_TISHI.verify|verify} messages.
             * @param message C_LUCK_PAN_TISHI message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LUCK_PAN_TISHI, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LUCK_PAN_TISHI message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LUCK_PAN_TISHI
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LUCK_PAN_TISHI;
        }

        /** Properties of a S_LUCK_PAN_TISHI. */
        interface IS_LUCK_PAN_TISHI {

            /** S_LUCK_PAN_TISHI redPointIds */
            redPointIds?: (string|null);
        }

        /** Represents a S_LUCK_PAN_TISHI. */
        class S_LUCK_PAN_TISHI implements IS_LUCK_PAN_TISHI {

            /**
             * Constructs a new S_LUCK_PAN_TISHI.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LUCK_PAN_TISHI);

            /** S_LUCK_PAN_TISHI redPointIds. */
            public redPointIds: string;

            /**
             * Encodes the specified S_LUCK_PAN_TISHI message. Does not implicitly {@link com.message.S_LUCK_PAN_TISHI.verify|verify} messages.
             * @param message S_LUCK_PAN_TISHI message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LUCK_PAN_TISHI, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LUCK_PAN_TISHI message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LUCK_PAN_TISHI
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LUCK_PAN_TISHI;
        }

        /** Properties of a C_GET_OP_XUN_BAO_INFO. */
        interface IC_GET_OP_XUN_BAO_INFO {
        }

        /** Represents a C_GET_OP_XUN_BAO_INFO. */
        class C_GET_OP_XUN_BAO_INFO implements IC_GET_OP_XUN_BAO_INFO {

            /**
             * Constructs a new C_GET_OP_XUN_BAO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_OP_XUN_BAO_INFO);

            /**
             * Encodes the specified C_GET_OP_XUN_BAO_INFO message. Does not implicitly {@link com.message.C_GET_OP_XUN_BAO_INFO.verify|verify} messages.
             * @param message C_GET_OP_XUN_BAO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_OP_XUN_BAO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_OP_XUN_BAO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_OP_XUN_BAO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_OP_XUN_BAO_INFO;
        }

        /** Properties of a S_GET_OP_XUN_BAO_INFO. */
        interface IS_GET_OP_XUN_BAO_INFO {

            /** S_GET_OP_XUN_BAO_INFO curIndex */
            curIndex?: (number|null);

            /** S_GET_OP_XUN_BAO_INFO freeTimes */
            freeTimes?: (number|null);

            /** S_GET_OP_XUN_BAO_INFO moveIndex */
            moveIndex?: (number|null);
        }

        /** Represents a S_GET_OP_XUN_BAO_INFO. */
        class S_GET_OP_XUN_BAO_INFO implements IS_GET_OP_XUN_BAO_INFO {

            /**
             * Constructs a new S_GET_OP_XUN_BAO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_OP_XUN_BAO_INFO);

            /** S_GET_OP_XUN_BAO_INFO curIndex. */
            public curIndex: number;

            /** S_GET_OP_XUN_BAO_INFO freeTimes. */
            public freeTimes: number;

            /** S_GET_OP_XUN_BAO_INFO moveIndex. */
            public moveIndex: number;

            /**
             * Encodes the specified S_GET_OP_XUN_BAO_INFO message. Does not implicitly {@link com.message.S_GET_OP_XUN_BAO_INFO.verify|verify} messages.
             * @param message S_GET_OP_XUN_BAO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_OP_XUN_BAO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_OP_XUN_BAO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_OP_XUN_BAO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_OP_XUN_BAO_INFO;
        }

        /** Properties of a C_OP_XUN_BAO. */
        interface IC_OP_XUN_BAO {

            /** C_OP_XUN_BAO opType */
            opType?: (number|null);
        }

        /** Represents a C_OP_XUN_BAO. */
        class C_OP_XUN_BAO implements IC_OP_XUN_BAO {

            /**
             * Constructs a new C_OP_XUN_BAO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OP_XUN_BAO);

            /** C_OP_XUN_BAO opType. */
            public opType: number;

            /**
             * Encodes the specified C_OP_XUN_BAO message. Does not implicitly {@link com.message.C_OP_XUN_BAO.verify|verify} messages.
             * @param message C_OP_XUN_BAO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OP_XUN_BAO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OP_XUN_BAO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OP_XUN_BAO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OP_XUN_BAO;
        }

        /** Properties of a S_OP_XUN_BAO. */
        interface IS_OP_XUN_BAO {

            /** S_OP_XUN_BAO curIndex */
            curIndex?: (number|null);

            /** S_OP_XUN_BAO freeTimes */
            freeTimes?: (number|null);

            /** S_OP_XUN_BAO moveIndex */
            moveIndex?: (number|null);

            /** S_OP_XUN_BAO afterIndex */
            afterIndex?: (number|null);

            /** S_OP_XUN_BAO datas */
            datas?: (com.message.ITOU_ZI_DATA[]|null);
        }

        /** Represents a S_OP_XUN_BAO. */
        class S_OP_XUN_BAO implements IS_OP_XUN_BAO {

            /**
             * Constructs a new S_OP_XUN_BAO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OP_XUN_BAO);

            /** S_OP_XUN_BAO curIndex. */
            public curIndex: number;

            /** S_OP_XUN_BAO freeTimes. */
            public freeTimes: number;

            /** S_OP_XUN_BAO moveIndex. */
            public moveIndex: number;

            /** S_OP_XUN_BAO afterIndex. */
            public afterIndex: number;

            /** S_OP_XUN_BAO datas. */
            public datas: com.message.ITOU_ZI_DATA[];

            /**
             * Encodes the specified S_OP_XUN_BAO message. Does not implicitly {@link com.message.S_OP_XUN_BAO.verify|verify} messages.
             * @param message S_OP_XUN_BAO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OP_XUN_BAO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OP_XUN_BAO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OP_XUN_BAO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OP_XUN_BAO;
        }

        /** Properties of a TOU_ZI_DATA. */
        interface ITOU_ZI_DATA {

            /** TOU_ZI_DATA touZiPoint */
            touZiPoint?: (number|null);

            /** TOU_ZI_DATA curTimes */
            curTimes?: (number|null);

            /** TOU_ZI_DATA pointData */
            pointData?: (com.message.IPOINT_DATA[]|null);
        }

        /** Represents a TOU_ZI_DATA. */
        class TOU_ZI_DATA implements ITOU_ZI_DATA {

            /**
             * Constructs a new TOU_ZI_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITOU_ZI_DATA);

            /** TOU_ZI_DATA touZiPoint. */
            public touZiPoint: number;

            /** TOU_ZI_DATA curTimes. */
            public curTimes: number;

            /** TOU_ZI_DATA pointData. */
            public pointData: com.message.IPOINT_DATA[];

            /**
             * Encodes the specified TOU_ZI_DATA message. Does not implicitly {@link com.message.TOU_ZI_DATA.verify|verify} messages.
             * @param message TOU_ZI_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITOU_ZI_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TOU_ZI_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TOU_ZI_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TOU_ZI_DATA;
        }

        /** Properties of a POINT_DATA. */
        interface IPOINT_DATA {

            /** POINT_DATA curIndex */
            curIndex?: (number|null);

            /** POINT_DATA gridIndex */
            gridIndex?: (number|null);

            /** POINT_DATA itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a POINT_DATA. */
        class POINT_DATA implements IPOINT_DATA {

            /**
             * Constructs a new POINT_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPOINT_DATA);

            /** POINT_DATA curIndex. */
            public curIndex: number;

            /** POINT_DATA gridIndex. */
            public gridIndex: number;

            /** POINT_DATA itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified POINT_DATA message. Does not implicitly {@link com.message.POINT_DATA.verify|verify} messages.
             * @param message POINT_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPOINT_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a POINT_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns POINT_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.POINT_DATA;
        }

        /** Properties of a C_GET_OUT_BOSS_INFO. */
        interface IC_GET_OUT_BOSS_INFO {
        }

        /** Represents a C_GET_OUT_BOSS_INFO. */
        class C_GET_OUT_BOSS_INFO implements IC_GET_OUT_BOSS_INFO {

            /**
             * Constructs a new C_GET_OUT_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_OUT_BOSS_INFO);

            /**
             * Encodes the specified C_GET_OUT_BOSS_INFO message. Does not implicitly {@link com.message.C_GET_OUT_BOSS_INFO.verify|verify} messages.
             * @param message C_GET_OUT_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_OUT_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_OUT_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_OUT_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_OUT_BOSS_INFO;
        }

        /** Properties of a S_GET_OUT_BOSS_INFO. */
        interface IS_GET_OUT_BOSS_INFO {

            /** S_GET_OUT_BOSS_INFO bossMsg */
            bossMsg?: (com.message.IOutBossMsg[]|null);

            /** S_GET_OUT_BOSS_INFO playerBossMsg */
            playerBossMsg?: (com.message.IPlayerOutBossMsg|null);

            /** S_GET_OUT_BOSS_INFO buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_GET_OUT_BOSS_INFO. */
        class S_GET_OUT_BOSS_INFO implements IS_GET_OUT_BOSS_INFO {

            /**
             * Constructs a new S_GET_OUT_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_OUT_BOSS_INFO);

            /** S_GET_OUT_BOSS_INFO bossMsg. */
            public bossMsg: com.message.IOutBossMsg[];

            /** S_GET_OUT_BOSS_INFO playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerOutBossMsg|null);

            /** S_GET_OUT_BOSS_INFO buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_GET_OUT_BOSS_INFO message. Does not implicitly {@link com.message.S_GET_OUT_BOSS_INFO.verify|verify} messages.
             * @param message S_GET_OUT_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_OUT_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_OUT_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_OUT_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_OUT_BOSS_INFO;
        }

        /** Properties of a PlayerOutBossMsg. */
        interface IPlayerOutBossMsg {

            /** PlayerOutBossMsg playerId */
            playerId?: (number|Long|null);

            /** PlayerOutBossMsg playCount */
            playCount?: (number|null);

            /** PlayerOutBossMsg addCountTime */
            addCountTime?: (number|Long|null);

            /** PlayerOutBossMsg instanceId */
            instanceId?: (number[]|null);

            /** PlayerOutBossMsg challengeBossAll */
            challengeBossAll?: (number|null);

            /** PlayerOutBossMsg inspireLevel */
            inspireLevel?: (number|null);
        }

        /** Represents a PlayerOutBossMsg. */
        class PlayerOutBossMsg implements IPlayerOutBossMsg {

            /**
             * Constructs a new PlayerOutBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerOutBossMsg);

            /** PlayerOutBossMsg playerId. */
            public playerId: (number|Long);

            /** PlayerOutBossMsg playCount. */
            public playCount: number;

            /** PlayerOutBossMsg addCountTime. */
            public addCountTime: (number|Long);

            /** PlayerOutBossMsg instanceId. */
            public instanceId: number[];

            /** PlayerOutBossMsg challengeBossAll. */
            public challengeBossAll: number;

            /** PlayerOutBossMsg inspireLevel. */
            public inspireLevel: number;

            /**
             * Encodes the specified PlayerOutBossMsg message. Does not implicitly {@link com.message.PlayerOutBossMsg.verify|verify} messages.
             * @param message PlayerOutBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerOutBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerOutBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerOutBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerOutBossMsg;
        }

        /** Properties of an OutBossMsg. */
        interface IOutBossMsg {

            /** OutBossMsg instanceId */
            instanceId?: (number|null);

            /** OutBossMsg bossHp */
            bossHp?: (number|Long|null);

            /** OutBossMsg bossMaxHp */
            bossMaxHp?: (number|Long|null);

            /** OutBossMsg runTime */
            runTime?: (number|Long|null);

            /** OutBossMsg nextStartTime */
            nextStartTime?: (number|Long|null);

            /** OutBossMsg notice */
            notice?: (number|null);

            /** OutBossMsg ascriptionMsgMg */
            ascriptionMsgMg?: (com.message.IAscriptionMsg|null);
        }

        /** Represents an OutBossMsg. */
        class OutBossMsg implements IOutBossMsg {

            /**
             * Constructs a new OutBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IOutBossMsg);

            /** OutBossMsg instanceId. */
            public instanceId: number;

            /** OutBossMsg bossHp. */
            public bossHp: (number|Long);

            /** OutBossMsg bossMaxHp. */
            public bossMaxHp: (number|Long);

            /** OutBossMsg runTime. */
            public runTime: (number|Long);

            /** OutBossMsg nextStartTime. */
            public nextStartTime: (number|Long);

            /** OutBossMsg notice. */
            public notice: number;

            /** OutBossMsg ascriptionMsgMg. */
            public ascriptionMsgMg?: (com.message.IAscriptionMsg|null);

            /**
             * Encodes the specified OutBossMsg message. Does not implicitly {@link com.message.OutBossMsg.verify|verify} messages.
             * @param message OutBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IOutBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an OutBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OutBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.OutBossMsg;
        }

        /** Properties of an AscriptionMsg. */
        interface IAscriptionMsg {

            /** AscriptionMsg playerId */
            playerId?: (number|Long|null);

            /** AscriptionMsg playerName */
            playerName?: (string|null);
        }

        /** Represents an AscriptionMsg. */
        class AscriptionMsg implements IAscriptionMsg {

            /**
             * Constructs a new AscriptionMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IAscriptionMsg);

            /** AscriptionMsg playerId. */
            public playerId: (number|Long);

            /** AscriptionMsg playerName. */
            public playerName: string;

            /**
             * Encodes the specified AscriptionMsg message. Does not implicitly {@link com.message.AscriptionMsg.verify|verify} messages.
             * @param message AscriptionMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IAscriptionMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an AscriptionMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AscriptionMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.AscriptionMsg;
        }

        /** Properties of a C_OUT_BOSS_NOTICE. */
        interface IC_OUT_BOSS_NOTICE {

            /** C_OUT_BOSS_NOTICE bossId */
            bossId?: (number|null);

            /** C_OUT_BOSS_NOTICE notice */
            notice?: (number|null);
        }

        /** Represents a C_OUT_BOSS_NOTICE. */
        class C_OUT_BOSS_NOTICE implements IC_OUT_BOSS_NOTICE {

            /**
             * Constructs a new C_OUT_BOSS_NOTICE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OUT_BOSS_NOTICE);

            /** C_OUT_BOSS_NOTICE bossId. */
            public bossId: number;

            /** C_OUT_BOSS_NOTICE notice. */
            public notice: number;

            /**
             * Encodes the specified C_OUT_BOSS_NOTICE message. Does not implicitly {@link com.message.C_OUT_BOSS_NOTICE.verify|verify} messages.
             * @param message C_OUT_BOSS_NOTICE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OUT_BOSS_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OUT_BOSS_NOTICE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OUT_BOSS_NOTICE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OUT_BOSS_NOTICE;
        }

        /** Properties of a S_OUT_BOSS_NOTICE. */
        interface IS_OUT_BOSS_NOTICE {

            /** S_OUT_BOSS_NOTICE bossId */
            bossId?: (number|null);

            /** S_OUT_BOSS_NOTICE notice */
            notice?: (number|null);
        }

        /** Represents a S_OUT_BOSS_NOTICE. */
        class S_OUT_BOSS_NOTICE implements IS_OUT_BOSS_NOTICE {

            /**
             * Constructs a new S_OUT_BOSS_NOTICE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OUT_BOSS_NOTICE);

            /** S_OUT_BOSS_NOTICE bossId. */
            public bossId: number;

            /** S_OUT_BOSS_NOTICE notice. */
            public notice: number;

            /**
             * Encodes the specified S_OUT_BOSS_NOTICE message. Does not implicitly {@link com.message.S_OUT_BOSS_NOTICE.verify|verify} messages.
             * @param message S_OUT_BOSS_NOTICE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OUT_BOSS_NOTICE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OUT_BOSS_NOTICE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OUT_BOSS_NOTICE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OUT_BOSS_NOTICE;
        }

        /** Properties of a C_OUT_BOSS_CHALLENGE. */
        interface IC_OUT_BOSS_CHALLENGE {

            /** C_OUT_BOSS_CHALLENGE instanceId */
            instanceId?: (number|null);

            /** C_OUT_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a C_OUT_BOSS_CHALLENGE. */
        class C_OUT_BOSS_CHALLENGE implements IC_OUT_BOSS_CHALLENGE {

            /**
             * Constructs a new C_OUT_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OUT_BOSS_CHALLENGE);

            /** C_OUT_BOSS_CHALLENGE instanceId. */
            public instanceId: number;

            /** C_OUT_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified C_OUT_BOSS_CHALLENGE message. Does not implicitly {@link com.message.C_OUT_BOSS_CHALLENGE.verify|verify} messages.
             * @param message C_OUT_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OUT_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OUT_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OUT_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OUT_BOSS_CHALLENGE;
        }

        /** Properties of a S_OUT_BOSS_CHALLENGE. */
        interface IS_OUT_BOSS_CHALLENGE {

            /** S_OUT_BOSS_CHALLENGE instanceId */
            instanceId?: (number|null);

            /** S_OUT_BOSS_CHALLENGE notice */
            notice?: (number|null);
        }

        /** Represents a S_OUT_BOSS_CHALLENGE. */
        class S_OUT_BOSS_CHALLENGE implements IS_OUT_BOSS_CHALLENGE {

            /**
             * Constructs a new S_OUT_BOSS_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OUT_BOSS_CHALLENGE);

            /** S_OUT_BOSS_CHALLENGE instanceId. */
            public instanceId: number;

            /** S_OUT_BOSS_CHALLENGE notice. */
            public notice: number;

            /**
             * Encodes the specified S_OUT_BOSS_CHALLENGE message. Does not implicitly {@link com.message.S_OUT_BOSS_CHALLENGE.verify|verify} messages.
             * @param message S_OUT_BOSS_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OUT_BOSS_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OUT_BOSS_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OUT_BOSS_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OUT_BOSS_CHALLENGE;
        }

        /** Properties of a C_OUT_BOSS_CHALLENGE_ALL. */
        interface IC_OUT_BOSS_CHALLENGE_ALL {

            /** C_OUT_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a C_OUT_BOSS_CHALLENGE_ALL. */
        class C_OUT_BOSS_CHALLENGE_ALL implements IC_OUT_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new C_OUT_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OUT_BOSS_CHALLENGE_ALL);

            /** C_OUT_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified C_OUT_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.C_OUT_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message C_OUT_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OUT_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OUT_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OUT_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OUT_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a S_OUT_BOSS_CHALLENGE_ALL. */
        interface IS_OUT_BOSS_CHALLENGE_ALL {

            /** S_OUT_BOSS_CHALLENGE_ALL notice */
            notice?: (number|null);
        }

        /** Represents a S_OUT_BOSS_CHALLENGE_ALL. */
        class S_OUT_BOSS_CHALLENGE_ALL implements IS_OUT_BOSS_CHALLENGE_ALL {

            /**
             * Constructs a new S_OUT_BOSS_CHALLENGE_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OUT_BOSS_CHALLENGE_ALL);

            /** S_OUT_BOSS_CHALLENGE_ALL notice. */
            public notice: number;

            /**
             * Encodes the specified S_OUT_BOSS_CHALLENGE_ALL message. Does not implicitly {@link com.message.S_OUT_BOSS_CHALLENGE_ALL.verify|verify} messages.
             * @param message S_OUT_BOSS_CHALLENGE_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OUT_BOSS_CHALLENGE_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OUT_BOSS_CHALLENGE_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OUT_BOSS_CHALLENGE_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OUT_BOSS_CHALLENGE_ALL;
        }

        /** Properties of a C_OUT_BOSS_INSPIRE. */
        interface IC_OUT_BOSS_INSPIRE {
        }

        /** Represents a C_OUT_BOSS_INSPIRE. */
        class C_OUT_BOSS_INSPIRE implements IC_OUT_BOSS_INSPIRE {

            /**
             * Constructs a new C_OUT_BOSS_INSPIRE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OUT_BOSS_INSPIRE);

            /**
             * Encodes the specified C_OUT_BOSS_INSPIRE message. Does not implicitly {@link com.message.C_OUT_BOSS_INSPIRE.verify|verify} messages.
             * @param message C_OUT_BOSS_INSPIRE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OUT_BOSS_INSPIRE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OUT_BOSS_INSPIRE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OUT_BOSS_INSPIRE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OUT_BOSS_INSPIRE;
        }

        /** Properties of a S_OUT_BOSS_INSPIRE. */
        interface IS_OUT_BOSS_INSPIRE {

            /** S_OUT_BOSS_INSPIRE inspireLevel */
            inspireLevel?: (number|null);
        }

        /** Represents a S_OUT_BOSS_INSPIRE. */
        class S_OUT_BOSS_INSPIRE implements IS_OUT_BOSS_INSPIRE {

            /**
             * Constructs a new S_OUT_BOSS_INSPIRE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OUT_BOSS_INSPIRE);

            /** S_OUT_BOSS_INSPIRE inspireLevel. */
            public inspireLevel: number;

            /**
             * Encodes the specified S_OUT_BOSS_INSPIRE message. Does not implicitly {@link com.message.S_OUT_BOSS_INSPIRE.verify|verify} messages.
             * @param message S_OUT_BOSS_INSPIRE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OUT_BOSS_INSPIRE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OUT_BOSS_INSPIRE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OUT_BOSS_INSPIRE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OUT_BOSS_INSPIRE;
        }

        /** Properties of a C_OUT_BOSS_BUY. */
        interface IC_OUT_BOSS_BUY {

            /** C_OUT_BOSS_BUY shopId */
            shopId?: (number|null);
        }

        /** Represents a C_OUT_BOSS_BUY. */
        class C_OUT_BOSS_BUY implements IC_OUT_BOSS_BUY {

            /**
             * Constructs a new C_OUT_BOSS_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OUT_BOSS_BUY);

            /** C_OUT_BOSS_BUY shopId. */
            public shopId: number;

            /**
             * Encodes the specified C_OUT_BOSS_BUY message. Does not implicitly {@link com.message.C_OUT_BOSS_BUY.verify|verify} messages.
             * @param message C_OUT_BOSS_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OUT_BOSS_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OUT_BOSS_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OUT_BOSS_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OUT_BOSS_BUY;
        }

        /** Properties of a S_OUT_BOSS_BUY. */
        interface IS_OUT_BOSS_BUY {

            /** S_OUT_BOSS_BUY buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_OUT_BOSS_BUY. */
        class S_OUT_BOSS_BUY implements IS_OUT_BOSS_BUY {

            /**
             * Constructs a new S_OUT_BOSS_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OUT_BOSS_BUY);

            /** S_OUT_BOSS_BUY buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_OUT_BOSS_BUY message. Does not implicitly {@link com.message.S_OUT_BOSS_BUY.verify|verify} messages.
             * @param message S_OUT_BOSS_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OUT_BOSS_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OUT_BOSS_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OUT_BOSS_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OUT_BOSS_BUY;
        }

        /** Properties of a S_SYN_FIGHTER_PROPERTY. */
        interface IS_SYN_FIGHTER_PROPERTY {

            /** S_SYN_FIGHTER_PROPERTY mapMsg */
            mapMsg?: (com.message.IIntFloatMapMsg[]|null);
        }

        /** Represents a S_SYN_FIGHTER_PROPERTY. */
        class S_SYN_FIGHTER_PROPERTY implements IS_SYN_FIGHTER_PROPERTY {

            /**
             * Constructs a new S_SYN_FIGHTER_PROPERTY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYN_FIGHTER_PROPERTY);

            /** S_SYN_FIGHTER_PROPERTY mapMsg. */
            public mapMsg: com.message.IIntFloatMapMsg[];

            /**
             * Encodes the specified S_SYN_FIGHTER_PROPERTY message. Does not implicitly {@link com.message.S_SYN_FIGHTER_PROPERTY.verify|verify} messages.
             * @param message S_SYN_FIGHTER_PROPERTY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYN_FIGHTER_PROPERTY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYN_FIGHTER_PROPERTY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYN_FIGHTER_PROPERTY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYN_FIGHTER_PROPERTY;
        }

        /** Properties of a S_SYN_PROPERTY. */
        interface IS_SYN_PROPERTY {

            /** S_SYN_PROPERTY mapMsg */
            mapMsg?: (com.message.IIntLongMapMsg[]|null);
        }

        /** Represents a S_SYN_PROPERTY. */
        class S_SYN_PROPERTY implements IS_SYN_PROPERTY {

            /**
             * Constructs a new S_SYN_PROPERTY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYN_PROPERTY);

            /** S_SYN_PROPERTY mapMsg. */
            public mapMsg: com.message.IIntLongMapMsg[];

            /**
             * Encodes the specified S_SYN_PROPERTY message. Does not implicitly {@link com.message.S_SYN_PROPERTY.verify|verify} messages.
             * @param message S_SYN_PROPERTY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYN_PROPERTY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYN_PROPERTY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYN_PROPERTY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYN_PROPERTY;
        }

        /** PropertyID enum. */
        enum PropertyID {
            LEVEL = 0,
            EXP = 1,
            DIAMOND = 2,
            MONEY = 3,
            EXP_POOL = 4,
            GUILD_DONATE = 5,
            HONOR = 8,
            DEMON_SOCRE = 9,
            FIGHT_VAL = 10,
            PRACTICE = 11,
            BIND_DIAMOND = 12,
            TOWER_CHIP = 13,
            HERO_QUALITY = 14,
            OP_LUCK_SCORE = 15,
            NAN_TIAN_GATE_SCORE = 16,
            XIAN_JING = 17,
            FRIEND_SCORE = 18,
            ABI_HELL_SCORE = 19,
            HERO_SOL = 20
        }

        /** Properties of a C_GET_PLAYER_INFO. */
        interface IC_GET_PLAYER_INFO {

            /** C_GET_PLAYER_INFO playerId */
            playerId?: (number|Long|null);

            /** C_GET_PLAYER_INFO serverId */
            serverId?: (number|null);

            /** C_GET_PLAYER_INFO formationType */
            formationType?: (number|null);
        }

        /** Represents a C_GET_PLAYER_INFO. */
        class C_GET_PLAYER_INFO implements IC_GET_PLAYER_INFO {

            /**
             * Constructs a new C_GET_PLAYER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_PLAYER_INFO);

            /** C_GET_PLAYER_INFO playerId. */
            public playerId: (number|Long);

            /** C_GET_PLAYER_INFO serverId. */
            public serverId: number;

            /** C_GET_PLAYER_INFO formationType. */
            public formationType: number;

            /**
             * Encodes the specified C_GET_PLAYER_INFO message. Does not implicitly {@link com.message.C_GET_PLAYER_INFO.verify|verify} messages.
             * @param message C_GET_PLAYER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_PLAYER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_PLAYER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_PLAYER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_PLAYER_INFO;
        }

        /** Properties of a S_GET_PLAYER_INFO. */
        interface IS_GET_PLAYER_INFO {

            /** S_GET_PLAYER_INFO playerInfo */
            playerInfo?: (com.message.IPlayerBaseInfoMsg|null);

            /** S_GET_PLAYER_INFO playerAllInfo */
            playerAllInfo?: (com.message.IPLAYER_ALL_INFO|null);

            /** S_GET_PLAYER_INFO formationType */
            formationType?: (number|null);
        }

        /** Represents a S_GET_PLAYER_INFO. */
        class S_GET_PLAYER_INFO implements IS_GET_PLAYER_INFO {

            /**
             * Constructs a new S_GET_PLAYER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_PLAYER_INFO);

            /** S_GET_PLAYER_INFO playerInfo. */
            public playerInfo?: (com.message.IPlayerBaseInfoMsg|null);

            /** S_GET_PLAYER_INFO playerAllInfo. */
            public playerAllInfo?: (com.message.IPLAYER_ALL_INFO|null);

            /** S_GET_PLAYER_INFO formationType. */
            public formationType: number;

            /**
             * Encodes the specified S_GET_PLAYER_INFO message. Does not implicitly {@link com.message.S_GET_PLAYER_INFO.verify|verify} messages.
             * @param message S_GET_PLAYER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_PLAYER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_PLAYER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_PLAYER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_PLAYER_INFO;
        }

        /** Properties of a PLAYER_ALL_INFO. */
        interface IPLAYER_ALL_INFO {

            /** PLAYER_ALL_INFO formationHeros */
            formationHeros?: (com.message.IFORMATION_HERO_INFO1[]|null);

            /** PLAYER_ALL_INFO heros */
            heros?: (com.message.IHERO_INFO[]|null);
        }

        /** Represents a PLAYER_ALL_INFO. */
        class PLAYER_ALL_INFO implements IPLAYER_ALL_INFO {

            /**
             * Constructs a new PLAYER_ALL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPLAYER_ALL_INFO);

            /** PLAYER_ALL_INFO formationHeros. */
            public formationHeros: com.message.IFORMATION_HERO_INFO1[];

            /** PLAYER_ALL_INFO heros. */
            public heros: com.message.IHERO_INFO[];

            /**
             * Encodes the specified PLAYER_ALL_INFO message. Does not implicitly {@link com.message.PLAYER_ALL_INFO.verify|verify} messages.
             * @param message PLAYER_ALL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPLAYER_ALL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PLAYER_ALL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PLAYER_ALL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PLAYER_ALL_INFO;
        }

        /** Properties of a PROPERTY_INFO. */
        interface IPROPERTY_INFO {

            /** PROPERTY_INFO propId */
            propId?: (number|null);

            /** PROPERTY_INFO propVal */
            propVal?: (number|Long|null);
        }

        /** Represents a PROPERTY_INFO. */
        class PROPERTY_INFO implements IPROPERTY_INFO {

            /**
             * Constructs a new PROPERTY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPROPERTY_INFO);

            /** PROPERTY_INFO propId. */
            public propId: number;

            /** PROPERTY_INFO propVal. */
            public propVal: (number|Long);

            /**
             * Encodes the specified PROPERTY_INFO message. Does not implicitly {@link com.message.PROPERTY_INFO.verify|verify} messages.
             * @param message PROPERTY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPROPERTY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PROPERTY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PROPERTY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PROPERTY_INFO;
        }

        /** Properties of a FORMATION_HERO_INFO1. */
        interface IFORMATION_HERO_INFO1 {

            /** FORMATION_HERO_INFO1 heroId */
            heroId?: (number|null);

            /** FORMATION_HERO_INFO1 pos */
            pos?: (number|null);

            /** FORMATION_HERO_INFO1 index */
            index?: (number|null);

            /** FORMATION_HERO_INFO1 propInfos */
            propInfos?: (com.message.IPROPERTY_INFO[]|null);
        }

        /** Represents a FORMATION_HERO_INFO1. */
        class FORMATION_HERO_INFO1 implements IFORMATION_HERO_INFO1 {

            /**
             * Constructs a new FORMATION_HERO_INFO1.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFORMATION_HERO_INFO1);

            /** FORMATION_HERO_INFO1 heroId. */
            public heroId: number;

            /** FORMATION_HERO_INFO1 pos. */
            public pos: number;

            /** FORMATION_HERO_INFO1 index. */
            public index: number;

            /** FORMATION_HERO_INFO1 propInfos. */
            public propInfos: com.message.IPROPERTY_INFO[];

            /**
             * Encodes the specified FORMATION_HERO_INFO1 message. Does not implicitly {@link com.message.FORMATION_HERO_INFO1.verify|verify} messages.
             * @param message FORMATION_HERO_INFO1 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFORMATION_HERO_INFO1, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FORMATION_HERO_INFO1 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FORMATION_HERO_INFO1
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FORMATION_HERO_INFO1;
        }

        /** Properties of a HERO_INFO. */
        interface IHERO_INFO {

            /** HERO_INFO heroId */
            heroId?: (number|null);

            /** HERO_INFO heroLevel */
            heroLevel?: (number|null);

            /** HERO_INFO heroTuPoLevel */
            heroTuPoLevel?: (number|null);

            /** HERO_INFO wakeUpLevel */
            wakeUpLevel?: (number|null);

            /** HERO_INFO starUpLevel */
            starUpLevel?: (number|null);

            /** HERO_INFO skills */
            skills?: (number[]|null);

            /** HERO_INFO flyLevel */
            flyLevel?: (number|null);
        }

        /** Represents a HERO_INFO. */
        class HERO_INFO implements IHERO_INFO {

            /**
             * Constructs a new HERO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IHERO_INFO);

            /** HERO_INFO heroId. */
            public heroId: number;

            /** HERO_INFO heroLevel. */
            public heroLevel: number;

            /** HERO_INFO heroTuPoLevel. */
            public heroTuPoLevel: number;

            /** HERO_INFO wakeUpLevel. */
            public wakeUpLevel: number;

            /** HERO_INFO starUpLevel. */
            public starUpLevel: number;

            /** HERO_INFO skills. */
            public skills: number[];

            /** HERO_INFO flyLevel. */
            public flyLevel: number;

            /**
             * Encodes the specified HERO_INFO message. Does not implicitly {@link com.message.HERO_INFO.verify|verify} messages.
             * @param message HERO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IHERO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a HERO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HERO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.HERO_INFO;
        }

        /** Properties of a C_EDIT_PLAYER_NICKNAME. */
        interface IC_EDIT_PLAYER_NICKNAME {

            /** C_EDIT_PLAYER_NICKNAME nickname */
            nickname?: (string|null);
        }

        /** Represents a C_EDIT_PLAYER_NICKNAME. */
        class C_EDIT_PLAYER_NICKNAME implements IC_EDIT_PLAYER_NICKNAME {

            /**
             * Constructs a new C_EDIT_PLAYER_NICKNAME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EDIT_PLAYER_NICKNAME);

            /** C_EDIT_PLAYER_NICKNAME nickname. */
            public nickname: string;

            /**
             * Encodes the specified C_EDIT_PLAYER_NICKNAME message. Does not implicitly {@link com.message.C_EDIT_PLAYER_NICKNAME.verify|verify} messages.
             * @param message C_EDIT_PLAYER_NICKNAME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EDIT_PLAYER_NICKNAME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EDIT_PLAYER_NICKNAME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EDIT_PLAYER_NICKNAME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EDIT_PLAYER_NICKNAME;
        }

        /** Properties of a S_EDIT_PLAYER_NICKNAME. */
        interface IS_EDIT_PLAYER_NICKNAME {

            /** S_EDIT_PLAYER_NICKNAME nickname */
            nickname?: (string|null);
        }

        /** Represents a S_EDIT_PLAYER_NICKNAME. */
        class S_EDIT_PLAYER_NICKNAME implements IS_EDIT_PLAYER_NICKNAME {

            /**
             * Constructs a new S_EDIT_PLAYER_NICKNAME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EDIT_PLAYER_NICKNAME);

            /** S_EDIT_PLAYER_NICKNAME nickname. */
            public nickname: string;

            /**
             * Encodes the specified S_EDIT_PLAYER_NICKNAME message. Does not implicitly {@link com.message.S_EDIT_PLAYER_NICKNAME.verify|verify} messages.
             * @param message S_EDIT_PLAYER_NICKNAME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EDIT_PLAYER_NICKNAME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EDIT_PLAYER_NICKNAME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EDIT_PLAYER_NICKNAME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EDIT_PLAYER_NICKNAME;
        }

        /** Properties of a PlayerBaseInfoMsg. */
        interface IPlayerBaseInfoMsg {

            /** PlayerBaseInfoMsg playerId */
            playerId?: (number|Long|null);

            /** PlayerBaseInfoMsg nickname */
            nickname?: (string|null);

            /** PlayerBaseInfoMsg level */
            level?: (number|null);

            /** PlayerBaseInfoMsg heroId */
            heroId?: (number|null);

            /** PlayerBaseInfoMsg vipLevel */
            vipLevel?: (number|null);

            /** PlayerBaseInfoMsg fightVal */
            fightVal?: (number|Long|null);

            /** PlayerBaseInfoMsg loverPlayerId */
            loverPlayerId?: (number|Long|null);

            /** PlayerBaseInfoMsg loverName */
            loverName?: (string|null);

            /** PlayerBaseInfoMsg guildName */
            guildName?: (string|null);

            /** PlayerBaseInfoMsg guildId */
            guildId?: (number|Long|null);

            /** PlayerBaseInfoMsg friendType */
            friendType?: (number|null);

            /** PlayerBaseInfoMsg friendSubType */
            friendSubType?: (number|null);

            /** PlayerBaseInfoMsg wingId */
            wingId?: (number|null);

            /** PlayerBaseInfoMsg wingImageId */
            wingImageId?: (number|null);

            /** PlayerBaseInfoMsg mountId */
            mountId?: (number|null);

            /** PlayerBaseInfoMsg mountImageId */
            mountImageId?: (number|null);

            /** PlayerBaseInfoMsg holoId */
            holoId?: (number|null);

            /** PlayerBaseInfoMsg holoImageId */
            holoImageId?: (number|null);

            /** PlayerBaseInfoMsg shouhuId */
            shouhuId?: (number|null);

            /** PlayerBaseInfoMsg shouhuImageId */
            shouhuImageId?: (number|null);

            /** PlayerBaseInfoMsg heroQuality */
            heroQuality?: (number|null);

            /** PlayerBaseInfoMsg useTitle */
            useTitle?: (number|null);

            /** PlayerBaseInfoMsg useHeadFrame */
            useHeadFrame?: (number|null);
        }

        /** Represents a PlayerBaseInfoMsg. */
        class PlayerBaseInfoMsg implements IPlayerBaseInfoMsg {

            /**
             * Constructs a new PlayerBaseInfoMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerBaseInfoMsg);

            /** PlayerBaseInfoMsg playerId. */
            public playerId: (number|Long);

            /** PlayerBaseInfoMsg nickname. */
            public nickname: string;

            /** PlayerBaseInfoMsg level. */
            public level: number;

            /** PlayerBaseInfoMsg heroId. */
            public heroId: number;

            /** PlayerBaseInfoMsg vipLevel. */
            public vipLevel: number;

            /** PlayerBaseInfoMsg fightVal. */
            public fightVal: (number|Long);

            /** PlayerBaseInfoMsg loverPlayerId. */
            public loverPlayerId: (number|Long);

            /** PlayerBaseInfoMsg loverName. */
            public loverName: string;

            /** PlayerBaseInfoMsg guildName. */
            public guildName: string;

            /** PlayerBaseInfoMsg guildId. */
            public guildId: (number|Long);

            /** PlayerBaseInfoMsg friendType. */
            public friendType: number;

            /** PlayerBaseInfoMsg friendSubType. */
            public friendSubType: number;

            /** PlayerBaseInfoMsg wingId. */
            public wingId: number;

            /** PlayerBaseInfoMsg wingImageId. */
            public wingImageId: number;

            /** PlayerBaseInfoMsg mountId. */
            public mountId: number;

            /** PlayerBaseInfoMsg mountImageId. */
            public mountImageId: number;

            /** PlayerBaseInfoMsg holoId. */
            public holoId: number;

            /** PlayerBaseInfoMsg holoImageId. */
            public holoImageId: number;

            /** PlayerBaseInfoMsg shouhuId. */
            public shouhuId: number;

            /** PlayerBaseInfoMsg shouhuImageId. */
            public shouhuImageId: number;

            /** PlayerBaseInfoMsg heroQuality. */
            public heroQuality: number;

            /** PlayerBaseInfoMsg useTitle. */
            public useTitle: number;

            /** PlayerBaseInfoMsg useHeadFrame. */
            public useHeadFrame: number;

            /**
             * Encodes the specified PlayerBaseInfoMsg message. Does not implicitly {@link com.message.PlayerBaseInfoMsg.verify|verify} messages.
             * @param message PlayerBaseInfoMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerBaseInfoMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerBaseInfoMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerBaseInfoMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerBaseInfoMsg;
        }

        /** Properties of a CROSS_C_GET_PLAYER_INFO. */
        interface ICROSS_C_GET_PLAYER_INFO {

            /** CROSS_C_GET_PLAYER_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_PLAYER_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_PLAYER_INFO targetId */
            targetId?: (number|Long|null);

            /** CROSS_C_GET_PLAYER_INFO targetServerId */
            targetServerId?: (number|null);

            /** CROSS_C_GET_PLAYER_INFO formationType */
            formationType?: (number|null);
        }

        /** Represents a CROSS_C_GET_PLAYER_INFO. */
        class CROSS_C_GET_PLAYER_INFO implements ICROSS_C_GET_PLAYER_INFO {

            /**
             * Constructs a new CROSS_C_GET_PLAYER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_PLAYER_INFO);

            /** CROSS_C_GET_PLAYER_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_PLAYER_INFO serverId. */
            public serverId: number;

            /** CROSS_C_GET_PLAYER_INFO targetId. */
            public targetId: (number|Long);

            /** CROSS_C_GET_PLAYER_INFO targetServerId. */
            public targetServerId: number;

            /** CROSS_C_GET_PLAYER_INFO formationType. */
            public formationType: number;

            /**
             * Encodes the specified CROSS_C_GET_PLAYER_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_PLAYER_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_PLAYER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_PLAYER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_PLAYER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_PLAYER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_PLAYER_INFO;
        }

        /** Properties of a CROSS_S_GET_PLAYER_INFO. */
        interface ICROSS_S_GET_PLAYER_INFO {

            /** CROSS_S_GET_PLAYER_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_PLAYER_INFO serverId */
            serverId?: (number|null);

            /** CROSS_S_GET_PLAYER_INFO playerInfo */
            playerInfo?: (com.message.IPlayerBaseInfoMsg|null);

            /** CROSS_S_GET_PLAYER_INFO playerAllInfo */
            playerAllInfo?: (com.message.IPLAYER_ALL_INFO|null);

            /** CROSS_S_GET_PLAYER_INFO formationType */
            formationType?: (number|null);
        }

        /** Represents a CROSS_S_GET_PLAYER_INFO. */
        class CROSS_S_GET_PLAYER_INFO implements ICROSS_S_GET_PLAYER_INFO {

            /**
             * Constructs a new CROSS_S_GET_PLAYER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_PLAYER_INFO);

            /** CROSS_S_GET_PLAYER_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_PLAYER_INFO serverId. */
            public serverId: number;

            /** CROSS_S_GET_PLAYER_INFO playerInfo. */
            public playerInfo?: (com.message.IPlayerBaseInfoMsg|null);

            /** CROSS_S_GET_PLAYER_INFO playerAllInfo. */
            public playerAllInfo?: (com.message.IPLAYER_ALL_INFO|null);

            /** CROSS_S_GET_PLAYER_INFO formationType. */
            public formationType: number;

            /**
             * Encodes the specified CROSS_S_GET_PLAYER_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_PLAYER_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_PLAYER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_PLAYER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_PLAYER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_PLAYER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_PLAYER_INFO;
        }

        /** Properties of a S_SYN_SHOW_BUBBLE. */
        interface IS_SYN_SHOW_BUBBLE {

            /** S_SYN_SHOW_BUBBLE bubbleId */
            bubbleId?: (number|null);
        }

        /** Represents a S_SYN_SHOW_BUBBLE. */
        class S_SYN_SHOW_BUBBLE implements IS_SYN_SHOW_BUBBLE {

            /**
             * Constructs a new S_SYN_SHOW_BUBBLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYN_SHOW_BUBBLE);

            /** S_SYN_SHOW_BUBBLE bubbleId. */
            public bubbleId: number;

            /**
             * Encodes the specified S_SYN_SHOW_BUBBLE message. Does not implicitly {@link com.message.S_SYN_SHOW_BUBBLE.verify|verify} messages.
             * @param message S_SYN_SHOW_BUBBLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYN_SHOW_BUBBLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYN_SHOW_BUBBLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYN_SHOW_BUBBLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYN_SHOW_BUBBLE;
        }

        /** Properties of a CROSS_C_SEND_PLYAER_DATA. */
        interface ICROSS_C_SEND_PLYAER_DATA {

            /** CROSS_C_SEND_PLYAER_DATA serverId */
            serverId?: (number|null);

            /** CROSS_C_SEND_PLYAER_DATA datas */
            datas?: (com.message.ICROSS_PLAYER_DATA[]|null);
        }

        /** Represents a CROSS_C_SEND_PLYAER_DATA. */
        class CROSS_C_SEND_PLYAER_DATA implements ICROSS_C_SEND_PLYAER_DATA {

            /**
             * Constructs a new CROSS_C_SEND_PLYAER_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SEND_PLYAER_DATA);

            /** CROSS_C_SEND_PLYAER_DATA serverId. */
            public serverId: number;

            /** CROSS_C_SEND_PLYAER_DATA datas. */
            public datas: com.message.ICROSS_PLAYER_DATA[];

            /**
             * Encodes the specified CROSS_C_SEND_PLYAER_DATA message. Does not implicitly {@link com.message.CROSS_C_SEND_PLYAER_DATA.verify|verify} messages.
             * @param message CROSS_C_SEND_PLYAER_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SEND_PLYAER_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SEND_PLYAER_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SEND_PLYAER_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SEND_PLYAER_DATA;
        }

        /** Properties of a CROSS_S_SEND_PLAYER_DATA. */
        interface ICROSS_S_SEND_PLAYER_DATA {

            /** CROSS_S_SEND_PLAYER_DATA serverId */
            serverId?: (number|null);

            /** CROSS_S_SEND_PLAYER_DATA updateNum */
            updateNum?: (number|null);
        }

        /** Represents a CROSS_S_SEND_PLAYER_DATA. */
        class CROSS_S_SEND_PLAYER_DATA implements ICROSS_S_SEND_PLAYER_DATA {

            /**
             * Constructs a new CROSS_S_SEND_PLAYER_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SEND_PLAYER_DATA);

            /** CROSS_S_SEND_PLAYER_DATA serverId. */
            public serverId: number;

            /** CROSS_S_SEND_PLAYER_DATA updateNum. */
            public updateNum: number;

            /**
             * Encodes the specified CROSS_S_SEND_PLAYER_DATA message. Does not implicitly {@link com.message.CROSS_S_SEND_PLAYER_DATA.verify|verify} messages.
             * @param message CROSS_S_SEND_PLAYER_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SEND_PLAYER_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SEND_PLAYER_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SEND_PLAYER_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SEND_PLAYER_DATA;
        }

        /** Properties of a CROSS_PLAYER_DATA. */
        interface ICROSS_PLAYER_DATA {

            /** CROSS_PLAYER_DATA playerId */
            playerId?: (number|Long|null);

            /** CROSS_PLAYER_DATA playerLevel */
            playerLevel?: (number|null);

            /** CROSS_PLAYER_DATA nickName */
            nickName?: (string|null);

            /** CROSS_PLAYER_DATA fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a CROSS_PLAYER_DATA. */
        class CROSS_PLAYER_DATA implements ICROSS_PLAYER_DATA {

            /**
             * Constructs a new CROSS_PLAYER_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_PLAYER_DATA);

            /** CROSS_PLAYER_DATA playerId. */
            public playerId: (number|Long);

            /** CROSS_PLAYER_DATA playerLevel. */
            public playerLevel: number;

            /** CROSS_PLAYER_DATA nickName. */
            public nickName: string;

            /** CROSS_PLAYER_DATA fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified CROSS_PLAYER_DATA message. Does not implicitly {@link com.message.CROSS_PLAYER_DATA.verify|verify} messages.
             * @param message CROSS_PLAYER_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_PLAYER_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_PLAYER_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_PLAYER_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_PLAYER_DATA;
        }

        /** Properties of a CROSS_C_GET_PLAYER_BATTLE_INFO. */
        interface ICROSS_C_GET_PLAYER_BATTLE_INFO {

            /** CROSS_C_GET_PLAYER_BATTLE_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_PLAYER_BATTLE_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_PLAYER_BATTLE_INFO targetServerId */
            targetServerId?: (number|null);

            /** CROSS_C_GET_PLAYER_BATTLE_INFO targetPlayerId */
            targetPlayerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_PLAYER_BATTLE_INFO. */
        class CROSS_C_GET_PLAYER_BATTLE_INFO implements ICROSS_C_GET_PLAYER_BATTLE_INFO {

            /**
             * Constructs a new CROSS_C_GET_PLAYER_BATTLE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_PLAYER_BATTLE_INFO);

            /** CROSS_C_GET_PLAYER_BATTLE_INFO serverId. */
            public serverId: number;

            /** CROSS_C_GET_PLAYER_BATTLE_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_PLAYER_BATTLE_INFO targetServerId. */
            public targetServerId: number;

            /** CROSS_C_GET_PLAYER_BATTLE_INFO targetPlayerId. */
            public targetPlayerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_PLAYER_BATTLE_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_PLAYER_BATTLE_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_PLAYER_BATTLE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_PLAYER_BATTLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_PLAYER_BATTLE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_PLAYER_BATTLE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_PLAYER_BATTLE_INFO;
        }

        /** Properties of a CROSS_S_GET_PLAYER_BATTLE_INFO. */
        interface ICROSS_S_GET_PLAYER_BATTLE_INFO {

            /** CROSS_S_GET_PLAYER_BATTLE_INFO serverId */
            serverId?: (number|null);

            /** CROSS_S_GET_PLAYER_BATTLE_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_PLAYER_BATTLE_INFO targetBattleInfo */
            targetBattleInfo?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_S_GET_PLAYER_BATTLE_INFO. */
        class CROSS_S_GET_PLAYER_BATTLE_INFO implements ICROSS_S_GET_PLAYER_BATTLE_INFO {

            /**
             * Constructs a new CROSS_S_GET_PLAYER_BATTLE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_PLAYER_BATTLE_INFO);

            /** CROSS_S_GET_PLAYER_BATTLE_INFO serverId. */
            public serverId: number;

            /** CROSS_S_GET_PLAYER_BATTLE_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_PLAYER_BATTLE_INFO targetBattleInfo. */
            public targetBattleInfo?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_S_GET_PLAYER_BATTLE_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_PLAYER_BATTLE_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_PLAYER_BATTLE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_PLAYER_BATTLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_PLAYER_BATTLE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_PLAYER_BATTLE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_PLAYER_BATTLE_INFO;
        }

        /** Properties of a CROSS_C_GET_PLAYER_ABI_HELL. */
        interface ICROSS_C_GET_PLAYER_ABI_HELL {

            /** CROSS_C_GET_PLAYER_ABI_HELL serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_PLAYER_ABI_HELL playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_PLAYER_ABI_HELL playerLevel */
            playerLevel?: (number|null);
        }

        /** Represents a CROSS_C_GET_PLAYER_ABI_HELL. */
        class CROSS_C_GET_PLAYER_ABI_HELL implements ICROSS_C_GET_PLAYER_ABI_HELL {

            /**
             * Constructs a new CROSS_C_GET_PLAYER_ABI_HELL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_PLAYER_ABI_HELL);

            /** CROSS_C_GET_PLAYER_ABI_HELL serverId. */
            public serverId: number;

            /** CROSS_C_GET_PLAYER_ABI_HELL playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_PLAYER_ABI_HELL playerLevel. */
            public playerLevel: number;

            /**
             * Encodes the specified CROSS_C_GET_PLAYER_ABI_HELL message. Does not implicitly {@link com.message.CROSS_C_GET_PLAYER_ABI_HELL.verify|verify} messages.
             * @param message CROSS_C_GET_PLAYER_ABI_HELL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_PLAYER_ABI_HELL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_PLAYER_ABI_HELL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_PLAYER_ABI_HELL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_PLAYER_ABI_HELL;
        }

        /** Properties of a CROSS_S_GET_PLAYER_ABI_HELL. */
        interface ICROSS_S_GET_PLAYER_ABI_HELL {

            /** CROSS_S_GET_PLAYER_ABI_HELL serverId */
            serverId?: (number|null);

            /** CROSS_S_GET_PLAYER_ABI_HELL playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_PLAYER_ABI_HELL targetDatas */
            targetDatas?: (string|null);
        }

        /** Represents a CROSS_S_GET_PLAYER_ABI_HELL. */
        class CROSS_S_GET_PLAYER_ABI_HELL implements ICROSS_S_GET_PLAYER_ABI_HELL {

            /**
             * Constructs a new CROSS_S_GET_PLAYER_ABI_HELL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_PLAYER_ABI_HELL);

            /** CROSS_S_GET_PLAYER_ABI_HELL serverId. */
            public serverId: number;

            /** CROSS_S_GET_PLAYER_ABI_HELL playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_PLAYER_ABI_HELL targetDatas. */
            public targetDatas: string;

            /**
             * Encodes the specified CROSS_S_GET_PLAYER_ABI_HELL message. Does not implicitly {@link com.message.CROSS_S_GET_PLAYER_ABI_HELL.verify|verify} messages.
             * @param message CROSS_S_GET_PLAYER_ABI_HELL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_PLAYER_ABI_HELL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_PLAYER_ABI_HELL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_PLAYER_ABI_HELL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_PLAYER_ABI_HELL;
        }

        /** Properties of a CROSS_C_PLAYER_SYS_BATTLE_INFO. */
        interface ICROSS_C_PLAYER_SYS_BATTLE_INFO {

            /** CROSS_C_PLAYER_SYS_BATTLE_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_PLAYER_SYS_BATTLE_INFO recordId */
            recordId?: (string|null);

            /** CROSS_C_PLAYER_SYS_BATTLE_INFO paramType */
            paramType?: (number|null);
        }

        /** Represents a CROSS_C_PLAYER_SYS_BATTLE_INFO. */
        class CROSS_C_PLAYER_SYS_BATTLE_INFO implements ICROSS_C_PLAYER_SYS_BATTLE_INFO {

            /**
             * Constructs a new CROSS_C_PLAYER_SYS_BATTLE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_PLAYER_SYS_BATTLE_INFO);

            /** CROSS_C_PLAYER_SYS_BATTLE_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_PLAYER_SYS_BATTLE_INFO recordId. */
            public recordId: string;

            /** CROSS_C_PLAYER_SYS_BATTLE_INFO paramType. */
            public paramType: number;

            /**
             * Encodes the specified CROSS_C_PLAYER_SYS_BATTLE_INFO message. Does not implicitly {@link com.message.CROSS_C_PLAYER_SYS_BATTLE_INFO.verify|verify} messages.
             * @param message CROSS_C_PLAYER_SYS_BATTLE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_PLAYER_SYS_BATTLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_PLAYER_SYS_BATTLE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_PLAYER_SYS_BATTLE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_PLAYER_SYS_BATTLE_INFO;
        }

        /** Properties of a CROSS_S_PLAYER_SYS_BATTLE_INFO. */
        interface ICROSS_S_PLAYER_SYS_BATTLE_INFO {

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO recordId */
            recordId?: (string|null);

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO targetBattleInfo */
            targetBattleInfo?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO paramType */
            paramType?: (number|null);
        }

        /** Represents a CROSS_S_PLAYER_SYS_BATTLE_INFO. */
        class CROSS_S_PLAYER_SYS_BATTLE_INFO implements ICROSS_S_PLAYER_SYS_BATTLE_INFO {

            /**
             * Constructs a new CROSS_S_PLAYER_SYS_BATTLE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_PLAYER_SYS_BATTLE_INFO);

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO recordId. */
            public recordId: string;

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO targetBattleInfo. */
            public targetBattleInfo?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_S_PLAYER_SYS_BATTLE_INFO paramType. */
            public paramType: number;

            /**
             * Encodes the specified CROSS_S_PLAYER_SYS_BATTLE_INFO message. Does not implicitly {@link com.message.CROSS_S_PLAYER_SYS_BATTLE_INFO.verify|verify} messages.
             * @param message CROSS_S_PLAYER_SYS_BATTLE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_PLAYER_SYS_BATTLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_PLAYER_SYS_BATTLE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_PLAYER_SYS_BATTLE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_PLAYER_SYS_BATTLE_INFO;
        }

        /** Properties of a CROSS_C_PLAYER_QUERY_INFO. */
        interface ICROSS_C_PLAYER_QUERY_INFO {

            /** CROSS_C_PLAYER_QUERY_INFO playerIds */
            playerIds?: ((number|Long)[]|null);
        }

        /** Represents a CROSS_C_PLAYER_QUERY_INFO. */
        class CROSS_C_PLAYER_QUERY_INFO implements ICROSS_C_PLAYER_QUERY_INFO {

            /**
             * Constructs a new CROSS_C_PLAYER_QUERY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_PLAYER_QUERY_INFO);

            /** CROSS_C_PLAYER_QUERY_INFO playerIds. */
            public playerIds: (number|Long)[];

            /**
             * Encodes the specified CROSS_C_PLAYER_QUERY_INFO message. Does not implicitly {@link com.message.CROSS_C_PLAYER_QUERY_INFO.verify|verify} messages.
             * @param message CROSS_C_PLAYER_QUERY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_PLAYER_QUERY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_PLAYER_QUERY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_PLAYER_QUERY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_PLAYER_QUERY_INFO;
        }

        /** Properties of a CROSS_S_PLAYER_QUERY_INFO. */
        interface ICROSS_S_PLAYER_QUERY_INFO {

            /** CROSS_S_PLAYER_QUERY_INFO playerIds */
            playerIds?: ((number|Long)[]|null);
        }

        /** Represents a CROSS_S_PLAYER_QUERY_INFO. */
        class CROSS_S_PLAYER_QUERY_INFO implements ICROSS_S_PLAYER_QUERY_INFO {

            /**
             * Constructs a new CROSS_S_PLAYER_QUERY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_PLAYER_QUERY_INFO);

            /** CROSS_S_PLAYER_QUERY_INFO playerIds. */
            public playerIds: (number|Long)[];

            /**
             * Encodes the specified CROSS_S_PLAYER_QUERY_INFO message. Does not implicitly {@link com.message.CROSS_S_PLAYER_QUERY_INFO.verify|verify} messages.
             * @param message CROSS_S_PLAYER_QUERY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_PLAYER_QUERY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_PLAYER_QUERY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_PLAYER_QUERY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_PLAYER_QUERY_INFO;
        }

        /** Properties of a C_GET_PRACTICE_INFO. */
        interface IC_GET_PRACTICE_INFO {
        }

        /** Represents a C_GET_PRACTICE_INFO. */
        class C_GET_PRACTICE_INFO implements IC_GET_PRACTICE_INFO {

            /**
             * Constructs a new C_GET_PRACTICE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_PRACTICE_INFO);

            /**
             * Encodes the specified C_GET_PRACTICE_INFO message. Does not implicitly {@link com.message.C_GET_PRACTICE_INFO.verify|verify} messages.
             * @param message C_GET_PRACTICE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_PRACTICE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_PRACTICE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_PRACTICE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_PRACTICE_INFO;
        }

        /** Properties of a S_GET_PRACTICE_INFO. */
        interface IS_GET_PRACTICE_INFO {

            /** S_GET_PRACTICE_INFO partInfo */
            partInfo?: (com.message.IPRACTICE_PART_INFO[]|null);

            /** S_GET_PRACTICE_INFO task */
            task?: (number|null);

            /** S_GET_PRACTICE_INFO endTime */
            endTime?: (number|null);

            /** S_GET_PRACTICE_INFO taskId */
            taskId?: (number[]|null);
        }

        /** Represents a S_GET_PRACTICE_INFO. */
        class S_GET_PRACTICE_INFO implements IS_GET_PRACTICE_INFO {

            /**
             * Constructs a new S_GET_PRACTICE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_PRACTICE_INFO);

            /** S_GET_PRACTICE_INFO partInfo. */
            public partInfo: com.message.IPRACTICE_PART_INFO[];

            /** S_GET_PRACTICE_INFO task. */
            public task: number;

            /** S_GET_PRACTICE_INFO endTime. */
            public endTime: number;

            /** S_GET_PRACTICE_INFO taskId. */
            public taskId: number[];

            /**
             * Encodes the specified S_GET_PRACTICE_INFO message. Does not implicitly {@link com.message.S_GET_PRACTICE_INFO.verify|verify} messages.
             * @param message S_GET_PRACTICE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_PRACTICE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_PRACTICE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_PRACTICE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_PRACTICE_INFO;
        }

        /** Properties of a PRACTICE_PART_INFO. */
        interface IPRACTICE_PART_INFO {

            /** PRACTICE_PART_INFO part */
            part?: (number|null);

            /** PRACTICE_PART_INFO level */
            level?: (number|null);
        }

        /** Represents a PRACTICE_PART_INFO. */
        class PRACTICE_PART_INFO implements IPRACTICE_PART_INFO {

            /**
             * Constructs a new PRACTICE_PART_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPRACTICE_PART_INFO);

            /** PRACTICE_PART_INFO part. */
            public part: number;

            /** PRACTICE_PART_INFO level. */
            public level: number;

            /**
             * Encodes the specified PRACTICE_PART_INFO message. Does not implicitly {@link com.message.PRACTICE_PART_INFO.verify|verify} messages.
             * @param message PRACTICE_PART_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPRACTICE_PART_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PRACTICE_PART_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PRACTICE_PART_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PRACTICE_PART_INFO;
        }

        /** Properties of a C_UPGRADE_PRACTICE_PART. */
        interface IC_UPGRADE_PRACTICE_PART {

            /** C_UPGRADE_PRACTICE_PART part */
            part?: (number|null);
        }

        /** Represents a C_UPGRADE_PRACTICE_PART. */
        class C_UPGRADE_PRACTICE_PART implements IC_UPGRADE_PRACTICE_PART {

            /**
             * Constructs a new C_UPGRADE_PRACTICE_PART.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_UPGRADE_PRACTICE_PART);

            /** C_UPGRADE_PRACTICE_PART part. */
            public part: number;

            /**
             * Encodes the specified C_UPGRADE_PRACTICE_PART message. Does not implicitly {@link com.message.C_UPGRADE_PRACTICE_PART.verify|verify} messages.
             * @param message C_UPGRADE_PRACTICE_PART message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_UPGRADE_PRACTICE_PART, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_UPGRADE_PRACTICE_PART message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_UPGRADE_PRACTICE_PART
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_UPGRADE_PRACTICE_PART;
        }

        /** Properties of a S_UPGRADE_PRACTICE_PART. */
        interface IS_UPGRADE_PRACTICE_PART {

            /** S_UPGRADE_PRACTICE_PART partInfo */
            partInfo?: (com.message.IPRACTICE_PART_INFO|null);
        }

        /** Represents a S_UPGRADE_PRACTICE_PART. */
        class S_UPGRADE_PRACTICE_PART implements IS_UPGRADE_PRACTICE_PART {

            /**
             * Constructs a new S_UPGRADE_PRACTICE_PART.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPGRADE_PRACTICE_PART);

            /** S_UPGRADE_PRACTICE_PART partInfo. */
            public partInfo?: (com.message.IPRACTICE_PART_INFO|null);

            /**
             * Encodes the specified S_UPGRADE_PRACTICE_PART message. Does not implicitly {@link com.message.S_UPGRADE_PRACTICE_PART.verify|verify} messages.
             * @param message S_UPGRADE_PRACTICE_PART message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPGRADE_PRACTICE_PART, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPGRADE_PRACTICE_PART message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPGRADE_PRACTICE_PART
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPGRADE_PRACTICE_PART;
        }

        /** Properties of a C_OPNE_SERVER_RANK_INFO. */
        interface IC_OPNE_SERVER_RANK_INFO {
        }

        /** Represents a C_OPNE_SERVER_RANK_INFO. */
        class C_OPNE_SERVER_RANK_INFO implements IC_OPNE_SERVER_RANK_INFO {

            /**
             * Constructs a new C_OPNE_SERVER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OPNE_SERVER_RANK_INFO);

            /**
             * Encodes the specified C_OPNE_SERVER_RANK_INFO message. Does not implicitly {@link com.message.C_OPNE_SERVER_RANK_INFO.verify|verify} messages.
             * @param message C_OPNE_SERVER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OPNE_SERVER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OPNE_SERVER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OPNE_SERVER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OPNE_SERVER_RANK_INFO;
        }

        /** Properties of a S_OPNE_SERVER_RANK_INFO. */
        interface IS_OPNE_SERVER_RANK_INFO {

            /** S_OPNE_SERVER_RANK_INFO serverRankInfo */
            serverRankInfo?: (com.message.IServerRankInfo[]|null);
        }

        /** Represents a S_OPNE_SERVER_RANK_INFO. */
        class S_OPNE_SERVER_RANK_INFO implements IS_OPNE_SERVER_RANK_INFO {

            /**
             * Constructs a new S_OPNE_SERVER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OPNE_SERVER_RANK_INFO);

            /** S_OPNE_SERVER_RANK_INFO serverRankInfo. */
            public serverRankInfo: com.message.IServerRankInfo[];

            /**
             * Encodes the specified S_OPNE_SERVER_RANK_INFO message. Does not implicitly {@link com.message.S_OPNE_SERVER_RANK_INFO.verify|verify} messages.
             * @param message S_OPNE_SERVER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OPNE_SERVER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OPNE_SERVER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OPNE_SERVER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OPNE_SERVER_RANK_INFO;
        }

        /** Properties of a ServerRankInfo. */
        interface IServerRankInfo {

            /** ServerRankInfo rankId */
            rankId?: (number|null);

            /** ServerRankInfo rankInfo */
            rankInfo?: (com.message.IRankInfo[]|null);

            /** ServerRankInfo selfRankInfo */
            selfRankInfo?: (com.message.IRankInfo|null);
        }

        /** Represents a ServerRankInfo. */
        class ServerRankInfo implements IServerRankInfo {

            /**
             * Constructs a new ServerRankInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IServerRankInfo);

            /** ServerRankInfo rankId. */
            public rankId: number;

            /** ServerRankInfo rankInfo. */
            public rankInfo: com.message.IRankInfo[];

            /** ServerRankInfo selfRankInfo. */
            public selfRankInfo?: (com.message.IRankInfo|null);

            /**
             * Encodes the specified ServerRankInfo message. Does not implicitly {@link com.message.ServerRankInfo.verify|verify} messages.
             * @param message ServerRankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IServerRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ServerRankInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServerRankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ServerRankInfo;
        }

        /** Properties of a RankInfo. */
        interface IRankInfo {

            /** RankInfo rank */
            rank?: (number|null);

            /** RankInfo score */
            score?: (number|Long|null);

            /** RankInfo roleRankInfo */
            roleRankInfo?: (com.message.IRankRoleInfo|null);
        }

        /** Represents a RankInfo. */
        class RankInfo implements IRankInfo {

            /**
             * Constructs a new RankInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IRankInfo);

            /** RankInfo rank. */
            public rank: number;

            /** RankInfo score. */
            public score: (number|Long);

            /** RankInfo roleRankInfo. */
            public roleRankInfo?: (com.message.IRankRoleInfo|null);

            /**
             * Encodes the specified RankInfo message. Does not implicitly {@link com.message.RankInfo.verify|verify} messages.
             * @param message RankInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IRankInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RankInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RankInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.RankInfo;
        }

        /** Properties of a RankRoleInfo. */
        interface IRankRoleInfo {

            /** RankRoleInfo roleId */
            roleId?: (number|Long|null);

            /** RankRoleInfo roleName */
            roleName?: (string|null);

            /** RankRoleInfo vipLevel */
            vipLevel?: (number|null);

            /** RankRoleInfo heroId */
            heroId?: (number|null);

            /** RankRoleInfo level */
            level?: (number|null);

            /** RankRoleInfo wingId */
            wingId?: (number|null);

            /** RankRoleInfo wingImageId */
            wingImageId?: (number|null);

            /** RankRoleInfo mountId */
            mountId?: (number|null);

            /** RankRoleInfo mountImageId */
            mountImageId?: (number|null);

            /** RankRoleInfo holoId */
            holoId?: (number|null);

            /** RankRoleInfo holoImageId */
            holoImageId?: (number|null);

            /** RankRoleInfo shouhuId */
            shouhuId?: (number|null);

            /** RankRoleInfo shouhuImageId */
            shouhuImageId?: (number|null);

            /** RankRoleInfo fight */
            fight?: (number|Long|null);

            /** RankRoleInfo heroQuality */
            heroQuality?: (number|null);

            /** RankRoleInfo useTitle */
            useTitle?: (number|null);

            /** RankRoleInfo useHeadFrame */
            useHeadFrame?: (number|null);

            /** RankRoleInfo roleHeroId */
            roleHeroId?: (number|null);
        }

        /** Represents a RankRoleInfo. */
        class RankRoleInfo implements IRankRoleInfo {

            /**
             * Constructs a new RankRoleInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IRankRoleInfo);

            /** RankRoleInfo roleId. */
            public roleId: (number|Long);

            /** RankRoleInfo roleName. */
            public roleName: string;

            /** RankRoleInfo vipLevel. */
            public vipLevel: number;

            /** RankRoleInfo heroId. */
            public heroId: number;

            /** RankRoleInfo level. */
            public level: number;

            /** RankRoleInfo wingId. */
            public wingId: number;

            /** RankRoleInfo wingImageId. */
            public wingImageId: number;

            /** RankRoleInfo mountId. */
            public mountId: number;

            /** RankRoleInfo mountImageId. */
            public mountImageId: number;

            /** RankRoleInfo holoId. */
            public holoId: number;

            /** RankRoleInfo holoImageId. */
            public holoImageId: number;

            /** RankRoleInfo shouhuId. */
            public shouhuId: number;

            /** RankRoleInfo shouhuImageId. */
            public shouhuImageId: number;

            /** RankRoleInfo fight. */
            public fight: (number|Long);

            /** RankRoleInfo heroQuality. */
            public heroQuality: number;

            /** RankRoleInfo useTitle. */
            public useTitle: number;

            /** RankRoleInfo useHeadFrame. */
            public useHeadFrame: number;

            /** RankRoleInfo roleHeroId. */
            public roleHeroId: number;

            /**
             * Encodes the specified RankRoleInfo message. Does not implicitly {@link com.message.RankRoleInfo.verify|verify} messages.
             * @param message RankRoleInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IRankRoleInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RankRoleInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RankRoleInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.RankRoleInfo;
        }

        /** Properties of a C_SERVER_RANK_INFO. */
        interface IC_SERVER_RANK_INFO {

            /** C_SERVER_RANK_INFO rankId */
            rankId?: (number|null);
        }

        /** Represents a C_SERVER_RANK_INFO. */
        class C_SERVER_RANK_INFO implements IC_SERVER_RANK_INFO {

            /**
             * Constructs a new C_SERVER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SERVER_RANK_INFO);

            /** C_SERVER_RANK_INFO rankId. */
            public rankId: number;

            /**
             * Encodes the specified C_SERVER_RANK_INFO message. Does not implicitly {@link com.message.C_SERVER_RANK_INFO.verify|verify} messages.
             * @param message C_SERVER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SERVER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SERVER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SERVER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SERVER_RANK_INFO;
        }

        /** Properties of a S_SERVER_RANK_INFO. */
        interface IS_SERVER_RANK_INFO {

            /** S_SERVER_RANK_INFO rankId */
            rankId?: (number|null);

            /** S_SERVER_RANK_INFO rankInfo */
            rankInfo?: (com.message.IRankInfo[]|null);

            /** S_SERVER_RANK_INFO myRank */
            myRank?: (number|null);

            /** S_SERVER_RANK_INFO currScore */
            currScore?: (number|Long|null);
        }

        /** Represents a S_SERVER_RANK_INFO. */
        class S_SERVER_RANK_INFO implements IS_SERVER_RANK_INFO {

            /**
             * Constructs a new S_SERVER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SERVER_RANK_INFO);

            /** S_SERVER_RANK_INFO rankId. */
            public rankId: number;

            /** S_SERVER_RANK_INFO rankInfo. */
            public rankInfo: com.message.IRankInfo[];

            /** S_SERVER_RANK_INFO myRank. */
            public myRank: number;

            /** S_SERVER_RANK_INFO currScore. */
            public currScore: (number|Long);

            /**
             * Encodes the specified S_SERVER_RANK_INFO message. Does not implicitly {@link com.message.S_SERVER_RANK_INFO.verify|verify} messages.
             * @param message S_SERVER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SERVER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SERVER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SERVER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SERVER_RANK_INFO;
        }

        /** Properties of a C_OPNE_SERVER_HISTORY_RANK_INFO. */
        interface IC_OPNE_SERVER_HISTORY_RANK_INFO {

            /** C_OPNE_SERVER_HISTORY_RANK_INFO rankId */
            rankId?: (number|null);
        }

        /** Represents a C_OPNE_SERVER_HISTORY_RANK_INFO. */
        class C_OPNE_SERVER_HISTORY_RANK_INFO implements IC_OPNE_SERVER_HISTORY_RANK_INFO {

            /**
             * Constructs a new C_OPNE_SERVER_HISTORY_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_OPNE_SERVER_HISTORY_RANK_INFO);

            /** C_OPNE_SERVER_HISTORY_RANK_INFO rankId. */
            public rankId: number;

            /**
             * Encodes the specified C_OPNE_SERVER_HISTORY_RANK_INFO message. Does not implicitly {@link com.message.C_OPNE_SERVER_HISTORY_RANK_INFO.verify|verify} messages.
             * @param message C_OPNE_SERVER_HISTORY_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_OPNE_SERVER_HISTORY_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_OPNE_SERVER_HISTORY_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_OPNE_SERVER_HISTORY_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_OPNE_SERVER_HISTORY_RANK_INFO;
        }

        /** Properties of a S_OPNE_SERVER_HISTORY_RANK_INFO. */
        interface IS_OPNE_SERVER_HISTORY_RANK_INFO {

            /** S_OPNE_SERVER_HISTORY_RANK_INFO rankId */
            rankId?: (number|null);

            /** S_OPNE_SERVER_HISTORY_RANK_INFO rankInfo */
            rankInfo?: (com.message.IRankInfo[]|null);

            /** S_OPNE_SERVER_HISTORY_RANK_INFO myRank */
            myRank?: (number|null);

            /** S_OPNE_SERVER_HISTORY_RANK_INFO currScore */
            currScore?: (number|Long|null);
        }

        /** Represents a S_OPNE_SERVER_HISTORY_RANK_INFO. */
        class S_OPNE_SERVER_HISTORY_RANK_INFO implements IS_OPNE_SERVER_HISTORY_RANK_INFO {

            /**
             * Constructs a new S_OPNE_SERVER_HISTORY_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_OPNE_SERVER_HISTORY_RANK_INFO);

            /** S_OPNE_SERVER_HISTORY_RANK_INFO rankId. */
            public rankId: number;

            /** S_OPNE_SERVER_HISTORY_RANK_INFO rankInfo. */
            public rankInfo: com.message.IRankInfo[];

            /** S_OPNE_SERVER_HISTORY_RANK_INFO myRank. */
            public myRank: number;

            /** S_OPNE_SERVER_HISTORY_RANK_INFO currScore. */
            public currScore: (number|Long);

            /**
             * Encodes the specified S_OPNE_SERVER_HISTORY_RANK_INFO message. Does not implicitly {@link com.message.S_OPNE_SERVER_HISTORY_RANK_INFO.verify|verify} messages.
             * @param message S_OPNE_SERVER_HISTORY_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_OPNE_SERVER_HISTORY_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_OPNE_SERVER_HISTORY_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_OPNE_SERVER_HISTORY_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_OPNE_SERVER_HISTORY_RANK_INFO;
        }

        /** Properties of a C_FIRST_RECHARGE_GETRECORD. */
        interface IC_FIRST_RECHARGE_GETRECORD {
        }

        /** Represents a C_FIRST_RECHARGE_GETRECORD. */
        class C_FIRST_RECHARGE_GETRECORD implements IC_FIRST_RECHARGE_GETRECORD {

            /**
             * Constructs a new C_FIRST_RECHARGE_GETRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FIRST_RECHARGE_GETRECORD);

            /**
             * Encodes the specified C_FIRST_RECHARGE_GETRECORD message. Does not implicitly {@link com.message.C_FIRST_RECHARGE_GETRECORD.verify|verify} messages.
             * @param message C_FIRST_RECHARGE_GETRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FIRST_RECHARGE_GETRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FIRST_RECHARGE_GETRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FIRST_RECHARGE_GETRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FIRST_RECHARGE_GETRECORD;
        }

        /** Properties of a S_FIRST_RECHARGE_GETRECORD. */
        interface IS_FIRST_RECHARGE_GETRECORD {

            /** S_FIRST_RECHARGE_GETRECORD firstRechargeValue */
            firstRechargeValue?: (number|Long|null);

            /** S_FIRST_RECHARGE_GETRECORD rewardId */
            rewardId?: (number[]|null);

            /** S_FIRST_RECHARGE_GETRECORD canRewardId */
            canRewardId?: (number|null);

            /** S_FIRST_RECHARGE_GETRECORD cumulateRechargeValue */
            cumulateRechargeValue?: (number|Long|null);

            /** S_FIRST_RECHARGE_GETRECORD info */
            info?: (com.message.IFIRST_RECHARGE_INFO[]|null);

            /** S_FIRST_RECHARGE_GETRECORD firstNewVaule */
            firstNewVaule?: (number|null);

            /** S_FIRST_RECHARGE_GETRECORD firstNewId */
            firstNewId?: (number|null);
        }

        /** Represents a S_FIRST_RECHARGE_GETRECORD. */
        class S_FIRST_RECHARGE_GETRECORD implements IS_FIRST_RECHARGE_GETRECORD {

            /**
             * Constructs a new S_FIRST_RECHARGE_GETRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FIRST_RECHARGE_GETRECORD);

            /** S_FIRST_RECHARGE_GETRECORD firstRechargeValue. */
            public firstRechargeValue: (number|Long);

            /** S_FIRST_RECHARGE_GETRECORD rewardId. */
            public rewardId: number[];

            /** S_FIRST_RECHARGE_GETRECORD canRewardId. */
            public canRewardId: number;

            /** S_FIRST_RECHARGE_GETRECORD cumulateRechargeValue. */
            public cumulateRechargeValue: (number|Long);

            /** S_FIRST_RECHARGE_GETRECORD info. */
            public info: com.message.IFIRST_RECHARGE_INFO[];

            /** S_FIRST_RECHARGE_GETRECORD firstNewVaule. */
            public firstNewVaule: number;

            /** S_FIRST_RECHARGE_GETRECORD firstNewId. */
            public firstNewId: number;

            /**
             * Encodes the specified S_FIRST_RECHARGE_GETRECORD message. Does not implicitly {@link com.message.S_FIRST_RECHARGE_GETRECORD.verify|verify} messages.
             * @param message S_FIRST_RECHARGE_GETRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FIRST_RECHARGE_GETRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FIRST_RECHARGE_GETRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FIRST_RECHARGE_GETRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FIRST_RECHARGE_GETRECORD;
        }

        /** Properties of a S_NOTIFY_FIRST_RECHARGE_RECORD. */
        interface IS_NOTIFY_FIRST_RECHARGE_RECORD {

            /** S_NOTIFY_FIRST_RECHARGE_RECORD firstRechargeValue */
            firstRechargeValue?: (number|Long|null);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD rewardId */
            rewardId?: (number[]|null);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD canRewardId */
            canRewardId?: (number|null);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD cumulateRechargeValue */
            cumulateRechargeValue?: (number|Long|null);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD info */
            info?: (com.message.IFIRST_RECHARGE_INFO[]|null);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD firstNewVaule */
            firstNewVaule?: (number|null);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD firstNewId */
            firstNewId?: (number|null);
        }

        /** Represents a S_NOTIFY_FIRST_RECHARGE_RECORD. */
        class S_NOTIFY_FIRST_RECHARGE_RECORD implements IS_NOTIFY_FIRST_RECHARGE_RECORD {

            /**
             * Constructs a new S_NOTIFY_FIRST_RECHARGE_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NOTIFY_FIRST_RECHARGE_RECORD);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD firstRechargeValue. */
            public firstRechargeValue: (number|Long);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD rewardId. */
            public rewardId: number[];

            /** S_NOTIFY_FIRST_RECHARGE_RECORD canRewardId. */
            public canRewardId: number;

            /** S_NOTIFY_FIRST_RECHARGE_RECORD cumulateRechargeValue. */
            public cumulateRechargeValue: (number|Long);

            /** S_NOTIFY_FIRST_RECHARGE_RECORD info. */
            public info: com.message.IFIRST_RECHARGE_INFO[];

            /** S_NOTIFY_FIRST_RECHARGE_RECORD firstNewVaule. */
            public firstNewVaule: number;

            /** S_NOTIFY_FIRST_RECHARGE_RECORD firstNewId. */
            public firstNewId: number;

            /**
             * Encodes the specified S_NOTIFY_FIRST_RECHARGE_RECORD message. Does not implicitly {@link com.message.S_NOTIFY_FIRST_RECHARGE_RECORD.verify|verify} messages.
             * @param message S_NOTIFY_FIRST_RECHARGE_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NOTIFY_FIRST_RECHARGE_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NOTIFY_FIRST_RECHARGE_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NOTIFY_FIRST_RECHARGE_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NOTIFY_FIRST_RECHARGE_RECORD;
        }

        /** Properties of a C_FIRST_RECHARGE_GETREWARD. */
        interface IC_FIRST_RECHARGE_GETREWARD {

            /** C_FIRST_RECHARGE_GETREWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_FIRST_RECHARGE_GETREWARD. */
        class C_FIRST_RECHARGE_GETREWARD implements IC_FIRST_RECHARGE_GETREWARD {

            /**
             * Constructs a new C_FIRST_RECHARGE_GETREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FIRST_RECHARGE_GETREWARD);

            /** C_FIRST_RECHARGE_GETREWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_FIRST_RECHARGE_GETREWARD message. Does not implicitly {@link com.message.C_FIRST_RECHARGE_GETREWARD.verify|verify} messages.
             * @param message C_FIRST_RECHARGE_GETREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FIRST_RECHARGE_GETREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FIRST_RECHARGE_GETREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FIRST_RECHARGE_GETREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FIRST_RECHARGE_GETREWARD;
        }

        /** Properties of a S_FIRST_RECHARGE_GETREWARD. */
        interface IS_FIRST_RECHARGE_GETREWARD {

            /** S_FIRST_RECHARGE_GETREWARD rewardId */
            rewardId?: (number|null);

            /** S_FIRST_RECHARGE_GETREWARD hadRewardId */
            hadRewardId?: (number[]|null);

            /** S_FIRST_RECHARGE_GETREWARD canRewardId */
            canRewardId?: (number|null);

            /** S_FIRST_RECHARGE_GETREWARD cumulateRechargeValue */
            cumulateRechargeValue?: (number|Long|null);

            /** S_FIRST_RECHARGE_GETREWARD info */
            info?: (com.message.IFIRST_RECHARGE_INFO[]|null);

            /** S_FIRST_RECHARGE_GETREWARD firstNewVaule */
            firstNewVaule?: (number|null);

            /** S_FIRST_RECHARGE_GETREWARD firstNewId */
            firstNewId?: (number|null);
        }

        /** Represents a S_FIRST_RECHARGE_GETREWARD. */
        class S_FIRST_RECHARGE_GETREWARD implements IS_FIRST_RECHARGE_GETREWARD {

            /**
             * Constructs a new S_FIRST_RECHARGE_GETREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_FIRST_RECHARGE_GETREWARD);

            /** S_FIRST_RECHARGE_GETREWARD rewardId. */
            public rewardId: number;

            /** S_FIRST_RECHARGE_GETREWARD hadRewardId. */
            public hadRewardId: number[];

            /** S_FIRST_RECHARGE_GETREWARD canRewardId. */
            public canRewardId: number;

            /** S_FIRST_RECHARGE_GETREWARD cumulateRechargeValue. */
            public cumulateRechargeValue: (number|Long);

            /** S_FIRST_RECHARGE_GETREWARD info. */
            public info: com.message.IFIRST_RECHARGE_INFO[];

            /** S_FIRST_RECHARGE_GETREWARD firstNewVaule. */
            public firstNewVaule: number;

            /** S_FIRST_RECHARGE_GETREWARD firstNewId. */
            public firstNewId: number;

            /**
             * Encodes the specified S_FIRST_RECHARGE_GETREWARD message. Does not implicitly {@link com.message.S_FIRST_RECHARGE_GETREWARD.verify|verify} messages.
             * @param message S_FIRST_RECHARGE_GETREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_FIRST_RECHARGE_GETREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_FIRST_RECHARGE_GETREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_FIRST_RECHARGE_GETREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_FIRST_RECHARGE_GETREWARD;
        }

        /** Properties of a C_CUMULATE_RECHARGE_GETRECORD. */
        interface IC_CUMULATE_RECHARGE_GETRECORD {
        }

        /** Represents a C_CUMULATE_RECHARGE_GETRECORD. */
        class C_CUMULATE_RECHARGE_GETRECORD implements IC_CUMULATE_RECHARGE_GETRECORD {

            /**
             * Constructs a new C_CUMULATE_RECHARGE_GETRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CUMULATE_RECHARGE_GETRECORD);

            /**
             * Encodes the specified C_CUMULATE_RECHARGE_GETRECORD message. Does not implicitly {@link com.message.C_CUMULATE_RECHARGE_GETRECORD.verify|verify} messages.
             * @param message C_CUMULATE_RECHARGE_GETRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CUMULATE_RECHARGE_GETRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CUMULATE_RECHARGE_GETRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CUMULATE_RECHARGE_GETRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CUMULATE_RECHARGE_GETRECORD;
        }

        /** Properties of a S_CUMULATE_RECHARGE_GETRECORD. */
        interface IS_CUMULATE_RECHARGE_GETRECORD {

            /** S_CUMULATE_RECHARGE_GETRECORD cumulateRechargeValue */
            cumulateRechargeValue?: (number|Long|null);

            /** S_CUMULATE_RECHARGE_GETRECORD rewardId */
            rewardId?: (number[]|null);
        }

        /** Represents a S_CUMULATE_RECHARGE_GETRECORD. */
        class S_CUMULATE_RECHARGE_GETRECORD implements IS_CUMULATE_RECHARGE_GETRECORD {

            /**
             * Constructs a new S_CUMULATE_RECHARGE_GETRECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CUMULATE_RECHARGE_GETRECORD);

            /** S_CUMULATE_RECHARGE_GETRECORD cumulateRechargeValue. */
            public cumulateRechargeValue: (number|Long);

            /** S_CUMULATE_RECHARGE_GETRECORD rewardId. */
            public rewardId: number[];

            /**
             * Encodes the specified S_CUMULATE_RECHARGE_GETRECORD message. Does not implicitly {@link com.message.S_CUMULATE_RECHARGE_GETRECORD.verify|verify} messages.
             * @param message S_CUMULATE_RECHARGE_GETRECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CUMULATE_RECHARGE_GETRECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CUMULATE_RECHARGE_GETRECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CUMULATE_RECHARGE_GETRECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CUMULATE_RECHARGE_GETRECORD;
        }

        /** Properties of a NOTIFY_CUMULATE_RECHARGE_RECORD. */
        interface INOTIFY_CUMULATE_RECHARGE_RECORD {

            /** NOTIFY_CUMULATE_RECHARGE_RECORD cumulateRechargeValue */
            cumulateRechargeValue?: (number|Long|null);
        }

        /** Represents a NOTIFY_CUMULATE_RECHARGE_RECORD. */
        class NOTIFY_CUMULATE_RECHARGE_RECORD implements INOTIFY_CUMULATE_RECHARGE_RECORD {

            /**
             * Constructs a new NOTIFY_CUMULATE_RECHARGE_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INOTIFY_CUMULATE_RECHARGE_RECORD);

            /** NOTIFY_CUMULATE_RECHARGE_RECORD cumulateRechargeValue. */
            public cumulateRechargeValue: (number|Long);

            /**
             * Encodes the specified NOTIFY_CUMULATE_RECHARGE_RECORD message. Does not implicitly {@link com.message.NOTIFY_CUMULATE_RECHARGE_RECORD.verify|verify} messages.
             * @param message NOTIFY_CUMULATE_RECHARGE_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INOTIFY_CUMULATE_RECHARGE_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NOTIFY_CUMULATE_RECHARGE_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NOTIFY_CUMULATE_RECHARGE_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NOTIFY_CUMULATE_RECHARGE_RECORD;
        }

        /** Properties of a C_CUMULATE_RECHARGE_GETREWARD. */
        interface IC_CUMULATE_RECHARGE_GETREWARD {

            /** C_CUMULATE_RECHARGE_GETREWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_CUMULATE_RECHARGE_GETREWARD. */
        class C_CUMULATE_RECHARGE_GETREWARD implements IC_CUMULATE_RECHARGE_GETREWARD {

            /**
             * Constructs a new C_CUMULATE_RECHARGE_GETREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CUMULATE_RECHARGE_GETREWARD);

            /** C_CUMULATE_RECHARGE_GETREWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_CUMULATE_RECHARGE_GETREWARD message. Does not implicitly {@link com.message.C_CUMULATE_RECHARGE_GETREWARD.verify|verify} messages.
             * @param message C_CUMULATE_RECHARGE_GETREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CUMULATE_RECHARGE_GETREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CUMULATE_RECHARGE_GETREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CUMULATE_RECHARGE_GETREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CUMULATE_RECHARGE_GETREWARD;
        }

        /** Properties of a S_CUMULATE_RECHARGE_GETREWARD. */
        interface IS_CUMULATE_RECHARGE_GETREWARD {

            /** S_CUMULATE_RECHARGE_GETREWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a S_CUMULATE_RECHARGE_GETREWARD. */
        class S_CUMULATE_RECHARGE_GETREWARD implements IS_CUMULATE_RECHARGE_GETREWARD {

            /**
             * Constructs a new S_CUMULATE_RECHARGE_GETREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CUMULATE_RECHARGE_GETREWARD);

            /** S_CUMULATE_RECHARGE_GETREWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified S_CUMULATE_RECHARGE_GETREWARD message. Does not implicitly {@link com.message.S_CUMULATE_RECHARGE_GETREWARD.verify|verify} messages.
             * @param message S_CUMULATE_RECHARGE_GETREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CUMULATE_RECHARGE_GETREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CUMULATE_RECHARGE_GETREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CUMULATE_RECHARGE_GETREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CUMULATE_RECHARGE_GETREWARD;
        }

        /** Properties of a FIRST_RECHARGE_INFO. */
        interface IFIRST_RECHARGE_INFO {

            /** FIRST_RECHARGE_INFO cumulateType */
            cumulateType?: (number|null);

            /** FIRST_RECHARGE_INFO cumulateCanRewardId */
            cumulateCanRewardId?: (number|null);
        }

        /** Represents a FIRST_RECHARGE_INFO. */
        class FIRST_RECHARGE_INFO implements IFIRST_RECHARGE_INFO {

            /**
             * Constructs a new FIRST_RECHARGE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IFIRST_RECHARGE_INFO);

            /** FIRST_RECHARGE_INFO cumulateType. */
            public cumulateType: number;

            /** FIRST_RECHARGE_INFO cumulateCanRewardId. */
            public cumulateCanRewardId: number;

            /**
             * Encodes the specified FIRST_RECHARGE_INFO message. Does not implicitly {@link com.message.FIRST_RECHARGE_INFO.verify|verify} messages.
             * @param message FIRST_RECHARGE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IFIRST_RECHARGE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a FIRST_RECHARGE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FIRST_RECHARGE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.FIRST_RECHARGE_INFO;
        }

        /** Properties of a S_RECHARGE_RTN_PUSH. */
        interface IS_RECHARGE_RTN_PUSH {

            /** S_RECHARGE_RTN_PUSH diamondCount */
            diamondCount?: (number|null);

            /** S_RECHARGE_RTN_PUSH rechargeDiamond */
            rechargeDiamond?: (number|null);
        }

        /** Represents a S_RECHARGE_RTN_PUSH. */
        class S_RECHARGE_RTN_PUSH implements IS_RECHARGE_RTN_PUSH {

            /**
             * Constructs a new S_RECHARGE_RTN_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RECHARGE_RTN_PUSH);

            /** S_RECHARGE_RTN_PUSH diamondCount. */
            public diamondCount: number;

            /** S_RECHARGE_RTN_PUSH rechargeDiamond. */
            public rechargeDiamond: number;

            /**
             * Encodes the specified S_RECHARGE_RTN_PUSH message. Does not implicitly {@link com.message.S_RECHARGE_RTN_PUSH.verify|verify} messages.
             * @param message S_RECHARGE_RTN_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RECHARGE_RTN_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RECHARGE_RTN_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RECHARGE_RTN_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RECHARGE_RTN_PUSH;
        }

        /** Properties of a C_RECHARGE_RTN_REWARD. */
        interface IC_RECHARGE_RTN_REWARD {
        }

        /** Represents a C_RECHARGE_RTN_REWARD. */
        class C_RECHARGE_RTN_REWARD implements IC_RECHARGE_RTN_REWARD {

            /**
             * Constructs a new C_RECHARGE_RTN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_RECHARGE_RTN_REWARD);

            /**
             * Encodes the specified C_RECHARGE_RTN_REWARD message. Does not implicitly {@link com.message.C_RECHARGE_RTN_REWARD.verify|verify} messages.
             * @param message C_RECHARGE_RTN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_RECHARGE_RTN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_RECHARGE_RTN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_RECHARGE_RTN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_RECHARGE_RTN_REWARD;
        }

        /** Properties of a S_RECHARGE_RTN_REWARD. */
        interface IS_RECHARGE_RTN_REWARD {

            /** S_RECHARGE_RTN_REWARD diamondCount */
            diamondCount?: (number|null);
        }

        /** Represents a S_RECHARGE_RTN_REWARD. */
        class S_RECHARGE_RTN_REWARD implements IS_RECHARGE_RTN_REWARD {

            /**
             * Constructs a new S_RECHARGE_RTN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RECHARGE_RTN_REWARD);

            /** S_RECHARGE_RTN_REWARD diamondCount. */
            public diamondCount: number;

            /**
             * Encodes the specified S_RECHARGE_RTN_REWARD message. Does not implicitly {@link com.message.S_RECHARGE_RTN_REWARD.verify|verify} messages.
             * @param message S_RECHARGE_RTN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RECHARGE_RTN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RECHARGE_RTN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RECHARGE_RTN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RECHARGE_RTN_REWARD;
        }

        /** Properties of a CROSS_C_RECHARGE_RTN. */
        interface ICROSS_C_RECHARGE_RTN {

            /** CROSS_C_RECHARGE_RTN userName */
            userName?: (string|null);

            /** CROSS_C_RECHARGE_RTN playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_RECHARGE_RTN serverId */
            serverId?: (number|null);

            /** CROSS_C_RECHARGE_RTN isUpdate */
            isUpdate?: (boolean|null);
        }

        /** Represents a CROSS_C_RECHARGE_RTN. */
        class CROSS_C_RECHARGE_RTN implements ICROSS_C_RECHARGE_RTN {

            /**
             * Constructs a new CROSS_C_RECHARGE_RTN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_RECHARGE_RTN);

            /** CROSS_C_RECHARGE_RTN userName. */
            public userName: string;

            /** CROSS_C_RECHARGE_RTN playerId. */
            public playerId: (number|Long);

            /** CROSS_C_RECHARGE_RTN serverId. */
            public serverId: number;

            /** CROSS_C_RECHARGE_RTN isUpdate. */
            public isUpdate: boolean;

            /**
             * Encodes the specified CROSS_C_RECHARGE_RTN message. Does not implicitly {@link com.message.CROSS_C_RECHARGE_RTN.verify|verify} messages.
             * @param message CROSS_C_RECHARGE_RTN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_RECHARGE_RTN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_RECHARGE_RTN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_RECHARGE_RTN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_RECHARGE_RTN;
        }

        /** Properties of a CROSS_S_RECHARGE_RTN. */
        interface ICROSS_S_RECHARGE_RTN {

            /** CROSS_S_RECHARGE_RTN userName */
            userName?: (string|null);

            /** CROSS_S_RECHARGE_RTN playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RECHARGE_RTN sendDiamond */
            sendDiamond?: (number|null);

            /** CROSS_S_RECHARGE_RTN chargeDiamond */
            chargeDiamond?: (number|null);

            /** CROSS_S_RECHARGE_RTN isReward */
            isReward?: (boolean|null);

            /** CROSS_S_RECHARGE_RTN isUpdate */
            isUpdate?: (boolean|null);
        }

        /** Represents a CROSS_S_RECHARGE_RTN. */
        class CROSS_S_RECHARGE_RTN implements ICROSS_S_RECHARGE_RTN {

            /**
             * Constructs a new CROSS_S_RECHARGE_RTN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RECHARGE_RTN);

            /** CROSS_S_RECHARGE_RTN userName. */
            public userName: string;

            /** CROSS_S_RECHARGE_RTN playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RECHARGE_RTN sendDiamond. */
            public sendDiamond: number;

            /** CROSS_S_RECHARGE_RTN chargeDiamond. */
            public chargeDiamond: number;

            /** CROSS_S_RECHARGE_RTN isReward. */
            public isReward: boolean;

            /** CROSS_S_RECHARGE_RTN isUpdate. */
            public isUpdate: boolean;

            /**
             * Encodes the specified CROSS_S_RECHARGE_RTN message. Does not implicitly {@link com.message.CROSS_S_RECHARGE_RTN.verify|verify} messages.
             * @param message CROSS_S_RECHARGE_RTN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RECHARGE_RTN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RECHARGE_RTN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RECHARGE_RTN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RECHARGE_RTN;
        }

        /** Properties of a C_GET_RED_PACKET_INFO. */
        interface IC_GET_RED_PACKET_INFO {
        }

        /** Represents a C_GET_RED_PACKET_INFO. */
        class C_GET_RED_PACKET_INFO implements IC_GET_RED_PACKET_INFO {

            /**
             * Constructs a new C_GET_RED_PACKET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_RED_PACKET_INFO);

            /**
             * Encodes the specified C_GET_RED_PACKET_INFO message. Does not implicitly {@link com.message.C_GET_RED_PACKET_INFO.verify|verify} messages.
             * @param message C_GET_RED_PACKET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_RED_PACKET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_RED_PACKET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_RED_PACKET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_RED_PACKET_INFO;
        }

        /** Properties of a S_GET_RED_PACKET_INFO. */
        interface IS_GET_RED_PACKET_INFO {

            /** S_GET_RED_PACKET_INFO openDays */
            openDays?: (number|null);

            /** S_GET_RED_PACKET_INFO leaveTimes */
            leaveTimes?: (number|null);

            /** S_GET_RED_PACKET_INFO hadRedIds */
            hadRedIds?: (string|null);
        }

        /** Represents a S_GET_RED_PACKET_INFO. */
        class S_GET_RED_PACKET_INFO implements IS_GET_RED_PACKET_INFO {

            /**
             * Constructs a new S_GET_RED_PACKET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_PACKET_INFO);

            /** S_GET_RED_PACKET_INFO openDays. */
            public openDays: number;

            /** S_GET_RED_PACKET_INFO leaveTimes. */
            public leaveTimes: number;

            /** S_GET_RED_PACKET_INFO hadRedIds. */
            public hadRedIds: string;

            /**
             * Encodes the specified S_GET_RED_PACKET_INFO message. Does not implicitly {@link com.message.S_GET_RED_PACKET_INFO.verify|verify} messages.
             * @param message S_GET_RED_PACKET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_PACKET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_PACKET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_PACKET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_PACKET_INFO;
        }

        /** Properties of a C_GET_RED_PACKET_REWARD. */
        interface IC_GET_RED_PACKET_REWARD {

            /** C_GET_RED_PACKET_REWARD redPacketId */
            redPacketId?: (number|null);

            /** C_GET_RED_PACKET_REWARD clientInfo */
            clientInfo?: (string|null);
        }

        /** Represents a C_GET_RED_PACKET_REWARD. */
        class C_GET_RED_PACKET_REWARD implements IC_GET_RED_PACKET_REWARD {

            /**
             * Constructs a new C_GET_RED_PACKET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_RED_PACKET_REWARD);

            /** C_GET_RED_PACKET_REWARD redPacketId. */
            public redPacketId: number;

            /** C_GET_RED_PACKET_REWARD clientInfo. */
            public clientInfo: string;

            /**
             * Encodes the specified C_GET_RED_PACKET_REWARD message. Does not implicitly {@link com.message.C_GET_RED_PACKET_REWARD.verify|verify} messages.
             * @param message C_GET_RED_PACKET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_RED_PACKET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_RED_PACKET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_RED_PACKET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_RED_PACKET_REWARD;
        }

        /** Properties of a S_GET_RED_PACKET_REWARD. */
        interface IS_GET_RED_PACKET_REWARD {

            /** S_GET_RED_PACKET_REWARD openDays */
            openDays?: (number|null);

            /** S_GET_RED_PACKET_REWARD redPacketId */
            redPacketId?: (number|null);

            /** S_GET_RED_PACKET_REWARD hadRedIds */
            hadRedIds?: (string|null);
        }

        /** Represents a S_GET_RED_PACKET_REWARD. */
        class S_GET_RED_PACKET_REWARD implements IS_GET_RED_PACKET_REWARD {

            /**
             * Constructs a new S_GET_RED_PACKET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_PACKET_REWARD);

            /** S_GET_RED_PACKET_REWARD openDays. */
            public openDays: number;

            /** S_GET_RED_PACKET_REWARD redPacketId. */
            public redPacketId: number;

            /** S_GET_RED_PACKET_REWARD hadRedIds. */
            public hadRedIds: string;

            /**
             * Encodes the specified S_GET_RED_PACKET_REWARD message. Does not implicitly {@link com.message.S_GET_RED_PACKET_REWARD.verify|verify} messages.
             * @param message S_GET_RED_PACKET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_PACKET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_PACKET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_PACKET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_PACKET_REWARD;
        }

        /** Properties of a S_GET_RED_PACKET_PUSH. */
        interface IS_GET_RED_PACKET_PUSH {

            /** S_GET_RED_PACKET_PUSH isShow */
            isShow?: (number|null);
        }

        /** Represents a S_GET_RED_PACKET_PUSH. */
        class S_GET_RED_PACKET_PUSH implements IS_GET_RED_PACKET_PUSH {

            /**
             * Constructs a new S_GET_RED_PACKET_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_PACKET_PUSH);

            /** S_GET_RED_PACKET_PUSH isShow. */
            public isShow: number;

            /**
             * Encodes the specified S_GET_RED_PACKET_PUSH message. Does not implicitly {@link com.message.S_GET_RED_PACKET_PUSH.verify|verify} messages.
             * @param message S_GET_RED_PACKET_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_PACKET_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_PACKET_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_PACKET_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_PACKET_PUSH;
        }

        /** Properties of a S_RED_PACKET_PUSH_REWARD. */
        interface IS_RED_PACKET_PUSH_REWARD {

            /** S_RED_PACKET_PUSH_REWARD redPacketId */
            redPacketId?: (number|null);

            /** S_RED_PACKET_PUSH_REWARD redResult */
            redResult?: (number|null);
        }

        /** Represents a S_RED_PACKET_PUSH_REWARD. */
        class S_RED_PACKET_PUSH_REWARD implements IS_RED_PACKET_PUSH_REWARD {

            /**
             * Constructs a new S_RED_PACKET_PUSH_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RED_PACKET_PUSH_REWARD);

            /** S_RED_PACKET_PUSH_REWARD redPacketId. */
            public redPacketId: number;

            /** S_RED_PACKET_PUSH_REWARD redResult. */
            public redResult: number;

            /**
             * Encodes the specified S_RED_PACKET_PUSH_REWARD message. Does not implicitly {@link com.message.S_RED_PACKET_PUSH_REWARD.verify|verify} messages.
             * @param message S_RED_PACKET_PUSH_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RED_PACKET_PUSH_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RED_PACKET_PUSH_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RED_PACKET_PUSH_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RED_PACKET_PUSH_REWARD;
        }

        /** Properties of a CROSS_C_RED_PACKET_GET_INFO. */
        interface ICROSS_C_RED_PACKET_GET_INFO {

            /** CROSS_C_RED_PACKET_GET_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_RED_PACKET_GET_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_RED_PACKET_GET_INFO userName */
            userName?: (string|null);
        }

        /** Represents a CROSS_C_RED_PACKET_GET_INFO. */
        class CROSS_C_RED_PACKET_GET_INFO implements ICROSS_C_RED_PACKET_GET_INFO {

            /**
             * Constructs a new CROSS_C_RED_PACKET_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_RED_PACKET_GET_INFO);

            /** CROSS_C_RED_PACKET_GET_INFO serverId. */
            public serverId: number;

            /** CROSS_C_RED_PACKET_GET_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_RED_PACKET_GET_INFO userName. */
            public userName: string;

            /**
             * Encodes the specified CROSS_C_RED_PACKET_GET_INFO message. Does not implicitly {@link com.message.CROSS_C_RED_PACKET_GET_INFO.verify|verify} messages.
             * @param message CROSS_C_RED_PACKET_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_RED_PACKET_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_RED_PACKET_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_RED_PACKET_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_RED_PACKET_GET_INFO;
        }

        /** Properties of a CROSS_S_RED_PACKET_GET_INFO. */
        interface ICROSS_S_RED_PACKET_GET_INFO {

            /** CROSS_S_RED_PACKET_GET_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RED_PACKET_GET_INFO joinServerId */
            joinServerId?: (number|null);
        }

        /** Represents a CROSS_S_RED_PACKET_GET_INFO. */
        class CROSS_S_RED_PACKET_GET_INFO implements ICROSS_S_RED_PACKET_GET_INFO {

            /**
             * Constructs a new CROSS_S_RED_PACKET_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_PACKET_GET_INFO);

            /** CROSS_S_RED_PACKET_GET_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RED_PACKET_GET_INFO joinServerId. */
            public joinServerId: number;

            /**
             * Encodes the specified CROSS_S_RED_PACKET_GET_INFO message. Does not implicitly {@link com.message.CROSS_S_RED_PACKET_GET_INFO.verify|verify} messages.
             * @param message CROSS_S_RED_PACKET_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_PACKET_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_PACKET_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_PACKET_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_PACKET_GET_INFO;
        }

        /** Properties of a CROSS_C_RED_PAKCET_REWARD. */
        interface ICROSS_C_RED_PAKCET_REWARD {

            /** CROSS_C_RED_PAKCET_REWARD serverId */
            serverId?: (number|null);

            /** CROSS_C_RED_PAKCET_REWARD playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_RED_PAKCET_REWARD userName */
            userName?: (string|null);

            /** CROSS_C_RED_PAKCET_REWARD redPacketId */
            redPacketId?: (number|null);

            /** CROSS_C_RED_PAKCET_REWARD clientInfo */
            clientInfo?: (string|null);
        }

        /** Represents a CROSS_C_RED_PAKCET_REWARD. */
        class CROSS_C_RED_PAKCET_REWARD implements ICROSS_C_RED_PAKCET_REWARD {

            /**
             * Constructs a new CROSS_C_RED_PAKCET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_RED_PAKCET_REWARD);

            /** CROSS_C_RED_PAKCET_REWARD serverId. */
            public serverId: number;

            /** CROSS_C_RED_PAKCET_REWARD playerId. */
            public playerId: (number|Long);

            /** CROSS_C_RED_PAKCET_REWARD userName. */
            public userName: string;

            /** CROSS_C_RED_PAKCET_REWARD redPacketId. */
            public redPacketId: number;

            /** CROSS_C_RED_PAKCET_REWARD clientInfo. */
            public clientInfo: string;

            /**
             * Encodes the specified CROSS_C_RED_PAKCET_REWARD message. Does not implicitly {@link com.message.CROSS_C_RED_PAKCET_REWARD.verify|verify} messages.
             * @param message CROSS_C_RED_PAKCET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_RED_PAKCET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_RED_PAKCET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_RED_PAKCET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_RED_PAKCET_REWARD;
        }

        /** Properties of a CROSS_S_RED_PAKCET_REWARD. */
        interface ICROSS_S_RED_PAKCET_REWARD {

            /** CROSS_S_RED_PAKCET_REWARD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RED_PAKCET_REWARD redPacketId */
            redPacketId?: (number|null);

            /** CROSS_S_RED_PAKCET_REWARD resultState */
            resultState?: (number|null);
        }

        /** Represents a CROSS_S_RED_PAKCET_REWARD. */
        class CROSS_S_RED_PAKCET_REWARD implements ICROSS_S_RED_PAKCET_REWARD {

            /**
             * Constructs a new CROSS_S_RED_PAKCET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_PAKCET_REWARD);

            /** CROSS_S_RED_PAKCET_REWARD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RED_PAKCET_REWARD redPacketId. */
            public redPacketId: number;

            /** CROSS_S_RED_PAKCET_REWARD resultState. */
            public resultState: number;

            /**
             * Encodes the specified CROSS_S_RED_PAKCET_REWARD message. Does not implicitly {@link com.message.CROSS_S_RED_PAKCET_REWARD.verify|verify} messages.
             * @param message CROSS_S_RED_PAKCET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_PAKCET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_PAKCET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_PAKCET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_PAKCET_REWARD;
        }

        /** Properties of a CROSS_S_RED_PACKET_PUSH_REWARD. */
        interface ICROSS_S_RED_PACKET_PUSH_REWARD {

            /** CROSS_S_RED_PACKET_PUSH_REWARD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RED_PACKET_PUSH_REWARD redPacketId */
            redPacketId?: (number|null);

            /** CROSS_S_RED_PACKET_PUSH_REWARD resultState */
            resultState?: (number|null);
        }

        /** Represents a CROSS_S_RED_PACKET_PUSH_REWARD. */
        class CROSS_S_RED_PACKET_PUSH_REWARD implements ICROSS_S_RED_PACKET_PUSH_REWARD {

            /**
             * Constructs a new CROSS_S_RED_PACKET_PUSH_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_PACKET_PUSH_REWARD);

            /** CROSS_S_RED_PACKET_PUSH_REWARD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RED_PACKET_PUSH_REWARD redPacketId. */
            public redPacketId: number;

            /** CROSS_S_RED_PACKET_PUSH_REWARD resultState. */
            public resultState: number;

            /**
             * Encodes the specified CROSS_S_RED_PACKET_PUSH_REWARD message. Does not implicitly {@link com.message.CROSS_S_RED_PACKET_PUSH_REWARD.verify|verify} messages.
             * @param message CROSS_S_RED_PACKET_PUSH_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_PACKET_PUSH_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_PACKET_PUSH_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_PACKET_PUSH_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_PACKET_PUSH_REWARD;
        }

        /** Properties of a C_GET_RED_WHEEL_INFO. */
        interface IC_GET_RED_WHEEL_INFO {
        }

        /** Represents a C_GET_RED_WHEEL_INFO. */
        class C_GET_RED_WHEEL_INFO implements IC_GET_RED_WHEEL_INFO {

            /**
             * Constructs a new C_GET_RED_WHEEL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_RED_WHEEL_INFO);

            /**
             * Encodes the specified C_GET_RED_WHEEL_INFO message. Does not implicitly {@link com.message.C_GET_RED_WHEEL_INFO.verify|verify} messages.
             * @param message C_GET_RED_WHEEL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_RED_WHEEL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_RED_WHEEL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_RED_WHEEL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_RED_WHEEL_INFO;
        }

        /** Properties of a S_GET_RED_WHEEL_INFO. */
        interface IS_GET_RED_WHEEL_INFO {

            /** S_GET_RED_WHEEL_INFO playTimes */
            playTimes?: (number|null);

            /** S_GET_RED_WHEEL_INFO hadMoney */
            hadMoney?: (number|null);

            /** S_GET_RED_WHEEL_INFO overTime */
            overTime?: (number|null);

            /** S_GET_RED_WHEEL_INFO bigTime */
            bigTime?: (number|null);

            /** S_GET_RED_WHEEL_INFO bigLevel */
            bigLevel?: (number|null);

            /** S_GET_RED_WHEEL_INFO levelData */
            levelData?: (string|null);
        }

        /** Represents a S_GET_RED_WHEEL_INFO. */
        class S_GET_RED_WHEEL_INFO implements IS_GET_RED_WHEEL_INFO {

            /**
             * Constructs a new S_GET_RED_WHEEL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_WHEEL_INFO);

            /** S_GET_RED_WHEEL_INFO playTimes. */
            public playTimes: number;

            /** S_GET_RED_WHEEL_INFO hadMoney. */
            public hadMoney: number;

            /** S_GET_RED_WHEEL_INFO overTime. */
            public overTime: number;

            /** S_GET_RED_WHEEL_INFO bigTime. */
            public bigTime: number;

            /** S_GET_RED_WHEEL_INFO bigLevel. */
            public bigLevel: number;

            /** S_GET_RED_WHEEL_INFO levelData. */
            public levelData: string;

            /**
             * Encodes the specified S_GET_RED_WHEEL_INFO message. Does not implicitly {@link com.message.S_GET_RED_WHEEL_INFO.verify|verify} messages.
             * @param message S_GET_RED_WHEEL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_WHEEL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_WHEEL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_WHEEL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_WHEEL_INFO;
        }

        /** Properties of a C_GET_RED_WHEEL_PLAY. */
        interface IC_GET_RED_WHEEL_PLAY {

            /** C_GET_RED_WHEEL_PLAY playTimes */
            playTimes?: (number|null);
        }

        /** Represents a C_GET_RED_WHEEL_PLAY. */
        class C_GET_RED_WHEEL_PLAY implements IC_GET_RED_WHEEL_PLAY {

            /**
             * Constructs a new C_GET_RED_WHEEL_PLAY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_RED_WHEEL_PLAY);

            /** C_GET_RED_WHEEL_PLAY playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified C_GET_RED_WHEEL_PLAY message. Does not implicitly {@link com.message.C_GET_RED_WHEEL_PLAY.verify|verify} messages.
             * @param message C_GET_RED_WHEEL_PLAY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_RED_WHEEL_PLAY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_RED_WHEEL_PLAY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_RED_WHEEL_PLAY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_RED_WHEEL_PLAY;
        }

        /** Properties of a S_GET_RED_WHEEL_PLAY. */
        interface IS_GET_RED_WHEEL_PLAY {

            /** S_GET_RED_WHEEL_PLAY playTimes */
            playTimes?: (number|null);

            /** S_GET_RED_WHEEL_PLAY hadMoney */
            hadMoney?: (number|null);

            /** S_GET_RED_WHEEL_PLAY rewardId */
            rewardId?: (number|null);
        }

        /** Represents a S_GET_RED_WHEEL_PLAY. */
        class S_GET_RED_WHEEL_PLAY implements IS_GET_RED_WHEEL_PLAY {

            /**
             * Constructs a new S_GET_RED_WHEEL_PLAY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_WHEEL_PLAY);

            /** S_GET_RED_WHEEL_PLAY playTimes. */
            public playTimes: number;

            /** S_GET_RED_WHEEL_PLAY hadMoney. */
            public hadMoney: number;

            /** S_GET_RED_WHEEL_PLAY rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified S_GET_RED_WHEEL_PLAY message. Does not implicitly {@link com.message.S_GET_RED_WHEEL_PLAY.verify|verify} messages.
             * @param message S_GET_RED_WHEEL_PLAY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_WHEEL_PLAY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_WHEEL_PLAY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_WHEEL_PLAY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_WHEEL_PLAY;
        }

        /** Properties of a C_GET_RED_WHEEL_RECORD. */
        interface IC_GET_RED_WHEEL_RECORD {
        }

        /** Represents a C_GET_RED_WHEEL_RECORD. */
        class C_GET_RED_WHEEL_RECORD implements IC_GET_RED_WHEEL_RECORD {

            /**
             * Constructs a new C_GET_RED_WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_RED_WHEEL_RECORD);

            /**
             * Encodes the specified C_GET_RED_WHEEL_RECORD message. Does not implicitly {@link com.message.C_GET_RED_WHEEL_RECORD.verify|verify} messages.
             * @param message C_GET_RED_WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_RED_WHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_RED_WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_RED_WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_RED_WHEEL_RECORD;
        }

        /** Properties of a S_GET_RED_WHEEL_RECORD. */
        interface IS_GET_RED_WHEEL_RECORD {

            /** S_GET_RED_WHEEL_RECORD records */
            records?: (com.message.IWHEEL_RECORD[]|null);
        }

        /** Represents a S_GET_RED_WHEEL_RECORD. */
        class S_GET_RED_WHEEL_RECORD implements IS_GET_RED_WHEEL_RECORD {

            /**
             * Constructs a new S_GET_RED_WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_WHEEL_RECORD);

            /** S_GET_RED_WHEEL_RECORD records. */
            public records: com.message.IWHEEL_RECORD[];

            /**
             * Encodes the specified S_GET_RED_WHEEL_RECORD message. Does not implicitly {@link com.message.S_GET_RED_WHEEL_RECORD.verify|verify} messages.
             * @param message S_GET_RED_WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_WHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_WHEEL_RECORD;
        }

        /** Properties of a WHEEL_RECORD. */
        interface IWHEEL_RECORD {

            /** WHEEL_RECORD serverId */
            serverId?: (number|null);

            /** WHEEL_RECORD playerId */
            playerId?: (number|Long|null);

            /** WHEEL_RECORD nickName */
            nickName?: (string|null);

            /** WHEEL_RECORD money */
            money?: (number|null);

            /** WHEEL_RECORD times */
            times?: (number|Long|null);
        }

        /** Represents a WHEEL_RECORD. */
        class WHEEL_RECORD implements IWHEEL_RECORD {

            /**
             * Constructs a new WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IWHEEL_RECORD);

            /** WHEEL_RECORD serverId. */
            public serverId: number;

            /** WHEEL_RECORD playerId. */
            public playerId: (number|Long);

            /** WHEEL_RECORD nickName. */
            public nickName: string;

            /** WHEEL_RECORD money. */
            public money: number;

            /** WHEEL_RECORD times. */
            public times: (number|Long);

            /**
             * Encodes the specified WHEEL_RECORD message. Does not implicitly {@link com.message.WHEEL_RECORD.verify|verify} messages.
             * @param message WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IWHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.WHEEL_RECORD;
        }

        /** Properties of a C_GET_RED_WHEEL_MONEY. */
        interface IC_GET_RED_WHEEL_MONEY {

            /** C_GET_RED_WHEEL_MONEY money */
            money?: (number|null);

            /** C_GET_RED_WHEEL_MONEY clientInfo */
            clientInfo?: (string|null);
        }

        /** Represents a C_GET_RED_WHEEL_MONEY. */
        class C_GET_RED_WHEEL_MONEY implements IC_GET_RED_WHEEL_MONEY {

            /**
             * Constructs a new C_GET_RED_WHEEL_MONEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_RED_WHEEL_MONEY);

            /** C_GET_RED_WHEEL_MONEY money. */
            public money: number;

            /** C_GET_RED_WHEEL_MONEY clientInfo. */
            public clientInfo: string;

            /**
             * Encodes the specified C_GET_RED_WHEEL_MONEY message. Does not implicitly {@link com.message.C_GET_RED_WHEEL_MONEY.verify|verify} messages.
             * @param message C_GET_RED_WHEEL_MONEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_RED_WHEEL_MONEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_RED_WHEEL_MONEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_RED_WHEEL_MONEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_RED_WHEEL_MONEY;
        }

        /** Properties of a S_GET_RED_WHEEL_MONEY. */
        interface IS_GET_RED_WHEEL_MONEY {

            /** S_GET_RED_WHEEL_MONEY money */
            money?: (number|null);

            /** S_GET_RED_WHEEL_MONEY hadMoney */
            hadMoney?: (number|null);
        }

        /** Represents a S_GET_RED_WHEEL_MONEY. */
        class S_GET_RED_WHEEL_MONEY implements IS_GET_RED_WHEEL_MONEY {

            /**
             * Constructs a new S_GET_RED_WHEEL_MONEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_WHEEL_MONEY);

            /** S_GET_RED_WHEEL_MONEY money. */
            public money: number;

            /** S_GET_RED_WHEEL_MONEY hadMoney. */
            public hadMoney: number;

            /**
             * Encodes the specified S_GET_RED_WHEEL_MONEY message. Does not implicitly {@link com.message.S_GET_RED_WHEEL_MONEY.verify|verify} messages.
             * @param message S_GET_RED_WHEEL_MONEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_WHEEL_MONEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_WHEEL_MONEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_WHEEL_MONEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_WHEEL_MONEY;
        }

        /** Properties of a C_GET_RED_WHEEL_MONEY_RECORD. */
        interface IC_GET_RED_WHEEL_MONEY_RECORD {
        }

        /** Represents a C_GET_RED_WHEEL_MONEY_RECORD. */
        class C_GET_RED_WHEEL_MONEY_RECORD implements IC_GET_RED_WHEEL_MONEY_RECORD {

            /**
             * Constructs a new C_GET_RED_WHEEL_MONEY_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_RED_WHEEL_MONEY_RECORD);

            /**
             * Encodes the specified C_GET_RED_WHEEL_MONEY_RECORD message. Does not implicitly {@link com.message.C_GET_RED_WHEEL_MONEY_RECORD.verify|verify} messages.
             * @param message C_GET_RED_WHEEL_MONEY_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_RED_WHEEL_MONEY_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_RED_WHEEL_MONEY_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_RED_WHEEL_MONEY_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_RED_WHEEL_MONEY_RECORD;
        }

        /** Properties of a S_GET_RED_WHEEL_MONEY_RECORD. */
        interface IS_GET_RED_WHEEL_MONEY_RECORD {

            /** S_GET_RED_WHEEL_MONEY_RECORD records */
            records?: (com.message.IMONEY_RECORD[]|null);
        }

        /** Represents a S_GET_RED_WHEEL_MONEY_RECORD. */
        class S_GET_RED_WHEEL_MONEY_RECORD implements IS_GET_RED_WHEEL_MONEY_RECORD {

            /**
             * Constructs a new S_GET_RED_WHEEL_MONEY_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_WHEEL_MONEY_RECORD);

            /** S_GET_RED_WHEEL_MONEY_RECORD records. */
            public records: com.message.IMONEY_RECORD[];

            /**
             * Encodes the specified S_GET_RED_WHEEL_MONEY_RECORD message. Does not implicitly {@link com.message.S_GET_RED_WHEEL_MONEY_RECORD.verify|verify} messages.
             * @param message S_GET_RED_WHEEL_MONEY_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_WHEEL_MONEY_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_WHEEL_MONEY_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_WHEEL_MONEY_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_WHEEL_MONEY_RECORD;
        }

        /** Properties of a MONEY_RECORD. */
        interface IMONEY_RECORD {

            /** MONEY_RECORD money */
            money?: (number|null);

            /** MONEY_RECORD times */
            times?: (number|Long|null);

            /** MONEY_RECORD result */
            result?: (number|null);
        }

        /** Represents a MONEY_RECORD. */
        class MONEY_RECORD implements IMONEY_RECORD {

            /**
             * Constructs a new MONEY_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMONEY_RECORD);

            /** MONEY_RECORD money. */
            public money: number;

            /** MONEY_RECORD times. */
            public times: (number|Long);

            /** MONEY_RECORD result. */
            public result: number;

            /**
             * Encodes the specified MONEY_RECORD message. Does not implicitly {@link com.message.MONEY_RECORD.verify|verify} messages.
             * @param message MONEY_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMONEY_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MONEY_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MONEY_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MONEY_RECORD;
        }

        /** Properties of a S_GET_RED_MONEY_PUSH. */
        interface IS_GET_RED_MONEY_PUSH {

            /** S_GET_RED_MONEY_PUSH isShow */
            isShow?: (number|null);
        }

        /** Represents a S_GET_RED_MONEY_PUSH. */
        class S_GET_RED_MONEY_PUSH implements IS_GET_RED_MONEY_PUSH {

            /**
             * Constructs a new S_GET_RED_MONEY_PUSH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_RED_MONEY_PUSH);

            /** S_GET_RED_MONEY_PUSH isShow. */
            public isShow: number;

            /**
             * Encodes the specified S_GET_RED_MONEY_PUSH message. Does not implicitly {@link com.message.S_GET_RED_MONEY_PUSH.verify|verify} messages.
             * @param message S_GET_RED_MONEY_PUSH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_RED_MONEY_PUSH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_RED_MONEY_PUSH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_RED_MONEY_PUSH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_RED_MONEY_PUSH;
        }

        /** Properties of a S_RED_MONEY_PUSH_REWARD. */
        interface IS_RED_MONEY_PUSH_REWARD {

            /** S_RED_MONEY_PUSH_REWARD money */
            money?: (number|null);

            /** S_RED_MONEY_PUSH_REWARD redResult */
            redResult?: (number|null);
        }

        /** Represents a S_RED_MONEY_PUSH_REWARD. */
        class S_RED_MONEY_PUSH_REWARD implements IS_RED_MONEY_PUSH_REWARD {

            /**
             * Constructs a new S_RED_MONEY_PUSH_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_RED_MONEY_PUSH_REWARD);

            /** S_RED_MONEY_PUSH_REWARD money. */
            public money: number;

            /** S_RED_MONEY_PUSH_REWARD redResult. */
            public redResult: number;

            /**
             * Encodes the specified S_RED_MONEY_PUSH_REWARD message. Does not implicitly {@link com.message.S_RED_MONEY_PUSH_REWARD.verify|verify} messages.
             * @param message S_RED_MONEY_PUSH_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_RED_MONEY_PUSH_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_RED_MONEY_PUSH_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_RED_MONEY_PUSH_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_RED_MONEY_PUSH_REWARD;
        }

        /** Properties of a CROSS_C_RED_WHEEL_GET_INFO. */
        interface ICROSS_C_RED_WHEEL_GET_INFO {

            /** CROSS_C_RED_WHEEL_GET_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_RED_WHEEL_GET_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_RED_WHEEL_GET_INFO userName */
            userName?: (string|null);
        }

        /** Represents a CROSS_C_RED_WHEEL_GET_INFO. */
        class CROSS_C_RED_WHEEL_GET_INFO implements ICROSS_C_RED_WHEEL_GET_INFO {

            /**
             * Constructs a new CROSS_C_RED_WHEEL_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_RED_WHEEL_GET_INFO);

            /** CROSS_C_RED_WHEEL_GET_INFO serverId. */
            public serverId: number;

            /** CROSS_C_RED_WHEEL_GET_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_RED_WHEEL_GET_INFO userName. */
            public userName: string;

            /**
             * Encodes the specified CROSS_C_RED_WHEEL_GET_INFO message. Does not implicitly {@link com.message.CROSS_C_RED_WHEEL_GET_INFO.verify|verify} messages.
             * @param message CROSS_C_RED_WHEEL_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_RED_WHEEL_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_RED_WHEEL_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_RED_WHEEL_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_RED_WHEEL_GET_INFO;
        }

        /** Properties of a CROSS_S_RED_WHEEL_GET_INFO. */
        interface ICROSS_S_RED_WHEEL_GET_INFO {

            /** CROSS_S_RED_WHEEL_GET_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RED_WHEEL_GET_INFO joinServerId */
            joinServerId?: (number|null);
        }

        /** Represents a CROSS_S_RED_WHEEL_GET_INFO. */
        class CROSS_S_RED_WHEEL_GET_INFO implements ICROSS_S_RED_WHEEL_GET_INFO {

            /**
             * Constructs a new CROSS_S_RED_WHEEL_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_WHEEL_GET_INFO);

            /** CROSS_S_RED_WHEEL_GET_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RED_WHEEL_GET_INFO joinServerId. */
            public joinServerId: number;

            /**
             * Encodes the specified CROSS_S_RED_WHEEL_GET_INFO message. Does not implicitly {@link com.message.CROSS_S_RED_WHEEL_GET_INFO.verify|verify} messages.
             * @param message CROSS_S_RED_WHEEL_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_WHEEL_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_WHEEL_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_WHEEL_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_WHEEL_GET_INFO;
        }

        /** Properties of a CROSS_C_RED_WHEEL_MONEY. */
        interface ICROSS_C_RED_WHEEL_MONEY {

            /** CROSS_C_RED_WHEEL_MONEY serverId */
            serverId?: (number|null);

            /** CROSS_C_RED_WHEEL_MONEY playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_RED_WHEEL_MONEY userName */
            userName?: (string|null);

            /** CROSS_C_RED_WHEEL_MONEY money */
            money?: (number|null);

            /** CROSS_C_RED_WHEEL_MONEY clientInfo */
            clientInfo?: (string|null);

            /** CROSS_C_RED_WHEEL_MONEY recordId */
            recordId?: (number|Long|null);
        }

        /** Represents a CROSS_C_RED_WHEEL_MONEY. */
        class CROSS_C_RED_WHEEL_MONEY implements ICROSS_C_RED_WHEEL_MONEY {

            /**
             * Constructs a new CROSS_C_RED_WHEEL_MONEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_RED_WHEEL_MONEY);

            /** CROSS_C_RED_WHEEL_MONEY serverId. */
            public serverId: number;

            /** CROSS_C_RED_WHEEL_MONEY playerId. */
            public playerId: (number|Long);

            /** CROSS_C_RED_WHEEL_MONEY userName. */
            public userName: string;

            /** CROSS_C_RED_WHEEL_MONEY money. */
            public money: number;

            /** CROSS_C_RED_WHEEL_MONEY clientInfo. */
            public clientInfo: string;

            /** CROSS_C_RED_WHEEL_MONEY recordId. */
            public recordId: (number|Long);

            /**
             * Encodes the specified CROSS_C_RED_WHEEL_MONEY message. Does not implicitly {@link com.message.CROSS_C_RED_WHEEL_MONEY.verify|verify} messages.
             * @param message CROSS_C_RED_WHEEL_MONEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_RED_WHEEL_MONEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_RED_WHEEL_MONEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_RED_WHEEL_MONEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_RED_WHEEL_MONEY;
        }

        /** Properties of a CROSS_S_RED_WHEEL_MONEY. */
        interface ICROSS_S_RED_WHEEL_MONEY {

            /** CROSS_S_RED_WHEEL_MONEY playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RED_WHEEL_MONEY money */
            money?: (number|null);

            /** CROSS_S_RED_WHEEL_MONEY recordId */
            recordId?: (number|Long|null);

            /** CROSS_S_RED_WHEEL_MONEY resultState */
            resultState?: (number|null);
        }

        /** Represents a CROSS_S_RED_WHEEL_MONEY. */
        class CROSS_S_RED_WHEEL_MONEY implements ICROSS_S_RED_WHEEL_MONEY {

            /**
             * Constructs a new CROSS_S_RED_WHEEL_MONEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_WHEEL_MONEY);

            /** CROSS_S_RED_WHEEL_MONEY playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RED_WHEEL_MONEY money. */
            public money: number;

            /** CROSS_S_RED_WHEEL_MONEY recordId. */
            public recordId: (number|Long);

            /** CROSS_S_RED_WHEEL_MONEY resultState. */
            public resultState: number;

            /**
             * Encodes the specified CROSS_S_RED_WHEEL_MONEY message. Does not implicitly {@link com.message.CROSS_S_RED_WHEEL_MONEY.verify|verify} messages.
             * @param message CROSS_S_RED_WHEEL_MONEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_WHEEL_MONEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_WHEEL_MONEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_WHEEL_MONEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_WHEEL_MONEY;
        }

        /** Properties of a CROSS_C_RED_WHEEL_RECORD. */
        interface ICROSS_C_RED_WHEEL_RECORD {

            /** CROSS_C_RED_WHEEL_RECORD serverId */
            serverId?: (number|null);

            /** CROSS_C_RED_WHEEL_RECORD playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_RED_WHEEL_RECORD. */
        class CROSS_C_RED_WHEEL_RECORD implements ICROSS_C_RED_WHEEL_RECORD {

            /**
             * Constructs a new CROSS_C_RED_WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_RED_WHEEL_RECORD);

            /** CROSS_C_RED_WHEEL_RECORD serverId. */
            public serverId: number;

            /** CROSS_C_RED_WHEEL_RECORD playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_RED_WHEEL_RECORD message. Does not implicitly {@link com.message.CROSS_C_RED_WHEEL_RECORD.verify|verify} messages.
             * @param message CROSS_C_RED_WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_RED_WHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_RED_WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_RED_WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_RED_WHEEL_RECORD;
        }

        /** Properties of a CROSS_S_RED_WHEEL_RECORD. */
        interface ICROSS_S_RED_WHEEL_RECORD {

            /** CROSS_S_RED_WHEEL_RECORD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RED_WHEEL_RECORD records */
            records?: (com.message.IWHEEL_RECORD[]|null);
        }

        /** Represents a CROSS_S_RED_WHEEL_RECORD. */
        class CROSS_S_RED_WHEEL_RECORD implements ICROSS_S_RED_WHEEL_RECORD {

            /**
             * Constructs a new CROSS_S_RED_WHEEL_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_WHEEL_RECORD);

            /** CROSS_S_RED_WHEEL_RECORD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RED_WHEEL_RECORD records. */
            public records: com.message.IWHEEL_RECORD[];

            /**
             * Encodes the specified CROSS_S_RED_WHEEL_RECORD message. Does not implicitly {@link com.message.CROSS_S_RED_WHEEL_RECORD.verify|verify} messages.
             * @param message CROSS_S_RED_WHEEL_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_WHEEL_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_WHEEL_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_WHEEL_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_WHEEL_RECORD;
        }

        /** Properties of a CROSS_C_RED_WHEEL_ADD_RECORD. */
        interface ICROSS_C_RED_WHEEL_ADD_RECORD {

            /** CROSS_C_RED_WHEEL_ADD_RECORD serverId */
            serverId?: (number|null);

            /** CROSS_C_RED_WHEEL_ADD_RECORD playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_RED_WHEEL_ADD_RECORD nickName */
            nickName?: (string|null);

            /** CROSS_C_RED_WHEEL_ADD_RECORD money */
            money?: (number|null);
        }

        /** Represents a CROSS_C_RED_WHEEL_ADD_RECORD. */
        class CROSS_C_RED_WHEEL_ADD_RECORD implements ICROSS_C_RED_WHEEL_ADD_RECORD {

            /**
             * Constructs a new CROSS_C_RED_WHEEL_ADD_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_RED_WHEEL_ADD_RECORD);

            /** CROSS_C_RED_WHEEL_ADD_RECORD serverId. */
            public serverId: number;

            /** CROSS_C_RED_WHEEL_ADD_RECORD playerId. */
            public playerId: (number|Long);

            /** CROSS_C_RED_WHEEL_ADD_RECORD nickName. */
            public nickName: string;

            /** CROSS_C_RED_WHEEL_ADD_RECORD money. */
            public money: number;

            /**
             * Encodes the specified CROSS_C_RED_WHEEL_ADD_RECORD message. Does not implicitly {@link com.message.CROSS_C_RED_WHEEL_ADD_RECORD.verify|verify} messages.
             * @param message CROSS_C_RED_WHEEL_ADD_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_RED_WHEEL_ADD_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_RED_WHEEL_ADD_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_RED_WHEEL_ADD_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_RED_WHEEL_ADD_RECORD;
        }

        /** Properties of a CROSS_S_RED_WHEEL_ADD_RECORD. */
        interface ICROSS_S_RED_WHEEL_ADD_RECORD {

            /** CROSS_S_RED_WHEEL_ADD_RECORD playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_RED_WHEEL_ADD_RECORD. */
        class CROSS_S_RED_WHEEL_ADD_RECORD implements ICROSS_S_RED_WHEEL_ADD_RECORD {

            /**
             * Constructs a new CROSS_S_RED_WHEEL_ADD_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_WHEEL_ADD_RECORD);

            /** CROSS_S_RED_WHEEL_ADD_RECORD playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_RED_WHEEL_ADD_RECORD message. Does not implicitly {@link com.message.CROSS_S_RED_WHEEL_ADD_RECORD.verify|verify} messages.
             * @param message CROSS_S_RED_WHEEL_ADD_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_WHEEL_ADD_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_WHEEL_ADD_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_WHEEL_ADD_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_WHEEL_ADD_RECORD;
        }

        /** Properties of a CROSS_S_RED_MONEY_PUSH_REWARD. */
        interface ICROSS_S_RED_MONEY_PUSH_REWARD {

            /** CROSS_S_RED_MONEY_PUSH_REWARD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_RED_MONEY_PUSH_REWARD recordId */
            recordId?: (number|Long|null);

            /** CROSS_S_RED_MONEY_PUSH_REWARD resultState */
            resultState?: (number|null);
        }

        /** Represents a CROSS_S_RED_MONEY_PUSH_REWARD. */
        class CROSS_S_RED_MONEY_PUSH_REWARD implements ICROSS_S_RED_MONEY_PUSH_REWARD {

            /**
             * Constructs a new CROSS_S_RED_MONEY_PUSH_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_RED_MONEY_PUSH_REWARD);

            /** CROSS_S_RED_MONEY_PUSH_REWARD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_RED_MONEY_PUSH_REWARD recordId. */
            public recordId: (number|Long);

            /** CROSS_S_RED_MONEY_PUSH_REWARD resultState. */
            public resultState: number;

            /**
             * Encodes the specified CROSS_S_RED_MONEY_PUSH_REWARD message. Does not implicitly {@link com.message.CROSS_S_RED_MONEY_PUSH_REWARD.verify|verify} messages.
             * @param message CROSS_S_RED_MONEY_PUSH_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_RED_MONEY_PUSH_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_RED_MONEY_PUSH_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_RED_MONEY_PUSH_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_RED_MONEY_PUSH_REWARD;
        }

        /** Properties of a C_GET_REWARD_TASK_INFO. */
        interface IC_GET_REWARD_TASK_INFO {
        }

        /** Represents a C_GET_REWARD_TASK_INFO. */
        class C_GET_REWARD_TASK_INFO implements IC_GET_REWARD_TASK_INFO {

            /**
             * Constructs a new C_GET_REWARD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_REWARD_TASK_INFO);

            /**
             * Encodes the specified C_GET_REWARD_TASK_INFO message. Does not implicitly {@link com.message.C_GET_REWARD_TASK_INFO.verify|verify} messages.
             * @param message C_GET_REWARD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_REWARD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_REWARD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_REWARD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_REWARD_TASK_INFO;
        }

        /** Properties of a S_GET_REWARD_TASK_INFO. */
        interface IS_GET_REWARD_TASK_INFO {

            /** S_GET_REWARD_TASK_INFO refreshTime */
            refreshTime?: (number|Long|null);

            /** S_GET_REWARD_TASK_INFO taskInfo */
            taskInfo?: (com.message.IREWARD_TASK_INFO[]|null);

            /** S_GET_REWARD_TASK_INFO rewardTaskNum */
            rewardTaskNum?: (number|null);
        }

        /** Represents a S_GET_REWARD_TASK_INFO. */
        class S_GET_REWARD_TASK_INFO implements IS_GET_REWARD_TASK_INFO {

            /**
             * Constructs a new S_GET_REWARD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_REWARD_TASK_INFO);

            /** S_GET_REWARD_TASK_INFO refreshTime. */
            public refreshTime: (number|Long);

            /** S_GET_REWARD_TASK_INFO taskInfo. */
            public taskInfo: com.message.IREWARD_TASK_INFO[];

            /** S_GET_REWARD_TASK_INFO rewardTaskNum. */
            public rewardTaskNum: number;

            /**
             * Encodes the specified S_GET_REWARD_TASK_INFO message. Does not implicitly {@link com.message.S_GET_REWARD_TASK_INFO.verify|verify} messages.
             * @param message S_GET_REWARD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_REWARD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_REWARD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_REWARD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_REWARD_TASK_INFO;
        }

        /** Properties of a REWARD_TASK_INFO. */
        interface IREWARD_TASK_INFO {

            /** REWARD_TASK_INFO taskId */
            taskId?: (number|Long|null);

            /** REWARD_TASK_INFO id */
            id?: (number|null);

            /** REWARD_TASK_INFO name */
            name?: (string|null);

            /** REWARD_TASK_INFO reward */
            reward?: (number|null);

            /** REWARD_TASK_INFO state */
            state?: (number|null);

            /** REWARD_TASK_INFO sucRate */
            sucRate?: (number|null);

            /** REWARD_TASK_INFO time */
            time?: (number|Long|null);

            /** REWARD_TASK_INFO heroInfo */
            heroInfo?: (com.message.IREWARD_TASK_HERO_INFO[]|null);

            /** REWARD_TASK_INFO durationTime */
            durationTime?: (number|null);
        }

        /** Represents a REWARD_TASK_INFO. */
        class REWARD_TASK_INFO implements IREWARD_TASK_INFO {

            /**
             * Constructs a new REWARD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IREWARD_TASK_INFO);

            /** REWARD_TASK_INFO taskId. */
            public taskId: (number|Long);

            /** REWARD_TASK_INFO id. */
            public id: number;

            /** REWARD_TASK_INFO name. */
            public name: string;

            /** REWARD_TASK_INFO reward. */
            public reward: number;

            /** REWARD_TASK_INFO state. */
            public state: number;

            /** REWARD_TASK_INFO sucRate. */
            public sucRate: number;

            /** REWARD_TASK_INFO time. */
            public time: (number|Long);

            /** REWARD_TASK_INFO heroInfo. */
            public heroInfo: com.message.IREWARD_TASK_HERO_INFO[];

            /** REWARD_TASK_INFO durationTime. */
            public durationTime: number;

            /**
             * Encodes the specified REWARD_TASK_INFO message. Does not implicitly {@link com.message.REWARD_TASK_INFO.verify|verify} messages.
             * @param message REWARD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IREWARD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a REWARD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns REWARD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.REWARD_TASK_INFO;
        }

        /** Properties of a REWARD_TASK_HERO_INFO. */
        interface IREWARD_TASK_HERO_INFO {

            /** REWARD_TASK_HERO_INFO heroId */
            heroId?: (number|null);

            /** REWARD_TASK_HERO_INFO quality */
            quality?: (number|null);

            /** REWARD_TASK_HERO_INFO type */
            type?: (number|null);

            /** REWARD_TASK_HERO_INFO wakeUp */
            wakeUp?: (number|null);

            /** REWARD_TASK_HERO_INFO star */
            star?: (number|null);

            /** REWARD_TASK_HERO_INFO level */
            level?: (number|null);
        }

        /** Represents a REWARD_TASK_HERO_INFO. */
        class REWARD_TASK_HERO_INFO implements IREWARD_TASK_HERO_INFO {

            /**
             * Constructs a new REWARD_TASK_HERO_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IREWARD_TASK_HERO_INFO);

            /** REWARD_TASK_HERO_INFO heroId. */
            public heroId: number;

            /** REWARD_TASK_HERO_INFO quality. */
            public quality: number;

            /** REWARD_TASK_HERO_INFO type. */
            public type: number;

            /** REWARD_TASK_HERO_INFO wakeUp. */
            public wakeUp: number;

            /** REWARD_TASK_HERO_INFO star. */
            public star: number;

            /** REWARD_TASK_HERO_INFO level. */
            public level: number;

            /**
             * Encodes the specified REWARD_TASK_HERO_INFO message. Does not implicitly {@link com.message.REWARD_TASK_HERO_INFO.verify|verify} messages.
             * @param message REWARD_TASK_HERO_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IREWARD_TASK_HERO_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a REWARD_TASK_HERO_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns REWARD_TASK_HERO_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.REWARD_TASK_HERO_INFO;
        }

        /** Properties of a C_REFRESH_REWARD_TASK_INFO. */
        interface IC_REFRESH_REWARD_TASK_INFO {
        }

        /** Represents a C_REFRESH_REWARD_TASK_INFO. */
        class C_REFRESH_REWARD_TASK_INFO implements IC_REFRESH_REWARD_TASK_INFO {

            /**
             * Constructs a new C_REFRESH_REWARD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REFRESH_REWARD_TASK_INFO);

            /**
             * Encodes the specified C_REFRESH_REWARD_TASK_INFO message. Does not implicitly {@link com.message.C_REFRESH_REWARD_TASK_INFO.verify|verify} messages.
             * @param message C_REFRESH_REWARD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REFRESH_REWARD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REFRESH_REWARD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REFRESH_REWARD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REFRESH_REWARD_TASK_INFO;
        }

        /** Properties of a S_REFRESH_REWARD_TASK_INFO. */
        interface IS_REFRESH_REWARD_TASK_INFO {

            /** S_REFRESH_REWARD_TASK_INFO taskInfo */
            taskInfo?: (com.message.IREWARD_TASK_INFO[]|null);
        }

        /** Represents a S_REFRESH_REWARD_TASK_INFO. */
        class S_REFRESH_REWARD_TASK_INFO implements IS_REFRESH_REWARD_TASK_INFO {

            /**
             * Constructs a new S_REFRESH_REWARD_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REFRESH_REWARD_TASK_INFO);

            /** S_REFRESH_REWARD_TASK_INFO taskInfo. */
            public taskInfo: com.message.IREWARD_TASK_INFO[];

            /**
             * Encodes the specified S_REFRESH_REWARD_TASK_INFO message. Does not implicitly {@link com.message.S_REFRESH_REWARD_TASK_INFO.verify|verify} messages.
             * @param message S_REFRESH_REWARD_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REFRESH_REWARD_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REFRESH_REWARD_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REFRESH_REWARD_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REFRESH_REWARD_TASK_INFO;
        }

        /** Properties of a C_REWARD_TASK_SET_HERO. */
        interface IC_REWARD_TASK_SET_HERO {

            /** C_REWARD_TASK_SET_HERO heros */
            heros?: (string|null);

            /** C_REWARD_TASK_SET_HERO taskId */
            taskId?: (number|Long|null);
        }

        /** Represents a C_REWARD_TASK_SET_HERO. */
        class C_REWARD_TASK_SET_HERO implements IC_REWARD_TASK_SET_HERO {

            /**
             * Constructs a new C_REWARD_TASK_SET_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REWARD_TASK_SET_HERO);

            /** C_REWARD_TASK_SET_HERO heros. */
            public heros: string;

            /** C_REWARD_TASK_SET_HERO taskId. */
            public taskId: (number|Long);

            /**
             * Encodes the specified C_REWARD_TASK_SET_HERO message. Does not implicitly {@link com.message.C_REWARD_TASK_SET_HERO.verify|verify} messages.
             * @param message C_REWARD_TASK_SET_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REWARD_TASK_SET_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REWARD_TASK_SET_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REWARD_TASK_SET_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REWARD_TASK_SET_HERO;
        }

        /** Properties of a S_REWARD_TASK_SET_HERO. */
        interface IS_REWARD_TASK_SET_HERO {

            /** S_REWARD_TASK_SET_HERO taskId */
            taskId?: (number|Long|null);

            /** S_REWARD_TASK_SET_HERO sucRate */
            sucRate?: (number|null);

            /** S_REWARD_TASK_SET_HERO heros */
            heros?: (string|null);
        }

        /** Represents a S_REWARD_TASK_SET_HERO. */
        class S_REWARD_TASK_SET_HERO implements IS_REWARD_TASK_SET_HERO {

            /**
             * Constructs a new S_REWARD_TASK_SET_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REWARD_TASK_SET_HERO);

            /** S_REWARD_TASK_SET_HERO taskId. */
            public taskId: (number|Long);

            /** S_REWARD_TASK_SET_HERO sucRate. */
            public sucRate: number;

            /** S_REWARD_TASK_SET_HERO heros. */
            public heros: string;

            /**
             * Encodes the specified S_REWARD_TASK_SET_HERO message. Does not implicitly {@link com.message.S_REWARD_TASK_SET_HERO.verify|verify} messages.
             * @param message S_REWARD_TASK_SET_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REWARD_TASK_SET_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REWARD_TASK_SET_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REWARD_TASK_SET_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REWARD_TASK_SET_HERO;
        }

        /** Properties of a C_START_RWEARD_TASK. */
        interface IC_START_RWEARD_TASK {

            /** C_START_RWEARD_TASK taskId */
            taskId?: (number|Long|null);
        }

        /** Represents a C_START_RWEARD_TASK. */
        class C_START_RWEARD_TASK implements IC_START_RWEARD_TASK {

            /**
             * Constructs a new C_START_RWEARD_TASK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_START_RWEARD_TASK);

            /** C_START_RWEARD_TASK taskId. */
            public taskId: (number|Long);

            /**
             * Encodes the specified C_START_RWEARD_TASK message. Does not implicitly {@link com.message.C_START_RWEARD_TASK.verify|verify} messages.
             * @param message C_START_RWEARD_TASK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_START_RWEARD_TASK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_START_RWEARD_TASK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_START_RWEARD_TASK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_START_RWEARD_TASK;
        }

        /** Properties of a S_START_REWARD_TASK. */
        interface IS_START_REWARD_TASK {

            /** S_START_REWARD_TASK taskId */
            taskId?: (number|Long|null);

            /** S_START_REWARD_TASK time */
            time?: (number|Long|null);
        }

        /** Represents a S_START_REWARD_TASK. */
        class S_START_REWARD_TASK implements IS_START_REWARD_TASK {

            /**
             * Constructs a new S_START_REWARD_TASK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_START_REWARD_TASK);

            /** S_START_REWARD_TASK taskId. */
            public taskId: (number|Long);

            /** S_START_REWARD_TASK time. */
            public time: (number|Long);

            /**
             * Encodes the specified S_START_REWARD_TASK message. Does not implicitly {@link com.message.S_START_REWARD_TASK.verify|verify} messages.
             * @param message S_START_REWARD_TASK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_START_REWARD_TASK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_START_REWARD_TASK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_START_REWARD_TASK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_START_REWARD_TASK;
        }

        /** Properties of a C_REWARD_TASK_WATCH_AND_GET_REWARD. */
        interface IC_REWARD_TASK_WATCH_AND_GET_REWARD {

            /** C_REWARD_TASK_WATCH_AND_GET_REWARD taskId */
            taskId?: (number|Long|null);
        }

        /** Represents a C_REWARD_TASK_WATCH_AND_GET_REWARD. */
        class C_REWARD_TASK_WATCH_AND_GET_REWARD implements IC_REWARD_TASK_WATCH_AND_GET_REWARD {

            /**
             * Constructs a new C_REWARD_TASK_WATCH_AND_GET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REWARD_TASK_WATCH_AND_GET_REWARD);

            /** C_REWARD_TASK_WATCH_AND_GET_REWARD taskId. */
            public taskId: (number|Long);

            /**
             * Encodes the specified C_REWARD_TASK_WATCH_AND_GET_REWARD message. Does not implicitly {@link com.message.C_REWARD_TASK_WATCH_AND_GET_REWARD.verify|verify} messages.
             * @param message C_REWARD_TASK_WATCH_AND_GET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REWARD_TASK_WATCH_AND_GET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REWARD_TASK_WATCH_AND_GET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REWARD_TASK_WATCH_AND_GET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REWARD_TASK_WATCH_AND_GET_REWARD;
        }

        /** Properties of a S_REWARD_TASK_WATCH_AND_GET_REWARD. */
        interface IS_REWARD_TASK_WATCH_AND_GET_REWARD {

            /** S_REWARD_TASK_WATCH_AND_GET_REWARD taskId */
            taskId?: (number|Long|null);

            /** S_REWARD_TASK_WATCH_AND_GET_REWARD state */
            state?: (number|null);

            /** S_REWARD_TASK_WATCH_AND_GET_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_REWARD_TASK_WATCH_AND_GET_REWARD. */
        class S_REWARD_TASK_WATCH_AND_GET_REWARD implements IS_REWARD_TASK_WATCH_AND_GET_REWARD {

            /**
             * Constructs a new S_REWARD_TASK_WATCH_AND_GET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REWARD_TASK_WATCH_AND_GET_REWARD);

            /** S_REWARD_TASK_WATCH_AND_GET_REWARD taskId. */
            public taskId: (number|Long);

            /** S_REWARD_TASK_WATCH_AND_GET_REWARD state. */
            public state: number;

            /** S_REWARD_TASK_WATCH_AND_GET_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_REWARD_TASK_WATCH_AND_GET_REWARD message. Does not implicitly {@link com.message.S_REWARD_TASK_WATCH_AND_GET_REWARD.verify|verify} messages.
             * @param message S_REWARD_TASK_WATCH_AND_GET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REWARD_TASK_WATCH_AND_GET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REWARD_TASK_WATCH_AND_GET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REWARD_TASK_WATCH_AND_GET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REWARD_TASK_WATCH_AND_GET_REWARD;
        }

        /** Properties of a C_GET_REWARD_TASK2_INFO. */
        interface IC_GET_REWARD_TASK2_INFO {
        }

        /** Represents a C_GET_REWARD_TASK2_INFO. */
        class C_GET_REWARD_TASK2_INFO implements IC_GET_REWARD_TASK2_INFO {

            /**
             * Constructs a new C_GET_REWARD_TASK2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_REWARD_TASK2_INFO);

            /**
             * Encodes the specified C_GET_REWARD_TASK2_INFO message. Does not implicitly {@link com.message.C_GET_REWARD_TASK2_INFO.verify|verify} messages.
             * @param message C_GET_REWARD_TASK2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_REWARD_TASK2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_REWARD_TASK2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_REWARD_TASK2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_REWARD_TASK2_INFO;
        }

        /** Properties of a S_GET_REWARD_TASK2_INFO. */
        interface IS_GET_REWARD_TASK2_INFO {

            /** S_GET_REWARD_TASK2_INFO taskInfo */
            taskInfo?: (com.message.IREWARD_TASK2_INFO[]|null);

            /** S_GET_REWARD_TASK2_INFO taskLevelInfo */
            taskLevelInfo?: (com.message.IREWARD_TASK2_LEVEL_INFO|null);
        }

        /** Represents a S_GET_REWARD_TASK2_INFO. */
        class S_GET_REWARD_TASK2_INFO implements IS_GET_REWARD_TASK2_INFO {

            /**
             * Constructs a new S_GET_REWARD_TASK2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_REWARD_TASK2_INFO);

            /** S_GET_REWARD_TASK2_INFO taskInfo. */
            public taskInfo: com.message.IREWARD_TASK2_INFO[];

            /** S_GET_REWARD_TASK2_INFO taskLevelInfo. */
            public taskLevelInfo?: (com.message.IREWARD_TASK2_LEVEL_INFO|null);

            /**
             * Encodes the specified S_GET_REWARD_TASK2_INFO message. Does not implicitly {@link com.message.S_GET_REWARD_TASK2_INFO.verify|verify} messages.
             * @param message S_GET_REWARD_TASK2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_REWARD_TASK2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_REWARD_TASK2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_REWARD_TASK2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_REWARD_TASK2_INFO;
        }

        /** Properties of a REWARD_TASK2_LEVEL_INFO. */
        interface IREWARD_TASK2_LEVEL_INFO {

            /** REWARD_TASK2_LEVEL_INFO level */
            level?: (number|null);

            /** REWARD_TASK2_LEVEL_INFO qualityDoneStr */
            qualityDoneStr?: (string|null);

            /** REWARD_TASK2_LEVEL_INFO exp */
            exp?: (number|Long|null);
        }

        /** Represents a REWARD_TASK2_LEVEL_INFO. */
        class REWARD_TASK2_LEVEL_INFO implements IREWARD_TASK2_LEVEL_INFO {

            /**
             * Constructs a new REWARD_TASK2_LEVEL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IREWARD_TASK2_LEVEL_INFO);

            /** REWARD_TASK2_LEVEL_INFO level. */
            public level: number;

            /** REWARD_TASK2_LEVEL_INFO qualityDoneStr. */
            public qualityDoneStr: string;

            /** REWARD_TASK2_LEVEL_INFO exp. */
            public exp: (number|Long);

            /**
             * Encodes the specified REWARD_TASK2_LEVEL_INFO message. Does not implicitly {@link com.message.REWARD_TASK2_LEVEL_INFO.verify|verify} messages.
             * @param message REWARD_TASK2_LEVEL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IREWARD_TASK2_LEVEL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a REWARD_TASK2_LEVEL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns REWARD_TASK2_LEVEL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.REWARD_TASK2_LEVEL_INFO;
        }

        /** Properties of a REWARD_TASK2_INFO. */
        interface IREWARD_TASK2_INFO {

            /** REWARD_TASK2_INFO id */
            id?: (number|Long|null);

            /** REWARD_TASK2_INFO quality */
            quality?: (number|null);

            /** REWARD_TASK2_INFO name */
            name?: (string|null);

            /** REWARD_TASK2_INFO heroNum */
            heroNum?: (number|null);

            /** REWARD_TASK2_INFO heroType */
            heroType?: (number[]|null);

            /** REWARD_TASK2_INFO heroQualityNum */
            heroQualityNum?: (number|null);

            /** REWARD_TASK2_INFO heroQuality */
            heroQuality?: (number|null);

            /** REWARD_TASK2_INFO exConInfo */
            exConInfo?: (com.message.IEX_REWARD_TASK2_CON|null);

            /** REWARD_TASK2_INFO reward */
            reward?: (string|null);

            /** REWARD_TASK2_INFO state */
            state?: (number|null);

            /** REWARD_TASK2_INFO startTime */
            startTime?: (number|Long|null);

            /** REWARD_TASK2_INFO endTime */
            endTime?: (number|Long|null);

            /** REWARD_TASK2_INFO durationTime */
            durationTime?: (number|null);

            /** REWARD_TASK2_INFO dropId */
            dropId?: (number|null);

            /** REWARD_TASK2_INFO heroIds */
            heroIds?: (string|null);
        }

        /** Represents a REWARD_TASK2_INFO. */
        class REWARD_TASK2_INFO implements IREWARD_TASK2_INFO {

            /**
             * Constructs a new REWARD_TASK2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IREWARD_TASK2_INFO);

            /** REWARD_TASK2_INFO id. */
            public id: (number|Long);

            /** REWARD_TASK2_INFO quality. */
            public quality: number;

            /** REWARD_TASK2_INFO name. */
            public name: string;

            /** REWARD_TASK2_INFO heroNum. */
            public heroNum: number;

            /** REWARD_TASK2_INFO heroType. */
            public heroType: number[];

            /** REWARD_TASK2_INFO heroQualityNum. */
            public heroQualityNum: number;

            /** REWARD_TASK2_INFO heroQuality. */
            public heroQuality: number;

            /** REWARD_TASK2_INFO exConInfo. */
            public exConInfo?: (com.message.IEX_REWARD_TASK2_CON|null);

            /** REWARD_TASK2_INFO reward. */
            public reward: string;

            /** REWARD_TASK2_INFO state. */
            public state: number;

            /** REWARD_TASK2_INFO startTime. */
            public startTime: (number|Long);

            /** REWARD_TASK2_INFO endTime. */
            public endTime: (number|Long);

            /** REWARD_TASK2_INFO durationTime. */
            public durationTime: number;

            /** REWARD_TASK2_INFO dropId. */
            public dropId: number;

            /** REWARD_TASK2_INFO heroIds. */
            public heroIds: string;

            /**
             * Encodes the specified REWARD_TASK2_INFO message. Does not implicitly {@link com.message.REWARD_TASK2_INFO.verify|verify} messages.
             * @param message REWARD_TASK2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IREWARD_TASK2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a REWARD_TASK2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns REWARD_TASK2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.REWARD_TASK2_INFO;
        }

        /** Properties of a EX_REWARD_TASK2_CON. */
        interface IEX_REWARD_TASK2_CON {

            /** EX_REWARD_TASK2_CON star */
            star?: (number|null);

            /** EX_REWARD_TASK2_CON tupo */
            tupo?: (number|null);

            /** EX_REWARD_TASK2_CON wakeUp */
            wakeUp?: (number|null);

            /** EX_REWARD_TASK2_CON fly */
            fly?: (number|null);
        }

        /** Represents a EX_REWARD_TASK2_CON. */
        class EX_REWARD_TASK2_CON implements IEX_REWARD_TASK2_CON {

            /**
             * Constructs a new EX_REWARD_TASK2_CON.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IEX_REWARD_TASK2_CON);

            /** EX_REWARD_TASK2_CON star. */
            public star: number;

            /** EX_REWARD_TASK2_CON tupo. */
            public tupo: number;

            /** EX_REWARD_TASK2_CON wakeUp. */
            public wakeUp: number;

            /** EX_REWARD_TASK2_CON fly. */
            public fly: number;

            /**
             * Encodes the specified EX_REWARD_TASK2_CON message. Does not implicitly {@link com.message.EX_REWARD_TASK2_CON.verify|verify} messages.
             * @param message EX_REWARD_TASK2_CON message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IEX_REWARD_TASK2_CON, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a EX_REWARD_TASK2_CON message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EX_REWARD_TASK2_CON
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.EX_REWARD_TASK2_CON;
        }

        /** Properties of a C_REFRESH_REWARD_TASK2_INFO. */
        interface IC_REFRESH_REWARD_TASK2_INFO {
        }

        /** Represents a C_REFRESH_REWARD_TASK2_INFO. */
        class C_REFRESH_REWARD_TASK2_INFO implements IC_REFRESH_REWARD_TASK2_INFO {

            /**
             * Constructs a new C_REFRESH_REWARD_TASK2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REFRESH_REWARD_TASK2_INFO);

            /**
             * Encodes the specified C_REFRESH_REWARD_TASK2_INFO message. Does not implicitly {@link com.message.C_REFRESH_REWARD_TASK2_INFO.verify|verify} messages.
             * @param message C_REFRESH_REWARD_TASK2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REFRESH_REWARD_TASK2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REFRESH_REWARD_TASK2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REFRESH_REWARD_TASK2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REFRESH_REWARD_TASK2_INFO;
        }

        /** Properties of a S_REFRESH_REWARD_TASK2_INFO. */
        interface IS_REFRESH_REWARD_TASK2_INFO {

            /** S_REFRESH_REWARD_TASK2_INFO taskInfo */
            taskInfo?: (com.message.IREWARD_TASK2_INFO[]|null);
        }

        /** Represents a S_REFRESH_REWARD_TASK2_INFO. */
        class S_REFRESH_REWARD_TASK2_INFO implements IS_REFRESH_REWARD_TASK2_INFO {

            /**
             * Constructs a new S_REFRESH_REWARD_TASK2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REFRESH_REWARD_TASK2_INFO);

            /** S_REFRESH_REWARD_TASK2_INFO taskInfo. */
            public taskInfo: com.message.IREWARD_TASK2_INFO[];

            /**
             * Encodes the specified S_REFRESH_REWARD_TASK2_INFO message. Does not implicitly {@link com.message.S_REFRESH_REWARD_TASK2_INFO.verify|verify} messages.
             * @param message S_REFRESH_REWARD_TASK2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REFRESH_REWARD_TASK2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REFRESH_REWARD_TASK2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REFRESH_REWARD_TASK2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REFRESH_REWARD_TASK2_INFO;
        }

        /** Properties of a C_START_RWEARD_TASK2. */
        interface IC_START_RWEARD_TASK2 {

            /** C_START_RWEARD_TASK2 id */
            id?: (number|Long|null);

            /** C_START_RWEARD_TASK2 heros */
            heros?: (string|null);
        }

        /** Represents a C_START_RWEARD_TASK2. */
        class C_START_RWEARD_TASK2 implements IC_START_RWEARD_TASK2 {

            /**
             * Constructs a new C_START_RWEARD_TASK2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_START_RWEARD_TASK2);

            /** C_START_RWEARD_TASK2 id. */
            public id: (number|Long);

            /** C_START_RWEARD_TASK2 heros. */
            public heros: string;

            /**
             * Encodes the specified C_START_RWEARD_TASK2 message. Does not implicitly {@link com.message.C_START_RWEARD_TASK2.verify|verify} messages.
             * @param message C_START_RWEARD_TASK2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_START_RWEARD_TASK2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_START_RWEARD_TASK2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_START_RWEARD_TASK2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_START_RWEARD_TASK2;
        }

        /** Properties of a S_START_REWARD_TASK2. */
        interface IS_START_REWARD_TASK2 {

            /** S_START_REWARD_TASK2 id */
            id?: (number|Long|null);

            /** S_START_REWARD_TASK2 time */
            time?: (number|Long|null);
        }

        /** Represents a S_START_REWARD_TASK2. */
        class S_START_REWARD_TASK2 implements IS_START_REWARD_TASK2 {

            /**
             * Constructs a new S_START_REWARD_TASK2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_START_REWARD_TASK2);

            /** S_START_REWARD_TASK2 id. */
            public id: (number|Long);

            /** S_START_REWARD_TASK2 time. */
            public time: (number|Long);

            /**
             * Encodes the specified S_START_REWARD_TASK2 message. Does not implicitly {@link com.message.S_START_REWARD_TASK2.verify|verify} messages.
             * @param message S_START_REWARD_TASK2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_START_REWARD_TASK2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_START_REWARD_TASK2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_START_REWARD_TASK2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_START_REWARD_TASK2;
        }

        /** Properties of a C_REWARD_TASK2_WATCH_AND_GET_REWARD. */
        interface IC_REWARD_TASK2_WATCH_AND_GET_REWARD {

            /** C_REWARD_TASK2_WATCH_AND_GET_REWARD id */
            id?: (number|Long|null);
        }

        /** Represents a C_REWARD_TASK2_WATCH_AND_GET_REWARD. */
        class C_REWARD_TASK2_WATCH_AND_GET_REWARD implements IC_REWARD_TASK2_WATCH_AND_GET_REWARD {

            /**
             * Constructs a new C_REWARD_TASK2_WATCH_AND_GET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_REWARD_TASK2_WATCH_AND_GET_REWARD);

            /** C_REWARD_TASK2_WATCH_AND_GET_REWARD id. */
            public id: (number|Long);

            /**
             * Encodes the specified C_REWARD_TASK2_WATCH_AND_GET_REWARD message. Does not implicitly {@link com.message.C_REWARD_TASK2_WATCH_AND_GET_REWARD.verify|verify} messages.
             * @param message C_REWARD_TASK2_WATCH_AND_GET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_REWARD_TASK2_WATCH_AND_GET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_REWARD_TASK2_WATCH_AND_GET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_REWARD_TASK2_WATCH_AND_GET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_REWARD_TASK2_WATCH_AND_GET_REWARD;
        }

        /** Properties of a S_REWARD_TASK2_WATCH_AND_GET_REWARD. */
        interface IS_REWARD_TASK2_WATCH_AND_GET_REWARD {

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD id */
            id?: (number|Long|null);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD state */
            state?: (number|null);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD taskLevelInfo */
            taskLevelInfo?: (com.message.IREWARD_TASK2_LEVEL_INFO|null);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD taskInfo */
            taskInfo?: (com.message.IREWARD_TASK2_INFO|null);
        }

        /** Represents a S_REWARD_TASK2_WATCH_AND_GET_REWARD. */
        class S_REWARD_TASK2_WATCH_AND_GET_REWARD implements IS_REWARD_TASK2_WATCH_AND_GET_REWARD {

            /**
             * Constructs a new S_REWARD_TASK2_WATCH_AND_GET_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_REWARD_TASK2_WATCH_AND_GET_REWARD);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD id. */
            public id: (number|Long);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD state. */
            public state: number;

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD taskLevelInfo. */
            public taskLevelInfo?: (com.message.IREWARD_TASK2_LEVEL_INFO|null);

            /** S_REWARD_TASK2_WATCH_AND_GET_REWARD taskInfo. */
            public taskInfo?: (com.message.IREWARD_TASK2_INFO|null);

            /**
             * Encodes the specified S_REWARD_TASK2_WATCH_AND_GET_REWARD message. Does not implicitly {@link com.message.S_REWARD_TASK2_WATCH_AND_GET_REWARD.verify|verify} messages.
             * @param message S_REWARD_TASK2_WATCH_AND_GET_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_REWARD_TASK2_WATCH_AND_GET_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_REWARD_TASK2_WATCH_AND_GET_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_REWARD_TASK2_WATCH_AND_GET_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_REWARD_TASK2_WATCH_AND_GET_REWARD;
        }

        /** Properties of a C_GET_SEA_SHOP_INFO. */
        interface IC_GET_SEA_SHOP_INFO {
        }

        /** Represents a C_GET_SEA_SHOP_INFO. */
        class C_GET_SEA_SHOP_INFO implements IC_GET_SEA_SHOP_INFO {

            /**
             * Constructs a new C_GET_SEA_SHOP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SEA_SHOP_INFO);

            /**
             * Encodes the specified C_GET_SEA_SHOP_INFO message. Does not implicitly {@link com.message.C_GET_SEA_SHOP_INFO.verify|verify} messages.
             * @param message C_GET_SEA_SHOP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SEA_SHOP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SEA_SHOP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SEA_SHOP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SEA_SHOP_INFO;
        }

        /** Properties of a S_GET_SEA_SHOP_INFO. */
        interface IS_GET_SEA_SHOP_INFO {

            /** S_GET_SEA_SHOP_INFO freeCount */
            freeCount?: (number|null);

            /** S_GET_SEA_SHOP_INFO leaveTime */
            leaveTime?: (number|null);

            /** S_GET_SEA_SHOP_INFO shopDatas */
            shopDatas?: (string|null);

            /** S_GET_SEA_SHOP_INFO hadDatas */
            hadDatas?: (string|null);
        }

        /** Represents a S_GET_SEA_SHOP_INFO. */
        class S_GET_SEA_SHOP_INFO implements IS_GET_SEA_SHOP_INFO {

            /**
             * Constructs a new S_GET_SEA_SHOP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SEA_SHOP_INFO);

            /** S_GET_SEA_SHOP_INFO freeCount. */
            public freeCount: number;

            /** S_GET_SEA_SHOP_INFO leaveTime. */
            public leaveTime: number;

            /** S_GET_SEA_SHOP_INFO shopDatas. */
            public shopDatas: string;

            /** S_GET_SEA_SHOP_INFO hadDatas. */
            public hadDatas: string;

            /**
             * Encodes the specified S_GET_SEA_SHOP_INFO message. Does not implicitly {@link com.message.S_GET_SEA_SHOP_INFO.verify|verify} messages.
             * @param message S_GET_SEA_SHOP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SEA_SHOP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SEA_SHOP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SEA_SHOP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SEA_SHOP_INFO;
        }

        /** Properties of a C_SEA_SHOP_BUY. */
        interface IC_SEA_SHOP_BUY {

            /** C_SEA_SHOP_BUY shopId */
            shopId?: (number|null);

            /** C_SEA_SHOP_BUY buyNum */
            buyNum?: (number|null);
        }

        /** Represents a C_SEA_SHOP_BUY. */
        class C_SEA_SHOP_BUY implements IC_SEA_SHOP_BUY {

            /**
             * Constructs a new C_SEA_SHOP_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SEA_SHOP_BUY);

            /** C_SEA_SHOP_BUY shopId. */
            public shopId: number;

            /** C_SEA_SHOP_BUY buyNum. */
            public buyNum: number;

            /**
             * Encodes the specified C_SEA_SHOP_BUY message. Does not implicitly {@link com.message.C_SEA_SHOP_BUY.verify|verify} messages.
             * @param message C_SEA_SHOP_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SEA_SHOP_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SEA_SHOP_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SEA_SHOP_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SEA_SHOP_BUY;
        }

        /** Properties of a S_SEA_SHOP_BUY. */
        interface IS_SEA_SHOP_BUY {

            /** S_SEA_SHOP_BUY shopId */
            shopId?: (number|null);

            /** S_SEA_SHOP_BUY itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_SEA_SHOP_BUY hadDatas */
            hadDatas?: (string|null);
        }

        /** Represents a S_SEA_SHOP_BUY. */
        class S_SEA_SHOP_BUY implements IS_SEA_SHOP_BUY {

            /**
             * Constructs a new S_SEA_SHOP_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SEA_SHOP_BUY);

            /** S_SEA_SHOP_BUY shopId. */
            public shopId: number;

            /** S_SEA_SHOP_BUY itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_SEA_SHOP_BUY hadDatas. */
            public hadDatas: string;

            /**
             * Encodes the specified S_SEA_SHOP_BUY message. Does not implicitly {@link com.message.S_SEA_SHOP_BUY.verify|verify} messages.
             * @param message S_SEA_SHOP_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SEA_SHOP_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SEA_SHOP_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SEA_SHOP_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SEA_SHOP_BUY;
        }

        /** Properties of a C_SEA_SHOP_REFRESH. */
        interface IC_SEA_SHOP_REFRESH {

            /** C_SEA_SHOP_REFRESH refreshType */
            refreshType?: (number|null);
        }

        /** Represents a C_SEA_SHOP_REFRESH. */
        class C_SEA_SHOP_REFRESH implements IC_SEA_SHOP_REFRESH {

            /**
             * Constructs a new C_SEA_SHOP_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SEA_SHOP_REFRESH);

            /** C_SEA_SHOP_REFRESH refreshType. */
            public refreshType: number;

            /**
             * Encodes the specified C_SEA_SHOP_REFRESH message. Does not implicitly {@link com.message.C_SEA_SHOP_REFRESH.verify|verify} messages.
             * @param message C_SEA_SHOP_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SEA_SHOP_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SEA_SHOP_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SEA_SHOP_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SEA_SHOP_REFRESH;
        }

        /** Properties of a S_SEA_SHOP_REFRESH. */
        interface IS_SEA_SHOP_REFRESH {

            /** S_SEA_SHOP_REFRESH freeCount */
            freeCount?: (number|null);

            /** S_SEA_SHOP_REFRESH leaveTime */
            leaveTime?: (number|null);

            /** S_SEA_SHOP_REFRESH shopDatas */
            shopDatas?: (string|null);
        }

        /** Represents a S_SEA_SHOP_REFRESH. */
        class S_SEA_SHOP_REFRESH implements IS_SEA_SHOP_REFRESH {

            /**
             * Constructs a new S_SEA_SHOP_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SEA_SHOP_REFRESH);

            /** S_SEA_SHOP_REFRESH freeCount. */
            public freeCount: number;

            /** S_SEA_SHOP_REFRESH leaveTime. */
            public leaveTime: number;

            /** S_SEA_SHOP_REFRESH shopDatas. */
            public shopDatas: string;

            /**
             * Encodes the specified S_SEA_SHOP_REFRESH message. Does not implicitly {@link com.message.S_SEA_SHOP_REFRESH.verify|verify} messages.
             * @param message S_SEA_SHOP_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SEA_SHOP_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SEA_SHOP_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SEA_SHOP_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SEA_SHOP_REFRESH;
        }

        /** Properties of a C_SEA_SHOP_BUY_ALL. */
        interface IC_SEA_SHOP_BUY_ALL {
        }

        /** Represents a C_SEA_SHOP_BUY_ALL. */
        class C_SEA_SHOP_BUY_ALL implements IC_SEA_SHOP_BUY_ALL {

            /**
             * Constructs a new C_SEA_SHOP_BUY_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SEA_SHOP_BUY_ALL);

            /**
             * Encodes the specified C_SEA_SHOP_BUY_ALL message. Does not implicitly {@link com.message.C_SEA_SHOP_BUY_ALL.verify|verify} messages.
             * @param message C_SEA_SHOP_BUY_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SEA_SHOP_BUY_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SEA_SHOP_BUY_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SEA_SHOP_BUY_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SEA_SHOP_BUY_ALL;
        }

        /** Properties of a S_SEA_SHOP_BUY_ALL. */
        interface IS_SEA_SHOP_BUY_ALL {

            /** S_SEA_SHOP_BUY_ALL itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_SEA_SHOP_BUY_ALL hadDatas */
            hadDatas?: (string|null);
        }

        /** Represents a S_SEA_SHOP_BUY_ALL. */
        class S_SEA_SHOP_BUY_ALL implements IS_SEA_SHOP_BUY_ALL {

            /**
             * Constructs a new S_SEA_SHOP_BUY_ALL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SEA_SHOP_BUY_ALL);

            /** S_SEA_SHOP_BUY_ALL itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_SEA_SHOP_BUY_ALL hadDatas. */
            public hadDatas: string;

            /**
             * Encodes the specified S_SEA_SHOP_BUY_ALL message. Does not implicitly {@link com.message.S_SEA_SHOP_BUY_ALL.verify|verify} messages.
             * @param message S_SEA_SHOP_BUY_ALL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SEA_SHOP_BUY_ALL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SEA_SHOP_BUY_ALL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SEA_SHOP_BUY_ALL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SEA_SHOP_BUY_ALL;
        }

        /** Properties of a C_GET_SERVER_ACTIVE_INFO. */
        interface IC_GET_SERVER_ACTIVE_INFO {

            /** C_GET_SERVER_ACTIVE_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_SERVER_ACTIVE_INFO. */
        class C_GET_SERVER_ACTIVE_INFO implements IC_GET_SERVER_ACTIVE_INFO {

            /**
             * Constructs a new C_GET_SERVER_ACTIVE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SERVER_ACTIVE_INFO);

            /** C_GET_SERVER_ACTIVE_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_SERVER_ACTIVE_INFO message. Does not implicitly {@link com.message.C_GET_SERVER_ACTIVE_INFO.verify|verify} messages.
             * @param message C_GET_SERVER_ACTIVE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SERVER_ACTIVE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SERVER_ACTIVE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SERVER_ACTIVE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SERVER_ACTIVE_INFO;
        }

        /** Properties of a S_GET_SERVER_ACTIVE_INFO. */
        interface IS_GET_SERVER_ACTIVE_INFO {

            /** S_GET_SERVER_ACTIVE_INFO activeId */
            activeId?: (number[]|null);

            /** S_GET_SERVER_ACTIVE_INFO value */
            value?: (number|Long|null);

            /** S_GET_SERVER_ACTIVE_INFO type */
            type?: (number|null);

            /** S_GET_SERVER_ACTIVE_INFO paramStr */
            paramStr?: (string|null);

            /** S_GET_SERVER_ACTIVE_INFO params */
            params?: (number|Long|null);
        }

        /** Represents a S_GET_SERVER_ACTIVE_INFO. */
        class S_GET_SERVER_ACTIVE_INFO implements IS_GET_SERVER_ACTIVE_INFO {

            /**
             * Constructs a new S_GET_SERVER_ACTIVE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SERVER_ACTIVE_INFO);

            /** S_GET_SERVER_ACTIVE_INFO activeId. */
            public activeId: number[];

            /** S_GET_SERVER_ACTIVE_INFO value. */
            public value: (number|Long);

            /** S_GET_SERVER_ACTIVE_INFO type. */
            public type: number;

            /** S_GET_SERVER_ACTIVE_INFO paramStr. */
            public paramStr: string;

            /** S_GET_SERVER_ACTIVE_INFO params. */
            public params: (number|Long);

            /**
             * Encodes the specified S_GET_SERVER_ACTIVE_INFO message. Does not implicitly {@link com.message.S_GET_SERVER_ACTIVE_INFO.verify|verify} messages.
             * @param message S_GET_SERVER_ACTIVE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SERVER_ACTIVE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SERVER_ACTIVE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SERVER_ACTIVE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SERVER_ACTIVE_INFO;
        }

        /** Properties of a C_GET_SERVER_ACTIVE_REWARD. */
        interface IC_GET_SERVER_ACTIVE_REWARD {

            /** C_GET_SERVER_ACTIVE_REWARD id */
            id?: (number|null);

            /** C_GET_SERVER_ACTIVE_REWARD type */
            type?: (number|null);
        }

        /** Represents a C_GET_SERVER_ACTIVE_REWARD. */
        class C_GET_SERVER_ACTIVE_REWARD implements IC_GET_SERVER_ACTIVE_REWARD {

            /**
             * Constructs a new C_GET_SERVER_ACTIVE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SERVER_ACTIVE_REWARD);

            /** C_GET_SERVER_ACTIVE_REWARD id. */
            public id: number;

            /** C_GET_SERVER_ACTIVE_REWARD type. */
            public type: number;

            /**
             * Encodes the specified C_GET_SERVER_ACTIVE_REWARD message. Does not implicitly {@link com.message.C_GET_SERVER_ACTIVE_REWARD.verify|verify} messages.
             * @param message C_GET_SERVER_ACTIVE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SERVER_ACTIVE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SERVER_ACTIVE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SERVER_ACTIVE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SERVER_ACTIVE_REWARD;
        }

        /** Properties of a S_GET_SERVER_ACTIVE_REWARD. */
        interface IS_GET_SERVER_ACTIVE_REWARD {

            /** S_GET_SERVER_ACTIVE_REWARD id */
            id?: (number|null);

            /** S_GET_SERVER_ACTIVE_REWARD type */
            type?: (number|null);

            /** S_GET_SERVER_ACTIVE_REWARD params */
            params?: (string|null);
        }

        /** Represents a S_GET_SERVER_ACTIVE_REWARD. */
        class S_GET_SERVER_ACTIVE_REWARD implements IS_GET_SERVER_ACTIVE_REWARD {

            /**
             * Constructs a new S_GET_SERVER_ACTIVE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SERVER_ACTIVE_REWARD);

            /** S_GET_SERVER_ACTIVE_REWARD id. */
            public id: number;

            /** S_GET_SERVER_ACTIVE_REWARD type. */
            public type: number;

            /** S_GET_SERVER_ACTIVE_REWARD params. */
            public params: string;

            /**
             * Encodes the specified S_GET_SERVER_ACTIVE_REWARD message. Does not implicitly {@link com.message.S_GET_SERVER_ACTIVE_REWARD.verify|verify} messages.
             * @param message S_GET_SERVER_ACTIVE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SERVER_ACTIVE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SERVER_ACTIVE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SERVER_ACTIVE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SERVER_ACTIVE_REWARD;
        }

        /** Properties of a C_GET_ZERO_PREFERENTIAL_INFO. */
        interface IC_GET_ZERO_PREFERENTIAL_INFO {
        }

        /** Represents a C_GET_ZERO_PREFERENTIAL_INFO. */
        class C_GET_ZERO_PREFERENTIAL_INFO implements IC_GET_ZERO_PREFERENTIAL_INFO {

            /**
             * Constructs a new C_GET_ZERO_PREFERENTIAL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ZERO_PREFERENTIAL_INFO);

            /**
             * Encodes the specified C_GET_ZERO_PREFERENTIAL_INFO message. Does not implicitly {@link com.message.C_GET_ZERO_PREFERENTIAL_INFO.verify|verify} messages.
             * @param message C_GET_ZERO_PREFERENTIAL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ZERO_PREFERENTIAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ZERO_PREFERENTIAL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ZERO_PREFERENTIAL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ZERO_PREFERENTIAL_INFO;
        }

        /** Properties of a S_GET_ZERO_PREFERENTIAL_INFO. */
        interface IS_GET_ZERO_PREFERENTIAL_INFO {

            /** S_GET_ZERO_PREFERENTIAL_INFO zeroInfo */
            zeroInfo?: (com.message.IZERO_PREFERENTIAL[]|null);
        }

        /** Represents a S_GET_ZERO_PREFERENTIAL_INFO. */
        class S_GET_ZERO_PREFERENTIAL_INFO implements IS_GET_ZERO_PREFERENTIAL_INFO {

            /**
             * Constructs a new S_GET_ZERO_PREFERENTIAL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ZERO_PREFERENTIAL_INFO);

            /** S_GET_ZERO_PREFERENTIAL_INFO zeroInfo. */
            public zeroInfo: com.message.IZERO_PREFERENTIAL[];

            /**
             * Encodes the specified S_GET_ZERO_PREFERENTIAL_INFO message. Does not implicitly {@link com.message.S_GET_ZERO_PREFERENTIAL_INFO.verify|verify} messages.
             * @param message S_GET_ZERO_PREFERENTIAL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ZERO_PREFERENTIAL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ZERO_PREFERENTIAL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ZERO_PREFERENTIAL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ZERO_PREFERENTIAL_INFO;
        }

        /** Properties of a ZERO_PREFERENTIAL. */
        interface IZERO_PREFERENTIAL {

            /** ZERO_PREFERENTIAL id */
            id?: (number|null);

            /** ZERO_PREFERENTIAL returnTime */
            returnTime?: (number|Long|null);

            /** ZERO_PREFERENTIAL isGetReturn */
            isGetReturn?: (boolean|null);
        }

        /** Represents a ZERO_PREFERENTIAL. */
        class ZERO_PREFERENTIAL implements IZERO_PREFERENTIAL {

            /**
             * Constructs a new ZERO_PREFERENTIAL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IZERO_PREFERENTIAL);

            /** ZERO_PREFERENTIAL id. */
            public id: number;

            /** ZERO_PREFERENTIAL returnTime. */
            public returnTime: (number|Long);

            /** ZERO_PREFERENTIAL isGetReturn. */
            public isGetReturn: boolean;

            /**
             * Encodes the specified ZERO_PREFERENTIAL message. Does not implicitly {@link com.message.ZERO_PREFERENTIAL.verify|verify} messages.
             * @param message ZERO_PREFERENTIAL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IZERO_PREFERENTIAL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ZERO_PREFERENTIAL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ZERO_PREFERENTIAL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ZERO_PREFERENTIAL;
        }

        /** Properties of a C_BUY_ZERO_PREFERENTIAL. */
        interface IC_BUY_ZERO_PREFERENTIAL {

            /** C_BUY_ZERO_PREFERENTIAL id */
            id?: (number|null);
        }

        /** Represents a C_BUY_ZERO_PREFERENTIAL. */
        class C_BUY_ZERO_PREFERENTIAL implements IC_BUY_ZERO_PREFERENTIAL {

            /**
             * Constructs a new C_BUY_ZERO_PREFERENTIAL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_ZERO_PREFERENTIAL);

            /** C_BUY_ZERO_PREFERENTIAL id. */
            public id: number;

            /**
             * Encodes the specified C_BUY_ZERO_PREFERENTIAL message. Does not implicitly {@link com.message.C_BUY_ZERO_PREFERENTIAL.verify|verify} messages.
             * @param message C_BUY_ZERO_PREFERENTIAL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_ZERO_PREFERENTIAL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_ZERO_PREFERENTIAL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_ZERO_PREFERENTIAL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_ZERO_PREFERENTIAL;
        }

        /** Properties of a S_BUY_ZERO_PREFERENTIAL. */
        interface IS_BUY_ZERO_PREFERENTIAL {

            /** S_BUY_ZERO_PREFERENTIAL id */
            id?: (number|null);

            /** S_BUY_ZERO_PREFERENTIAL returnTime */
            returnTime?: (number|Long|null);
        }

        /** Represents a S_BUY_ZERO_PREFERENTIAL. */
        class S_BUY_ZERO_PREFERENTIAL implements IS_BUY_ZERO_PREFERENTIAL {

            /**
             * Constructs a new S_BUY_ZERO_PREFERENTIAL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_ZERO_PREFERENTIAL);

            /** S_BUY_ZERO_PREFERENTIAL id. */
            public id: number;

            /** S_BUY_ZERO_PREFERENTIAL returnTime. */
            public returnTime: (number|Long);

            /**
             * Encodes the specified S_BUY_ZERO_PREFERENTIAL message. Does not implicitly {@link com.message.S_BUY_ZERO_PREFERENTIAL.verify|verify} messages.
             * @param message S_BUY_ZERO_PREFERENTIAL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_ZERO_PREFERENTIAL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_ZERO_PREFERENTIAL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_ZERO_PREFERENTIAL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_ZERO_PREFERENTIAL;
        }

        /** Properties of a C_GET_ZERO_PREFERENTIAL_RETURN. */
        interface IC_GET_ZERO_PREFERENTIAL_RETURN {

            /** C_GET_ZERO_PREFERENTIAL_RETURN id */
            id?: (number|null);
        }

        /** Represents a C_GET_ZERO_PREFERENTIAL_RETURN. */
        class C_GET_ZERO_PREFERENTIAL_RETURN implements IC_GET_ZERO_PREFERENTIAL_RETURN {

            /**
             * Constructs a new C_GET_ZERO_PREFERENTIAL_RETURN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ZERO_PREFERENTIAL_RETURN);

            /** C_GET_ZERO_PREFERENTIAL_RETURN id. */
            public id: number;

            /**
             * Encodes the specified C_GET_ZERO_PREFERENTIAL_RETURN message. Does not implicitly {@link com.message.C_GET_ZERO_PREFERENTIAL_RETURN.verify|verify} messages.
             * @param message C_GET_ZERO_PREFERENTIAL_RETURN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ZERO_PREFERENTIAL_RETURN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ZERO_PREFERENTIAL_RETURN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ZERO_PREFERENTIAL_RETURN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ZERO_PREFERENTIAL_RETURN;
        }

        /** Properties of a S_GET_ZERO_PREFERENTIAL_RETURN. */
        interface IS_GET_ZERO_PREFERENTIAL_RETURN {

            /** S_GET_ZERO_PREFERENTIAL_RETURN id */
            id?: (number|null);
        }

        /** Represents a S_GET_ZERO_PREFERENTIAL_RETURN. */
        class S_GET_ZERO_PREFERENTIAL_RETURN implements IS_GET_ZERO_PREFERENTIAL_RETURN {

            /**
             * Constructs a new S_GET_ZERO_PREFERENTIAL_RETURN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ZERO_PREFERENTIAL_RETURN);

            /** S_GET_ZERO_PREFERENTIAL_RETURN id. */
            public id: number;

            /**
             * Encodes the specified S_GET_ZERO_PREFERENTIAL_RETURN message. Does not implicitly {@link com.message.S_GET_ZERO_PREFERENTIAL_RETURN.verify|verify} messages.
             * @param message S_GET_ZERO_PREFERENTIAL_RETURN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ZERO_PREFERENTIAL_RETURN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ZERO_PREFERENTIAL_RETURN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ZERO_PREFERENTIAL_RETURN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ZERO_PREFERENTIAL_RETURN;
        }

        /** Properties of a C_GET_SHARE_REWARD_INFO. */
        interface IC_GET_SHARE_REWARD_INFO {
        }

        /** Represents a C_GET_SHARE_REWARD_INFO. */
        class C_GET_SHARE_REWARD_INFO implements IC_GET_SHARE_REWARD_INFO {

            /**
             * Constructs a new C_GET_SHARE_REWARD_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SHARE_REWARD_INFO);

            /**
             * Encodes the specified C_GET_SHARE_REWARD_INFO message. Does not implicitly {@link com.message.C_GET_SHARE_REWARD_INFO.verify|verify} messages.
             * @param message C_GET_SHARE_REWARD_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SHARE_REWARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SHARE_REWARD_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SHARE_REWARD_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SHARE_REWARD_INFO;
        }

        /** Properties of a S_GET_SHARE_REWARD_INFO. */
        interface IS_GET_SHARE_REWARD_INFO {

            /** S_GET_SHARE_REWARD_INFO hadCount */
            hadCount?: (number|null);

            /** S_GET_SHARE_REWARD_INFO leaveTime */
            leaveTime?: (number|Long|null);

            /** S_GET_SHARE_REWARD_INFO myRewardCount */
            myRewardCount?: (number|null);

            /** S_GET_SHARE_REWARD_INFO enterCount */
            enterCount?: (number|null);
        }

        /** Represents a S_GET_SHARE_REWARD_INFO. */
        class S_GET_SHARE_REWARD_INFO implements IS_GET_SHARE_REWARD_INFO {

            /**
             * Constructs a new S_GET_SHARE_REWARD_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SHARE_REWARD_INFO);

            /** S_GET_SHARE_REWARD_INFO hadCount. */
            public hadCount: number;

            /** S_GET_SHARE_REWARD_INFO leaveTime. */
            public leaveTime: (number|Long);

            /** S_GET_SHARE_REWARD_INFO myRewardCount. */
            public myRewardCount: number;

            /** S_GET_SHARE_REWARD_INFO enterCount. */
            public enterCount: number;

            /**
             * Encodes the specified S_GET_SHARE_REWARD_INFO message. Does not implicitly {@link com.message.S_GET_SHARE_REWARD_INFO.verify|verify} messages.
             * @param message S_GET_SHARE_REWARD_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SHARE_REWARD_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SHARE_REWARD_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SHARE_REWARD_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SHARE_REWARD_INFO;
        }

        /** Properties of a C_GET_SHARE_REWARD. */
        interface IC_GET_SHARE_REWARD {

            /** C_GET_SHARE_REWARD rewardType */
            rewardType?: (number|null);
        }

        /** Represents a C_GET_SHARE_REWARD. */
        class C_GET_SHARE_REWARD implements IC_GET_SHARE_REWARD {

            /**
             * Constructs a new C_GET_SHARE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SHARE_REWARD);

            /** C_GET_SHARE_REWARD rewardType. */
            public rewardType: number;

            /**
             * Encodes the specified C_GET_SHARE_REWARD message. Does not implicitly {@link com.message.C_GET_SHARE_REWARD.verify|verify} messages.
             * @param message C_GET_SHARE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SHARE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SHARE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SHARE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SHARE_REWARD;
        }

        /** Properties of a S_GET_SHARE_REWARD. */
        interface IS_GET_SHARE_REWARD {

            /** S_GET_SHARE_REWARD hadCount */
            hadCount?: (number|null);

            /** S_GET_SHARE_REWARD leaveTime */
            leaveTime?: (number|Long|null);

            /** S_GET_SHARE_REWARD myRewardCount */
            myRewardCount?: (number|null);

            /** S_GET_SHARE_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_GET_SHARE_REWARD enterCount */
            enterCount?: (number|null);
        }

        /** Represents a S_GET_SHARE_REWARD. */
        class S_GET_SHARE_REWARD implements IS_GET_SHARE_REWARD {

            /**
             * Constructs a new S_GET_SHARE_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SHARE_REWARD);

            /** S_GET_SHARE_REWARD hadCount. */
            public hadCount: number;

            /** S_GET_SHARE_REWARD leaveTime. */
            public leaveTime: (number|Long);

            /** S_GET_SHARE_REWARD myRewardCount. */
            public myRewardCount: number;

            /** S_GET_SHARE_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_GET_SHARE_REWARD enterCount. */
            public enterCount: number;

            /**
             * Encodes the specified S_GET_SHARE_REWARD message. Does not implicitly {@link com.message.S_GET_SHARE_REWARD.verify|verify} messages.
             * @param message S_GET_SHARE_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SHARE_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SHARE_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SHARE_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SHARE_REWARD;
        }

        /** Properties of a C_GET_SHOW_INFO. */
        interface IC_GET_SHOW_INFO {
        }

        /** Represents a C_GET_SHOW_INFO. */
        class C_GET_SHOW_INFO implements IC_GET_SHOW_INFO {

            /**
             * Constructs a new C_GET_SHOW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SHOW_INFO);

            /**
             * Encodes the specified C_GET_SHOW_INFO message. Does not implicitly {@link com.message.C_GET_SHOW_INFO.verify|verify} messages.
             * @param message C_GET_SHOW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SHOW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SHOW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SHOW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SHOW_INFO;
        }

        /** Properties of a S_GET_SHOW_INFO. */
        interface IS_GET_SHOW_INFO {

            /** S_GET_SHOW_INFO useTitle */
            useTitle?: (number|null);

            /** S_GET_SHOW_INFO hadTitles */
            hadTitles?: (string|null);

            /** S_GET_SHOW_INFO useHeadFrame */
            useHeadFrame?: (number|null);

            /** S_GET_SHOW_INFO hadHeadFrames */
            hadHeadFrames?: (string|null);

            /** S_GET_SHOW_INFO useChat */
            useChat?: (number|null);

            /** S_GET_SHOW_INFO hadChats */
            hadChats?: (string|null);

            /** S_GET_SHOW_INFO canTitles */
            canTitles?: (string|null);

            /** S_GET_SHOW_INFO canHeadFrames */
            canHeadFrames?: (string|null);

            /** S_GET_SHOW_INFO canChats */
            canChats?: (string|null);
        }

        /** Represents a S_GET_SHOW_INFO. */
        class S_GET_SHOW_INFO implements IS_GET_SHOW_INFO {

            /**
             * Constructs a new S_GET_SHOW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SHOW_INFO);

            /** S_GET_SHOW_INFO useTitle. */
            public useTitle: number;

            /** S_GET_SHOW_INFO hadTitles. */
            public hadTitles: string;

            /** S_GET_SHOW_INFO useHeadFrame. */
            public useHeadFrame: number;

            /** S_GET_SHOW_INFO hadHeadFrames. */
            public hadHeadFrames: string;

            /** S_GET_SHOW_INFO useChat. */
            public useChat: number;

            /** S_GET_SHOW_INFO hadChats. */
            public hadChats: string;

            /** S_GET_SHOW_INFO canTitles. */
            public canTitles: string;

            /** S_GET_SHOW_INFO canHeadFrames. */
            public canHeadFrames: string;

            /** S_GET_SHOW_INFO canChats. */
            public canChats: string;

            /**
             * Encodes the specified S_GET_SHOW_INFO message. Does not implicitly {@link com.message.S_GET_SHOW_INFO.verify|verify} messages.
             * @param message S_GET_SHOW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SHOW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SHOW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SHOW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SHOW_INFO;
        }

        /** Properties of a C_UPDATE_USE_SHOW. */
        interface IC_UPDATE_USE_SHOW {

            /** C_UPDATE_USE_SHOW type */
            type?: (number|null);

            /** C_UPDATE_USE_SHOW showId */
            showId?: (number|null);
        }

        /** Represents a C_UPDATE_USE_SHOW. */
        class C_UPDATE_USE_SHOW implements IC_UPDATE_USE_SHOW {

            /**
             * Constructs a new C_UPDATE_USE_SHOW.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_UPDATE_USE_SHOW);

            /** C_UPDATE_USE_SHOW type. */
            public type: number;

            /** C_UPDATE_USE_SHOW showId. */
            public showId: number;

            /**
             * Encodes the specified C_UPDATE_USE_SHOW message. Does not implicitly {@link com.message.C_UPDATE_USE_SHOW.verify|verify} messages.
             * @param message C_UPDATE_USE_SHOW message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_UPDATE_USE_SHOW, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_UPDATE_USE_SHOW message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_UPDATE_USE_SHOW
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_UPDATE_USE_SHOW;
        }

        /** Properties of a S_UPDATE_USE_SHOW. */
        interface IS_UPDATE_USE_SHOW {

            /** S_UPDATE_USE_SHOW type */
            type?: (number|null);

            /** S_UPDATE_USE_SHOW useShowId */
            useShowId?: (number|null);
        }

        /** Represents a S_UPDATE_USE_SHOW. */
        class S_UPDATE_USE_SHOW implements IS_UPDATE_USE_SHOW {

            /**
             * Constructs a new S_UPDATE_USE_SHOW.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPDATE_USE_SHOW);

            /** S_UPDATE_USE_SHOW type. */
            public type: number;

            /** S_UPDATE_USE_SHOW useShowId. */
            public useShowId: number;

            /**
             * Encodes the specified S_UPDATE_USE_SHOW message. Does not implicitly {@link com.message.S_UPDATE_USE_SHOW.verify|verify} messages.
             * @param message S_UPDATE_USE_SHOW message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPDATE_USE_SHOW, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPDATE_USE_SHOW message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPDATE_USE_SHOW
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPDATE_USE_SHOW;
        }

        /** Properties of a C_ACTIVE_SHOW_INFO. */
        interface IC_ACTIVE_SHOW_INFO {

            /** C_ACTIVE_SHOW_INFO type */
            type?: (number|null);

            /** C_ACTIVE_SHOW_INFO showId */
            showId?: (number|null);
        }

        /** Represents a C_ACTIVE_SHOW_INFO. */
        class C_ACTIVE_SHOW_INFO implements IC_ACTIVE_SHOW_INFO {

            /**
             * Constructs a new C_ACTIVE_SHOW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ACTIVE_SHOW_INFO);

            /** C_ACTIVE_SHOW_INFO type. */
            public type: number;

            /** C_ACTIVE_SHOW_INFO showId. */
            public showId: number;

            /**
             * Encodes the specified C_ACTIVE_SHOW_INFO message. Does not implicitly {@link com.message.C_ACTIVE_SHOW_INFO.verify|verify} messages.
             * @param message C_ACTIVE_SHOW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ACTIVE_SHOW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ACTIVE_SHOW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ACTIVE_SHOW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ACTIVE_SHOW_INFO;
        }

        /** Properties of a S_ACTIVE_SHOW_INFO. */
        interface IS_ACTIVE_SHOW_INFO {

            /** S_ACTIVE_SHOW_INFO type */
            type?: (number|null);

            /** S_ACTIVE_SHOW_INFO hadShows */
            hadShows?: (string|null);
        }

        /** Represents a S_ACTIVE_SHOW_INFO. */
        class S_ACTIVE_SHOW_INFO implements IS_ACTIVE_SHOW_INFO {

            /**
             * Constructs a new S_ACTIVE_SHOW_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ACTIVE_SHOW_INFO);

            /** S_ACTIVE_SHOW_INFO type. */
            public type: number;

            /** S_ACTIVE_SHOW_INFO hadShows. */
            public hadShows: string;

            /**
             * Encodes the specified S_ACTIVE_SHOW_INFO message. Does not implicitly {@link com.message.S_ACTIVE_SHOW_INFO.verify|verify} messages.
             * @param message S_ACTIVE_SHOW_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ACTIVE_SHOW_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ACTIVE_SHOW_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ACTIVE_SHOW_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ACTIVE_SHOW_INFO;
        }

        /** Properties of a C_GET_SKILL_INFO. */
        interface IC_GET_SKILL_INFO {

            /** C_GET_SKILL_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_SKILL_INFO. */
        class C_GET_SKILL_INFO implements IC_GET_SKILL_INFO {

            /**
             * Constructs a new C_GET_SKILL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SKILL_INFO);

            /** C_GET_SKILL_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_SKILL_INFO message. Does not implicitly {@link com.message.C_GET_SKILL_INFO.verify|verify} messages.
             * @param message C_GET_SKILL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SKILL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SKILL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SKILL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SKILL_INFO;
        }

        /** Properties of a S_GET_SKILL_INFO. */
        interface IS_GET_SKILL_INFO {

            /** S_GET_SKILL_INFO skillInfo */
            skillInfo?: (com.message.ISkillMsg[]|null);
        }

        /** Represents a S_GET_SKILL_INFO. */
        class S_GET_SKILL_INFO implements IS_GET_SKILL_INFO {

            /**
             * Constructs a new S_GET_SKILL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SKILL_INFO);

            /** S_GET_SKILL_INFO skillInfo. */
            public skillInfo: com.message.ISkillMsg[];

            /**
             * Encodes the specified S_GET_SKILL_INFO message. Does not implicitly {@link com.message.S_GET_SKILL_INFO.verify|verify} messages.
             * @param message S_GET_SKILL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SKILL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SKILL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SKILL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SKILL_INFO;
        }

        /** Properties of a SkillMsg. */
        interface ISkillMsg {

            /** SkillMsg type */
            type?: (number|null);

            /** SkillMsg skillId */
            skillId?: (number|null);

            /** SkillMsg heroId */
            heroId?: (number|null);

            /** SkillMsg subType */
            subType?: (number|null);
        }

        /** Represents a SkillMsg. */
        class SkillMsg implements ISkillMsg {

            /**
             * Constructs a new SkillMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ISkillMsg);

            /** SkillMsg type. */
            public type: number;

            /** SkillMsg skillId. */
            public skillId: number;

            /** SkillMsg heroId. */
            public heroId: number;

            /** SkillMsg subType. */
            public subType: number;

            /**
             * Encodes the specified SkillMsg message. Does not implicitly {@link com.message.SkillMsg.verify|verify} messages.
             * @param message SkillMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ISkillMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SkillMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SkillMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.SkillMsg;
        }

        /** Properties of a C_LEARN_SKILL. */
        interface IC_LEARN_SKILL {

            /** C_LEARN_SKILL type */
            type?: (number|null);

            /** C_LEARN_SKILL skillId */
            skillId?: (number|null);

            /** C_LEARN_SKILL heroId */
            heroId?: (number|null);
        }

        /** Represents a C_LEARN_SKILL. */
        class C_LEARN_SKILL implements IC_LEARN_SKILL {

            /**
             * Constructs a new C_LEARN_SKILL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LEARN_SKILL);

            /** C_LEARN_SKILL type. */
            public type: number;

            /** C_LEARN_SKILL skillId. */
            public skillId: number;

            /** C_LEARN_SKILL heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_LEARN_SKILL message. Does not implicitly {@link com.message.C_LEARN_SKILL.verify|verify} messages.
             * @param message C_LEARN_SKILL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LEARN_SKILL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LEARN_SKILL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LEARN_SKILL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LEARN_SKILL;
        }

        /** Properties of a S_LEARN_SKILL. */
        interface IS_LEARN_SKILL {

            /** S_LEARN_SKILL skillInfo */
            skillInfo?: (com.message.ISkillMsg|null);
        }

        /** Represents a S_LEARN_SKILL. */
        class S_LEARN_SKILL implements IS_LEARN_SKILL {

            /**
             * Constructs a new S_LEARN_SKILL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LEARN_SKILL);

            /** S_LEARN_SKILL skillInfo. */
            public skillInfo?: (com.message.ISkillMsg|null);

            /**
             * Encodes the specified S_LEARN_SKILL message. Does not implicitly {@link com.message.S_LEARN_SKILL.verify|verify} messages.
             * @param message S_LEARN_SKILL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LEARN_SKILL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LEARN_SKILL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LEARN_SKILL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LEARN_SKILL;
        }

        /** Properties of a C_LEARN_SKILL_ONEKEY. */
        interface IC_LEARN_SKILL_ONEKEY {
        }

        /** Represents a C_LEARN_SKILL_ONEKEY. */
        class C_LEARN_SKILL_ONEKEY implements IC_LEARN_SKILL_ONEKEY {

            /**
             * Constructs a new C_LEARN_SKILL_ONEKEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LEARN_SKILL_ONEKEY);

            /**
             * Encodes the specified C_LEARN_SKILL_ONEKEY message. Does not implicitly {@link com.message.C_LEARN_SKILL_ONEKEY.verify|verify} messages.
             * @param message C_LEARN_SKILL_ONEKEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LEARN_SKILL_ONEKEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LEARN_SKILL_ONEKEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LEARN_SKILL_ONEKEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LEARN_SKILL_ONEKEY;
        }

        /** Properties of a S_LEARN_SKILL_ONEKEY. */
        interface IS_LEARN_SKILL_ONEKEY {

            /** S_LEARN_SKILL_ONEKEY skillInfo */
            skillInfo?: (com.message.ISkillMsg[]|null);
        }

        /** Represents a S_LEARN_SKILL_ONEKEY. */
        class S_LEARN_SKILL_ONEKEY implements IS_LEARN_SKILL_ONEKEY {

            /**
             * Constructs a new S_LEARN_SKILL_ONEKEY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LEARN_SKILL_ONEKEY);

            /** S_LEARN_SKILL_ONEKEY skillInfo. */
            public skillInfo: com.message.ISkillMsg[];

            /**
             * Encodes the specified S_LEARN_SKILL_ONEKEY message. Does not implicitly {@link com.message.S_LEARN_SKILL_ONEKEY.verify|verify} messages.
             * @param message S_LEARN_SKILL_ONEKEY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LEARN_SKILL_ONEKEY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LEARN_SKILL_ONEKEY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LEARN_SKILL_ONEKEY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LEARN_SKILL_ONEKEY;
        }

        /** Properties of a C_SKIP_BATTLE. */
        interface IC_SKIP_BATTLE {
        }

        /** Represents a C_SKIP_BATTLE. */
        class C_SKIP_BATTLE implements IC_SKIP_BATTLE {

            /**
             * Constructs a new C_SKIP_BATTLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SKIP_BATTLE);

            /**
             * Encodes the specified C_SKIP_BATTLE message. Does not implicitly {@link com.message.C_SKIP_BATTLE.verify|verify} messages.
             * @param message C_SKIP_BATTLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SKIP_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SKIP_BATTLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SKIP_BATTLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SKIP_BATTLE;
        }

        /** Properties of a S_SKIP_BATTLE. */
        interface IS_SKIP_BATTLE {

            /** S_SKIP_BATTLE leaveCount */
            leaveCount?: (number|null);
        }

        /** Represents a S_SKIP_BATTLE. */
        class S_SKIP_BATTLE implements IS_SKIP_BATTLE {

            /**
             * Constructs a new S_SKIP_BATTLE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SKIP_BATTLE);

            /** S_SKIP_BATTLE leaveCount. */
            public leaveCount: number;

            /**
             * Encodes the specified S_SKIP_BATTLE message. Does not implicitly {@link com.message.S_SKIP_BATTLE.verify|verify} messages.
             * @param message S_SKIP_BATTLE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SKIP_BATTLE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SKIP_BATTLE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SKIP_BATTLE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SKIP_BATTLE;
        }

        /** Properties of a C_GET_ALL_MODULE_FIGHT. */
        interface IC_GET_ALL_MODULE_FIGHT {
        }

        /** Represents a C_GET_ALL_MODULE_FIGHT. */
        class C_GET_ALL_MODULE_FIGHT implements IC_GET_ALL_MODULE_FIGHT {

            /**
             * Constructs a new C_GET_ALL_MODULE_FIGHT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ALL_MODULE_FIGHT);

            /**
             * Encodes the specified C_GET_ALL_MODULE_FIGHT message. Does not implicitly {@link com.message.C_GET_ALL_MODULE_FIGHT.verify|verify} messages.
             * @param message C_GET_ALL_MODULE_FIGHT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ALL_MODULE_FIGHT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ALL_MODULE_FIGHT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ALL_MODULE_FIGHT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ALL_MODULE_FIGHT;
        }

        /** Properties of a S_SYN_MODULE_FIGHT. */
        interface IS_SYN_MODULE_FIGHT {

            /** S_SYN_MODULE_FIGHT moduleType */
            moduleType?: (number|null);

            /** S_SYN_MODULE_FIGHT posIndex */
            posIndex?: (number|null);

            /** S_SYN_MODULE_FIGHT fight */
            fight?: (number|Long|null);
        }

        /** Represents a S_SYN_MODULE_FIGHT. */
        class S_SYN_MODULE_FIGHT implements IS_SYN_MODULE_FIGHT {

            /**
             * Constructs a new S_SYN_MODULE_FIGHT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYN_MODULE_FIGHT);

            /** S_SYN_MODULE_FIGHT moduleType. */
            public moduleType: number;

            /** S_SYN_MODULE_FIGHT posIndex. */
            public posIndex: number;

            /** S_SYN_MODULE_FIGHT fight. */
            public fight: (number|Long);

            /**
             * Encodes the specified S_SYN_MODULE_FIGHT message. Does not implicitly {@link com.message.S_SYN_MODULE_FIGHT.verify|verify} messages.
             * @param message S_SYN_MODULE_FIGHT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYN_MODULE_FIGHT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYN_MODULE_FIGHT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYN_MODULE_FIGHT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYN_MODULE_FIGHT;
        }

        /** Properties of a C_GET_STRONGER_INFO. */
        interface IC_GET_STRONGER_INFO {
        }

        /** Represents a C_GET_STRONGER_INFO. */
        class C_GET_STRONGER_INFO implements IC_GET_STRONGER_INFO {

            /**
             * Constructs a new C_GET_STRONGER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_STRONGER_INFO);

            /**
             * Encodes the specified C_GET_STRONGER_INFO message. Does not implicitly {@link com.message.C_GET_STRONGER_INFO.verify|verify} messages.
             * @param message C_GET_STRONGER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_STRONGER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_STRONGER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_STRONGER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_STRONGER_INFO;
        }

        /** Properties of a S_GET_STRONGER_INFO. */
        interface IS_GET_STRONGER_INFO {

            /** S_GET_STRONGER_INFO fight */
            fight?: (number|null);
        }

        /** Represents a S_GET_STRONGER_INFO. */
        class S_GET_STRONGER_INFO implements IS_GET_STRONGER_INFO {

            /**
             * Constructs a new S_GET_STRONGER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_STRONGER_INFO);

            /** S_GET_STRONGER_INFO fight. */
            public fight: number;

            /**
             * Encodes the specified S_GET_STRONGER_INFO message. Does not implicitly {@link com.message.S_GET_STRONGER_INFO.verify|verify} messages.
             * @param message S_GET_STRONGER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_STRONGER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_STRONGER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_STRONGER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_STRONGER_INFO;
        }

        /** Properties of a C_GET_STRONGER_REWARD. */
        interface IC_GET_STRONGER_REWARD {
        }

        /** Represents a C_GET_STRONGER_REWARD. */
        class C_GET_STRONGER_REWARD implements IC_GET_STRONGER_REWARD {

            /**
             * Constructs a new C_GET_STRONGER_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_STRONGER_REWARD);

            /**
             * Encodes the specified C_GET_STRONGER_REWARD message. Does not implicitly {@link com.message.C_GET_STRONGER_REWARD.verify|verify} messages.
             * @param message C_GET_STRONGER_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_STRONGER_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_STRONGER_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_STRONGER_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_STRONGER_REWARD;
        }

        /** Properties of a S_GET_STRONGER_REWARD. */
        interface IS_GET_STRONGER_REWARD {

            /** S_GET_STRONGER_REWARD fight */
            fight?: (number|null);

            /** S_GET_STRONGER_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_STRONGER_REWARD. */
        class S_GET_STRONGER_REWARD implements IS_GET_STRONGER_REWARD {

            /**
             * Constructs a new S_GET_STRONGER_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_STRONGER_REWARD);

            /** S_GET_STRONGER_REWARD fight. */
            public fight: number;

            /** S_GET_STRONGER_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_STRONGER_REWARD message. Does not implicitly {@link com.message.S_GET_STRONGER_REWARD.verify|verify} messages.
             * @param message S_GET_STRONGER_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_STRONGER_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_STRONGER_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_STRONGER_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_STRONGER_REWARD;
        }

        /** Properties of a C_GET_SUIT_COLLECT_REWARD. */
        interface IC_GET_SUIT_COLLECT_REWARD {

            /** C_GET_SUIT_COLLECT_REWARD index */
            index?: (number|null);
        }

        /** Represents a C_GET_SUIT_COLLECT_REWARD. */
        class C_GET_SUIT_COLLECT_REWARD implements IC_GET_SUIT_COLLECT_REWARD {

            /**
             * Constructs a new C_GET_SUIT_COLLECT_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SUIT_COLLECT_REWARD);

            /** C_GET_SUIT_COLLECT_REWARD index. */
            public index: number;

            /**
             * Encodes the specified C_GET_SUIT_COLLECT_REWARD message. Does not implicitly {@link com.message.C_GET_SUIT_COLLECT_REWARD.verify|verify} messages.
             * @param message C_GET_SUIT_COLLECT_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SUIT_COLLECT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SUIT_COLLECT_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SUIT_COLLECT_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SUIT_COLLECT_REWARD;
        }

        /** Properties of a S_GET_SUIT_COLLECT_REWARD. */
        interface IS_GET_SUIT_COLLECT_REWARD {

            /** S_GET_SUIT_COLLECT_REWARD index */
            index?: (number|null);

            /** S_GET_SUIT_COLLECT_REWARD rewardInfo */
            rewardInfo?: (string|null);

            /** S_GET_SUIT_COLLECT_REWARD configId */
            configId?: (number|null);

            /** S_GET_SUIT_COLLECT_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_SUIT_COLLECT_REWARD. */
        class S_GET_SUIT_COLLECT_REWARD implements IS_GET_SUIT_COLLECT_REWARD {

            /**
             * Constructs a new S_GET_SUIT_COLLECT_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SUIT_COLLECT_REWARD);

            /** S_GET_SUIT_COLLECT_REWARD index. */
            public index: number;

            /** S_GET_SUIT_COLLECT_REWARD rewardInfo. */
            public rewardInfo: string;

            /** S_GET_SUIT_COLLECT_REWARD configId. */
            public configId: number;

            /** S_GET_SUIT_COLLECT_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_SUIT_COLLECT_REWARD message. Does not implicitly {@link com.message.S_GET_SUIT_COLLECT_REWARD.verify|verify} messages.
             * @param message S_GET_SUIT_COLLECT_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SUIT_COLLECT_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SUIT_COLLECT_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SUIT_COLLECT_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SUIT_COLLECT_REWARD;
        }

        /** Properties of a SuitCollectMsg. */
        interface ISuitCollectMsg {

            /** SuitCollectMsg index */
            index?: (number|null);

            /** SuitCollectMsg level */
            level?: (number|null);
        }

        /** Represents a SuitCollectMsg. */
        class SuitCollectMsg implements ISuitCollectMsg {

            /**
             * Constructs a new SuitCollectMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ISuitCollectMsg);

            /** SuitCollectMsg index. */
            public index: number;

            /** SuitCollectMsg level. */
            public level: number;

            /**
             * Encodes the specified SuitCollectMsg message. Does not implicitly {@link com.message.SuitCollectMsg.verify|verify} messages.
             * @param message SuitCollectMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ISuitCollectMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SuitCollectMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SuitCollectMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.SuitCollectMsg;
        }

        /** Properties of a C_GET_SUIT_COLLECT_INFO. */
        interface IC_GET_SUIT_COLLECT_INFO {
        }

        /** Represents a C_GET_SUIT_COLLECT_INFO. */
        class C_GET_SUIT_COLLECT_INFO implements IC_GET_SUIT_COLLECT_INFO {

            /**
             * Constructs a new C_GET_SUIT_COLLECT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SUIT_COLLECT_INFO);

            /**
             * Encodes the specified C_GET_SUIT_COLLECT_INFO message. Does not implicitly {@link com.message.C_GET_SUIT_COLLECT_INFO.verify|verify} messages.
             * @param message C_GET_SUIT_COLLECT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SUIT_COLLECT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SUIT_COLLECT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SUIT_COLLECT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SUIT_COLLECT_INFO;
        }

        /** Properties of a S_GET_SUIT_COLLECT_INFO. */
        interface IS_GET_SUIT_COLLECT_INFO {

            /** S_GET_SUIT_COLLECT_INFO suitCollectInfo */
            suitCollectInfo?: (com.message.ISuitCollectMsg[]|null);

            /** S_GET_SUIT_COLLECT_INFO rewardInfo */
            rewardInfo?: (string|null);

            /** S_GET_SUIT_COLLECT_INFO configId */
            configId?: (number|null);
        }

        /** Represents a S_GET_SUIT_COLLECT_INFO. */
        class S_GET_SUIT_COLLECT_INFO implements IS_GET_SUIT_COLLECT_INFO {

            /**
             * Constructs a new S_GET_SUIT_COLLECT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SUIT_COLLECT_INFO);

            /** S_GET_SUIT_COLLECT_INFO suitCollectInfo. */
            public suitCollectInfo: com.message.ISuitCollectMsg[];

            /** S_GET_SUIT_COLLECT_INFO rewardInfo. */
            public rewardInfo: string;

            /** S_GET_SUIT_COLLECT_INFO configId. */
            public configId: number;

            /**
             * Encodes the specified S_GET_SUIT_COLLECT_INFO message. Does not implicitly {@link com.message.S_GET_SUIT_COLLECT_INFO.verify|verify} messages.
             * @param message S_GET_SUIT_COLLECT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SUIT_COLLECT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SUIT_COLLECT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SUIT_COLLECT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SUIT_COLLECT_INFO;
        }

        /** Properties of a S_SYNC_SUIT_COLLECT_UPDATE. */
        interface IS_SYNC_SUIT_COLLECT_UPDATE {

            /** S_SYNC_SUIT_COLLECT_UPDATE suitCollectInfo */
            suitCollectInfo?: (com.message.ISuitCollectMsg|null);
        }

        /** Represents a S_SYNC_SUIT_COLLECT_UPDATE. */
        class S_SYNC_SUIT_COLLECT_UPDATE implements IS_SYNC_SUIT_COLLECT_UPDATE {

            /**
             * Constructs a new S_SYNC_SUIT_COLLECT_UPDATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYNC_SUIT_COLLECT_UPDATE);

            /** S_SYNC_SUIT_COLLECT_UPDATE suitCollectInfo. */
            public suitCollectInfo?: (com.message.ISuitCollectMsg|null);

            /**
             * Encodes the specified S_SYNC_SUIT_COLLECT_UPDATE message. Does not implicitly {@link com.message.S_SYNC_SUIT_COLLECT_UPDATE.verify|verify} messages.
             * @param message S_SYNC_SUIT_COLLECT_UPDATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYNC_SUIT_COLLECT_UPDATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYNC_SUIT_COLLECT_UPDATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYNC_SUIT_COLLECT_UPDATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYNC_SUIT_COLLECT_UPDATE;
        }

        /** Properties of a C_GET_SUPER_GIFT_INFO. */
        interface IC_GET_SUPER_GIFT_INFO {
        }

        /** Represents a C_GET_SUPER_GIFT_INFO. */
        class C_GET_SUPER_GIFT_INFO implements IC_GET_SUPER_GIFT_INFO {

            /**
             * Constructs a new C_GET_SUPER_GIFT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SUPER_GIFT_INFO);

            /**
             * Encodes the specified C_GET_SUPER_GIFT_INFO message. Does not implicitly {@link com.message.C_GET_SUPER_GIFT_INFO.verify|verify} messages.
             * @param message C_GET_SUPER_GIFT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SUPER_GIFT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SUPER_GIFT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SUPER_GIFT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SUPER_GIFT_INFO;
        }

        /** Properties of a S_GET_SUPER_GIFT_INFO. */
        interface IS_GET_SUPER_GIFT_INFO {

            /** S_GET_SUPER_GIFT_INFO giftData */
            giftData?: (com.message.IGIFT_BAG_IFNO[]|null);
        }

        /** Represents a S_GET_SUPER_GIFT_INFO. */
        class S_GET_SUPER_GIFT_INFO implements IS_GET_SUPER_GIFT_INFO {

            /**
             * Constructs a new S_GET_SUPER_GIFT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SUPER_GIFT_INFO);

            /** S_GET_SUPER_GIFT_INFO giftData. */
            public giftData: com.message.IGIFT_BAG_IFNO[];

            /**
             * Encodes the specified S_GET_SUPER_GIFT_INFO message. Does not implicitly {@link com.message.S_GET_SUPER_GIFT_INFO.verify|verify} messages.
             * @param message S_GET_SUPER_GIFT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SUPER_GIFT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SUPER_GIFT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SUPER_GIFT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SUPER_GIFT_INFO;
        }

        /** Properties of a GIFT_BAG_IFNO. */
        interface IGIFT_BAG_IFNO {

            /** GIFT_BAG_IFNO typeId */
            typeId?: (number|null);

            /** GIFT_BAG_IFNO hadTimes */
            hadTimes?: (number|null);

            /** GIFT_BAG_IFNO buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a GIFT_BAG_IFNO. */
        class GIFT_BAG_IFNO implements IGIFT_BAG_IFNO {

            /**
             * Constructs a new GIFT_BAG_IFNO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IGIFT_BAG_IFNO);

            /** GIFT_BAG_IFNO typeId. */
            public typeId: number;

            /** GIFT_BAG_IFNO hadTimes. */
            public hadTimes: number;

            /** GIFT_BAG_IFNO buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified GIFT_BAG_IFNO message. Does not implicitly {@link com.message.GIFT_BAG_IFNO.verify|verify} messages.
             * @param message GIFT_BAG_IFNO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IGIFT_BAG_IFNO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a GIFT_BAG_IFNO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GIFT_BAG_IFNO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.GIFT_BAG_IFNO;
        }

        /** Properties of a C_BUY_SUPER_GIFT. */
        interface IC_BUY_SUPER_GIFT {

            /** C_BUY_SUPER_GIFT buyType */
            buyType?: (number|null);
        }

        /** Represents a C_BUY_SUPER_GIFT. */
        class C_BUY_SUPER_GIFT implements IC_BUY_SUPER_GIFT {

            /**
             * Constructs a new C_BUY_SUPER_GIFT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_SUPER_GIFT);

            /** C_BUY_SUPER_GIFT buyType. */
            public buyType: number;

            /**
             * Encodes the specified C_BUY_SUPER_GIFT message. Does not implicitly {@link com.message.C_BUY_SUPER_GIFT.verify|verify} messages.
             * @param message C_BUY_SUPER_GIFT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_SUPER_GIFT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_SUPER_GIFT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_SUPER_GIFT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_SUPER_GIFT;
        }

        /** Properties of a S_BUY_SUPER_GIFT. */
        interface IS_BUY_SUPER_GIFT {

            /** S_BUY_SUPER_GIFT buyType */
            buyType?: (number|null);

            /** S_BUY_SUPER_GIFT itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_BUY_SUPER_GIFT hadTimes */
            hadTimes?: (number|null);

            /** S_BUY_SUPER_GIFT buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_BUY_SUPER_GIFT. */
        class S_BUY_SUPER_GIFT implements IS_BUY_SUPER_GIFT {

            /**
             * Constructs a new S_BUY_SUPER_GIFT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_SUPER_GIFT);

            /** S_BUY_SUPER_GIFT buyType. */
            public buyType: number;

            /** S_BUY_SUPER_GIFT itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_BUY_SUPER_GIFT hadTimes. */
            public hadTimes: number;

            /** S_BUY_SUPER_GIFT buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_BUY_SUPER_GIFT message. Does not implicitly {@link com.message.S_BUY_SUPER_GIFT.verify|verify} messages.
             * @param message S_BUY_SUPER_GIFT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_SUPER_GIFT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_SUPER_GIFT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_SUPER_GIFT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_SUPER_GIFT;
        }

        /** Properties of a S_PUSH_SUPER_GIFT. */
        interface IS_PUSH_SUPER_GIFT {

            /** S_PUSH_SUPER_GIFT typeId */
            typeId?: (number|null);

            /** S_PUSH_SUPER_GIFT buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_PUSH_SUPER_GIFT. */
        class S_PUSH_SUPER_GIFT implements IS_PUSH_SUPER_GIFT {

            /**
             * Constructs a new S_PUSH_SUPER_GIFT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_PUSH_SUPER_GIFT);

            /** S_PUSH_SUPER_GIFT typeId. */
            public typeId: number;

            /** S_PUSH_SUPER_GIFT buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_PUSH_SUPER_GIFT message. Does not implicitly {@link com.message.S_PUSH_SUPER_GIFT.verify|verify} messages.
             * @param message S_PUSH_SUPER_GIFT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_PUSH_SUPER_GIFT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_PUSH_SUPER_GIFT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_PUSH_SUPER_GIFT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_PUSH_SUPER_GIFT;
        }

        /** Properties of a C_GET_SUPREME_INFO. */
        interface IC_GET_SUPREME_INFO {
        }

        /** Represents a C_GET_SUPREME_INFO. */
        class C_GET_SUPREME_INFO implements IC_GET_SUPREME_INFO {

            /**
             * Constructs a new C_GET_SUPREME_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SUPREME_INFO);

            /**
             * Encodes the specified C_GET_SUPREME_INFO message. Does not implicitly {@link com.message.C_GET_SUPREME_INFO.verify|verify} messages.
             * @param message C_GET_SUPREME_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SUPREME_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SUPREME_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SUPREME_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SUPREME_INFO;
        }

        /** Properties of a S_GET_SUPREME_INFO. */
        interface IS_GET_SUPREME_INFO {

            /** S_GET_SUPREME_INFO curLayer */
            curLayer?: (number|null);

            /** S_GET_SUPREME_INFO score */
            score?: (number|null);

            /** S_GET_SUPREME_INFO curKill */
            curKill?: (number|null);

            /** S_GET_SUPREME_INFO curRank */
            curRank?: (number|null);

            /** S_GET_SUPREME_INFO rewardId */
            rewardId?: (number|null);

            /** S_GET_SUPREME_INFO leaveTime */
            leaveTime?: (number|null);
        }

        /** Represents a S_GET_SUPREME_INFO. */
        class S_GET_SUPREME_INFO implements IS_GET_SUPREME_INFO {

            /**
             * Constructs a new S_GET_SUPREME_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SUPREME_INFO);

            /** S_GET_SUPREME_INFO curLayer. */
            public curLayer: number;

            /** S_GET_SUPREME_INFO score. */
            public score: number;

            /** S_GET_SUPREME_INFO curKill. */
            public curKill: number;

            /** S_GET_SUPREME_INFO curRank. */
            public curRank: number;

            /** S_GET_SUPREME_INFO rewardId. */
            public rewardId: number;

            /** S_GET_SUPREME_INFO leaveTime. */
            public leaveTime: number;

            /**
             * Encodes the specified S_GET_SUPREME_INFO message. Does not implicitly {@link com.message.S_GET_SUPREME_INFO.verify|verify} messages.
             * @param message S_GET_SUPREME_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SUPREME_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SUPREME_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SUPREME_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SUPREME_INFO;
        }

        /** Properties of a S_SYN_LAYER_NUM. */
        interface IS_SYN_LAYER_NUM {

            /** S_SYN_LAYER_NUM nums */
            nums?: (number|null);
        }

        /** Represents a S_SYN_LAYER_NUM. */
        class S_SYN_LAYER_NUM implements IS_SYN_LAYER_NUM {

            /**
             * Constructs a new S_SYN_LAYER_NUM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SYN_LAYER_NUM);

            /** S_SYN_LAYER_NUM nums. */
            public nums: number;

            /**
             * Encodes the specified S_SYN_LAYER_NUM message. Does not implicitly {@link com.message.S_SYN_LAYER_NUM.verify|verify} messages.
             * @param message S_SYN_LAYER_NUM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SYN_LAYER_NUM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SYN_LAYER_NUM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SYN_LAYER_NUM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SYN_LAYER_NUM;
        }

        /** Properties of a C_GET_SUPREME_RANK. */
        interface IC_GET_SUPREME_RANK {
        }

        /** Represents a C_GET_SUPREME_RANK. */
        class C_GET_SUPREME_RANK implements IC_GET_SUPREME_RANK {

            /**
             * Constructs a new C_GET_SUPREME_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SUPREME_RANK);

            /**
             * Encodes the specified C_GET_SUPREME_RANK message. Does not implicitly {@link com.message.C_GET_SUPREME_RANK.verify|verify} messages.
             * @param message C_GET_SUPREME_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SUPREME_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SUPREME_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SUPREME_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SUPREME_RANK;
        }

        /** Properties of a S_GET_SUPREME_RANK. */
        interface IS_GET_SUPREME_RANK {

            /** S_GET_SUPREME_RANK rank */
            rank?: (com.message.IRANK_INFO[]|null);
        }

        /** Represents a S_GET_SUPREME_RANK. */
        class S_GET_SUPREME_RANK implements IS_GET_SUPREME_RANK {

            /**
             * Constructs a new S_GET_SUPREME_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SUPREME_RANK);

            /** S_GET_SUPREME_RANK rank. */
            public rank: com.message.IRANK_INFO[];

            /**
             * Encodes the specified S_GET_SUPREME_RANK message. Does not implicitly {@link com.message.S_GET_SUPREME_RANK.verify|verify} messages.
             * @param message S_GET_SUPREME_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SUPREME_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SUPREME_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SUPREME_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SUPREME_RANK;
        }

        /** Properties of a RANK_INFO. */
        interface IRANK_INFO {

            /** RANK_INFO rank */
            rank?: (number|null);

            /** RANK_INFO playerId */
            playerId?: (number|Long|null);

            /** RANK_INFO score */
            score?: (number|null);

            /** RANK_INFO name */
            name?: (string|null);

            /** RANK_INFO layer */
            layer?: (number|null);
        }

        /** Represents a RANK_INFO. */
        class RANK_INFO implements IRANK_INFO {

            /**
             * Constructs a new RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IRANK_INFO);

            /** RANK_INFO rank. */
            public rank: number;

            /** RANK_INFO playerId. */
            public playerId: (number|Long);

            /** RANK_INFO score. */
            public score: number;

            /** RANK_INFO name. */
            public name: string;

            /** RANK_INFO layer. */
            public layer: number;

            /**
             * Encodes the specified RANK_INFO message. Does not implicitly {@link com.message.RANK_INFO.verify|verify} messages.
             * @param message RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IRANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.RANK_INFO;
        }

        /** Properties of a C_SUPREME_EXIT. */
        interface IC_SUPREME_EXIT {
        }

        /** Represents a C_SUPREME_EXIT. */
        class C_SUPREME_EXIT implements IC_SUPREME_EXIT {

            /**
             * Constructs a new C_SUPREME_EXIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SUPREME_EXIT);

            /**
             * Encodes the specified C_SUPREME_EXIT message. Does not implicitly {@link com.message.C_SUPREME_EXIT.verify|verify} messages.
             * @param message C_SUPREME_EXIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SUPREME_EXIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SUPREME_EXIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SUPREME_EXIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SUPREME_EXIT;
        }

        /** Properties of a S_SUPREME_EXIT. */
        interface IS_SUPREME_EXIT {
        }

        /** Represents a S_SUPREME_EXIT. */
        class S_SUPREME_EXIT implements IS_SUPREME_EXIT {

            /**
             * Constructs a new S_SUPREME_EXIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_EXIT);

            /**
             * Encodes the specified S_SUPREME_EXIT message. Does not implicitly {@link com.message.S_SUPREME_EXIT.verify|verify} messages.
             * @param message S_SUPREME_EXIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_EXIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_EXIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_EXIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_EXIT;
        }

        /** Properties of a C_SUPREME_AUTO_CHALLENGE. */
        interface IC_SUPREME_AUTO_CHALLENGE {
        }

        /** Represents a C_SUPREME_AUTO_CHALLENGE. */
        class C_SUPREME_AUTO_CHALLENGE implements IC_SUPREME_AUTO_CHALLENGE {

            /**
             * Constructs a new C_SUPREME_AUTO_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SUPREME_AUTO_CHALLENGE);

            /**
             * Encodes the specified C_SUPREME_AUTO_CHALLENGE message. Does not implicitly {@link com.message.C_SUPREME_AUTO_CHALLENGE.verify|verify} messages.
             * @param message C_SUPREME_AUTO_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SUPREME_AUTO_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SUPREME_AUTO_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SUPREME_AUTO_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SUPREME_AUTO_CHALLENGE;
        }

        /** Properties of a S_SUPREME_AUTO_CHALLENGE. */
        interface IS_SUPREME_AUTO_CHALLENGE {

            /** S_SUPREME_AUTO_CHALLENGE id */
            id?: (number|Long|null);

            /** S_SUPREME_AUTO_CHALLENGE type */
            type?: (number|null);
        }

        /** Represents a S_SUPREME_AUTO_CHALLENGE. */
        class S_SUPREME_AUTO_CHALLENGE implements IS_SUPREME_AUTO_CHALLENGE {

            /**
             * Constructs a new S_SUPREME_AUTO_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_AUTO_CHALLENGE);

            /** S_SUPREME_AUTO_CHALLENGE id. */
            public id: (number|Long);

            /** S_SUPREME_AUTO_CHALLENGE type. */
            public type: number;

            /**
             * Encodes the specified S_SUPREME_AUTO_CHALLENGE message. Does not implicitly {@link com.message.S_SUPREME_AUTO_CHALLENGE.verify|verify} messages.
             * @param message S_SUPREME_AUTO_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_AUTO_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_AUTO_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_AUTO_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_AUTO_CHALLENGE;
        }

        /** Properties of a C_GET_SUPREME_REWARD. */
        interface IC_GET_SUPREME_REWARD {

            /** C_GET_SUPREME_REWARD id */
            id?: (number|null);
        }

        /** Represents a C_GET_SUPREME_REWARD. */
        class C_GET_SUPREME_REWARD implements IC_GET_SUPREME_REWARD {

            /**
             * Constructs a new C_GET_SUPREME_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_SUPREME_REWARD);

            /** C_GET_SUPREME_REWARD id. */
            public id: number;

            /**
             * Encodes the specified C_GET_SUPREME_REWARD message. Does not implicitly {@link com.message.C_GET_SUPREME_REWARD.verify|verify} messages.
             * @param message C_GET_SUPREME_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_SUPREME_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_SUPREME_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_SUPREME_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_SUPREME_REWARD;
        }

        /** Properties of a S_GET_SUPREME_REWARD. */
        interface IS_GET_SUPREME_REWARD {

            /** S_GET_SUPREME_REWARD id */
            id?: (number|null);
        }

        /** Represents a S_GET_SUPREME_REWARD. */
        class S_GET_SUPREME_REWARD implements IS_GET_SUPREME_REWARD {

            /**
             * Constructs a new S_GET_SUPREME_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_SUPREME_REWARD);

            /** S_GET_SUPREME_REWARD id. */
            public id: number;

            /**
             * Encodes the specified S_GET_SUPREME_REWARD message. Does not implicitly {@link com.message.S_GET_SUPREME_REWARD.verify|verify} messages.
             * @param message S_GET_SUPREME_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_SUPREME_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_SUPREME_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_SUPREME_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_SUPREME_REWARD;
        }

        /** Properties of a S_SUPREME_SEND_REVICE_TIME. */
        interface IS_SUPREME_SEND_REVICE_TIME {

            /** S_SUPREME_SEND_REVICE_TIME riviveTime */
            riviveTime?: (number|Long|null);
        }

        /** Represents a S_SUPREME_SEND_REVICE_TIME. */
        class S_SUPREME_SEND_REVICE_TIME implements IS_SUPREME_SEND_REVICE_TIME {

            /**
             * Constructs a new S_SUPREME_SEND_REVICE_TIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_SEND_REVICE_TIME);

            /** S_SUPREME_SEND_REVICE_TIME riviveTime. */
            public riviveTime: (number|Long);

            /**
             * Encodes the specified S_SUPREME_SEND_REVICE_TIME message. Does not implicitly {@link com.message.S_SUPREME_SEND_REVICE_TIME.verify|verify} messages.
             * @param message S_SUPREME_SEND_REVICE_TIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_SEND_REVICE_TIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_SEND_REVICE_TIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_SEND_REVICE_TIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_SEND_REVICE_TIME;
        }

        /** Properties of a C_SUPREME_BUY_REVIVE. */
        interface IC_SUPREME_BUY_REVIVE {
        }

        /** Represents a C_SUPREME_BUY_REVIVE. */
        class C_SUPREME_BUY_REVIVE implements IC_SUPREME_BUY_REVIVE {

            /**
             * Constructs a new C_SUPREME_BUY_REVIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SUPREME_BUY_REVIVE);

            /**
             * Encodes the specified C_SUPREME_BUY_REVIVE message. Does not implicitly {@link com.message.C_SUPREME_BUY_REVIVE.verify|verify} messages.
             * @param message C_SUPREME_BUY_REVIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SUPREME_BUY_REVIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SUPREME_BUY_REVIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SUPREME_BUY_REVIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SUPREME_BUY_REVIVE;
        }

        /** Properties of a S_SUPREME_BUY_REVIVE. */
        interface IS_SUPREME_BUY_REVIVE {
        }

        /** Represents a S_SUPREME_BUY_REVIVE. */
        class S_SUPREME_BUY_REVIVE implements IS_SUPREME_BUY_REVIVE {

            /**
             * Constructs a new S_SUPREME_BUY_REVIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_BUY_REVIVE);

            /**
             * Encodes the specified S_SUPREME_BUY_REVIVE message. Does not implicitly {@link com.message.S_SUPREME_BUY_REVIVE.verify|verify} messages.
             * @param message S_SUPREME_BUY_REVIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_BUY_REVIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_BUY_REVIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_BUY_REVIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_BUY_REVIVE;
        }

        /** Properties of a S_SUPREME_SEND_KILL. */
        interface IS_SUPREME_SEND_KILL {

            /** S_SUPREME_SEND_KILL curKill */
            curKill?: (number|null);
        }

        /** Represents a S_SUPREME_SEND_KILL. */
        class S_SUPREME_SEND_KILL implements IS_SUPREME_SEND_KILL {

            /**
             * Constructs a new S_SUPREME_SEND_KILL.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_SEND_KILL);

            /** S_SUPREME_SEND_KILL curKill. */
            public curKill: number;

            /**
             * Encodes the specified S_SUPREME_SEND_KILL message. Does not implicitly {@link com.message.S_SUPREME_SEND_KILL.verify|verify} messages.
             * @param message S_SUPREME_SEND_KILL message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_SEND_KILL, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_SEND_KILL message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_SEND_KILL
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_SEND_KILL;
        }

        /** Properties of a S_SUPREME_UP_DOWN_LAYER. */
        interface IS_SUPREME_UP_DOWN_LAYER {

            /** S_SUPREME_UP_DOWN_LAYER curLayer */
            curLayer?: (number|null);
        }

        /** Represents a S_SUPREME_UP_DOWN_LAYER. */
        class S_SUPREME_UP_DOWN_LAYER implements IS_SUPREME_UP_DOWN_LAYER {

            /**
             * Constructs a new S_SUPREME_UP_DOWN_LAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_UP_DOWN_LAYER);

            /** S_SUPREME_UP_DOWN_LAYER curLayer. */
            public curLayer: number;

            /**
             * Encodes the specified S_SUPREME_UP_DOWN_LAYER message. Does not implicitly {@link com.message.S_SUPREME_UP_DOWN_LAYER.verify|verify} messages.
             * @param message S_SUPREME_UP_DOWN_LAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_UP_DOWN_LAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_UP_DOWN_LAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_UP_DOWN_LAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_UP_DOWN_LAYER;
        }

        /** Properties of a S_SUPREME_SEND_SCORE. */
        interface IS_SUPREME_SEND_SCORE {

            /** S_SUPREME_SEND_SCORE score */
            score?: (number|null);

            /** S_SUPREME_SEND_SCORE rank */
            rank?: (number|null);
        }

        /** Represents a S_SUPREME_SEND_SCORE. */
        class S_SUPREME_SEND_SCORE implements IS_SUPREME_SEND_SCORE {

            /**
             * Constructs a new S_SUPREME_SEND_SCORE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_SEND_SCORE);

            /** S_SUPREME_SEND_SCORE score. */
            public score: number;

            /** S_SUPREME_SEND_SCORE rank. */
            public rank: number;

            /**
             * Encodes the specified S_SUPREME_SEND_SCORE message. Does not implicitly {@link com.message.S_SUPREME_SEND_SCORE.verify|verify} messages.
             * @param message S_SUPREME_SEND_SCORE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_SEND_SCORE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_SEND_SCORE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_SEND_SCORE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_SEND_SCORE;
        }

        /** Properties of a S_SUPREME_OVER. */
        interface IS_SUPREME_OVER {

            /** S_SUPREME_OVER playerId */
            playerId?: (number|Long|null);

            /** S_SUPREME_OVER name */
            name?: (string|null);

            /** S_SUPREME_OVER heroId */
            heroId?: (number|Long|null);

            /** S_SUPREME_OVER rank */
            rank?: (number|null);

            /** S_SUPREME_OVER score */
            score?: (number|null);

            /** S_SUPREME_OVER itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_SUPREME_OVER level */
            level?: (number|null);

            /** S_SUPREME_OVER heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a S_SUPREME_OVER. */
        class S_SUPREME_OVER implements IS_SUPREME_OVER {

            /**
             * Constructs a new S_SUPREME_OVER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SUPREME_OVER);

            /** S_SUPREME_OVER playerId. */
            public playerId: (number|Long);

            /** S_SUPREME_OVER name. */
            public name: string;

            /** S_SUPREME_OVER heroId. */
            public heroId: (number|Long);

            /** S_SUPREME_OVER rank. */
            public rank: number;

            /** S_SUPREME_OVER score. */
            public score: number;

            /** S_SUPREME_OVER itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_SUPREME_OVER level. */
            public level: number;

            /** S_SUPREME_OVER heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified S_SUPREME_OVER message. Does not implicitly {@link com.message.S_SUPREME_OVER.verify|verify} messages.
             * @param message S_SUPREME_OVER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SUPREME_OVER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SUPREME_OVER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SUPREME_OVER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SUPREME_OVER;
        }

        /** Properties of a CROSS_C_SUPREME_ENTER. */
        interface ICROSS_C_SUPREME_ENTER {

            /** CROSS_C_SUPREME_ENTER playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_SUPREME_ENTER curLayer */
            curLayer?: (number|null);

            /** CROSS_C_SUPREME_ENTER score */
            score?: (number|null);

            /** CROSS_C_SUPREME_ENTER curKill */
            curKill?: (number|null);

            /** CROSS_C_SUPREME_ENTER playerMsg */
            playerMsg?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_C_SUPREME_ENTER. */
        class CROSS_C_SUPREME_ENTER implements ICROSS_C_SUPREME_ENTER {

            /**
             * Constructs a new CROSS_C_SUPREME_ENTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SUPREME_ENTER);

            /** CROSS_C_SUPREME_ENTER playerId. */
            public playerId: (number|Long);

            /** CROSS_C_SUPREME_ENTER curLayer. */
            public curLayer: number;

            /** CROSS_C_SUPREME_ENTER score. */
            public score: number;

            /** CROSS_C_SUPREME_ENTER curKill. */
            public curKill: number;

            /** CROSS_C_SUPREME_ENTER playerMsg. */
            public playerMsg?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_C_SUPREME_ENTER message. Does not implicitly {@link com.message.CROSS_C_SUPREME_ENTER.verify|verify} messages.
             * @param message CROSS_C_SUPREME_ENTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SUPREME_ENTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SUPREME_ENTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SUPREME_ENTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SUPREME_ENTER;
        }

        /** Properties of a CROSS_C_SUPREME_EXIT. */
        interface ICROSS_C_SUPREME_EXIT {

            /** CROSS_C_SUPREME_EXIT playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_SUPREME_EXIT. */
        class CROSS_C_SUPREME_EXIT implements ICROSS_C_SUPREME_EXIT {

            /**
             * Constructs a new CROSS_C_SUPREME_EXIT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SUPREME_EXIT);

            /** CROSS_C_SUPREME_EXIT playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_SUPREME_EXIT message. Does not implicitly {@link com.message.CROSS_C_SUPREME_EXIT.verify|verify} messages.
             * @param message CROSS_C_SUPREME_EXIT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SUPREME_EXIT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SUPREME_EXIT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SUPREME_EXIT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SUPREME_EXIT;
        }

        /** Properties of a CROSS_S_SYN_LAYER_NUM. */
        interface ICROSS_S_SYN_LAYER_NUM {

            /** CROSS_S_SYN_LAYER_NUM playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_SYN_LAYER_NUM layerNum */
            layerNum?: (number|null);
        }

        /** Represents a CROSS_S_SYN_LAYER_NUM. */
        class CROSS_S_SYN_LAYER_NUM implements ICROSS_S_SYN_LAYER_NUM {

            /**
             * Constructs a new CROSS_S_SYN_LAYER_NUM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SYN_LAYER_NUM);

            /** CROSS_S_SYN_LAYER_NUM playerId. */
            public playerId: (number|Long);

            /** CROSS_S_SYN_LAYER_NUM layerNum. */
            public layerNum: number;

            /**
             * Encodes the specified CROSS_S_SYN_LAYER_NUM message. Does not implicitly {@link com.message.CROSS_S_SYN_LAYER_NUM.verify|verify} messages.
             * @param message CROSS_S_SYN_LAYER_NUM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SYN_LAYER_NUM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SYN_LAYER_NUM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SYN_LAYER_NUM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SYN_LAYER_NUM;
        }

        /** Properties of a CROSS_S_SYN_BATTLE_INFO. */
        interface ICROSS_S_SYN_BATTLE_INFO {

            /** CROSS_S_SYN_BATTLE_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_SYN_BATTLE_INFO curLayer */
            curLayer?: (number|null);

            /** CROSS_S_SYN_BATTLE_INFO score */
            score?: (number|null);

            /** CROSS_S_SYN_BATTLE_INFO curKill */
            curKill?: (number|null);

            /** CROSS_S_SYN_BATTLE_INFO rank */
            rank?: (number|null);
        }

        /** Represents a CROSS_S_SYN_BATTLE_INFO. */
        class CROSS_S_SYN_BATTLE_INFO implements ICROSS_S_SYN_BATTLE_INFO {

            /**
             * Constructs a new CROSS_S_SYN_BATTLE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SYN_BATTLE_INFO);

            /** CROSS_S_SYN_BATTLE_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_SYN_BATTLE_INFO curLayer. */
            public curLayer: number;

            /** CROSS_S_SYN_BATTLE_INFO score. */
            public score: number;

            /** CROSS_S_SYN_BATTLE_INFO curKill. */
            public curKill: number;

            /** CROSS_S_SYN_BATTLE_INFO rank. */
            public rank: number;

            /**
             * Encodes the specified CROSS_S_SYN_BATTLE_INFO message. Does not implicitly {@link com.message.CROSS_S_SYN_BATTLE_INFO.verify|verify} messages.
             * @param message CROSS_S_SYN_BATTLE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SYN_BATTLE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SYN_BATTLE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SYN_BATTLE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SYN_BATTLE_INFO;
        }

        /** Properties of a CROSS_C_GET_SUPREME_RANK. */
        interface ICROSS_C_GET_SUPREME_RANK {

            /** CROSS_C_GET_SUPREME_RANK playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_SUPREME_RANK. */
        class CROSS_C_GET_SUPREME_RANK implements ICROSS_C_GET_SUPREME_RANK {

            /**
             * Constructs a new CROSS_C_GET_SUPREME_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_SUPREME_RANK);

            /** CROSS_C_GET_SUPREME_RANK playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_SUPREME_RANK message. Does not implicitly {@link com.message.CROSS_C_GET_SUPREME_RANK.verify|verify} messages.
             * @param message CROSS_C_GET_SUPREME_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_SUPREME_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_SUPREME_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_SUPREME_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_SUPREME_RANK;
        }

        /** Properties of a CROSS_S_GET_SUPREME_RANK. */
        interface ICROSS_S_GET_SUPREME_RANK {

            /** CROSS_S_GET_SUPREME_RANK playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_SUPREME_RANK rank */
            rank?: (com.message.IRANK_INFO[]|null);
        }

        /** Represents a CROSS_S_GET_SUPREME_RANK. */
        class CROSS_S_GET_SUPREME_RANK implements ICROSS_S_GET_SUPREME_RANK {

            /**
             * Constructs a new CROSS_S_GET_SUPREME_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_SUPREME_RANK);

            /** CROSS_S_GET_SUPREME_RANK playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_SUPREME_RANK rank. */
            public rank: com.message.IRANK_INFO[];

            /**
             * Encodes the specified CROSS_S_GET_SUPREME_RANK message. Does not implicitly {@link com.message.CROSS_S_GET_SUPREME_RANK.verify|verify} messages.
             * @param message CROSS_S_GET_SUPREME_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_SUPREME_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_SUPREME_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_SUPREME_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_SUPREME_RANK;
        }

        /** Properties of a CROSS_S_SUPREME_UP_DOWN_LAYER. */
        interface ICROSS_S_SUPREME_UP_DOWN_LAYER {

            /** CROSS_S_SUPREME_UP_DOWN_LAYER playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_SUPREME_UP_DOWN_LAYER curLayer */
            curLayer?: (number|null);
        }

        /** Represents a CROSS_S_SUPREME_UP_DOWN_LAYER. */
        class CROSS_S_SUPREME_UP_DOWN_LAYER implements ICROSS_S_SUPREME_UP_DOWN_LAYER {

            /**
             * Constructs a new CROSS_S_SUPREME_UP_DOWN_LAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SUPREME_UP_DOWN_LAYER);

            /** CROSS_S_SUPREME_UP_DOWN_LAYER playerId. */
            public playerId: (number|Long);

            /** CROSS_S_SUPREME_UP_DOWN_LAYER curLayer. */
            public curLayer: number;

            /**
             * Encodes the specified CROSS_S_SUPREME_UP_DOWN_LAYER message. Does not implicitly {@link com.message.CROSS_S_SUPREME_UP_DOWN_LAYER.verify|verify} messages.
             * @param message CROSS_S_SUPREME_UP_DOWN_LAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SUPREME_UP_DOWN_LAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SUPREME_UP_DOWN_LAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SUPREME_UP_DOWN_LAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SUPREME_UP_DOWN_LAYER;
        }

        /** Properties of a CROSS_S_SUPREME_SEND_SCORE. */
        interface ICROSS_S_SUPREME_SEND_SCORE {

            /** CROSS_S_SUPREME_SEND_SCORE playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_SUPREME_SEND_SCORE score */
            score?: (number|null);

            /** CROSS_S_SUPREME_SEND_SCORE rank */
            rank?: (number|null);
        }

        /** Represents a CROSS_S_SUPREME_SEND_SCORE. */
        class CROSS_S_SUPREME_SEND_SCORE implements ICROSS_S_SUPREME_SEND_SCORE {

            /**
             * Constructs a new CROSS_S_SUPREME_SEND_SCORE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SUPREME_SEND_SCORE);

            /** CROSS_S_SUPREME_SEND_SCORE playerId. */
            public playerId: (number|Long);

            /** CROSS_S_SUPREME_SEND_SCORE score. */
            public score: number;

            /** CROSS_S_SUPREME_SEND_SCORE rank. */
            public rank: number;

            /**
             * Encodes the specified CROSS_S_SUPREME_SEND_SCORE message. Does not implicitly {@link com.message.CROSS_S_SUPREME_SEND_SCORE.verify|verify} messages.
             * @param message CROSS_S_SUPREME_SEND_SCORE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SUPREME_SEND_SCORE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SUPREME_SEND_SCORE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SUPREME_SEND_SCORE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SUPREME_SEND_SCORE;
        }

        /** Properties of a CROSS_S_SUPREME_OVER. */
        interface ICROSS_S_SUPREME_OVER {

            /** CROSS_S_SUPREME_OVER playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_SUPREME_OVER name */
            name?: (string|null);

            /** CROSS_S_SUPREME_OVER heroId */
            heroId?: (number|null);

            /** CROSS_S_SUPREME_OVER rank */
            rank?: (number|null);

            /** CROSS_S_SUPREME_OVER score */
            score?: (number|null);

            /** CROSS_S_SUPREME_OVER level */
            level?: (number|null);

            /** CROSS_S_SUPREME_OVER youId */
            youId?: (number|Long|null);

            /** CROSS_S_SUPREME_OVER heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a CROSS_S_SUPREME_OVER. */
        class CROSS_S_SUPREME_OVER implements ICROSS_S_SUPREME_OVER {

            /**
             * Constructs a new CROSS_S_SUPREME_OVER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SUPREME_OVER);

            /** CROSS_S_SUPREME_OVER playerId. */
            public playerId: (number|Long);

            /** CROSS_S_SUPREME_OVER name. */
            public name: string;

            /** CROSS_S_SUPREME_OVER heroId. */
            public heroId: number;

            /** CROSS_S_SUPREME_OVER rank. */
            public rank: number;

            /** CROSS_S_SUPREME_OVER score. */
            public score: number;

            /** CROSS_S_SUPREME_OVER level. */
            public level: number;

            /** CROSS_S_SUPREME_OVER youId. */
            public youId: (number|Long);

            /** CROSS_S_SUPREME_OVER heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified CROSS_S_SUPREME_OVER message. Does not implicitly {@link com.message.CROSS_S_SUPREME_OVER.verify|verify} messages.
             * @param message CROSS_S_SUPREME_OVER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SUPREME_OVER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SUPREME_OVER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SUPREME_OVER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SUPREME_OVER;
        }

        /** Properties of a CROSS_C_SUPREME_AUTO_CHALLENGE. */
        interface ICROSS_C_SUPREME_AUTO_CHALLENGE {

            /** CROSS_C_SUPREME_AUTO_CHALLENGE playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_SUPREME_AUTO_CHALLENGE. */
        class CROSS_C_SUPREME_AUTO_CHALLENGE implements ICROSS_C_SUPREME_AUTO_CHALLENGE {

            /**
             * Constructs a new CROSS_C_SUPREME_AUTO_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SUPREME_AUTO_CHALLENGE);

            /** CROSS_C_SUPREME_AUTO_CHALLENGE playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_SUPREME_AUTO_CHALLENGE message. Does not implicitly {@link com.message.CROSS_C_SUPREME_AUTO_CHALLENGE.verify|verify} messages.
             * @param message CROSS_C_SUPREME_AUTO_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SUPREME_AUTO_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SUPREME_AUTO_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SUPREME_AUTO_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SUPREME_AUTO_CHALLENGE;
        }

        /** Properties of a CROSS_S_SUPREME_AUTO_CHALLENGE. */
        interface ICROSS_S_SUPREME_AUTO_CHALLENGE {

            /** CROSS_S_SUPREME_AUTO_CHALLENGE playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_SUPREME_AUTO_CHALLENGE id */
            id?: (number|Long|null);

            /** CROSS_S_SUPREME_AUTO_CHALLENGE type */
            type?: (number|null);
        }

        /** Represents a CROSS_S_SUPREME_AUTO_CHALLENGE. */
        class CROSS_S_SUPREME_AUTO_CHALLENGE implements ICROSS_S_SUPREME_AUTO_CHALLENGE {

            /**
             * Constructs a new CROSS_S_SUPREME_AUTO_CHALLENGE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SUPREME_AUTO_CHALLENGE);

            /** CROSS_S_SUPREME_AUTO_CHALLENGE playerId. */
            public playerId: (number|Long);

            /** CROSS_S_SUPREME_AUTO_CHALLENGE id. */
            public id: (number|Long);

            /** CROSS_S_SUPREME_AUTO_CHALLENGE type. */
            public type: number;

            /**
             * Encodes the specified CROSS_S_SUPREME_AUTO_CHALLENGE message. Does not implicitly {@link com.message.CROSS_S_SUPREME_AUTO_CHALLENGE.verify|verify} messages.
             * @param message CROSS_S_SUPREME_AUTO_CHALLENGE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SUPREME_AUTO_CHALLENGE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SUPREME_AUTO_CHALLENGE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SUPREME_AUTO_CHALLENGE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SUPREME_AUTO_CHALLENGE;
        }

        /** Properties of a C_GET_TEAM_INFO. */
        interface IC_GET_TEAM_INFO {

            /** C_GET_TEAM_INFO instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_GET_TEAM_INFO. */
        class C_GET_TEAM_INFO implements IC_GET_TEAM_INFO {

            /**
             * Constructs a new C_GET_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TEAM_INFO);

            /** C_GET_TEAM_INFO instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_GET_TEAM_INFO message. Does not implicitly {@link com.message.C_GET_TEAM_INFO.verify|verify} messages.
             * @param message C_GET_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TEAM_INFO;
        }

        /** Properties of a S_GET_TEAM_INFO. */
        interface IS_GET_TEAM_INFO {

            /** S_GET_TEAM_INFO teams */
            teams?: (com.message.IMATCH_TEAM_INFO[]|null);
        }

        /** Represents a S_GET_TEAM_INFO. */
        class S_GET_TEAM_INFO implements IS_GET_TEAM_INFO {

            /**
             * Constructs a new S_GET_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TEAM_INFO);

            /** S_GET_TEAM_INFO teams. */
            public teams: com.message.IMATCH_TEAM_INFO[];

            /**
             * Encodes the specified S_GET_TEAM_INFO message. Does not implicitly {@link com.message.S_GET_TEAM_INFO.verify|verify} messages.
             * @param message S_GET_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TEAM_INFO;
        }

        /** Properties of a MATCH_TEAM_INFO. */
        interface IMATCH_TEAM_INFO {

            /** MATCH_TEAM_INFO teamId */
            teamId?: (number|null);

            /** MATCH_TEAM_INFO heroId */
            heroId?: (number|null);

            /** MATCH_TEAM_INFO name */
            name?: (string|null);

            /** MATCH_TEAM_INFO num */
            num?: (number|null);

            /** MATCH_TEAM_INFO heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a MATCH_TEAM_INFO. */
        class MATCH_TEAM_INFO implements IMATCH_TEAM_INFO {

            /**
             * Constructs a new MATCH_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMATCH_TEAM_INFO);

            /** MATCH_TEAM_INFO teamId. */
            public teamId: number;

            /** MATCH_TEAM_INFO heroId. */
            public heroId: number;

            /** MATCH_TEAM_INFO name. */
            public name: string;

            /** MATCH_TEAM_INFO num. */
            public num: number;

            /** MATCH_TEAM_INFO heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified MATCH_TEAM_INFO message. Does not implicitly {@link com.message.MATCH_TEAM_INFO.verify|verify} messages.
             * @param message MATCH_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMATCH_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MATCH_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MATCH_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MATCH_TEAM_INFO;
        }

        /** Properties of a C_GET_TEAM_INSTANCE_INFO. */
        interface IC_GET_TEAM_INSTANCE_INFO {
        }

        /** Represents a C_GET_TEAM_INSTANCE_INFO. */
        class C_GET_TEAM_INSTANCE_INFO implements IC_GET_TEAM_INSTANCE_INFO {

            /**
             * Constructs a new C_GET_TEAM_INSTANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TEAM_INSTANCE_INFO);

            /**
             * Encodes the specified C_GET_TEAM_INSTANCE_INFO message. Does not implicitly {@link com.message.C_GET_TEAM_INSTANCE_INFO.verify|verify} messages.
             * @param message C_GET_TEAM_INSTANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TEAM_INSTANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TEAM_INSTANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TEAM_INSTANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TEAM_INSTANCE_INFO;
        }

        /** Properties of a S_GET_TEAM_INSTANCE_INFO. */
        interface IS_GET_TEAM_INSTANCE_INFO {

            /** S_GET_TEAM_INSTANCE_INFO times */
            times?: (number|null);

            /** S_GET_TEAM_INSTANCE_INFO instanceId */
            instanceId?: (number[]|null);

            /** S_GET_TEAM_INSTANCE_INFO pos1 */
            pos1?: (number|null);

            /** S_GET_TEAM_INSTANCE_INFO pos2 */
            pos2?: (number|null);
        }

        /** Represents a S_GET_TEAM_INSTANCE_INFO. */
        class S_GET_TEAM_INSTANCE_INFO implements IS_GET_TEAM_INSTANCE_INFO {

            /**
             * Constructs a new S_GET_TEAM_INSTANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TEAM_INSTANCE_INFO);

            /** S_GET_TEAM_INSTANCE_INFO times. */
            public times: number;

            /** S_GET_TEAM_INSTANCE_INFO instanceId. */
            public instanceId: number[];

            /** S_GET_TEAM_INSTANCE_INFO pos1. */
            public pos1: number;

            /** S_GET_TEAM_INSTANCE_INFO pos2. */
            public pos2: number;

            /**
             * Encodes the specified S_GET_TEAM_INSTANCE_INFO message. Does not implicitly {@link com.message.S_GET_TEAM_INSTANCE_INFO.verify|verify} messages.
             * @param message S_GET_TEAM_INSTANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TEAM_INSTANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TEAM_INSTANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TEAM_INSTANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TEAM_INSTANCE_INFO;
        }

        /** Properties of a TEAM_INFO. */
        interface ITEAM_INFO {

            /** TEAM_INFO teamId */
            teamId?: (number|null);

            /** TEAM_INFO instanceId */
            instanceId?: (number|null);

            /** TEAM_INFO teamInfo1 */
            teamInfo1?: (com.message.ITEAM_MEMBER_INFO|null);

            /** TEAM_INFO teamInfo2 */
            teamInfo2?: (com.message.ITEAM_MEMBER_INFO|null);

            /** TEAM_INFO teamInfo3 */
            teamInfo3?: (com.message.ITEAM_MEMBER_INFO|null);
        }

        /** Represents a TEAM_INFO. */
        class TEAM_INFO implements ITEAM_INFO {

            /**
             * Constructs a new TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITEAM_INFO);

            /** TEAM_INFO teamId. */
            public teamId: number;

            /** TEAM_INFO instanceId. */
            public instanceId: number;

            /** TEAM_INFO teamInfo1. */
            public teamInfo1?: (com.message.ITEAM_MEMBER_INFO|null);

            /** TEAM_INFO teamInfo2. */
            public teamInfo2?: (com.message.ITEAM_MEMBER_INFO|null);

            /** TEAM_INFO teamInfo3. */
            public teamInfo3?: (com.message.ITEAM_MEMBER_INFO|null);

            /**
             * Encodes the specified TEAM_INFO message. Does not implicitly {@link com.message.TEAM_INFO.verify|verify} messages.
             * @param message TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TEAM_INFO;
        }

        /** Properties of a TEAM_MEMBER_INFO. */
        interface ITEAM_MEMBER_INFO {

            /** TEAM_MEMBER_INFO name */
            name?: (string|null);

            /** TEAM_MEMBER_INFO plyaerId */
            plyaerId?: (number|Long|null);

            /** TEAM_MEMBER_INFO pos1 */
            pos1?: (number|null);

            /** TEAM_MEMBER_INFO pos2 */
            pos2?: (number|null);

            /** TEAM_MEMBER_INFO serverId */
            serverId?: (number|null);

            /** TEAM_MEMBER_INFO level */
            level?: (number|null);

            /** TEAM_MEMBER_INFO heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a TEAM_MEMBER_INFO. */
        class TEAM_MEMBER_INFO implements ITEAM_MEMBER_INFO {

            /**
             * Constructs a new TEAM_MEMBER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITEAM_MEMBER_INFO);

            /** TEAM_MEMBER_INFO name. */
            public name: string;

            /** TEAM_MEMBER_INFO plyaerId. */
            public plyaerId: (number|Long);

            /** TEAM_MEMBER_INFO pos1. */
            public pos1: number;

            /** TEAM_MEMBER_INFO pos2. */
            public pos2: number;

            /** TEAM_MEMBER_INFO serverId. */
            public serverId: number;

            /** TEAM_MEMBER_INFO level. */
            public level: number;

            /** TEAM_MEMBER_INFO heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified TEAM_MEMBER_INFO message. Does not implicitly {@link com.message.TEAM_MEMBER_INFO.verify|verify} messages.
             * @param message TEAM_MEMBER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITEAM_MEMBER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TEAM_MEMBER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TEAM_MEMBER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TEAM_MEMBER_INFO;
        }

        /** Properties of a C_JOIN_TEAM. */
        interface IC_JOIN_TEAM {

            /** C_JOIN_TEAM instanceId */
            instanceId?: (number|null);

            /** C_JOIN_TEAM teamId */
            teamId?: (number|null);
        }

        /** Represents a C_JOIN_TEAM. */
        class C_JOIN_TEAM implements IC_JOIN_TEAM {

            /**
             * Constructs a new C_JOIN_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_JOIN_TEAM);

            /** C_JOIN_TEAM instanceId. */
            public instanceId: number;

            /** C_JOIN_TEAM teamId. */
            public teamId: number;

            /**
             * Encodes the specified C_JOIN_TEAM message. Does not implicitly {@link com.message.C_JOIN_TEAM.verify|verify} messages.
             * @param message C_JOIN_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_JOIN_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_JOIN_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_JOIN_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_JOIN_TEAM;
        }

        /** Properties of a S_JOIN_TEAM. */
        interface IS_JOIN_TEAM {

            /** S_JOIN_TEAM teaminfo */
            teaminfo?: (com.message.ITEAM_INFO|null);
        }

        /** Represents a S_JOIN_TEAM. */
        class S_JOIN_TEAM implements IS_JOIN_TEAM {

            /**
             * Constructs a new S_JOIN_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_JOIN_TEAM);

            /** S_JOIN_TEAM teaminfo. */
            public teaminfo?: (com.message.ITEAM_INFO|null);

            /**
             * Encodes the specified S_JOIN_TEAM message. Does not implicitly {@link com.message.S_JOIN_TEAM.verify|verify} messages.
             * @param message S_JOIN_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_JOIN_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_JOIN_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_JOIN_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_JOIN_TEAM;
        }

        /** Properties of a C_QUICK_JOIN_TEAM. */
        interface IC_QUICK_JOIN_TEAM {

            /** C_QUICK_JOIN_TEAM instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_QUICK_JOIN_TEAM. */
        class C_QUICK_JOIN_TEAM implements IC_QUICK_JOIN_TEAM {

            /**
             * Constructs a new C_QUICK_JOIN_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_QUICK_JOIN_TEAM);

            /** C_QUICK_JOIN_TEAM instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_QUICK_JOIN_TEAM message. Does not implicitly {@link com.message.C_QUICK_JOIN_TEAM.verify|verify} messages.
             * @param message C_QUICK_JOIN_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_QUICK_JOIN_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_QUICK_JOIN_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_QUICK_JOIN_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_QUICK_JOIN_TEAM;
        }

        /** Properties of a C_EXIT_TEAM. */
        interface IC_EXIT_TEAM {
        }

        /** Represents a C_EXIT_TEAM. */
        class C_EXIT_TEAM implements IC_EXIT_TEAM {

            /**
             * Constructs a new C_EXIT_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EXIT_TEAM);

            /**
             * Encodes the specified C_EXIT_TEAM message. Does not implicitly {@link com.message.C_EXIT_TEAM.verify|verify} messages.
             * @param message C_EXIT_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EXIT_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EXIT_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EXIT_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EXIT_TEAM;
        }

        /** Properties of a S_EXIT_TEAM. */
        interface IS_EXIT_TEAM {
        }

        /** Represents a S_EXIT_TEAM. */
        class S_EXIT_TEAM implements IS_EXIT_TEAM {

            /**
             * Constructs a new S_EXIT_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EXIT_TEAM);

            /**
             * Encodes the specified S_EXIT_TEAM message. Does not implicitly {@link com.message.S_EXIT_TEAM.verify|verify} messages.
             * @param message S_EXIT_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EXIT_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EXIT_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EXIT_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EXIT_TEAM;
        }

        /** Properties of a S_UPDATE_TEAM. */
        interface IS_UPDATE_TEAM {

            /** S_UPDATE_TEAM teaminfo */
            teaminfo?: (com.message.ITEAM_INFO|null);
        }

        /** Represents a S_UPDATE_TEAM. */
        class S_UPDATE_TEAM implements IS_UPDATE_TEAM {

            /**
             * Constructs a new S_UPDATE_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPDATE_TEAM);

            /** S_UPDATE_TEAM teaminfo. */
            public teaminfo?: (com.message.ITEAM_INFO|null);

            /**
             * Encodes the specified S_UPDATE_TEAM message. Does not implicitly {@link com.message.S_UPDATE_TEAM.verify|verify} messages.
             * @param message S_UPDATE_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPDATE_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPDATE_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPDATE_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPDATE_TEAM;
        }

        /** Properties of a C_SET_TEAM_HERO_POS. */
        interface IC_SET_TEAM_HERO_POS {

            /** C_SET_TEAM_HERO_POS pos1 */
            pos1?: (number|null);

            /** C_SET_TEAM_HERO_POS pos2 */
            pos2?: (number|null);
        }

        /** Represents a C_SET_TEAM_HERO_POS. */
        class C_SET_TEAM_HERO_POS implements IC_SET_TEAM_HERO_POS {

            /**
             * Constructs a new C_SET_TEAM_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SET_TEAM_HERO_POS);

            /** C_SET_TEAM_HERO_POS pos1. */
            public pos1: number;

            /** C_SET_TEAM_HERO_POS pos2. */
            public pos2: number;

            /**
             * Encodes the specified C_SET_TEAM_HERO_POS message. Does not implicitly {@link com.message.C_SET_TEAM_HERO_POS.verify|verify} messages.
             * @param message C_SET_TEAM_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SET_TEAM_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SET_TEAM_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SET_TEAM_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SET_TEAM_HERO_POS;
        }

        /** Properties of a S_SET_TEAM_HERO_POS. */
        interface IS_SET_TEAM_HERO_POS {

            /** S_SET_TEAM_HERO_POS pos1 */
            pos1?: (number|null);

            /** S_SET_TEAM_HERO_POS pos2 */
            pos2?: (number|null);
        }

        /** Represents a S_SET_TEAM_HERO_POS. */
        class S_SET_TEAM_HERO_POS implements IS_SET_TEAM_HERO_POS {

            /**
             * Constructs a new S_SET_TEAM_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SET_TEAM_HERO_POS);

            /** S_SET_TEAM_HERO_POS pos1. */
            public pos1: number;

            /** S_SET_TEAM_HERO_POS pos2. */
            public pos2: number;

            /**
             * Encodes the specified S_SET_TEAM_HERO_POS message. Does not implicitly {@link com.message.S_SET_TEAM_HERO_POS.verify|verify} messages.
             * @param message S_SET_TEAM_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SET_TEAM_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SET_TEAM_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SET_TEAM_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SET_TEAM_HERO_POS;
        }

        /** Properties of a C_FULL_TEAM. */
        interface IC_FULL_TEAM {
        }

        /** Represents a C_FULL_TEAM. */
        class C_FULL_TEAM implements IC_FULL_TEAM {

            /**
             * Constructs a new C_FULL_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FULL_TEAM);

            /**
             * Encodes the specified C_FULL_TEAM message. Does not implicitly {@link com.message.C_FULL_TEAM.verify|verify} messages.
             * @param message C_FULL_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FULL_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FULL_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FULL_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FULL_TEAM;
        }

        /** Properties of a CROSS_C_GET_TEAM_INFO. */
        interface ICROSS_C_GET_TEAM_INFO {

            /** CROSS_C_GET_TEAM_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_TEAM_INFO instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_C_GET_TEAM_INFO. */
        class CROSS_C_GET_TEAM_INFO implements ICROSS_C_GET_TEAM_INFO {

            /**
             * Constructs a new CROSS_C_GET_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TEAM_INFO);

            /** CROSS_C_GET_TEAM_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_TEAM_INFO instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_C_GET_TEAM_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_TEAM_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TEAM_INFO;
        }

        /** Properties of a CROSS_S_GET_TEAM_INFO. */
        interface ICROSS_S_GET_TEAM_INFO {

            /** CROSS_S_GET_TEAM_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_TEAM_INFO teams */
            teams?: (com.message.IMATCH_TEAM_INFO[]|null);

            /** CROSS_S_GET_TEAM_INFO pos2 */
            pos2?: (number[]|null);
        }

        /** Represents a CROSS_S_GET_TEAM_INFO. */
        class CROSS_S_GET_TEAM_INFO implements ICROSS_S_GET_TEAM_INFO {

            /**
             * Constructs a new CROSS_S_GET_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TEAM_INFO);

            /** CROSS_S_GET_TEAM_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_TEAM_INFO teams. */
            public teams: com.message.IMATCH_TEAM_INFO[];

            /** CROSS_S_GET_TEAM_INFO pos2. */
            public pos2: number[];

            /**
             * Encodes the specified CROSS_S_GET_TEAM_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_TEAM_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TEAM_INFO;
        }

        /** Properties of a CROSS_C_QUICK_JOIN_TEAM. */
        interface ICROSS_C_QUICK_JOIN_TEAM {

            /** CROSS_C_QUICK_JOIN_TEAM playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_QUICK_JOIN_TEAM instanceId */
            instanceId?: (number|null);

            /** CROSS_C_QUICK_JOIN_TEAM name */
            name?: (string|null);

            /** CROSS_C_QUICK_JOIN_TEAM pos1 */
            pos1?: (number|null);

            /** CROSS_C_QUICK_JOIN_TEAM pos2 */
            pos2?: (number|null);

            /** CROSS_C_QUICK_JOIN_TEAM playerMsg */
            playerMsg?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_C_QUICK_JOIN_TEAM. */
        class CROSS_C_QUICK_JOIN_TEAM implements ICROSS_C_QUICK_JOIN_TEAM {

            /**
             * Constructs a new CROSS_C_QUICK_JOIN_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_QUICK_JOIN_TEAM);

            /** CROSS_C_QUICK_JOIN_TEAM playerId. */
            public playerId: (number|Long);

            /** CROSS_C_QUICK_JOIN_TEAM instanceId. */
            public instanceId: number;

            /** CROSS_C_QUICK_JOIN_TEAM name. */
            public name: string;

            /** CROSS_C_QUICK_JOIN_TEAM pos1. */
            public pos1: number;

            /** CROSS_C_QUICK_JOIN_TEAM pos2. */
            public pos2: number;

            /** CROSS_C_QUICK_JOIN_TEAM playerMsg. */
            public playerMsg?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_C_QUICK_JOIN_TEAM message. Does not implicitly {@link com.message.CROSS_C_QUICK_JOIN_TEAM.verify|verify} messages.
             * @param message CROSS_C_QUICK_JOIN_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_QUICK_JOIN_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_QUICK_JOIN_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_QUICK_JOIN_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_QUICK_JOIN_TEAM;
        }

        /** Properties of a CROSS_S_UPDATE_TEAM. */
        interface ICROSS_S_UPDATE_TEAM {

            /** CROSS_S_UPDATE_TEAM playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_UPDATE_TEAM teaminfo */
            teaminfo?: (com.message.ITEAM_INFO|null);
        }

        /** Represents a CROSS_S_UPDATE_TEAM. */
        class CROSS_S_UPDATE_TEAM implements ICROSS_S_UPDATE_TEAM {

            /**
             * Constructs a new CROSS_S_UPDATE_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_UPDATE_TEAM);

            /** CROSS_S_UPDATE_TEAM playerId. */
            public playerId: (number|Long);

            /** CROSS_S_UPDATE_TEAM teaminfo. */
            public teaminfo?: (com.message.ITEAM_INFO|null);

            /**
             * Encodes the specified CROSS_S_UPDATE_TEAM message. Does not implicitly {@link com.message.CROSS_S_UPDATE_TEAM.verify|verify} messages.
             * @param message CROSS_S_UPDATE_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_UPDATE_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_UPDATE_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_UPDATE_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_UPDATE_TEAM;
        }

        /** Properties of a CROSS_C_JOIN_TEAM. */
        interface ICROSS_C_JOIN_TEAM {

            /** CROSS_C_JOIN_TEAM playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_JOIN_TEAM teamId */
            teamId?: (number|null);

            /** CROSS_C_JOIN_TEAM instanceId */
            instanceId?: (number|null);

            /** CROSS_C_JOIN_TEAM name */
            name?: (string|null);

            /** CROSS_C_JOIN_TEAM pos1 */
            pos1?: (number|null);

            /** CROSS_C_JOIN_TEAM pos2 */
            pos2?: (number|null);

            /** CROSS_C_JOIN_TEAM playerMsg */
            playerMsg?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_C_JOIN_TEAM isRobot */
            isRobot?: (boolean|null);
        }

        /** Represents a CROSS_C_JOIN_TEAM. */
        class CROSS_C_JOIN_TEAM implements ICROSS_C_JOIN_TEAM {

            /**
             * Constructs a new CROSS_C_JOIN_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_JOIN_TEAM);

            /** CROSS_C_JOIN_TEAM playerId. */
            public playerId: (number|Long);

            /** CROSS_C_JOIN_TEAM teamId. */
            public teamId: number;

            /** CROSS_C_JOIN_TEAM instanceId. */
            public instanceId: number;

            /** CROSS_C_JOIN_TEAM name. */
            public name: string;

            /** CROSS_C_JOIN_TEAM pos1. */
            public pos1: number;

            /** CROSS_C_JOIN_TEAM pos2. */
            public pos2: number;

            /** CROSS_C_JOIN_TEAM playerMsg. */
            public playerMsg?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_C_JOIN_TEAM isRobot. */
            public isRobot: boolean;

            /**
             * Encodes the specified CROSS_C_JOIN_TEAM message. Does not implicitly {@link com.message.CROSS_C_JOIN_TEAM.verify|verify} messages.
             * @param message CROSS_C_JOIN_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_JOIN_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_JOIN_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_JOIN_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_JOIN_TEAM;
        }

        /** Properties of a CROSS_S_JOIN_TEAM. */
        interface ICROSS_S_JOIN_TEAM {

            /** CROSS_S_JOIN_TEAM playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_JOIN_TEAM teaminfo */
            teaminfo?: (com.message.ITEAM_INFO|null);
        }

        /** Represents a CROSS_S_JOIN_TEAM. */
        class CROSS_S_JOIN_TEAM implements ICROSS_S_JOIN_TEAM {

            /**
             * Constructs a new CROSS_S_JOIN_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_JOIN_TEAM);

            /** CROSS_S_JOIN_TEAM playerId. */
            public playerId: (number|Long);

            /** CROSS_S_JOIN_TEAM teaminfo. */
            public teaminfo?: (com.message.ITEAM_INFO|null);

            /**
             * Encodes the specified CROSS_S_JOIN_TEAM message. Does not implicitly {@link com.message.CROSS_S_JOIN_TEAM.verify|verify} messages.
             * @param message CROSS_S_JOIN_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_JOIN_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_JOIN_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_JOIN_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_JOIN_TEAM;
        }

        /** Properties of a CROSS_C_EXIT_TEAM. */
        interface ICROSS_C_EXIT_TEAM {

            /** CROSS_C_EXIT_TEAM playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_EXIT_TEAM. */
        class CROSS_C_EXIT_TEAM implements ICROSS_C_EXIT_TEAM {

            /**
             * Constructs a new CROSS_C_EXIT_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_EXIT_TEAM);

            /** CROSS_C_EXIT_TEAM playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_EXIT_TEAM message. Does not implicitly {@link com.message.CROSS_C_EXIT_TEAM.verify|verify} messages.
             * @param message CROSS_C_EXIT_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_EXIT_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_EXIT_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_EXIT_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_EXIT_TEAM;
        }

        /** Properties of a CROSS_S_EXIT_TEAM. */
        interface ICROSS_S_EXIT_TEAM {

            /** CROSS_S_EXIT_TEAM playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_EXIT_TEAM. */
        class CROSS_S_EXIT_TEAM implements ICROSS_S_EXIT_TEAM {

            /**
             * Constructs a new CROSS_S_EXIT_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_EXIT_TEAM);

            /** CROSS_S_EXIT_TEAM playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_EXIT_TEAM message. Does not implicitly {@link com.message.CROSS_S_EXIT_TEAM.verify|verify} messages.
             * @param message CROSS_S_EXIT_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_EXIT_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_EXIT_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_EXIT_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_EXIT_TEAM;
        }

        /** Properties of a CROSS_C_SET_TEAM_HERO_POS. */
        interface ICROSS_C_SET_TEAM_HERO_POS {

            /** CROSS_C_SET_TEAM_HERO_POS pos1 */
            pos1?: (number|null);

            /** CROSS_C_SET_TEAM_HERO_POS pos2 */
            pos2?: (number|null);

            /** CROSS_C_SET_TEAM_HERO_POS playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_SET_TEAM_HERO_POS playerMsg */
            playerMsg?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_C_SET_TEAM_HERO_POS. */
        class CROSS_C_SET_TEAM_HERO_POS implements ICROSS_C_SET_TEAM_HERO_POS {

            /**
             * Constructs a new CROSS_C_SET_TEAM_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SET_TEAM_HERO_POS);

            /** CROSS_C_SET_TEAM_HERO_POS pos1. */
            public pos1: number;

            /** CROSS_C_SET_TEAM_HERO_POS pos2. */
            public pos2: number;

            /** CROSS_C_SET_TEAM_HERO_POS playerId. */
            public playerId: (number|Long);

            /** CROSS_C_SET_TEAM_HERO_POS playerMsg. */
            public playerMsg?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_C_SET_TEAM_HERO_POS message. Does not implicitly {@link com.message.CROSS_C_SET_TEAM_HERO_POS.verify|verify} messages.
             * @param message CROSS_C_SET_TEAM_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SET_TEAM_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SET_TEAM_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SET_TEAM_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SET_TEAM_HERO_POS;
        }

        /** Properties of a C_GET_TEAM2_INFO. */
        interface IC_GET_TEAM2_INFO {

            /** C_GET_TEAM2_INFO instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_GET_TEAM2_INFO. */
        class C_GET_TEAM2_INFO implements IC_GET_TEAM2_INFO {

            /**
             * Constructs a new C_GET_TEAM2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TEAM2_INFO);

            /** C_GET_TEAM2_INFO instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_GET_TEAM2_INFO message. Does not implicitly {@link com.message.C_GET_TEAM2_INFO.verify|verify} messages.
             * @param message C_GET_TEAM2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TEAM2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TEAM2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TEAM2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TEAM2_INFO;
        }

        /** Properties of a S_GET_TEAM2_INFO. */
        interface IS_GET_TEAM2_INFO {

            /** S_GET_TEAM2_INFO team2s */
            team2s?: (com.message.IMATCH_TEAM2_INFO[]|null);
        }

        /** Represents a S_GET_TEAM2_INFO. */
        class S_GET_TEAM2_INFO implements IS_GET_TEAM2_INFO {

            /**
             * Constructs a new S_GET_TEAM2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TEAM2_INFO);

            /** S_GET_TEAM2_INFO team2s. */
            public team2s: com.message.IMATCH_TEAM2_INFO[];

            /**
             * Encodes the specified S_GET_TEAM2_INFO message. Does not implicitly {@link com.message.S_GET_TEAM2_INFO.verify|verify} messages.
             * @param message S_GET_TEAM2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TEAM2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TEAM2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TEAM2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TEAM2_INFO;
        }

        /** Properties of a MATCH_TEAM2_INFO. */
        interface IMATCH_TEAM2_INFO {

            /** MATCH_TEAM2_INFO team2Id */
            team2Id?: (number|null);

            /** MATCH_TEAM2_INFO heroId */
            heroId?: (number|null);

            /** MATCH_TEAM2_INFO name */
            name?: (string|null);

            /** MATCH_TEAM2_INFO num */
            num?: (number|null);

            /** MATCH_TEAM2_INFO heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a MATCH_TEAM2_INFO. */
        class MATCH_TEAM2_INFO implements IMATCH_TEAM2_INFO {

            /**
             * Constructs a new MATCH_TEAM2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMATCH_TEAM2_INFO);

            /** MATCH_TEAM2_INFO team2Id. */
            public team2Id: number;

            /** MATCH_TEAM2_INFO heroId. */
            public heroId: number;

            /** MATCH_TEAM2_INFO name. */
            public name: string;

            /** MATCH_TEAM2_INFO num. */
            public num: number;

            /** MATCH_TEAM2_INFO heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified MATCH_TEAM2_INFO message. Does not implicitly {@link com.message.MATCH_TEAM2_INFO.verify|verify} messages.
             * @param message MATCH_TEAM2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMATCH_TEAM2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MATCH_TEAM2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MATCH_TEAM2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MATCH_TEAM2_INFO;
        }

        /** Properties of a C_GET_TEAM2_INSTANCE_INFO. */
        interface IC_GET_TEAM2_INSTANCE_INFO {
        }

        /** Represents a C_GET_TEAM2_INSTANCE_INFO. */
        class C_GET_TEAM2_INSTANCE_INFO implements IC_GET_TEAM2_INSTANCE_INFO {

            /**
             * Constructs a new C_GET_TEAM2_INSTANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TEAM2_INSTANCE_INFO);

            /**
             * Encodes the specified C_GET_TEAM2_INSTANCE_INFO message. Does not implicitly {@link com.message.C_GET_TEAM2_INSTANCE_INFO.verify|verify} messages.
             * @param message C_GET_TEAM2_INSTANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TEAM2_INSTANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TEAM2_INSTANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TEAM2_INSTANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TEAM2_INSTANCE_INFO;
        }

        /** Properties of a S_GET_TEAM2_INSTANCE_INFO. */
        interface IS_GET_TEAM2_INSTANCE_INFO {

            /** S_GET_TEAM2_INSTANCE_INFO times */
            times?: (number|null);

            /** S_GET_TEAM2_INSTANCE_INFO instanceId */
            instanceId?: (number[]|null);

            /** S_GET_TEAM2_INSTANCE_INFO pos1 */
            pos1?: (number|null);

            /** S_GET_TEAM2_INSTANCE_INFO pos2 */
            pos2?: (number|null);
        }

        /** Represents a S_GET_TEAM2_INSTANCE_INFO. */
        class S_GET_TEAM2_INSTANCE_INFO implements IS_GET_TEAM2_INSTANCE_INFO {

            /**
             * Constructs a new S_GET_TEAM2_INSTANCE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TEAM2_INSTANCE_INFO);

            /** S_GET_TEAM2_INSTANCE_INFO times. */
            public times: number;

            /** S_GET_TEAM2_INSTANCE_INFO instanceId. */
            public instanceId: number[];

            /** S_GET_TEAM2_INSTANCE_INFO pos1. */
            public pos1: number;

            /** S_GET_TEAM2_INSTANCE_INFO pos2. */
            public pos2: number;

            /**
             * Encodes the specified S_GET_TEAM2_INSTANCE_INFO message. Does not implicitly {@link com.message.S_GET_TEAM2_INSTANCE_INFO.verify|verify} messages.
             * @param message S_GET_TEAM2_INSTANCE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TEAM2_INSTANCE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TEAM2_INSTANCE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TEAM2_INSTANCE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TEAM2_INSTANCE_INFO;
        }

        /** Properties of a TEAM2_INFO. */
        interface ITEAM2_INFO {

            /** TEAM2_INFO team2Id */
            team2Id?: (number|null);

            /** TEAM2_INFO instanceId */
            instanceId?: (number|null);

            /** TEAM2_INFO TEAM2Info1 */
            TEAM2Info1?: (com.message.ITEAM2_MEMBER_INFO|null);

            /** TEAM2_INFO TEAM2Info2 */
            TEAM2Info2?: (com.message.ITEAM2_MEMBER_INFO|null);

            /** TEAM2_INFO TEAM2Info3 */
            TEAM2Info3?: (com.message.ITEAM2_MEMBER_INFO|null);
        }

        /** Represents a TEAM2_INFO. */
        class TEAM2_INFO implements ITEAM2_INFO {

            /**
             * Constructs a new TEAM2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITEAM2_INFO);

            /** TEAM2_INFO team2Id. */
            public team2Id: number;

            /** TEAM2_INFO instanceId. */
            public instanceId: number;

            /** TEAM2_INFO TEAM2Info1. */
            public TEAM2Info1?: (com.message.ITEAM2_MEMBER_INFO|null);

            /** TEAM2_INFO TEAM2Info2. */
            public TEAM2Info2?: (com.message.ITEAM2_MEMBER_INFO|null);

            /** TEAM2_INFO TEAM2Info3. */
            public TEAM2Info3?: (com.message.ITEAM2_MEMBER_INFO|null);

            /**
             * Encodes the specified TEAM2_INFO message. Does not implicitly {@link com.message.TEAM2_INFO.verify|verify} messages.
             * @param message TEAM2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITEAM2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TEAM2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TEAM2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TEAM2_INFO;
        }

        /** Properties of a TEAM2_MEMBER_INFO. */
        interface ITEAM2_MEMBER_INFO {

            /** TEAM2_MEMBER_INFO name */
            name?: (string|null);

            /** TEAM2_MEMBER_INFO plyaerId */
            plyaerId?: (number|Long|null);

            /** TEAM2_MEMBER_INFO pos1 */
            pos1?: (number|null);

            /** TEAM2_MEMBER_INFO pos2 */
            pos2?: (number|null);

            /** TEAM2_MEMBER_INFO serverId */
            serverId?: (number|null);

            /** TEAM2_MEMBER_INFO level */
            level?: (number|null);

            /** TEAM2_MEMBER_INFO heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a TEAM2_MEMBER_INFO. */
        class TEAM2_MEMBER_INFO implements ITEAM2_MEMBER_INFO {

            /**
             * Constructs a new TEAM2_MEMBER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITEAM2_MEMBER_INFO);

            /** TEAM2_MEMBER_INFO name. */
            public name: string;

            /** TEAM2_MEMBER_INFO plyaerId. */
            public plyaerId: (number|Long);

            /** TEAM2_MEMBER_INFO pos1. */
            public pos1: number;

            /** TEAM2_MEMBER_INFO pos2. */
            public pos2: number;

            /** TEAM2_MEMBER_INFO serverId. */
            public serverId: number;

            /** TEAM2_MEMBER_INFO level. */
            public level: number;

            /** TEAM2_MEMBER_INFO heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified TEAM2_MEMBER_INFO message. Does not implicitly {@link com.message.TEAM2_MEMBER_INFO.verify|verify} messages.
             * @param message TEAM2_MEMBER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITEAM2_MEMBER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TEAM2_MEMBER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TEAM2_MEMBER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TEAM2_MEMBER_INFO;
        }

        /** Properties of a C_JOIN_TEAM2. */
        interface IC_JOIN_TEAM2 {

            /** C_JOIN_TEAM2 instanceId */
            instanceId?: (number|null);

            /** C_JOIN_TEAM2 team2Id */
            team2Id?: (number|null);
        }

        /** Represents a C_JOIN_TEAM2. */
        class C_JOIN_TEAM2 implements IC_JOIN_TEAM2 {

            /**
             * Constructs a new C_JOIN_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_JOIN_TEAM2);

            /** C_JOIN_TEAM2 instanceId. */
            public instanceId: number;

            /** C_JOIN_TEAM2 team2Id. */
            public team2Id: number;

            /**
             * Encodes the specified C_JOIN_TEAM2 message. Does not implicitly {@link com.message.C_JOIN_TEAM2.verify|verify} messages.
             * @param message C_JOIN_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_JOIN_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_JOIN_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_JOIN_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_JOIN_TEAM2;
        }

        /** Properties of a S_JOIN_TEAM2. */
        interface IS_JOIN_TEAM2 {

            /** S_JOIN_TEAM2 TEAM2info */
            TEAM2info?: (com.message.ITEAM2_INFO|null);
        }

        /** Represents a S_JOIN_TEAM2. */
        class S_JOIN_TEAM2 implements IS_JOIN_TEAM2 {

            /**
             * Constructs a new S_JOIN_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_JOIN_TEAM2);

            /** S_JOIN_TEAM2 TEAM2info. */
            public TEAM2info?: (com.message.ITEAM2_INFO|null);

            /**
             * Encodes the specified S_JOIN_TEAM2 message. Does not implicitly {@link com.message.S_JOIN_TEAM2.verify|verify} messages.
             * @param message S_JOIN_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_JOIN_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_JOIN_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_JOIN_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_JOIN_TEAM2;
        }

        /** Properties of a C_QUICK_JOIN_TEAM2. */
        interface IC_QUICK_JOIN_TEAM2 {

            /** C_QUICK_JOIN_TEAM2 instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_QUICK_JOIN_TEAM2. */
        class C_QUICK_JOIN_TEAM2 implements IC_QUICK_JOIN_TEAM2 {

            /**
             * Constructs a new C_QUICK_JOIN_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_QUICK_JOIN_TEAM2);

            /** C_QUICK_JOIN_TEAM2 instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_QUICK_JOIN_TEAM2 message. Does not implicitly {@link com.message.C_QUICK_JOIN_TEAM2.verify|verify} messages.
             * @param message C_QUICK_JOIN_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_QUICK_JOIN_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_QUICK_JOIN_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_QUICK_JOIN_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_QUICK_JOIN_TEAM2;
        }

        /** Properties of a C_EXIT_TEAM2. */
        interface IC_EXIT_TEAM2 {
        }

        /** Represents a C_EXIT_TEAM2. */
        class C_EXIT_TEAM2 implements IC_EXIT_TEAM2 {

            /**
             * Constructs a new C_EXIT_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EXIT_TEAM2);

            /**
             * Encodes the specified C_EXIT_TEAM2 message. Does not implicitly {@link com.message.C_EXIT_TEAM2.verify|verify} messages.
             * @param message C_EXIT_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EXIT_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EXIT_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EXIT_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EXIT_TEAM2;
        }

        /** Properties of a S_EXIT_TEAM2. */
        interface IS_EXIT_TEAM2 {
        }

        /** Represents a S_EXIT_TEAM2. */
        class S_EXIT_TEAM2 implements IS_EXIT_TEAM2 {

            /**
             * Constructs a new S_EXIT_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EXIT_TEAM2);

            /**
             * Encodes the specified S_EXIT_TEAM2 message. Does not implicitly {@link com.message.S_EXIT_TEAM2.verify|verify} messages.
             * @param message S_EXIT_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EXIT_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EXIT_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EXIT_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EXIT_TEAM2;
        }

        /** Properties of a S_UPDATE_TEAM2. */
        interface IS_UPDATE_TEAM2 {

            /** S_UPDATE_TEAM2 TEAM2info */
            TEAM2info?: (com.message.ITEAM2_INFO|null);
        }

        /** Represents a S_UPDATE_TEAM2. */
        class S_UPDATE_TEAM2 implements IS_UPDATE_TEAM2 {

            /**
             * Constructs a new S_UPDATE_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPDATE_TEAM2);

            /** S_UPDATE_TEAM2 TEAM2info. */
            public TEAM2info?: (com.message.ITEAM2_INFO|null);

            /**
             * Encodes the specified S_UPDATE_TEAM2 message. Does not implicitly {@link com.message.S_UPDATE_TEAM2.verify|verify} messages.
             * @param message S_UPDATE_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPDATE_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPDATE_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPDATE_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPDATE_TEAM2;
        }

        /** Properties of a C_SET_TEAM2_HERO_POS. */
        interface IC_SET_TEAM2_HERO_POS {

            /** C_SET_TEAM2_HERO_POS pos1 */
            pos1?: (number|null);

            /** C_SET_TEAM2_HERO_POS pos2 */
            pos2?: (number|null);
        }

        /** Represents a C_SET_TEAM2_HERO_POS. */
        class C_SET_TEAM2_HERO_POS implements IC_SET_TEAM2_HERO_POS {

            /**
             * Constructs a new C_SET_TEAM2_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SET_TEAM2_HERO_POS);

            /** C_SET_TEAM2_HERO_POS pos1. */
            public pos1: number;

            /** C_SET_TEAM2_HERO_POS pos2. */
            public pos2: number;

            /**
             * Encodes the specified C_SET_TEAM2_HERO_POS message. Does not implicitly {@link com.message.C_SET_TEAM2_HERO_POS.verify|verify} messages.
             * @param message C_SET_TEAM2_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SET_TEAM2_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SET_TEAM2_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SET_TEAM2_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SET_TEAM2_HERO_POS;
        }

        /** Properties of a S_SET_TEAM2_HERO_POS. */
        interface IS_SET_TEAM2_HERO_POS {

            /** S_SET_TEAM2_HERO_POS pos1 */
            pos1?: (number|null);

            /** S_SET_TEAM2_HERO_POS pos2 */
            pos2?: (number|null);
        }

        /** Represents a S_SET_TEAM2_HERO_POS. */
        class S_SET_TEAM2_HERO_POS implements IS_SET_TEAM2_HERO_POS {

            /**
             * Constructs a new S_SET_TEAM2_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SET_TEAM2_HERO_POS);

            /** S_SET_TEAM2_HERO_POS pos1. */
            public pos1: number;

            /** S_SET_TEAM2_HERO_POS pos2. */
            public pos2: number;

            /**
             * Encodes the specified S_SET_TEAM2_HERO_POS message. Does not implicitly {@link com.message.S_SET_TEAM2_HERO_POS.verify|verify} messages.
             * @param message S_SET_TEAM2_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SET_TEAM2_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SET_TEAM2_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SET_TEAM2_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SET_TEAM2_HERO_POS;
        }

        /** Properties of a C_FULL_TEAM2. */
        interface IC_FULL_TEAM2 {
        }

        /** Represents a C_FULL_TEAM2. */
        class C_FULL_TEAM2 implements IC_FULL_TEAM2 {

            /**
             * Constructs a new C_FULL_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_FULL_TEAM2);

            /**
             * Encodes the specified C_FULL_TEAM2 message. Does not implicitly {@link com.message.C_FULL_TEAM2.verify|verify} messages.
             * @param message C_FULL_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_FULL_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_FULL_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_FULL_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_FULL_TEAM2;
        }

        /** Properties of a CROSS_C_GET_TEAM2_INFO. */
        interface ICROSS_C_GET_TEAM2_INFO {

            /** CROSS_C_GET_TEAM2_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_TEAM2_INFO instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_C_GET_TEAM2_INFO. */
        class CROSS_C_GET_TEAM2_INFO implements ICROSS_C_GET_TEAM2_INFO {

            /**
             * Constructs a new CROSS_C_GET_TEAM2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_TEAM2_INFO);

            /** CROSS_C_GET_TEAM2_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_TEAM2_INFO instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_C_GET_TEAM2_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_TEAM2_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_TEAM2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_TEAM2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_TEAM2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_TEAM2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_TEAM2_INFO;
        }

        /** Properties of a CROSS_S_GET_TEAM2_INFO. */
        interface ICROSS_S_GET_TEAM2_INFO {

            /** CROSS_S_GET_TEAM2_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_TEAM2_INFO team2s */
            team2s?: (com.message.IMATCH_TEAM2_INFO[]|null);

            /** CROSS_S_GET_TEAM2_INFO pos2 */
            pos2?: (number[]|null);
        }

        /** Represents a CROSS_S_GET_TEAM2_INFO. */
        class CROSS_S_GET_TEAM2_INFO implements ICROSS_S_GET_TEAM2_INFO {

            /**
             * Constructs a new CROSS_S_GET_TEAM2_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_TEAM2_INFO);

            /** CROSS_S_GET_TEAM2_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_TEAM2_INFO team2s. */
            public team2s: com.message.IMATCH_TEAM2_INFO[];

            /** CROSS_S_GET_TEAM2_INFO pos2. */
            public pos2: number[];

            /**
             * Encodes the specified CROSS_S_GET_TEAM2_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_TEAM2_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_TEAM2_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_TEAM2_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_TEAM2_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_TEAM2_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_TEAM2_INFO;
        }

        /** Properties of a CROSS_C_QUICK_JOIN_TEAM2. */
        interface ICROSS_C_QUICK_JOIN_TEAM2 {

            /** CROSS_C_QUICK_JOIN_TEAM2 playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_QUICK_JOIN_TEAM2 instanceId */
            instanceId?: (number|null);

            /** CROSS_C_QUICK_JOIN_TEAM2 name */
            name?: (string|null);

            /** CROSS_C_QUICK_JOIN_TEAM2 pos1 */
            pos1?: (number|null);

            /** CROSS_C_QUICK_JOIN_TEAM2 pos2 */
            pos2?: (number|null);

            /** CROSS_C_QUICK_JOIN_TEAM2 playerMsg */
            playerMsg?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_C_QUICK_JOIN_TEAM2. */
        class CROSS_C_QUICK_JOIN_TEAM2 implements ICROSS_C_QUICK_JOIN_TEAM2 {

            /**
             * Constructs a new CROSS_C_QUICK_JOIN_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_QUICK_JOIN_TEAM2);

            /** CROSS_C_QUICK_JOIN_TEAM2 playerId. */
            public playerId: (number|Long);

            /** CROSS_C_QUICK_JOIN_TEAM2 instanceId. */
            public instanceId: number;

            /** CROSS_C_QUICK_JOIN_TEAM2 name. */
            public name: string;

            /** CROSS_C_QUICK_JOIN_TEAM2 pos1. */
            public pos1: number;

            /** CROSS_C_QUICK_JOIN_TEAM2 pos2. */
            public pos2: number;

            /** CROSS_C_QUICK_JOIN_TEAM2 playerMsg. */
            public playerMsg?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_C_QUICK_JOIN_TEAM2 message. Does not implicitly {@link com.message.CROSS_C_QUICK_JOIN_TEAM2.verify|verify} messages.
             * @param message CROSS_C_QUICK_JOIN_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_QUICK_JOIN_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_QUICK_JOIN_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_QUICK_JOIN_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_QUICK_JOIN_TEAM2;
        }

        /** Properties of a CROSS_S_UPDATE_TEAM2. */
        interface ICROSS_S_UPDATE_TEAM2 {

            /** CROSS_S_UPDATE_TEAM2 playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_UPDATE_TEAM2 TEAM2info */
            TEAM2info?: (com.message.ITEAM2_INFO|null);
        }

        /** Represents a CROSS_S_UPDATE_TEAM2. */
        class CROSS_S_UPDATE_TEAM2 implements ICROSS_S_UPDATE_TEAM2 {

            /**
             * Constructs a new CROSS_S_UPDATE_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_UPDATE_TEAM2);

            /** CROSS_S_UPDATE_TEAM2 playerId. */
            public playerId: (number|Long);

            /** CROSS_S_UPDATE_TEAM2 TEAM2info. */
            public TEAM2info?: (com.message.ITEAM2_INFO|null);

            /**
             * Encodes the specified CROSS_S_UPDATE_TEAM2 message. Does not implicitly {@link com.message.CROSS_S_UPDATE_TEAM2.verify|verify} messages.
             * @param message CROSS_S_UPDATE_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_UPDATE_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_UPDATE_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_UPDATE_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_UPDATE_TEAM2;
        }

        /** Properties of a CROSS_C_JOIN_TEAM2. */
        interface ICROSS_C_JOIN_TEAM2 {

            /** CROSS_C_JOIN_TEAM2 playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_JOIN_TEAM2 team2Id */
            team2Id?: (number|null);

            /** CROSS_C_JOIN_TEAM2 instanceId */
            instanceId?: (number|null);

            /** CROSS_C_JOIN_TEAM2 name */
            name?: (string|null);

            /** CROSS_C_JOIN_TEAM2 pos1 */
            pos1?: (number|null);

            /** CROSS_C_JOIN_TEAM2 pos2 */
            pos2?: (number|null);

            /** CROSS_C_JOIN_TEAM2 playerMsg */
            playerMsg?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_C_JOIN_TEAM2 isRobot */
            isRobot?: (boolean|null);
        }

        /** Represents a CROSS_C_JOIN_TEAM2. */
        class CROSS_C_JOIN_TEAM2 implements ICROSS_C_JOIN_TEAM2 {

            /**
             * Constructs a new CROSS_C_JOIN_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_JOIN_TEAM2);

            /** CROSS_C_JOIN_TEAM2 playerId. */
            public playerId: (number|Long);

            /** CROSS_C_JOIN_TEAM2 team2Id. */
            public team2Id: number;

            /** CROSS_C_JOIN_TEAM2 instanceId. */
            public instanceId: number;

            /** CROSS_C_JOIN_TEAM2 name. */
            public name: string;

            /** CROSS_C_JOIN_TEAM2 pos1. */
            public pos1: number;

            /** CROSS_C_JOIN_TEAM2 pos2. */
            public pos2: number;

            /** CROSS_C_JOIN_TEAM2 playerMsg. */
            public playerMsg?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_C_JOIN_TEAM2 isRobot. */
            public isRobot: boolean;

            /**
             * Encodes the specified CROSS_C_JOIN_TEAM2 message. Does not implicitly {@link com.message.CROSS_C_JOIN_TEAM2.verify|verify} messages.
             * @param message CROSS_C_JOIN_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_JOIN_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_JOIN_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_JOIN_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_JOIN_TEAM2;
        }

        /** Properties of a CROSS_S_JOIN_TEAM2. */
        interface ICROSS_S_JOIN_TEAM2 {

            /** CROSS_S_JOIN_TEAM2 playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_JOIN_TEAM2 TEAM2info */
            TEAM2info?: (com.message.ITEAM2_INFO|null);
        }

        /** Represents a CROSS_S_JOIN_TEAM2. */
        class CROSS_S_JOIN_TEAM2 implements ICROSS_S_JOIN_TEAM2 {

            /**
             * Constructs a new CROSS_S_JOIN_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_JOIN_TEAM2);

            /** CROSS_S_JOIN_TEAM2 playerId. */
            public playerId: (number|Long);

            /** CROSS_S_JOIN_TEAM2 TEAM2info. */
            public TEAM2info?: (com.message.ITEAM2_INFO|null);

            /**
             * Encodes the specified CROSS_S_JOIN_TEAM2 message. Does not implicitly {@link com.message.CROSS_S_JOIN_TEAM2.verify|verify} messages.
             * @param message CROSS_S_JOIN_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_JOIN_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_JOIN_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_JOIN_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_JOIN_TEAM2;
        }

        /** Properties of a CROSS_C_EXIT_TEAM2. */
        interface ICROSS_C_EXIT_TEAM2 {

            /** CROSS_C_EXIT_TEAM2 playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_EXIT_TEAM2. */
        class CROSS_C_EXIT_TEAM2 implements ICROSS_C_EXIT_TEAM2 {

            /**
             * Constructs a new CROSS_C_EXIT_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_EXIT_TEAM2);

            /** CROSS_C_EXIT_TEAM2 playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_EXIT_TEAM2 message. Does not implicitly {@link com.message.CROSS_C_EXIT_TEAM2.verify|verify} messages.
             * @param message CROSS_C_EXIT_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_EXIT_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_EXIT_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_EXIT_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_EXIT_TEAM2;
        }

        /** Properties of a CROSS_S_EXIT_TEAM2. */
        interface ICROSS_S_EXIT_TEAM2 {

            /** CROSS_S_EXIT_TEAM2 playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_EXIT_TEAM2. */
        class CROSS_S_EXIT_TEAM2 implements ICROSS_S_EXIT_TEAM2 {

            /**
             * Constructs a new CROSS_S_EXIT_TEAM2.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_EXIT_TEAM2);

            /** CROSS_S_EXIT_TEAM2 playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_EXIT_TEAM2 message. Does not implicitly {@link com.message.CROSS_S_EXIT_TEAM2.verify|verify} messages.
             * @param message CROSS_S_EXIT_TEAM2 message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_EXIT_TEAM2, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_EXIT_TEAM2 message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_EXIT_TEAM2
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_EXIT_TEAM2;
        }

        /** Properties of a CROSS_C_SET_TEAM2_HERO_POS. */
        interface ICROSS_C_SET_TEAM2_HERO_POS {

            /** CROSS_C_SET_TEAM2_HERO_POS pos1 */
            pos1?: (number|null);

            /** CROSS_C_SET_TEAM2_HERO_POS pos2 */
            pos2?: (number|null);

            /** CROSS_C_SET_TEAM2_HERO_POS playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_SET_TEAM2_HERO_POS playerMsg */
            playerMsg?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_C_SET_TEAM2_HERO_POS. */
        class CROSS_C_SET_TEAM2_HERO_POS implements ICROSS_C_SET_TEAM2_HERO_POS {

            /**
             * Constructs a new CROSS_C_SET_TEAM2_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_SET_TEAM2_HERO_POS);

            /** CROSS_C_SET_TEAM2_HERO_POS pos1. */
            public pos1: number;

            /** CROSS_C_SET_TEAM2_HERO_POS pos2. */
            public pos2: number;

            /** CROSS_C_SET_TEAM2_HERO_POS playerId. */
            public playerId: (number|Long);

            /** CROSS_C_SET_TEAM2_HERO_POS playerMsg. */
            public playerMsg?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_C_SET_TEAM2_HERO_POS message. Does not implicitly {@link com.message.CROSS_C_SET_TEAM2_HERO_POS.verify|verify} messages.
             * @param message CROSS_C_SET_TEAM2_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_SET_TEAM2_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_SET_TEAM2_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_SET_TEAM2_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_SET_TEAM2_HERO_POS;
        }

        /** Properties of a C_GET_NEW_TEAM_INFO. */
        interface IC_GET_NEW_TEAM_INFO {

            /** C_GET_NEW_TEAM_INFO instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_GET_NEW_TEAM_INFO. */
        class C_GET_NEW_TEAM_INFO implements IC_GET_NEW_TEAM_INFO {

            /**
             * Constructs a new C_GET_NEW_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_NEW_TEAM_INFO);

            /** C_GET_NEW_TEAM_INFO instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_GET_NEW_TEAM_INFO message. Does not implicitly {@link com.message.C_GET_NEW_TEAM_INFO.verify|verify} messages.
             * @param message C_GET_NEW_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_NEW_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_NEW_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_NEW_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_NEW_TEAM_INFO;
        }

        /** Properties of a S_GET_NEW_TEAM_INFO. */
        interface IS_GET_NEW_TEAM_INFO {

            /** S_GET_NEW_TEAM_INFO instanceId */
            instanceId?: (number|null);

            /** S_GET_NEW_TEAM_INFO playTimes */
            playTimes?: (number|null);

            /** S_GET_NEW_TEAM_INFO helpTimes */
            helpTimes?: (number|null);

            /** S_GET_NEW_TEAM_INFO ranks */
            ranks?: (com.message.INEW_TEAM_FIRST[]|null);

            /** S_GET_NEW_TEAM_INFO teams */
            teams?: (com.message.INEW_TEAM_INFO[]|null);

            /** S_GET_NEW_TEAM_INFO myTeam */
            myTeam?: (com.message.INEW_TEAM_DATA|null);

            /** S_GET_NEW_TEAM_INFO passInstanceId */
            passInstanceId?: (number|null);

            /** S_GET_NEW_TEAM_INFO isInviteDate */
            isInviteDate?: (boolean|null);
        }

        /** Represents a S_GET_NEW_TEAM_INFO. */
        class S_GET_NEW_TEAM_INFO implements IS_GET_NEW_TEAM_INFO {

            /**
             * Constructs a new S_GET_NEW_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_NEW_TEAM_INFO);

            /** S_GET_NEW_TEAM_INFO instanceId. */
            public instanceId: number;

            /** S_GET_NEW_TEAM_INFO playTimes. */
            public playTimes: number;

            /** S_GET_NEW_TEAM_INFO helpTimes. */
            public helpTimes: number;

            /** S_GET_NEW_TEAM_INFO ranks. */
            public ranks: com.message.INEW_TEAM_FIRST[];

            /** S_GET_NEW_TEAM_INFO teams. */
            public teams: com.message.INEW_TEAM_INFO[];

            /** S_GET_NEW_TEAM_INFO myTeam. */
            public myTeam?: (com.message.INEW_TEAM_DATA|null);

            /** S_GET_NEW_TEAM_INFO passInstanceId. */
            public passInstanceId: number;

            /** S_GET_NEW_TEAM_INFO isInviteDate. */
            public isInviteDate: boolean;

            /**
             * Encodes the specified S_GET_NEW_TEAM_INFO message. Does not implicitly {@link com.message.S_GET_NEW_TEAM_INFO.verify|verify} messages.
             * @param message S_GET_NEW_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_NEW_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_NEW_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_NEW_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_NEW_TEAM_INFO;
        }

        /** Properties of a NEW_TEAM_FIRST. */
        interface INEW_TEAM_FIRST {

            /** NEW_TEAM_FIRST nickName */
            nickName?: (string|null);
        }

        /** Represents a NEW_TEAM_FIRST. */
        class NEW_TEAM_FIRST implements INEW_TEAM_FIRST {

            /**
             * Constructs a new NEW_TEAM_FIRST.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INEW_TEAM_FIRST);

            /** NEW_TEAM_FIRST nickName. */
            public nickName: string;

            /**
             * Encodes the specified NEW_TEAM_FIRST message. Does not implicitly {@link com.message.NEW_TEAM_FIRST.verify|verify} messages.
             * @param message NEW_TEAM_FIRST message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INEW_TEAM_FIRST, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NEW_TEAM_FIRST message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NEW_TEAM_FIRST
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NEW_TEAM_FIRST;
        }

        /** Properties of a NEW_TEAM_INFO. */
        interface INEW_TEAM_INFO {

            /** NEW_TEAM_INFO teamId */
            teamId?: (number|Long|null);

            /** NEW_TEAM_INFO heroId */
            heroId?: (number|null);

            /** NEW_TEAM_INFO name */
            name?: (string|null);

            /** NEW_TEAM_INFO num */
            num?: (number|null);

            /** NEW_TEAM_INFO heroQuality */
            heroQuality?: (number|null);

            /** NEW_TEAM_INFO type */
            type?: (number|null);
        }

        /** Represents a NEW_TEAM_INFO. */
        class NEW_TEAM_INFO implements INEW_TEAM_INFO {

            /**
             * Constructs a new NEW_TEAM_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INEW_TEAM_INFO);

            /** NEW_TEAM_INFO teamId. */
            public teamId: (number|Long);

            /** NEW_TEAM_INFO heroId. */
            public heroId: number;

            /** NEW_TEAM_INFO name. */
            public name: string;

            /** NEW_TEAM_INFO num. */
            public num: number;

            /** NEW_TEAM_INFO heroQuality. */
            public heroQuality: number;

            /** NEW_TEAM_INFO type. */
            public type: number;

            /**
             * Encodes the specified NEW_TEAM_INFO message. Does not implicitly {@link com.message.NEW_TEAM_INFO.verify|verify} messages.
             * @param message NEW_TEAM_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INEW_TEAM_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NEW_TEAM_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NEW_TEAM_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NEW_TEAM_INFO;
        }

        /** Properties of a C_CREATE_NEW_TEAM. */
        interface IC_CREATE_NEW_TEAM {

            /** C_CREATE_NEW_TEAM instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_CREATE_NEW_TEAM. */
        class C_CREATE_NEW_TEAM implements IC_CREATE_NEW_TEAM {

            /**
             * Constructs a new C_CREATE_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_CREATE_NEW_TEAM);

            /** C_CREATE_NEW_TEAM instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_CREATE_NEW_TEAM message. Does not implicitly {@link com.message.C_CREATE_NEW_TEAM.verify|verify} messages.
             * @param message C_CREATE_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_CREATE_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_CREATE_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_CREATE_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_CREATE_NEW_TEAM;
        }

        /** Properties of a S_CREATE_NEW_TEAM. */
        interface IS_CREATE_NEW_TEAM {

            /** S_CREATE_NEW_TEAM teamId */
            teamId?: (number|Long|null);

            /** S_CREATE_NEW_TEAM instanceId */
            instanceId?: (number|null);

            /** S_CREATE_NEW_TEAM type */
            type?: (number|null);

            /** S_CREATE_NEW_TEAM pos1 */
            pos1?: (number|null);

            /** S_CREATE_NEW_TEAM pos2 */
            pos2?: (number|null);
        }

        /** Represents a S_CREATE_NEW_TEAM. */
        class S_CREATE_NEW_TEAM implements IS_CREATE_NEW_TEAM {

            /**
             * Constructs a new S_CREATE_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_CREATE_NEW_TEAM);

            /** S_CREATE_NEW_TEAM teamId. */
            public teamId: (number|Long);

            /** S_CREATE_NEW_TEAM instanceId. */
            public instanceId: number;

            /** S_CREATE_NEW_TEAM type. */
            public type: number;

            /** S_CREATE_NEW_TEAM pos1. */
            public pos1: number;

            /** S_CREATE_NEW_TEAM pos2. */
            public pos2: number;

            /**
             * Encodes the specified S_CREATE_NEW_TEAM message. Does not implicitly {@link com.message.S_CREATE_NEW_TEAM.verify|verify} messages.
             * @param message S_CREATE_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_CREATE_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_CREATE_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_CREATE_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_CREATE_NEW_TEAM;
        }

        /** Properties of a NEW_TEAM_DATA. */
        interface INEW_TEAM_DATA {

            /** NEW_TEAM_DATA teamId */
            teamId?: (number|Long|null);

            /** NEW_TEAM_DATA instanceId */
            instanceId?: (number|null);

            /** NEW_TEAM_DATA teamInfo1 */
            teamInfo1?: (com.message.INEW_TEAM_MEMBER_INFO|null);

            /** NEW_TEAM_DATA teamInfo2 */
            teamInfo2?: (com.message.INEW_TEAM_MEMBER_INFO|null);

            /** NEW_TEAM_DATA teamInfo3 */
            teamInfo3?: (com.message.INEW_TEAM_MEMBER_INFO|null);

            /** NEW_TEAM_DATA type */
            type?: (number|null);

            /** NEW_TEAM_DATA addRate */
            addRate?: (number|null);

            /** NEW_TEAM_DATA battleTimes */
            battleTimes?: (number|null);
        }

        /** Represents a NEW_TEAM_DATA. */
        class NEW_TEAM_DATA implements INEW_TEAM_DATA {

            /**
             * Constructs a new NEW_TEAM_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INEW_TEAM_DATA);

            /** NEW_TEAM_DATA teamId. */
            public teamId: (number|Long);

            /** NEW_TEAM_DATA instanceId. */
            public instanceId: number;

            /** NEW_TEAM_DATA teamInfo1. */
            public teamInfo1?: (com.message.INEW_TEAM_MEMBER_INFO|null);

            /** NEW_TEAM_DATA teamInfo2. */
            public teamInfo2?: (com.message.INEW_TEAM_MEMBER_INFO|null);

            /** NEW_TEAM_DATA teamInfo3. */
            public teamInfo3?: (com.message.INEW_TEAM_MEMBER_INFO|null);

            /** NEW_TEAM_DATA type. */
            public type: number;

            /** NEW_TEAM_DATA addRate. */
            public addRate: number;

            /** NEW_TEAM_DATA battleTimes. */
            public battleTimes: number;

            /**
             * Encodes the specified NEW_TEAM_DATA message. Does not implicitly {@link com.message.NEW_TEAM_DATA.verify|verify} messages.
             * @param message NEW_TEAM_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INEW_TEAM_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NEW_TEAM_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NEW_TEAM_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NEW_TEAM_DATA;
        }

        /** Properties of a NEW_TEAM_MEMBER_INFO. */
        interface INEW_TEAM_MEMBER_INFO {

            /** NEW_TEAM_MEMBER_INFO name */
            name?: (string|null);

            /** NEW_TEAM_MEMBER_INFO playerId */
            playerId?: (number|Long|null);

            /** NEW_TEAM_MEMBER_INFO pos1 */
            pos1?: (number|null);

            /** NEW_TEAM_MEMBER_INFO pos2 */
            pos2?: (number|null);

            /** NEW_TEAM_MEMBER_INFO heoId */
            heoId?: (number|null);

            /** NEW_TEAM_MEMBER_INFO level */
            level?: (number|null);

            /** NEW_TEAM_MEMBER_INFO heroQuality */
            heroQuality?: (number|null);

            /** NEW_TEAM_MEMBER_INFO wingId */
            wingId?: (number|null);

            /** NEW_TEAM_MEMBER_INFO posIndex */
            posIndex?: (number|null);
        }

        /** Represents a NEW_TEAM_MEMBER_INFO. */
        class NEW_TEAM_MEMBER_INFO implements INEW_TEAM_MEMBER_INFO {

            /**
             * Constructs a new NEW_TEAM_MEMBER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INEW_TEAM_MEMBER_INFO);

            /** NEW_TEAM_MEMBER_INFO name. */
            public name: string;

            /** NEW_TEAM_MEMBER_INFO playerId. */
            public playerId: (number|Long);

            /** NEW_TEAM_MEMBER_INFO pos1. */
            public pos1: number;

            /** NEW_TEAM_MEMBER_INFO pos2. */
            public pos2: number;

            /** NEW_TEAM_MEMBER_INFO heoId. */
            public heoId: number;

            /** NEW_TEAM_MEMBER_INFO level. */
            public level: number;

            /** NEW_TEAM_MEMBER_INFO heroQuality. */
            public heroQuality: number;

            /** NEW_TEAM_MEMBER_INFO wingId. */
            public wingId: number;

            /** NEW_TEAM_MEMBER_INFO posIndex. */
            public posIndex: number;

            /**
             * Encodes the specified NEW_TEAM_MEMBER_INFO message. Does not implicitly {@link com.message.NEW_TEAM_MEMBER_INFO.verify|verify} messages.
             * @param message NEW_TEAM_MEMBER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INEW_TEAM_MEMBER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NEW_TEAM_MEMBER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NEW_TEAM_MEMBER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NEW_TEAM_MEMBER_INFO;
        }

        /** Properties of a C_JOIN_NEW_TEAM. */
        interface IC_JOIN_NEW_TEAM {

            /** C_JOIN_NEW_TEAM instanceId */
            instanceId?: (number|null);

            /** C_JOIN_NEW_TEAM teamId */
            teamId?: (number|Long|null);
        }

        /** Represents a C_JOIN_NEW_TEAM. */
        class C_JOIN_NEW_TEAM implements IC_JOIN_NEW_TEAM {

            /**
             * Constructs a new C_JOIN_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_JOIN_NEW_TEAM);

            /** C_JOIN_NEW_TEAM instanceId. */
            public instanceId: number;

            /** C_JOIN_NEW_TEAM teamId. */
            public teamId: (number|Long);

            /**
             * Encodes the specified C_JOIN_NEW_TEAM message. Does not implicitly {@link com.message.C_JOIN_NEW_TEAM.verify|verify} messages.
             * @param message C_JOIN_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_JOIN_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_JOIN_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_JOIN_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_JOIN_NEW_TEAM;
        }

        /** Properties of a S_JOIN_NEW_TEAM. */
        interface IS_JOIN_NEW_TEAM {

            /** S_JOIN_NEW_TEAM teaminfo */
            teaminfo?: (com.message.INEW_TEAM_DATA|null);
        }

        /** Represents a S_JOIN_NEW_TEAM. */
        class S_JOIN_NEW_TEAM implements IS_JOIN_NEW_TEAM {

            /**
             * Constructs a new S_JOIN_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_JOIN_NEW_TEAM);

            /** S_JOIN_NEW_TEAM teaminfo. */
            public teaminfo?: (com.message.INEW_TEAM_DATA|null);

            /**
             * Encodes the specified S_JOIN_NEW_TEAM message. Does not implicitly {@link com.message.S_JOIN_NEW_TEAM.verify|verify} messages.
             * @param message S_JOIN_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_JOIN_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_JOIN_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_JOIN_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_JOIN_NEW_TEAM;
        }

        /** Properties of a C_QUICK_JOIN_NEW_TEAM. */
        interface IC_QUICK_JOIN_NEW_TEAM {

            /** C_QUICK_JOIN_NEW_TEAM instanceId */
            instanceId?: (number|null);
        }

        /** Represents a C_QUICK_JOIN_NEW_TEAM. */
        class C_QUICK_JOIN_NEW_TEAM implements IC_QUICK_JOIN_NEW_TEAM {

            /**
             * Constructs a new C_QUICK_JOIN_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_QUICK_JOIN_NEW_TEAM);

            /** C_QUICK_JOIN_NEW_TEAM instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified C_QUICK_JOIN_NEW_TEAM message. Does not implicitly {@link com.message.C_QUICK_JOIN_NEW_TEAM.verify|verify} messages.
             * @param message C_QUICK_JOIN_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_QUICK_JOIN_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_QUICK_JOIN_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_QUICK_JOIN_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_QUICK_JOIN_NEW_TEAM;
        }

        /** Properties of a S_QUICK_JOIN_NEW_TEAM. */
        interface IS_QUICK_JOIN_NEW_TEAM {

            /** S_QUICK_JOIN_NEW_TEAM teaminfo */
            teaminfo?: (com.message.INEW_TEAM_DATA|null);
        }

        /** Represents a S_QUICK_JOIN_NEW_TEAM. */
        class S_QUICK_JOIN_NEW_TEAM implements IS_QUICK_JOIN_NEW_TEAM {

            /**
             * Constructs a new S_QUICK_JOIN_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_QUICK_JOIN_NEW_TEAM);

            /** S_QUICK_JOIN_NEW_TEAM teaminfo. */
            public teaminfo?: (com.message.INEW_TEAM_DATA|null);

            /**
             * Encodes the specified S_QUICK_JOIN_NEW_TEAM message. Does not implicitly {@link com.message.S_QUICK_JOIN_NEW_TEAM.verify|verify} messages.
             * @param message S_QUICK_JOIN_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_QUICK_JOIN_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_QUICK_JOIN_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_QUICK_JOIN_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_QUICK_JOIN_NEW_TEAM;
        }

        /** Properties of a C_EXIT_NEW_TEAM. */
        interface IC_EXIT_NEW_TEAM {

            /** C_EXIT_NEW_TEAM instanceId */
            instanceId?: (number|null);

            /** C_EXIT_NEW_TEAM teamId */
            teamId?: (number|Long|null);

            /** C_EXIT_NEW_TEAM type */
            type?: (number|null);

            /** C_EXIT_NEW_TEAM removeId */
            removeId?: (number|Long|null);
        }

        /** Represents a C_EXIT_NEW_TEAM. */
        class C_EXIT_NEW_TEAM implements IC_EXIT_NEW_TEAM {

            /**
             * Constructs a new C_EXIT_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_EXIT_NEW_TEAM);

            /** C_EXIT_NEW_TEAM instanceId. */
            public instanceId: number;

            /** C_EXIT_NEW_TEAM teamId. */
            public teamId: (number|Long);

            /** C_EXIT_NEW_TEAM type. */
            public type: number;

            /** C_EXIT_NEW_TEAM removeId. */
            public removeId: (number|Long);

            /**
             * Encodes the specified C_EXIT_NEW_TEAM message. Does not implicitly {@link com.message.C_EXIT_NEW_TEAM.verify|verify} messages.
             * @param message C_EXIT_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_EXIT_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_EXIT_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_EXIT_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_EXIT_NEW_TEAM;
        }

        /** Properties of a S_EXIT_NEW_TEAM. */
        interface IS_EXIT_NEW_TEAM {

            /** S_EXIT_NEW_TEAM instanceId */
            instanceId?: (number|null);

            /** S_EXIT_NEW_TEAM type */
            type?: (number|null);

            /** S_EXIT_NEW_TEAM removeId */
            removeId?: (number|Long|null);
        }

        /** Represents a S_EXIT_NEW_TEAM. */
        class S_EXIT_NEW_TEAM implements IS_EXIT_NEW_TEAM {

            /**
             * Constructs a new S_EXIT_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_EXIT_NEW_TEAM);

            /** S_EXIT_NEW_TEAM instanceId. */
            public instanceId: number;

            /** S_EXIT_NEW_TEAM type. */
            public type: number;

            /** S_EXIT_NEW_TEAM removeId. */
            public removeId: (number|Long);

            /**
             * Encodes the specified S_EXIT_NEW_TEAM message. Does not implicitly {@link com.message.S_EXIT_NEW_TEAM.verify|verify} messages.
             * @param message S_EXIT_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_EXIT_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_EXIT_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_EXIT_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_EXIT_NEW_TEAM;
        }

        /** Properties of a S_UPDATE_NEW_TEAM. */
        interface IS_UPDATE_NEW_TEAM {

            /** S_UPDATE_NEW_TEAM teaminfo */
            teaminfo?: (com.message.INEW_TEAM_DATA|null);
        }

        /** Represents a S_UPDATE_NEW_TEAM. */
        class S_UPDATE_NEW_TEAM implements IS_UPDATE_NEW_TEAM {

            /**
             * Constructs a new S_UPDATE_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_UPDATE_NEW_TEAM);

            /** S_UPDATE_NEW_TEAM teaminfo. */
            public teaminfo?: (com.message.INEW_TEAM_DATA|null);

            /**
             * Encodes the specified S_UPDATE_NEW_TEAM message. Does not implicitly {@link com.message.S_UPDATE_NEW_TEAM.verify|verify} messages.
             * @param message S_UPDATE_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_UPDATE_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_UPDATE_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_UPDATE_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_UPDATE_NEW_TEAM;
        }

        /** Properties of a C_SET_NEW_TEAM_HERO_POS. */
        interface IC_SET_NEW_TEAM_HERO_POS {

            /** C_SET_NEW_TEAM_HERO_POS pos1 */
            pos1?: (number|null);

            /** C_SET_NEW_TEAM_HERO_POS pos2 */
            pos2?: (number|null);
        }

        /** Represents a C_SET_NEW_TEAM_HERO_POS. */
        class C_SET_NEW_TEAM_HERO_POS implements IC_SET_NEW_TEAM_HERO_POS {

            /**
             * Constructs a new C_SET_NEW_TEAM_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SET_NEW_TEAM_HERO_POS);

            /** C_SET_NEW_TEAM_HERO_POS pos1. */
            public pos1: number;

            /** C_SET_NEW_TEAM_HERO_POS pos2. */
            public pos2: number;

            /**
             * Encodes the specified C_SET_NEW_TEAM_HERO_POS message. Does not implicitly {@link com.message.C_SET_NEW_TEAM_HERO_POS.verify|verify} messages.
             * @param message C_SET_NEW_TEAM_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SET_NEW_TEAM_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SET_NEW_TEAM_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SET_NEW_TEAM_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SET_NEW_TEAM_HERO_POS;
        }

        /** Properties of a S_SET_NEW_TEAM_HERO_POS. */
        interface IS_SET_NEW_TEAM_HERO_POS {

            /** S_SET_NEW_TEAM_HERO_POS pos1 */
            pos1?: (number|null);

            /** S_SET_NEW_TEAM_HERO_POS pos2 */
            pos2?: (number|null);
        }

        /** Represents a S_SET_NEW_TEAM_HERO_POS. */
        class S_SET_NEW_TEAM_HERO_POS implements IS_SET_NEW_TEAM_HERO_POS {

            /**
             * Constructs a new S_SET_NEW_TEAM_HERO_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SET_NEW_TEAM_HERO_POS);

            /** S_SET_NEW_TEAM_HERO_POS pos1. */
            public pos1: number;

            /** S_SET_NEW_TEAM_HERO_POS pos2. */
            public pos2: number;

            /**
             * Encodes the specified S_SET_NEW_TEAM_HERO_POS message. Does not implicitly {@link com.message.S_SET_NEW_TEAM_HERO_POS.verify|verify} messages.
             * @param message S_SET_NEW_TEAM_HERO_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SET_NEW_TEAM_HERO_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SET_NEW_TEAM_HERO_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SET_NEW_TEAM_HERO_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SET_NEW_TEAM_HERO_POS;
        }

        /** Properties of a C_ONEKEY_FULL_NEW_TEAM. */
        interface IC_ONEKEY_FULL_NEW_TEAM {

            /** C_ONEKEY_FULL_NEW_TEAM instanceId */
            instanceId?: (number|null);

            /** C_ONEKEY_FULL_NEW_TEAM teamId */
            teamId?: (number|Long|null);
        }

        /** Represents a C_ONEKEY_FULL_NEW_TEAM. */
        class C_ONEKEY_FULL_NEW_TEAM implements IC_ONEKEY_FULL_NEW_TEAM {

            /**
             * Constructs a new C_ONEKEY_FULL_NEW_TEAM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ONEKEY_FULL_NEW_TEAM);

            /** C_ONEKEY_FULL_NEW_TEAM instanceId. */
            public instanceId: number;

            /** C_ONEKEY_FULL_NEW_TEAM teamId. */
            public teamId: (number|Long);

            /**
             * Encodes the specified C_ONEKEY_FULL_NEW_TEAM message. Does not implicitly {@link com.message.C_ONEKEY_FULL_NEW_TEAM.verify|verify} messages.
             * @param message C_ONEKEY_FULL_NEW_TEAM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ONEKEY_FULL_NEW_TEAM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ONEKEY_FULL_NEW_TEAM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ONEKEY_FULL_NEW_TEAM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ONEKEY_FULL_NEW_TEAM;
        }

        /** Properties of a C_NEW_TEAM_STATE. */
        interface IC_NEW_TEAM_STATE {

            /** C_NEW_TEAM_STATE instanceId */
            instanceId?: (number|null);

            /** C_NEW_TEAM_STATE teamId */
            teamId?: (number|Long|null);

            /** C_NEW_TEAM_STATE type */
            type?: (number|null);
        }

        /** Represents a C_NEW_TEAM_STATE. */
        class C_NEW_TEAM_STATE implements IC_NEW_TEAM_STATE {

            /**
             * Constructs a new C_NEW_TEAM_STATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NEW_TEAM_STATE);

            /** C_NEW_TEAM_STATE instanceId. */
            public instanceId: number;

            /** C_NEW_TEAM_STATE teamId. */
            public teamId: (number|Long);

            /** C_NEW_TEAM_STATE type. */
            public type: number;

            /**
             * Encodes the specified C_NEW_TEAM_STATE message. Does not implicitly {@link com.message.C_NEW_TEAM_STATE.verify|verify} messages.
             * @param message C_NEW_TEAM_STATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NEW_TEAM_STATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NEW_TEAM_STATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NEW_TEAM_STATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NEW_TEAM_STATE;
        }

        /** Properties of a S_NEW_TEAM_STATE. */
        interface IS_NEW_TEAM_STATE {

            /** S_NEW_TEAM_STATE instanceId */
            instanceId?: (number|null);

            /** S_NEW_TEAM_STATE teamId */
            teamId?: (number|Long|null);

            /** S_NEW_TEAM_STATE type */
            type?: (number|null);
        }

        /** Represents a S_NEW_TEAM_STATE. */
        class S_NEW_TEAM_STATE implements IS_NEW_TEAM_STATE {

            /**
             * Constructs a new S_NEW_TEAM_STATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NEW_TEAM_STATE);

            /** S_NEW_TEAM_STATE instanceId. */
            public instanceId: number;

            /** S_NEW_TEAM_STATE teamId. */
            public teamId: (number|Long);

            /** S_NEW_TEAM_STATE type. */
            public type: number;

            /**
             * Encodes the specified S_NEW_TEAM_STATE message. Does not implicitly {@link com.message.S_NEW_TEAM_STATE.verify|verify} messages.
             * @param message S_NEW_TEAM_STATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NEW_TEAM_STATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NEW_TEAM_STATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NEW_TEAM_STATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NEW_TEAM_STATE;
        }

        /** Properties of a C_NEW_TEAM_INVITE. */
        interface IC_NEW_TEAM_INVITE {

            /** C_NEW_TEAM_INVITE instanceId */
            instanceId?: (number|null);

            /** C_NEW_TEAM_INVITE teamId */
            teamId?: (number|Long|null);

            /** C_NEW_TEAM_INVITE playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a C_NEW_TEAM_INVITE. */
        class C_NEW_TEAM_INVITE implements IC_NEW_TEAM_INVITE {

            /**
             * Constructs a new C_NEW_TEAM_INVITE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NEW_TEAM_INVITE);

            /** C_NEW_TEAM_INVITE instanceId. */
            public instanceId: number;

            /** C_NEW_TEAM_INVITE teamId. */
            public teamId: (number|Long);

            /** C_NEW_TEAM_INVITE playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified C_NEW_TEAM_INVITE message. Does not implicitly {@link com.message.C_NEW_TEAM_INVITE.verify|verify} messages.
             * @param message C_NEW_TEAM_INVITE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NEW_TEAM_INVITE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NEW_TEAM_INVITE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NEW_TEAM_INVITE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NEW_TEAM_INVITE;
        }

        /** Properties of a S_NEW_TEAM_INVITE. */
        interface IS_NEW_TEAM_INVITE {

            /** S_NEW_TEAM_INVITE instanceId */
            instanceId?: (number|null);

            /** S_NEW_TEAM_INVITE teamId */
            teamId?: (number|Long|null);

            /** S_NEW_TEAM_INVITE playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a S_NEW_TEAM_INVITE. */
        class S_NEW_TEAM_INVITE implements IS_NEW_TEAM_INVITE {

            /**
             * Constructs a new S_NEW_TEAM_INVITE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NEW_TEAM_INVITE);

            /** S_NEW_TEAM_INVITE instanceId. */
            public instanceId: number;

            /** S_NEW_TEAM_INVITE teamId. */
            public teamId: (number|Long);

            /** S_NEW_TEAM_INVITE playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified S_NEW_TEAM_INVITE message. Does not implicitly {@link com.message.S_NEW_TEAM_INVITE.verify|verify} messages.
             * @param message S_NEW_TEAM_INVITE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NEW_TEAM_INVITE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NEW_TEAM_INVITE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NEW_TEAM_INVITE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NEW_TEAM_INVITE;
        }

        /** Properties of a C_NEW_TEAM_CHANGE_POS. */
        interface IC_NEW_TEAM_CHANGE_POS {

            /** C_NEW_TEAM_CHANGE_POS instanceId */
            instanceId?: (number|null);

            /** C_NEW_TEAM_CHANGE_POS teamId */
            teamId?: (number|Long|null);

            /** C_NEW_TEAM_CHANGE_POS movePlayerId */
            movePlayerId?: (number|Long|null);

            /** C_NEW_TEAM_CHANGE_POS moveIndex */
            moveIndex?: (number|null);
        }

        /** Represents a C_NEW_TEAM_CHANGE_POS. */
        class C_NEW_TEAM_CHANGE_POS implements IC_NEW_TEAM_CHANGE_POS {

            /**
             * Constructs a new C_NEW_TEAM_CHANGE_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NEW_TEAM_CHANGE_POS);

            /** C_NEW_TEAM_CHANGE_POS instanceId. */
            public instanceId: number;

            /** C_NEW_TEAM_CHANGE_POS teamId. */
            public teamId: (number|Long);

            /** C_NEW_TEAM_CHANGE_POS movePlayerId. */
            public movePlayerId: (number|Long);

            /** C_NEW_TEAM_CHANGE_POS moveIndex. */
            public moveIndex: number;

            /**
             * Encodes the specified C_NEW_TEAM_CHANGE_POS message. Does not implicitly {@link com.message.C_NEW_TEAM_CHANGE_POS.verify|verify} messages.
             * @param message C_NEW_TEAM_CHANGE_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NEW_TEAM_CHANGE_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NEW_TEAM_CHANGE_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NEW_TEAM_CHANGE_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NEW_TEAM_CHANGE_POS;
        }

        /** Properties of a S_NEW_TEAM_CHANGE_POS. */
        interface IS_NEW_TEAM_CHANGE_POS {

            /** S_NEW_TEAM_CHANGE_POS teaminfo */
            teaminfo?: (com.message.INEW_TEAM_DATA|null);
        }

        /** Represents a S_NEW_TEAM_CHANGE_POS. */
        class S_NEW_TEAM_CHANGE_POS implements IS_NEW_TEAM_CHANGE_POS {

            /**
             * Constructs a new S_NEW_TEAM_CHANGE_POS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NEW_TEAM_CHANGE_POS);

            /** S_NEW_TEAM_CHANGE_POS teaminfo. */
            public teaminfo?: (com.message.INEW_TEAM_DATA|null);

            /**
             * Encodes the specified S_NEW_TEAM_CHANGE_POS message. Does not implicitly {@link com.message.S_NEW_TEAM_CHANGE_POS.verify|verify} messages.
             * @param message S_NEW_TEAM_CHANGE_POS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NEW_TEAM_CHANGE_POS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NEW_TEAM_CHANGE_POS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NEW_TEAM_CHANGE_POS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NEW_TEAM_CHANGE_POS;
        }

        /** Properties of a C_NEW_TEAM_INVITE_QUERY. */
        interface IC_NEW_TEAM_INVITE_QUERY {
        }

        /** Represents a C_NEW_TEAM_INVITE_QUERY. */
        class C_NEW_TEAM_INVITE_QUERY implements IC_NEW_TEAM_INVITE_QUERY {

            /**
             * Constructs a new C_NEW_TEAM_INVITE_QUERY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NEW_TEAM_INVITE_QUERY);

            /**
             * Encodes the specified C_NEW_TEAM_INVITE_QUERY message. Does not implicitly {@link com.message.C_NEW_TEAM_INVITE_QUERY.verify|verify} messages.
             * @param message C_NEW_TEAM_INVITE_QUERY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NEW_TEAM_INVITE_QUERY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NEW_TEAM_INVITE_QUERY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NEW_TEAM_INVITE_QUERY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NEW_TEAM_INVITE_QUERY;
        }

        /** Properties of a S_NEW_TEAM_INVITE_QUERY. */
        interface IS_NEW_TEAM_INVITE_QUERY {

            /** S_NEW_TEAM_INVITE_QUERY invites */
            invites?: (com.message.INEW_TEAM_INVITE[]|null);
        }

        /** Represents a S_NEW_TEAM_INVITE_QUERY. */
        class S_NEW_TEAM_INVITE_QUERY implements IS_NEW_TEAM_INVITE_QUERY {

            /**
             * Constructs a new S_NEW_TEAM_INVITE_QUERY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NEW_TEAM_INVITE_QUERY);

            /** S_NEW_TEAM_INVITE_QUERY invites. */
            public invites: com.message.INEW_TEAM_INVITE[];

            /**
             * Encodes the specified S_NEW_TEAM_INVITE_QUERY message. Does not implicitly {@link com.message.S_NEW_TEAM_INVITE_QUERY.verify|verify} messages.
             * @param message S_NEW_TEAM_INVITE_QUERY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NEW_TEAM_INVITE_QUERY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NEW_TEAM_INVITE_QUERY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NEW_TEAM_INVITE_QUERY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NEW_TEAM_INVITE_QUERY;
        }

        /** Properties of a C_NEW_TEAM_INVITE_IGNORE. */
        interface IC_NEW_TEAM_INVITE_IGNORE {
        }

        /** Represents a C_NEW_TEAM_INVITE_IGNORE. */
        class C_NEW_TEAM_INVITE_IGNORE implements IC_NEW_TEAM_INVITE_IGNORE {

            /**
             * Constructs a new C_NEW_TEAM_INVITE_IGNORE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NEW_TEAM_INVITE_IGNORE);

            /**
             * Encodes the specified C_NEW_TEAM_INVITE_IGNORE message. Does not implicitly {@link com.message.C_NEW_TEAM_INVITE_IGNORE.verify|verify} messages.
             * @param message C_NEW_TEAM_INVITE_IGNORE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NEW_TEAM_INVITE_IGNORE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NEW_TEAM_INVITE_IGNORE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NEW_TEAM_INVITE_IGNORE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NEW_TEAM_INVITE_IGNORE;
        }

        /** Properties of a S_NEW_TEAM_INVITE_IGNORE. */
        interface IS_NEW_TEAM_INVITE_IGNORE {
        }

        /** Represents a S_NEW_TEAM_INVITE_IGNORE. */
        class S_NEW_TEAM_INVITE_IGNORE implements IS_NEW_TEAM_INVITE_IGNORE {

            /**
             * Constructs a new S_NEW_TEAM_INVITE_IGNORE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NEW_TEAM_INVITE_IGNORE);

            /**
             * Encodes the specified S_NEW_TEAM_INVITE_IGNORE message. Does not implicitly {@link com.message.S_NEW_TEAM_INVITE_IGNORE.verify|verify} messages.
             * @param message S_NEW_TEAM_INVITE_IGNORE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NEW_TEAM_INVITE_IGNORE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NEW_TEAM_INVITE_IGNORE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NEW_TEAM_INVITE_IGNORE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NEW_TEAM_INVITE_IGNORE;
        }

        /** Properties of a NEW_TEAM_INVITE. */
        interface INEW_TEAM_INVITE {

            /** NEW_TEAM_INVITE instanceId */
            instanceId?: (number|null);

            /** NEW_TEAM_INVITE teamId */
            teamId?: (number|Long|null);

            /** NEW_TEAM_INVITE playerId */
            playerId?: (number|Long|null);

            /** NEW_TEAM_INVITE nickName */
            nickName?: (string|null);
        }

        /** Represents a NEW_TEAM_INVITE. */
        class NEW_TEAM_INVITE implements INEW_TEAM_INVITE {

            /**
             * Constructs a new NEW_TEAM_INVITE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.INEW_TEAM_INVITE);

            /** NEW_TEAM_INVITE instanceId. */
            public instanceId: number;

            /** NEW_TEAM_INVITE teamId. */
            public teamId: (number|Long);

            /** NEW_TEAM_INVITE playerId. */
            public playerId: (number|Long);

            /** NEW_TEAM_INVITE nickName. */
            public nickName: string;

            /**
             * Encodes the specified NEW_TEAM_INVITE message. Does not implicitly {@link com.message.NEW_TEAM_INVITE.verify|verify} messages.
             * @param message NEW_TEAM_INVITE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.INEW_TEAM_INVITE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a NEW_TEAM_INVITE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns NEW_TEAM_INVITE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.NEW_TEAM_INVITE;
        }

        /** Properties of a C_NEW_TEAM_INVITE_DATA. */
        interface IC_NEW_TEAM_INVITE_DATA {

            /** C_NEW_TEAM_INVITE_DATA instanceId */
            instanceId?: (number|null);

            /** C_NEW_TEAM_INVITE_DATA teamId */
            teamId?: (number|Long|null);
        }

        /** Represents a C_NEW_TEAM_INVITE_DATA. */
        class C_NEW_TEAM_INVITE_DATA implements IC_NEW_TEAM_INVITE_DATA {

            /**
             * Constructs a new C_NEW_TEAM_INVITE_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NEW_TEAM_INVITE_DATA);

            /** C_NEW_TEAM_INVITE_DATA instanceId. */
            public instanceId: number;

            /** C_NEW_TEAM_INVITE_DATA teamId. */
            public teamId: (number|Long);

            /**
             * Encodes the specified C_NEW_TEAM_INVITE_DATA message. Does not implicitly {@link com.message.C_NEW_TEAM_INVITE_DATA.verify|verify} messages.
             * @param message C_NEW_TEAM_INVITE_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NEW_TEAM_INVITE_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NEW_TEAM_INVITE_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NEW_TEAM_INVITE_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NEW_TEAM_INVITE_DATA;
        }

        /** Properties of a S_NEW_TEAM_INVITE_DATA. */
        interface IS_NEW_TEAM_INVITE_DATA {

            /** S_NEW_TEAM_INVITE_DATA instanceId */
            instanceId?: (number|null);

            /** S_NEW_TEAM_INVITE_DATA teamId */
            teamId?: (number|Long|null);

            /** S_NEW_TEAM_INVITE_DATA playerDatas */
            playerDatas?: (com.message.IINVITE_PLAYER_DATA[]|null);
        }

        /** Represents a S_NEW_TEAM_INVITE_DATA. */
        class S_NEW_TEAM_INVITE_DATA implements IS_NEW_TEAM_INVITE_DATA {

            /**
             * Constructs a new S_NEW_TEAM_INVITE_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NEW_TEAM_INVITE_DATA);

            /** S_NEW_TEAM_INVITE_DATA instanceId. */
            public instanceId: number;

            /** S_NEW_TEAM_INVITE_DATA teamId. */
            public teamId: (number|Long);

            /** S_NEW_TEAM_INVITE_DATA playerDatas. */
            public playerDatas: com.message.IINVITE_PLAYER_DATA[];

            /**
             * Encodes the specified S_NEW_TEAM_INVITE_DATA message. Does not implicitly {@link com.message.S_NEW_TEAM_INVITE_DATA.verify|verify} messages.
             * @param message S_NEW_TEAM_INVITE_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NEW_TEAM_INVITE_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NEW_TEAM_INVITE_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NEW_TEAM_INVITE_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NEW_TEAM_INVITE_DATA;
        }

        /** Properties of a INVITE_PLAYER_DATA. */
        interface IINVITE_PLAYER_DATA {

            /** INVITE_PLAYER_DATA playerId */
            playerId?: (number|Long|null);

            /** INVITE_PLAYER_DATA nickName */
            nickName?: (string|null);

            /** INVITE_PLAYER_DATA heroId */
            heroId?: (number|null);

            /** INVITE_PLAYER_DATA fightValue */
            fightValue?: (number|Long|null);

            /** INVITE_PLAYER_DATA state */
            state?: (number|null);
        }

        /** Represents a INVITE_PLAYER_DATA. */
        class INVITE_PLAYER_DATA implements IINVITE_PLAYER_DATA {

            /**
             * Constructs a new INVITE_PLAYER_DATA.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IINVITE_PLAYER_DATA);

            /** INVITE_PLAYER_DATA playerId. */
            public playerId: (number|Long);

            /** INVITE_PLAYER_DATA nickName. */
            public nickName: string;

            /** INVITE_PLAYER_DATA heroId. */
            public heroId: number;

            /** INVITE_PLAYER_DATA fightValue. */
            public fightValue: (number|Long);

            /** INVITE_PLAYER_DATA state. */
            public state: number;

            /**
             * Encodes the specified INVITE_PLAYER_DATA message. Does not implicitly {@link com.message.INVITE_PLAYER_DATA.verify|verify} messages.
             * @param message INVITE_PLAYER_DATA message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IINVITE_PLAYER_DATA, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a INVITE_PLAYER_DATA message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns INVITE_PLAYER_DATA
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.INVITE_PLAYER_DATA;
        }

        /** Properties of a C_NEW_TEAM_BATTLE_TIMES. */
        interface IC_NEW_TEAM_BATTLE_TIMES {

            /** C_NEW_TEAM_BATTLE_TIMES instanceId */
            instanceId?: (number|null);

            /** C_NEW_TEAM_BATTLE_TIMES teamId */
            teamId?: (number|Long|null);

            /** C_NEW_TEAM_BATTLE_TIMES times */
            times?: (number|null);
        }

        /** Represents a C_NEW_TEAM_BATTLE_TIMES. */
        class C_NEW_TEAM_BATTLE_TIMES implements IC_NEW_TEAM_BATTLE_TIMES {

            /**
             * Constructs a new C_NEW_TEAM_BATTLE_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_NEW_TEAM_BATTLE_TIMES);

            /** C_NEW_TEAM_BATTLE_TIMES instanceId. */
            public instanceId: number;

            /** C_NEW_TEAM_BATTLE_TIMES teamId. */
            public teamId: (number|Long);

            /** C_NEW_TEAM_BATTLE_TIMES times. */
            public times: number;

            /**
             * Encodes the specified C_NEW_TEAM_BATTLE_TIMES message. Does not implicitly {@link com.message.C_NEW_TEAM_BATTLE_TIMES.verify|verify} messages.
             * @param message C_NEW_TEAM_BATTLE_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_NEW_TEAM_BATTLE_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_NEW_TEAM_BATTLE_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_NEW_TEAM_BATTLE_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_NEW_TEAM_BATTLE_TIMES;
        }

        /** Properties of a S_NEW_TEAM_BATTLE_TIMES. */
        interface IS_NEW_TEAM_BATTLE_TIMES {

            /** S_NEW_TEAM_BATTLE_TIMES instanceId */
            instanceId?: (number|null);

            /** S_NEW_TEAM_BATTLE_TIMES teamId */
            teamId?: (number|Long|null);

            /** S_NEW_TEAM_BATTLE_TIMES battleTimes */
            battleTimes?: (number|null);
        }

        /** Represents a S_NEW_TEAM_BATTLE_TIMES. */
        class S_NEW_TEAM_BATTLE_TIMES implements IS_NEW_TEAM_BATTLE_TIMES {

            /**
             * Constructs a new S_NEW_TEAM_BATTLE_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_NEW_TEAM_BATTLE_TIMES);

            /** S_NEW_TEAM_BATTLE_TIMES instanceId. */
            public instanceId: number;

            /** S_NEW_TEAM_BATTLE_TIMES teamId. */
            public teamId: (number|Long);

            /** S_NEW_TEAM_BATTLE_TIMES battleTimes. */
            public battleTimes: number;

            /**
             * Encodes the specified S_NEW_TEAM_BATTLE_TIMES message. Does not implicitly {@link com.message.S_NEW_TEAM_BATTLE_TIMES.verify|verify} messages.
             * @param message S_NEW_TEAM_BATTLE_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_NEW_TEAM_BATTLE_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_NEW_TEAM_BATTLE_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_NEW_TEAM_BATTLE_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_NEW_TEAM_BATTLE_TIMES;
        }

        /** Properties of a C_TORTOISE_GET_INFO. */
        interface IC_TORTOISE_GET_INFO {
        }

        /** Represents a C_TORTOISE_GET_INFO. */
        class C_TORTOISE_GET_INFO implements IC_TORTOISE_GET_INFO {

            /**
             * Constructs a new C_TORTOISE_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TORTOISE_GET_INFO);

            /**
             * Encodes the specified C_TORTOISE_GET_INFO message. Does not implicitly {@link com.message.C_TORTOISE_GET_INFO.verify|verify} messages.
             * @param message C_TORTOISE_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TORTOISE_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TORTOISE_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TORTOISE_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TORTOISE_GET_INFO;
        }

        /** Properties of a S_TORTOISE_GET_INFO. */
        interface IS_TORTOISE_GET_INFO {

            /** S_TORTOISE_GET_INFO time */
            time?: (number|Long|null);

            /** S_TORTOISE_GET_INFO state */
            state?: (number|null);

            /** S_TORTOISE_GET_INFO reward */
            reward?: (number|null);

            /** S_TORTOISE_GET_INFO lastWin */
            lastWin?: (com.message.ITORTOISE_RESULT_INFO|null);

            /** S_TORTOISE_GET_INFO stakeInfo */
            stakeInfo?: (com.message.ITORTOISE_STAKE_INFO[]|null);

            /** S_TORTOISE_GET_INFO freeTimes */
            freeTimes?: (number|null);
        }

        /** Represents a S_TORTOISE_GET_INFO. */
        class S_TORTOISE_GET_INFO implements IS_TORTOISE_GET_INFO {

            /**
             * Constructs a new S_TORTOISE_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_GET_INFO);

            /** S_TORTOISE_GET_INFO time. */
            public time: (number|Long);

            /** S_TORTOISE_GET_INFO state. */
            public state: number;

            /** S_TORTOISE_GET_INFO reward. */
            public reward: number;

            /** S_TORTOISE_GET_INFO lastWin. */
            public lastWin?: (com.message.ITORTOISE_RESULT_INFO|null);

            /** S_TORTOISE_GET_INFO stakeInfo. */
            public stakeInfo: com.message.ITORTOISE_STAKE_INFO[];

            /** S_TORTOISE_GET_INFO freeTimes. */
            public freeTimes: number;

            /**
             * Encodes the specified S_TORTOISE_GET_INFO message. Does not implicitly {@link com.message.S_TORTOISE_GET_INFO.verify|verify} messages.
             * @param message S_TORTOISE_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_GET_INFO;
        }

        /** Properties of a TORTOISE_RESULT_INFO. */
        interface ITORTOISE_RESULT_INFO {

            /** TORTOISE_RESULT_INFO tortoiseId */
            tortoiseId?: (number[]|null);

            /** TORTOISE_RESULT_INFO myTortoiseInfo */
            myTortoiseInfo?: (com.message.ITORTOISE_STAKE_INFO[]|null);

            /** TORTOISE_RESULT_INFO rewardNum */
            rewardNum?: (number[]|null);
        }

        /** Represents a TORTOISE_RESULT_INFO. */
        class TORTOISE_RESULT_INFO implements ITORTOISE_RESULT_INFO {

            /**
             * Constructs a new TORTOISE_RESULT_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITORTOISE_RESULT_INFO);

            /** TORTOISE_RESULT_INFO tortoiseId. */
            public tortoiseId: number[];

            /** TORTOISE_RESULT_INFO myTortoiseInfo. */
            public myTortoiseInfo: com.message.ITORTOISE_STAKE_INFO[];

            /** TORTOISE_RESULT_INFO rewardNum. */
            public rewardNum: number[];

            /**
             * Encodes the specified TORTOISE_RESULT_INFO message. Does not implicitly {@link com.message.TORTOISE_RESULT_INFO.verify|verify} messages.
             * @param message TORTOISE_RESULT_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITORTOISE_RESULT_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TORTOISE_RESULT_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TORTOISE_RESULT_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TORTOISE_RESULT_INFO;
        }

        /** Properties of a TORTOISE_STAKE_INFO. */
        interface ITORTOISE_STAKE_INFO {

            /** TORTOISE_STAKE_INFO id */
            id?: (number|null);

            /** TORTOISE_STAKE_INFO num */
            num?: (number|null);

            /** TORTOISE_STAKE_INFO odds */
            odds?: (number|null);

            /** TORTOISE_STAKE_INFO totalNum */
            totalNum?: (number|null);
        }

        /** Represents a TORTOISE_STAKE_INFO. */
        class TORTOISE_STAKE_INFO implements ITORTOISE_STAKE_INFO {

            /**
             * Constructs a new TORTOISE_STAKE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITORTOISE_STAKE_INFO);

            /** TORTOISE_STAKE_INFO id. */
            public id: number;

            /** TORTOISE_STAKE_INFO num. */
            public num: number;

            /** TORTOISE_STAKE_INFO odds. */
            public odds: number;

            /** TORTOISE_STAKE_INFO totalNum. */
            public totalNum: number;

            /**
             * Encodes the specified TORTOISE_STAKE_INFO message. Does not implicitly {@link com.message.TORTOISE_STAKE_INFO.verify|verify} messages.
             * @param message TORTOISE_STAKE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITORTOISE_STAKE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TORTOISE_STAKE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TORTOISE_STAKE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TORTOISE_STAKE_INFO;
        }

        /** Properties of a S_STAKE_SYN. */
        interface IS_STAKE_SYN {

            /** S_STAKE_SYN stakeInfo */
            stakeInfo?: (com.message.ITORTOISE_STAKE_INFO|null);

            /** S_STAKE_SYN reward */
            reward?: (number|null);
        }

        /** Represents a S_STAKE_SYN. */
        class S_STAKE_SYN implements IS_STAKE_SYN {

            /**
             * Constructs a new S_STAKE_SYN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_STAKE_SYN);

            /** S_STAKE_SYN stakeInfo. */
            public stakeInfo?: (com.message.ITORTOISE_STAKE_INFO|null);

            /** S_STAKE_SYN reward. */
            public reward: number;

            /**
             * Encodes the specified S_STAKE_SYN message. Does not implicitly {@link com.message.S_STAKE_SYN.verify|verify} messages.
             * @param message S_STAKE_SYN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_STAKE_SYN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_STAKE_SYN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_STAKE_SYN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_STAKE_SYN;
        }

        /** Properties of a C_TORTOISE_STAKE. */
        interface IC_TORTOISE_STAKE {

            /** C_TORTOISE_STAKE id */
            id?: (number|null);
        }

        /** Represents a C_TORTOISE_STAKE. */
        class C_TORTOISE_STAKE implements IC_TORTOISE_STAKE {

            /**
             * Constructs a new C_TORTOISE_STAKE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TORTOISE_STAKE);

            /** C_TORTOISE_STAKE id. */
            public id: number;

            /**
             * Encodes the specified C_TORTOISE_STAKE message. Does not implicitly {@link com.message.C_TORTOISE_STAKE.verify|verify} messages.
             * @param message C_TORTOISE_STAKE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TORTOISE_STAKE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TORTOISE_STAKE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TORTOISE_STAKE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TORTOISE_STAKE;
        }

        /** Properties of a S_TORTOISE_STAKE. */
        interface IS_TORTOISE_STAKE {

            /** S_TORTOISE_STAKE stakeInfo */
            stakeInfo?: (com.message.ITORTOISE_STAKE_INFO|null);
        }

        /** Represents a S_TORTOISE_STAKE. */
        class S_TORTOISE_STAKE implements IS_TORTOISE_STAKE {

            /**
             * Constructs a new S_TORTOISE_STAKE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_STAKE);

            /** S_TORTOISE_STAKE stakeInfo. */
            public stakeInfo?: (com.message.ITORTOISE_STAKE_INFO|null);

            /**
             * Encodes the specified S_TORTOISE_STAKE message. Does not implicitly {@link com.message.S_TORTOISE_STAKE.verify|verify} messages.
             * @param message S_TORTOISE_STAKE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_STAKE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_STAKE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_STAKE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_STAKE;
        }

        /** Properties of a C_TORTOISE_USE_ITEM. */
        interface IC_TORTOISE_USE_ITEM {

            /** C_TORTOISE_USE_ITEM itemId */
            itemId?: (number|null);

            /** C_TORTOISE_USE_ITEM tortoiseId */
            tortoiseId?: (number|null);
        }

        /** Represents a C_TORTOISE_USE_ITEM. */
        class C_TORTOISE_USE_ITEM implements IC_TORTOISE_USE_ITEM {

            /**
             * Constructs a new C_TORTOISE_USE_ITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TORTOISE_USE_ITEM);

            /** C_TORTOISE_USE_ITEM itemId. */
            public itemId: number;

            /** C_TORTOISE_USE_ITEM tortoiseId. */
            public tortoiseId: number;

            /**
             * Encodes the specified C_TORTOISE_USE_ITEM message. Does not implicitly {@link com.message.C_TORTOISE_USE_ITEM.verify|verify} messages.
             * @param message C_TORTOISE_USE_ITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TORTOISE_USE_ITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TORTOISE_USE_ITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TORTOISE_USE_ITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TORTOISE_USE_ITEM;
        }

        /** Properties of a S_TORTOISE_USE_ITEM. */
        interface IS_TORTOISE_USE_ITEM {

            /** S_TORTOISE_USE_ITEM itemId */
            itemId?: (number|null);

            /** S_TORTOISE_USE_ITEM tortoiseId */
            tortoiseId?: (number|null);
        }

        /** Represents a S_TORTOISE_USE_ITEM. */
        class S_TORTOISE_USE_ITEM implements IS_TORTOISE_USE_ITEM {

            /**
             * Constructs a new S_TORTOISE_USE_ITEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_USE_ITEM);

            /** S_TORTOISE_USE_ITEM itemId. */
            public itemId: number;

            /** S_TORTOISE_USE_ITEM tortoiseId. */
            public tortoiseId: number;

            /**
             * Encodes the specified S_TORTOISE_USE_ITEM message. Does not implicitly {@link com.message.S_TORTOISE_USE_ITEM.verify|verify} messages.
             * @param message S_TORTOISE_USE_ITEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_USE_ITEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_USE_ITEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_USE_ITEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_USE_ITEM;
        }

        /** Properties of a C_TORTOISE_SPEAK. */
        interface IC_TORTOISE_SPEAK {

            /** C_TORTOISE_SPEAK speak */
            speak?: (string|null);
        }

        /** Represents a C_TORTOISE_SPEAK. */
        class C_TORTOISE_SPEAK implements IC_TORTOISE_SPEAK {

            /**
             * Constructs a new C_TORTOISE_SPEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TORTOISE_SPEAK);

            /** C_TORTOISE_SPEAK speak. */
            public speak: string;

            /**
             * Encodes the specified C_TORTOISE_SPEAK message. Does not implicitly {@link com.message.C_TORTOISE_SPEAK.verify|verify} messages.
             * @param message C_TORTOISE_SPEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TORTOISE_SPEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TORTOISE_SPEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TORTOISE_SPEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TORTOISE_SPEAK;
        }

        /** Properties of a S_TORTOISE_SPEAK. */
        interface IS_TORTOISE_SPEAK {

            /** S_TORTOISE_SPEAK speak */
            speak?: (string|null);
        }

        /** Represents a S_TORTOISE_SPEAK. */
        class S_TORTOISE_SPEAK implements IS_TORTOISE_SPEAK {

            /**
             * Constructs a new S_TORTOISE_SPEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_SPEAK);

            /** S_TORTOISE_SPEAK speak. */
            public speak: string;

            /**
             * Encodes the specified S_TORTOISE_SPEAK message. Does not implicitly {@link com.message.S_TORTOISE_SPEAK.verify|verify} messages.
             * @param message S_TORTOISE_SPEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_SPEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_SPEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_SPEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_SPEAK;
        }

        /** Properties of a S_TORTOISE_START. */
        interface IS_TORTOISE_START {
        }

        /** Represents a S_TORTOISE_START. */
        class S_TORTOISE_START implements IS_TORTOISE_START {

            /**
             * Constructs a new S_TORTOISE_START.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_START);

            /**
             * Encodes the specified S_TORTOISE_START message. Does not implicitly {@link com.message.S_TORTOISE_START.verify|verify} messages.
             * @param message S_TORTOISE_START message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_START, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_START message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_START
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_START;
        }

        /** Properties of a S_TORTOISE_SYNC_INFO. */
        interface IS_TORTOISE_SYNC_INFO {

            /** S_TORTOISE_SYNC_INFO tortoiseId */
            tortoiseId?: (number|null);

            /** S_TORTOISE_SYNC_INFO actionId */
            actionId?: (number|null);

            /** S_TORTOISE_SYNC_INFO itemActionId */
            itemActionId?: (number|null);

            /** S_TORTOISE_SYNC_INFO distance */
            distance?: (number|null);
        }

        /** Represents a S_TORTOISE_SYNC_INFO. */
        class S_TORTOISE_SYNC_INFO implements IS_TORTOISE_SYNC_INFO {

            /**
             * Constructs a new S_TORTOISE_SYNC_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_SYNC_INFO);

            /** S_TORTOISE_SYNC_INFO tortoiseId. */
            public tortoiseId: number;

            /** S_TORTOISE_SYNC_INFO actionId. */
            public actionId: number;

            /** S_TORTOISE_SYNC_INFO itemActionId. */
            public itemActionId: number;

            /** S_TORTOISE_SYNC_INFO distance. */
            public distance: number;

            /**
             * Encodes the specified S_TORTOISE_SYNC_INFO message. Does not implicitly {@link com.message.S_TORTOISE_SYNC_INFO.verify|verify} messages.
             * @param message S_TORTOISE_SYNC_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_SYNC_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_SYNC_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_SYNC_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_SYNC_INFO;
        }

        /** Properties of a S_TORTOISE_RESULT. */
        interface IS_TORTOISE_RESULT {

            /** S_TORTOISE_RESULT resultInfo */
            resultInfo?: (com.message.ITORTOISE_RESULT_INFO|null);
        }

        /** Represents a S_TORTOISE_RESULT. */
        class S_TORTOISE_RESULT implements IS_TORTOISE_RESULT {

            /**
             * Constructs a new S_TORTOISE_RESULT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_RESULT);

            /** S_TORTOISE_RESULT resultInfo. */
            public resultInfo?: (com.message.ITORTOISE_RESULT_INFO|null);

            /**
             * Encodes the specified S_TORTOISE_RESULT message. Does not implicitly {@link com.message.S_TORTOISE_RESULT.verify|verify} messages.
             * @param message S_TORTOISE_RESULT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_RESULT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_RESULT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_RESULT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_RESULT;
        }

        /** Properties of a C_TORTOISE_GET_STAKE_INFO. */
        interface IC_TORTOISE_GET_STAKE_INFO {
        }

        /** Represents a C_TORTOISE_GET_STAKE_INFO. */
        class C_TORTOISE_GET_STAKE_INFO implements IC_TORTOISE_GET_STAKE_INFO {

            /**
             * Constructs a new C_TORTOISE_GET_STAKE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TORTOISE_GET_STAKE_INFO);

            /**
             * Encodes the specified C_TORTOISE_GET_STAKE_INFO message. Does not implicitly {@link com.message.C_TORTOISE_GET_STAKE_INFO.verify|verify} messages.
             * @param message C_TORTOISE_GET_STAKE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TORTOISE_GET_STAKE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TORTOISE_GET_STAKE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TORTOISE_GET_STAKE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TORTOISE_GET_STAKE_INFO;
        }

        /** Properties of a S_TORTOISE_GET_STAKE_INFO. */
        interface IS_TORTOISE_GET_STAKE_INFO {

            /** S_TORTOISE_GET_STAKE_INFO reward */
            reward?: (number|null);

            /** S_TORTOISE_GET_STAKE_INFO stakeInfo */
            stakeInfo?: (com.message.ITORTOISE_STAKE_INFO[]|null);
        }

        /** Represents a S_TORTOISE_GET_STAKE_INFO. */
        class S_TORTOISE_GET_STAKE_INFO implements IS_TORTOISE_GET_STAKE_INFO {

            /**
             * Constructs a new S_TORTOISE_GET_STAKE_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TORTOISE_GET_STAKE_INFO);

            /** S_TORTOISE_GET_STAKE_INFO reward. */
            public reward: number;

            /** S_TORTOISE_GET_STAKE_INFO stakeInfo. */
            public stakeInfo: com.message.ITORTOISE_STAKE_INFO[];

            /**
             * Encodes the specified S_TORTOISE_GET_STAKE_INFO message. Does not implicitly {@link com.message.S_TORTOISE_GET_STAKE_INFO.verify|verify} messages.
             * @param message S_TORTOISE_GET_STAKE_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TORTOISE_GET_STAKE_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TORTOISE_GET_STAKE_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TORTOISE_GET_STAKE_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TORTOISE_GET_STAKE_INFO;
        }

        /** Properties of a C_GET_TOWER_INFO. */
        interface IC_GET_TOWER_INFO {
        }

        /** Represents a C_GET_TOWER_INFO. */
        class C_GET_TOWER_INFO implements IC_GET_TOWER_INFO {

            /**
             * Constructs a new C_GET_TOWER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOWER_INFO);

            /**
             * Encodes the specified C_GET_TOWER_INFO message. Does not implicitly {@link com.message.C_GET_TOWER_INFO.verify|verify} messages.
             * @param message C_GET_TOWER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOWER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOWER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOWER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOWER_INFO;
        }

        /** Properties of a S_GET_TOWER_INFO. */
        interface IS_GET_TOWER_INFO {

            /** S_GET_TOWER_INFO towerId */
            towerId?: (number|null);

            /** S_GET_TOWER_INFO isAuto */
            isAuto?: (boolean|null);
        }

        /** Represents a S_GET_TOWER_INFO. */
        class S_GET_TOWER_INFO implements IS_GET_TOWER_INFO {

            /**
             * Constructs a new S_GET_TOWER_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOWER_INFO);

            /** S_GET_TOWER_INFO towerId. */
            public towerId: number;

            /** S_GET_TOWER_INFO isAuto. */
            public isAuto: boolean;

            /**
             * Encodes the specified S_GET_TOWER_INFO message. Does not implicitly {@link com.message.S_GET_TOWER_INFO.verify|verify} messages.
             * @param message S_GET_TOWER_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOWER_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOWER_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOWER_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOWER_INFO;
        }

        /** Properties of a C_GET_TOWER_RANK_INFO. */
        interface IC_GET_TOWER_RANK_INFO {
        }

        /** Represents a C_GET_TOWER_RANK_INFO. */
        class C_GET_TOWER_RANK_INFO implements IC_GET_TOWER_RANK_INFO {

            /**
             * Constructs a new C_GET_TOWER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_TOWER_RANK_INFO);

            /**
             * Encodes the specified C_GET_TOWER_RANK_INFO message. Does not implicitly {@link com.message.C_GET_TOWER_RANK_INFO.verify|verify} messages.
             * @param message C_GET_TOWER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_TOWER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_TOWER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_TOWER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_TOWER_RANK_INFO;
        }

        /** Properties of a S_GET_TOWER_RANK_INFO. */
        interface IS_GET_TOWER_RANK_INFO {

            /** S_GET_TOWER_RANK_INFO rank */
            rank?: (number|null);

            /** S_GET_TOWER_RANK_INFO tableVos */
            tableVos?: (com.message.ITOWER_RANK_INFO[]|null);
        }

        /** Represents a S_GET_TOWER_RANK_INFO. */
        class S_GET_TOWER_RANK_INFO implements IS_GET_TOWER_RANK_INFO {

            /**
             * Constructs a new S_GET_TOWER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_TOWER_RANK_INFO);

            /** S_GET_TOWER_RANK_INFO rank. */
            public rank: number;

            /** S_GET_TOWER_RANK_INFO tableVos. */
            public tableVos: com.message.ITOWER_RANK_INFO[];

            /**
             * Encodes the specified S_GET_TOWER_RANK_INFO message. Does not implicitly {@link com.message.S_GET_TOWER_RANK_INFO.verify|verify} messages.
             * @param message S_GET_TOWER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_TOWER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_TOWER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_TOWER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_TOWER_RANK_INFO;
        }

        /** Properties of a TOWER_RANK_INFO. */
        interface ITOWER_RANK_INFO {

            /** TOWER_RANK_INFO towerId */
            towerId?: (number|null);

            /** TOWER_RANK_INFO playerId */
            playerId?: (number|Long|null);

            /** TOWER_RANK_INFO nickName */
            nickName?: (string|null);

            /** TOWER_RANK_INFO rank */
            rank?: (number|null);

            /** TOWER_RANK_INFO fight */
            fight?: (number|Long|null);
        }

        /** Represents a TOWER_RANK_INFO. */
        class TOWER_RANK_INFO implements ITOWER_RANK_INFO {

            /**
             * Constructs a new TOWER_RANK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITOWER_RANK_INFO);

            /** TOWER_RANK_INFO towerId. */
            public towerId: number;

            /** TOWER_RANK_INFO playerId. */
            public playerId: (number|Long);

            /** TOWER_RANK_INFO nickName. */
            public nickName: string;

            /** TOWER_RANK_INFO rank. */
            public rank: number;

            /** TOWER_RANK_INFO fight. */
            public fight: (number|Long);

            /**
             * Encodes the specified TOWER_RANK_INFO message. Does not implicitly {@link com.message.TOWER_RANK_INFO.verify|verify} messages.
             * @param message TOWER_RANK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITOWER_RANK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TOWER_RANK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TOWER_RANK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TOWER_RANK_INFO;
        }

        /** Properties of a C_TOWER_AUTO_CHALLENG. */
        interface IC_TOWER_AUTO_CHALLENG {

            /** C_TOWER_AUTO_CHALLENG isAuto */
            isAuto?: (boolean|null);
        }

        /** Represents a C_TOWER_AUTO_CHALLENG. */
        class C_TOWER_AUTO_CHALLENG implements IC_TOWER_AUTO_CHALLENG {

            /**
             * Constructs a new C_TOWER_AUTO_CHALLENG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_TOWER_AUTO_CHALLENG);

            /** C_TOWER_AUTO_CHALLENG isAuto. */
            public isAuto: boolean;

            /**
             * Encodes the specified C_TOWER_AUTO_CHALLENG message. Does not implicitly {@link com.message.C_TOWER_AUTO_CHALLENG.verify|verify} messages.
             * @param message C_TOWER_AUTO_CHALLENG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_TOWER_AUTO_CHALLENG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_TOWER_AUTO_CHALLENG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_TOWER_AUTO_CHALLENG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_TOWER_AUTO_CHALLENG;
        }

        /** Properties of a S_TOWER_AUTO_CHALLENG. */
        interface IS_TOWER_AUTO_CHALLENG {

            /** S_TOWER_AUTO_CHALLENG isAuto */
            isAuto?: (boolean|null);
        }

        /** Represents a S_TOWER_AUTO_CHALLENG. */
        class S_TOWER_AUTO_CHALLENG implements IS_TOWER_AUTO_CHALLENG {

            /**
             * Constructs a new S_TOWER_AUTO_CHALLENG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_TOWER_AUTO_CHALLENG);

            /** S_TOWER_AUTO_CHALLENG isAuto. */
            public isAuto: boolean;

            /**
             * Encodes the specified S_TOWER_AUTO_CHALLENG message. Does not implicitly {@link com.message.S_TOWER_AUTO_CHALLENG.verify|verify} messages.
             * @param message S_TOWER_AUTO_CHALLENG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_TOWER_AUTO_CHALLENG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_TOWER_AUTO_CHALLENG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_TOWER_AUTO_CHALLENG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_TOWER_AUTO_CHALLENG;
        }

        /** Properties of a C_GET_VIP_INFO. */
        interface IC_GET_VIP_INFO {
        }

        /** Represents a C_GET_VIP_INFO. */
        class C_GET_VIP_INFO implements IC_GET_VIP_INFO {

            /**
             * Constructs a new C_GET_VIP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_VIP_INFO);

            /**
             * Encodes the specified C_GET_VIP_INFO message. Does not implicitly {@link com.message.C_GET_VIP_INFO.verify|verify} messages.
             * @param message C_GET_VIP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_VIP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_VIP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_VIP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_VIP_INFO;
        }

        /** Properties of a S_GET_VIP_INFO. */
        interface IS_GET_VIP_INFO {

            /** S_GET_VIP_INFO level */
            level?: (number|null);

            /** S_GET_VIP_INFO value */
            value?: (number|null);

            /** S_GET_VIP_INFO getIds */
            getIds?: (number[]|null);

            /** S_GET_VIP_INFO buydayIds */
            buydayIds?: (com.message.IVIP_BUY_INFO[]|null);

            /** S_GET_VIP_INFO buyGiftIds */
            buyGiftIds?: (com.message.IVIP_BUY_INFO[]|null);

            /** S_GET_VIP_INFO buyMarketIds */
            buyMarketIds?: (com.message.IVIP_BUY_INFO[]|null);

            /** S_GET_VIP_INFO dayFreeCan */
            dayFreeCan?: (string|null);
        }

        /** Represents a S_GET_VIP_INFO. */
        class S_GET_VIP_INFO implements IS_GET_VIP_INFO {

            /**
             * Constructs a new S_GET_VIP_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_VIP_INFO);

            /** S_GET_VIP_INFO level. */
            public level: number;

            /** S_GET_VIP_INFO value. */
            public value: number;

            /** S_GET_VIP_INFO getIds. */
            public getIds: number[];

            /** S_GET_VIP_INFO buydayIds. */
            public buydayIds: com.message.IVIP_BUY_INFO[];

            /** S_GET_VIP_INFO buyGiftIds. */
            public buyGiftIds: com.message.IVIP_BUY_INFO[];

            /** S_GET_VIP_INFO buyMarketIds. */
            public buyMarketIds: com.message.IVIP_BUY_INFO[];

            /** S_GET_VIP_INFO dayFreeCan. */
            public dayFreeCan: string;

            /**
             * Encodes the specified S_GET_VIP_INFO message. Does not implicitly {@link com.message.S_GET_VIP_INFO.verify|verify} messages.
             * @param message S_GET_VIP_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_VIP_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_VIP_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_VIP_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_VIP_INFO;
        }

        /** Properties of a VIP_BUY_INFO. */
        interface IVIP_BUY_INFO {

            /** VIP_BUY_INFO id */
            id?: (number|null);

            /** VIP_BUY_INFO limit */
            limit?: (number|null);
        }

        /** Represents a VIP_BUY_INFO. */
        class VIP_BUY_INFO implements IVIP_BUY_INFO {

            /**
             * Constructs a new VIP_BUY_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IVIP_BUY_INFO);

            /** VIP_BUY_INFO id. */
            public id: number;

            /** VIP_BUY_INFO limit. */
            public limit: number;

            /**
             * Encodes the specified VIP_BUY_INFO message. Does not implicitly {@link com.message.VIP_BUY_INFO.verify|verify} messages.
             * @param message VIP_BUY_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IVIP_BUY_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a VIP_BUY_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns VIP_BUY_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.VIP_BUY_INFO;
        }

        /** Properties of a C_GET_VIP_REWARD. */
        interface IC_GET_VIP_REWARD {

            /** C_GET_VIP_REWARD id */
            id?: (number|null);

            /** C_GET_VIP_REWARD type */
            type?: (number|null);
        }

        /** Represents a C_GET_VIP_REWARD. */
        class C_GET_VIP_REWARD implements IC_GET_VIP_REWARD {

            /**
             * Constructs a new C_GET_VIP_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_VIP_REWARD);

            /** C_GET_VIP_REWARD id. */
            public id: number;

            /** C_GET_VIP_REWARD type. */
            public type: number;

            /**
             * Encodes the specified C_GET_VIP_REWARD message. Does not implicitly {@link com.message.C_GET_VIP_REWARD.verify|verify} messages.
             * @param message C_GET_VIP_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_VIP_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_VIP_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_VIP_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_VIP_REWARD;
        }

        /** Properties of a S_GET_VIP_REWARD. */
        interface IS_GET_VIP_REWARD {

            /** S_GET_VIP_REWARD id */
            id?: (number|null);

            /** S_GET_VIP_REWARD itemlist */
            itemlist?: (com.message.IItemListMsg|null);

            /** S_GET_VIP_REWARD type */
            type?: (number|null);
        }

        /** Represents a S_GET_VIP_REWARD. */
        class S_GET_VIP_REWARD implements IS_GET_VIP_REWARD {

            /**
             * Constructs a new S_GET_VIP_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_VIP_REWARD);

            /** S_GET_VIP_REWARD id. */
            public id: number;

            /** S_GET_VIP_REWARD itemlist. */
            public itemlist?: (com.message.IItemListMsg|null);

            /** S_GET_VIP_REWARD type. */
            public type: number;

            /**
             * Encodes the specified S_GET_VIP_REWARD message. Does not implicitly {@link com.message.S_GET_VIP_REWARD.verify|verify} messages.
             * @param message S_GET_VIP_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_VIP_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_VIP_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_VIP_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_VIP_REWARD;
        }

        /** Properties of a C_BUY_VIP_GIFT. */
        interface IC_BUY_VIP_GIFT {

            /** C_BUY_VIP_GIFT id */
            id?: (number|null);

            /** C_BUY_VIP_GIFT type */
            type?: (number|null);
        }

        /** Represents a C_BUY_VIP_GIFT. */
        class C_BUY_VIP_GIFT implements IC_BUY_VIP_GIFT {

            /**
             * Constructs a new C_BUY_VIP_GIFT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_VIP_GIFT);

            /** C_BUY_VIP_GIFT id. */
            public id: number;

            /** C_BUY_VIP_GIFT type. */
            public type: number;

            /**
             * Encodes the specified C_BUY_VIP_GIFT message. Does not implicitly {@link com.message.C_BUY_VIP_GIFT.verify|verify} messages.
             * @param message C_BUY_VIP_GIFT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_VIP_GIFT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_VIP_GIFT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_VIP_GIFT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_VIP_GIFT;
        }

        /** Properties of a S_BUY_VIP_GIFT. */
        interface IS_BUY_VIP_GIFT {

            /** S_BUY_VIP_GIFT id */
            id?: (number|null);

            /** S_BUY_VIP_GIFT type */
            type?: (number|null);

            /** S_BUY_VIP_GIFT itemlist */
            itemlist?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_BUY_VIP_GIFT. */
        class S_BUY_VIP_GIFT implements IS_BUY_VIP_GIFT {

            /**
             * Constructs a new S_BUY_VIP_GIFT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_VIP_GIFT);

            /** S_BUY_VIP_GIFT id. */
            public id: number;

            /** S_BUY_VIP_GIFT type. */
            public type: number;

            /** S_BUY_VIP_GIFT itemlist. */
            public itemlist?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_BUY_VIP_GIFT message. Does not implicitly {@link com.message.S_BUY_VIP_GIFT.verify|verify} messages.
             * @param message S_BUY_VIP_GIFT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_VIP_GIFT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_VIP_GIFT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_VIP_GIFT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_VIP_GIFT;
        }

        /** Properties of a C_GET_WAR_BOSS_INFO. */
        interface IC_GET_WAR_BOSS_INFO {

            /** C_GET_WAR_BOSS_INFO subType */
            subType?: (number|null);
        }

        /** Represents a C_GET_WAR_BOSS_INFO. */
        class C_GET_WAR_BOSS_INFO implements IC_GET_WAR_BOSS_INFO {

            /**
             * Constructs a new C_GET_WAR_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_WAR_BOSS_INFO);

            /** C_GET_WAR_BOSS_INFO subType. */
            public subType: number;

            /**
             * Encodes the specified C_GET_WAR_BOSS_INFO message. Does not implicitly {@link com.message.C_GET_WAR_BOSS_INFO.verify|verify} messages.
             * @param message C_GET_WAR_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_WAR_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_WAR_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_WAR_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_WAR_BOSS_INFO;
        }

        /** Properties of a S_GET_WAR_BOSS_INFO. */
        interface IS_GET_WAR_BOSS_INFO {

            /** S_GET_WAR_BOSS_INFO subType */
            subType?: (number|null);

            /** S_GET_WAR_BOSS_INFO bossMsg */
            bossMsg?: (com.message.IWarBossMsg[]|null);

            /** S_GET_WAR_BOSS_INFO playerBossMsg */
            playerBossMsg?: (com.message.IPlayerWarBossMsg|null);

            /** S_GET_WAR_BOSS_INFO butTimes */
            butTimes?: (number|null);
        }

        /** Represents a S_GET_WAR_BOSS_INFO. */
        class S_GET_WAR_BOSS_INFO implements IS_GET_WAR_BOSS_INFO {

            /**
             * Constructs a new S_GET_WAR_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_WAR_BOSS_INFO);

            /** S_GET_WAR_BOSS_INFO subType. */
            public subType: number;

            /** S_GET_WAR_BOSS_INFO bossMsg. */
            public bossMsg: com.message.IWarBossMsg[];

            /** S_GET_WAR_BOSS_INFO playerBossMsg. */
            public playerBossMsg?: (com.message.IPlayerWarBossMsg|null);

            /** S_GET_WAR_BOSS_INFO butTimes. */
            public butTimes: number;

            /**
             * Encodes the specified S_GET_WAR_BOSS_INFO message. Does not implicitly {@link com.message.S_GET_WAR_BOSS_INFO.verify|verify} messages.
             * @param message S_GET_WAR_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_WAR_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_WAR_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_WAR_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_WAR_BOSS_INFO;
        }

        /** Properties of a C_BUY_WAR_BOSS_TIMES. */
        interface IC_BUY_WAR_BOSS_TIMES {
        }

        /** Represents a C_BUY_WAR_BOSS_TIMES. */
        class C_BUY_WAR_BOSS_TIMES implements IC_BUY_WAR_BOSS_TIMES {

            /**
             * Constructs a new C_BUY_WAR_BOSS_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_BUY_WAR_BOSS_TIMES);

            /**
             * Encodes the specified C_BUY_WAR_BOSS_TIMES message. Does not implicitly {@link com.message.C_BUY_WAR_BOSS_TIMES.verify|verify} messages.
             * @param message C_BUY_WAR_BOSS_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_BUY_WAR_BOSS_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_BUY_WAR_BOSS_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_BUY_WAR_BOSS_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_BUY_WAR_BOSS_TIMES;
        }

        /** Properties of a S_BUY_WAR_BOSS_TIMES. */
        interface IS_BUY_WAR_BOSS_TIMES {

            /** S_BUY_WAR_BOSS_TIMES times */
            times?: (number|null);
        }

        /** Represents a S_BUY_WAR_BOSS_TIMES. */
        class S_BUY_WAR_BOSS_TIMES implements IS_BUY_WAR_BOSS_TIMES {

            /**
             * Constructs a new S_BUY_WAR_BOSS_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_BUY_WAR_BOSS_TIMES);

            /** S_BUY_WAR_BOSS_TIMES times. */
            public times: number;

            /**
             * Encodes the specified S_BUY_WAR_BOSS_TIMES message. Does not implicitly {@link com.message.S_BUY_WAR_BOSS_TIMES.verify|verify} messages.
             * @param message S_BUY_WAR_BOSS_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_BUY_WAR_BOSS_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_BUY_WAR_BOSS_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_BUY_WAR_BOSS_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_BUY_WAR_BOSS_TIMES;
        }

        /** Properties of a PlayerWarBossMsg. */
        interface IPlayerWarBossMsg {

            /** PlayerWarBossMsg playerId */
            playerId?: (number|Long|null);

            /** PlayerWarBossMsg warBossAspCount */
            warBossAspCount?: (number|null);
        }

        /** Represents a PlayerWarBossMsg. */
        class PlayerWarBossMsg implements IPlayerWarBossMsg {

            /**
             * Constructs a new PlayerWarBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IPlayerWarBossMsg);

            /** PlayerWarBossMsg playerId. */
            public playerId: (number|Long);

            /** PlayerWarBossMsg warBossAspCount. */
            public warBossAspCount: number;

            /**
             * Encodes the specified PlayerWarBossMsg message. Does not implicitly {@link com.message.PlayerWarBossMsg.verify|verify} messages.
             * @param message PlayerWarBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IPlayerWarBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a PlayerWarBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlayerWarBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.PlayerWarBossMsg;
        }

        /** Properties of a WarBossMsg. */
        interface IWarBossMsg {

            /** WarBossMsg instanceId */
            instanceId?: (number|null);

            /** WarBossMsg bossHp */
            bossHp?: (number|Long|null);

            /** WarBossMsg bossMaxHp */
            bossMaxHp?: (number|Long|null);

            /** WarBossMsg runTime */
            runTime?: (number|Long|null);

            /** WarBossMsg nextStartTime */
            nextStartTime?: (number|Long|null);

            /** WarBossMsg ascriptionMsgMg */
            ascriptionMsgMg?: (com.message.IWarBossAscriptionMsg|null);
        }

        /** Represents a WarBossMsg. */
        class WarBossMsg implements IWarBossMsg {

            /**
             * Constructs a new WarBossMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IWarBossMsg);

            /** WarBossMsg instanceId. */
            public instanceId: number;

            /** WarBossMsg bossHp. */
            public bossHp: (number|Long);

            /** WarBossMsg bossMaxHp. */
            public bossMaxHp: (number|Long);

            /** WarBossMsg runTime. */
            public runTime: (number|Long);

            /** WarBossMsg nextStartTime. */
            public nextStartTime: (number|Long);

            /** WarBossMsg ascriptionMsgMg. */
            public ascriptionMsgMg?: (com.message.IWarBossAscriptionMsg|null);

            /**
             * Encodes the specified WarBossMsg message. Does not implicitly {@link com.message.WarBossMsg.verify|verify} messages.
             * @param message WarBossMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IWarBossMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarBossMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarBossMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.WarBossMsg;
        }

        /** Properties of a WarBossAscriptionMsg. */
        interface IWarBossAscriptionMsg {

            /** WarBossAscriptionMsg playerId */
            playerId?: (number|Long|null);

            /** WarBossAscriptionMsg playerName */
            playerName?: (string|null);

            /** WarBossAscriptionMsg serverId */
            serverId?: (number|null);
        }

        /** Represents a WarBossAscriptionMsg. */
        class WarBossAscriptionMsg implements IWarBossAscriptionMsg {

            /**
             * Constructs a new WarBossAscriptionMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IWarBossAscriptionMsg);

            /** WarBossAscriptionMsg playerId. */
            public playerId: (number|Long);

            /** WarBossAscriptionMsg playerName. */
            public playerName: string;

            /** WarBossAscriptionMsg serverId. */
            public serverId: number;

            /**
             * Encodes the specified WarBossAscriptionMsg message. Does not implicitly {@link com.message.WarBossAscriptionMsg.verify|verify} messages.
             * @param message WarBossAscriptionMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IWarBossAscriptionMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WarBossAscriptionMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WarBossAscriptionMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.WarBossAscriptionMsg;
        }

        /** Properties of a MyAscriptionMsg. */
        interface IMyAscriptionMsg {

            /** MyAscriptionMsg instanceId */
            instanceId?: (number|null);
        }

        /** Represents a MyAscriptionMsg. */
        class MyAscriptionMsg implements IMyAscriptionMsg {

            /**
             * Constructs a new MyAscriptionMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IMyAscriptionMsg);

            /** MyAscriptionMsg instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified MyAscriptionMsg message. Does not implicitly {@link com.message.MyAscriptionMsg.verify|verify} messages.
             * @param message MyAscriptionMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IMyAscriptionMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a MyAscriptionMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MyAscriptionMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.MyAscriptionMsg;
        }

        /** Properties of a CROSS_C_GET_WAR_BOSS_INFO. */
        interface ICROSS_C_GET_WAR_BOSS_INFO {

            /** CROSS_C_GET_WAR_BOSS_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_WAR_BOSS_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_WAR_BOSS_INFO subType */
            subType?: (number|null);
        }

        /** Represents a CROSS_C_GET_WAR_BOSS_INFO. */
        class CROSS_C_GET_WAR_BOSS_INFO implements ICROSS_C_GET_WAR_BOSS_INFO {

            /**
             * Constructs a new CROSS_C_GET_WAR_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_WAR_BOSS_INFO);

            /** CROSS_C_GET_WAR_BOSS_INFO serverId. */
            public serverId: number;

            /** CROSS_C_GET_WAR_BOSS_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_WAR_BOSS_INFO subType. */
            public subType: number;

            /**
             * Encodes the specified CROSS_C_GET_WAR_BOSS_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_WAR_BOSS_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_WAR_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_WAR_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_WAR_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_WAR_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_WAR_BOSS_INFO;
        }

        /** Properties of a CROSS_S_GET_WAR_BOSS_INFO. */
        interface ICROSS_S_GET_WAR_BOSS_INFO {

            /** CROSS_S_GET_WAR_BOSS_INFO playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_WAR_BOSS_INFO bossMsg */
            bossMsg?: (com.message.IWarBossMsg[]|null);

            /** CROSS_S_GET_WAR_BOSS_INFO myAscriptionMsgMg */
            myAscriptionMsgMg?: (com.message.IMyAscriptionMsg|null);

            /** CROSS_S_GET_WAR_BOSS_INFO subType */
            subType?: (number|null);
        }

        /** Represents a CROSS_S_GET_WAR_BOSS_INFO. */
        class CROSS_S_GET_WAR_BOSS_INFO implements ICROSS_S_GET_WAR_BOSS_INFO {

            /**
             * Constructs a new CROSS_S_GET_WAR_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_WAR_BOSS_INFO);

            /** CROSS_S_GET_WAR_BOSS_INFO playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_WAR_BOSS_INFO bossMsg. */
            public bossMsg: com.message.IWarBossMsg[];

            /** CROSS_S_GET_WAR_BOSS_INFO myAscriptionMsgMg. */
            public myAscriptionMsgMg?: (com.message.IMyAscriptionMsg|null);

            /** CROSS_S_GET_WAR_BOSS_INFO subType. */
            public subType: number;

            /**
             * Encodes the specified CROSS_S_GET_WAR_BOSS_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_WAR_BOSS_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_WAR_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_WAR_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_WAR_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_WAR_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_WAR_BOSS_INFO;
        }

        /** Properties of a CROSS_S_WAR_BOSS_DEATH. */
        interface ICROSS_S_WAR_BOSS_DEATH {

            /** CROSS_S_WAR_BOSS_DEATH playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_WAR_BOSS_DEATH instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_S_WAR_BOSS_DEATH. */
        class CROSS_S_WAR_BOSS_DEATH implements ICROSS_S_WAR_BOSS_DEATH {

            /**
             * Constructs a new CROSS_S_WAR_BOSS_DEATH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_WAR_BOSS_DEATH);

            /** CROSS_S_WAR_BOSS_DEATH playerId. */
            public playerId: (number|Long);

            /** CROSS_S_WAR_BOSS_DEATH instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_S_WAR_BOSS_DEATH message. Does not implicitly {@link com.message.CROSS_S_WAR_BOSS_DEATH.verify|verify} messages.
             * @param message CROSS_S_WAR_BOSS_DEATH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_WAR_BOSS_DEATH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_WAR_BOSS_DEATH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_WAR_BOSS_DEATH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_WAR_BOSS_DEATH;
        }

        /** Properties of a CROSS_S_SYNC_BOSS_REFRESH. */
        interface ICROSS_S_SYNC_BOSS_REFRESH {

            /** CROSS_S_SYNC_BOSS_REFRESH type */
            type?: (number|null);

            /** CROSS_S_SYNC_BOSS_REFRESH instanceId */
            instanceId?: (number|null);
        }

        /** Represents a CROSS_S_SYNC_BOSS_REFRESH. */
        class CROSS_S_SYNC_BOSS_REFRESH implements ICROSS_S_SYNC_BOSS_REFRESH {

            /**
             * Constructs a new CROSS_S_SYNC_BOSS_REFRESH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_SYNC_BOSS_REFRESH);

            /** CROSS_S_SYNC_BOSS_REFRESH type. */
            public type: number;

            /** CROSS_S_SYNC_BOSS_REFRESH instanceId. */
            public instanceId: number;

            /**
             * Encodes the specified CROSS_S_SYNC_BOSS_REFRESH message. Does not implicitly {@link com.message.CROSS_S_SYNC_BOSS_REFRESH.verify|verify} messages.
             * @param message CROSS_S_SYNC_BOSS_REFRESH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_SYNC_BOSS_REFRESH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_SYNC_BOSS_REFRESH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_SYNC_BOSS_REFRESH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_SYNC_BOSS_REFRESH;
        }

        /** Properties of a C_GET_DAY_SERVER_BOSS_INFO. */
        interface IC_GET_DAY_SERVER_BOSS_INFO {

            /** C_GET_DAY_SERVER_BOSS_INFO bossId */
            bossId?: (number|null);
        }

        /** Represents a C_GET_DAY_SERVER_BOSS_INFO. */
        class C_GET_DAY_SERVER_BOSS_INFO implements IC_GET_DAY_SERVER_BOSS_INFO {

            /**
             * Constructs a new C_GET_DAY_SERVER_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_DAY_SERVER_BOSS_INFO);

            /** C_GET_DAY_SERVER_BOSS_INFO bossId. */
            public bossId: number;

            /**
             * Encodes the specified C_GET_DAY_SERVER_BOSS_INFO message. Does not implicitly {@link com.message.C_GET_DAY_SERVER_BOSS_INFO.verify|verify} messages.
             * @param message C_GET_DAY_SERVER_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_DAY_SERVER_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_DAY_SERVER_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_DAY_SERVER_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_DAY_SERVER_BOSS_INFO;
        }

        /** Properties of a S_GET_DAY_SERVER_BOSS_INFO. */
        interface IS_GET_DAY_SERVER_BOSS_INFO {

            /** S_GET_DAY_SERVER_BOSS_INFO bossId */
            bossId?: (number|null);

            /** S_GET_DAY_SERVER_BOSS_INFO currHp */
            currHp?: (number|Long|null);

            /** S_GET_DAY_SERVER_BOSS_INFO maxHp */
            maxHp?: (number|Long|null);

            /** S_GET_DAY_SERVER_BOSS_INFO leaveTime */
            leaveTime?: (number|null);

            /** S_GET_DAY_SERVER_BOSS_INFO currLevel */
            currLevel?: (number|null);

            /** S_GET_DAY_SERVER_BOSS_INFO cdTime */
            cdTime?: (number|null);

            /** S_GET_DAY_SERVER_BOSS_INFO autoType */
            autoType?: (number|null);

            /** S_GET_DAY_SERVER_BOSS_INFO buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a S_GET_DAY_SERVER_BOSS_INFO. */
        class S_GET_DAY_SERVER_BOSS_INFO implements IS_GET_DAY_SERVER_BOSS_INFO {

            /**
             * Constructs a new S_GET_DAY_SERVER_BOSS_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_DAY_SERVER_BOSS_INFO);

            /** S_GET_DAY_SERVER_BOSS_INFO bossId. */
            public bossId: number;

            /** S_GET_DAY_SERVER_BOSS_INFO currHp. */
            public currHp: (number|Long);

            /** S_GET_DAY_SERVER_BOSS_INFO maxHp. */
            public maxHp: (number|Long);

            /** S_GET_DAY_SERVER_BOSS_INFO leaveTime. */
            public leaveTime: number;

            /** S_GET_DAY_SERVER_BOSS_INFO currLevel. */
            public currLevel: number;

            /** S_GET_DAY_SERVER_BOSS_INFO cdTime. */
            public cdTime: number;

            /** S_GET_DAY_SERVER_BOSS_INFO autoType. */
            public autoType: number;

            /** S_GET_DAY_SERVER_BOSS_INFO buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified S_GET_DAY_SERVER_BOSS_INFO message. Does not implicitly {@link com.message.S_GET_DAY_SERVER_BOSS_INFO.verify|verify} messages.
             * @param message S_GET_DAY_SERVER_BOSS_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_DAY_SERVER_BOSS_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_DAY_SERVER_BOSS_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_DAY_SERVER_BOSS_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_DAY_SERVER_BOSS_INFO;
        }

        /** Properties of a C_DAY_SERVER_BOSS_RANK. */
        interface IC_DAY_SERVER_BOSS_RANK {

            /** C_DAY_SERVER_BOSS_RANK bossId */
            bossId?: (number|null);
        }

        /** Represents a C_DAY_SERVER_BOSS_RANK. */
        class C_DAY_SERVER_BOSS_RANK implements IC_DAY_SERVER_BOSS_RANK {

            /**
             * Constructs a new C_DAY_SERVER_BOSS_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAY_SERVER_BOSS_RANK);

            /** C_DAY_SERVER_BOSS_RANK bossId. */
            public bossId: number;

            /**
             * Encodes the specified C_DAY_SERVER_BOSS_RANK message. Does not implicitly {@link com.message.C_DAY_SERVER_BOSS_RANK.verify|verify} messages.
             * @param message C_DAY_SERVER_BOSS_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAY_SERVER_BOSS_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAY_SERVER_BOSS_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAY_SERVER_BOSS_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAY_SERVER_BOSS_RANK;
        }

        /** Properties of a S_DAY_SERVER_BOSS_RANK. */
        interface IS_DAY_SERVER_BOSS_RANK {

            /** S_DAY_SERVER_BOSS_RANK bossId */
            bossId?: (number|null);

            /** S_DAY_SERVER_BOSS_RANK rank */
            rank?: (com.message.IDAY_BOSS_RANK[]|null);

            /** S_DAY_SERVER_BOSS_RANK selfRank */
            selfRank?: (com.message.IDAY_BOSS_RANK|null);
        }

        /** Represents a S_DAY_SERVER_BOSS_RANK. */
        class S_DAY_SERVER_BOSS_RANK implements IS_DAY_SERVER_BOSS_RANK {

            /**
             * Constructs a new S_DAY_SERVER_BOSS_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAY_SERVER_BOSS_RANK);

            /** S_DAY_SERVER_BOSS_RANK bossId. */
            public bossId: number;

            /** S_DAY_SERVER_BOSS_RANK rank. */
            public rank: com.message.IDAY_BOSS_RANK[];

            /** S_DAY_SERVER_BOSS_RANK selfRank. */
            public selfRank?: (com.message.IDAY_BOSS_RANK|null);

            /**
             * Encodes the specified S_DAY_SERVER_BOSS_RANK message. Does not implicitly {@link com.message.S_DAY_SERVER_BOSS_RANK.verify|verify} messages.
             * @param message S_DAY_SERVER_BOSS_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAY_SERVER_BOSS_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAY_SERVER_BOSS_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAY_SERVER_BOSS_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAY_SERVER_BOSS_RANK;
        }

        /** Properties of a DAY_BOSS_RANK. */
        interface IDAY_BOSS_RANK {

            /** DAY_BOSS_RANK playerId */
            playerId?: (number|Long|null);

            /** DAY_BOSS_RANK playerName */
            playerName?: (string|null);

            /** DAY_BOSS_RANK rank */
            rank?: (number|null);

            /** DAY_BOSS_RANK damage */
            damage?: (number|Long|null);
        }

        /** Represents a DAY_BOSS_RANK. */
        class DAY_BOSS_RANK implements IDAY_BOSS_RANK {

            /**
             * Constructs a new DAY_BOSS_RANK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IDAY_BOSS_RANK);

            /** DAY_BOSS_RANK playerId. */
            public playerId: (number|Long);

            /** DAY_BOSS_RANK playerName. */
            public playerName: string;

            /** DAY_BOSS_RANK rank. */
            public rank: number;

            /** DAY_BOSS_RANK damage. */
            public damage: (number|Long);

            /**
             * Encodes the specified DAY_BOSS_RANK message. Does not implicitly {@link com.message.DAY_BOSS_RANK.verify|verify} messages.
             * @param message DAY_BOSS_RANK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IDAY_BOSS_RANK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DAY_BOSS_RANK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DAY_BOSS_RANK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.DAY_BOSS_RANK;
        }

        /** Properties of a C_DAY_SERVER_BOSS_BUY. */
        interface IC_DAY_SERVER_BOSS_BUY {

            /** C_DAY_SERVER_BOSS_BUY bossId */
            bossId?: (number|null);

            /** C_DAY_SERVER_BOSS_BUY buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a C_DAY_SERVER_BOSS_BUY. */
        class C_DAY_SERVER_BOSS_BUY implements IC_DAY_SERVER_BOSS_BUY {

            /**
             * Constructs a new C_DAY_SERVER_BOSS_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAY_SERVER_BOSS_BUY);

            /** C_DAY_SERVER_BOSS_BUY bossId. */
            public bossId: number;

            /** C_DAY_SERVER_BOSS_BUY buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified C_DAY_SERVER_BOSS_BUY message. Does not implicitly {@link com.message.C_DAY_SERVER_BOSS_BUY.verify|verify} messages.
             * @param message C_DAY_SERVER_BOSS_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAY_SERVER_BOSS_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAY_SERVER_BOSS_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAY_SERVER_BOSS_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAY_SERVER_BOSS_BUY;
        }

        /** Properties of a S_DAY_SERVER_BOSS_BUY. */
        interface IS_DAY_SERVER_BOSS_BUY {

            /** S_DAY_SERVER_BOSS_BUY bossId */
            bossId?: (number|null);

            /** S_DAY_SERVER_BOSS_BUY hadTimes */
            hadTimes?: (number|null);

            /** S_DAY_SERVER_BOSS_BUY cdTime */
            cdTime?: (number|null);
        }

        /** Represents a S_DAY_SERVER_BOSS_BUY. */
        class S_DAY_SERVER_BOSS_BUY implements IS_DAY_SERVER_BOSS_BUY {

            /**
             * Constructs a new S_DAY_SERVER_BOSS_BUY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAY_SERVER_BOSS_BUY);

            /** S_DAY_SERVER_BOSS_BUY bossId. */
            public bossId: number;

            /** S_DAY_SERVER_BOSS_BUY hadTimes. */
            public hadTimes: number;

            /** S_DAY_SERVER_BOSS_BUY cdTime. */
            public cdTime: number;

            /**
             * Encodes the specified S_DAY_SERVER_BOSS_BUY message. Does not implicitly {@link com.message.S_DAY_SERVER_BOSS_BUY.verify|verify} messages.
             * @param message S_DAY_SERVER_BOSS_BUY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAY_SERVER_BOSS_BUY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAY_SERVER_BOSS_BUY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAY_SERVER_BOSS_BUY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAY_SERVER_BOSS_BUY;
        }

        /** Properties of a C_DAY_SERVER_BOSS_AUTO_PLAY. */
        interface IC_DAY_SERVER_BOSS_AUTO_PLAY {

            /** C_DAY_SERVER_BOSS_AUTO_PLAY bossId */
            bossId?: (number|null);

            /** C_DAY_SERVER_BOSS_AUTO_PLAY autoType */
            autoType?: (number|null);
        }

        /** Represents a C_DAY_SERVER_BOSS_AUTO_PLAY. */
        class C_DAY_SERVER_BOSS_AUTO_PLAY implements IC_DAY_SERVER_BOSS_AUTO_PLAY {

            /**
             * Constructs a new C_DAY_SERVER_BOSS_AUTO_PLAY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAY_SERVER_BOSS_AUTO_PLAY);

            /** C_DAY_SERVER_BOSS_AUTO_PLAY bossId. */
            public bossId: number;

            /** C_DAY_SERVER_BOSS_AUTO_PLAY autoType. */
            public autoType: number;

            /**
             * Encodes the specified C_DAY_SERVER_BOSS_AUTO_PLAY message. Does not implicitly {@link com.message.C_DAY_SERVER_BOSS_AUTO_PLAY.verify|verify} messages.
             * @param message C_DAY_SERVER_BOSS_AUTO_PLAY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAY_SERVER_BOSS_AUTO_PLAY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAY_SERVER_BOSS_AUTO_PLAY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAY_SERVER_BOSS_AUTO_PLAY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAY_SERVER_BOSS_AUTO_PLAY;
        }

        /** Properties of a S_DAY_SERVER_BOSS_AUTO_PLAY. */
        interface IS_DAY_SERVER_BOSS_AUTO_PLAY {

            /** S_DAY_SERVER_BOSS_AUTO_PLAY bossId */
            bossId?: (number|null);

            /** S_DAY_SERVER_BOSS_AUTO_PLAY autoType */
            autoType?: (number|null);
        }

        /** Represents a S_DAY_SERVER_BOSS_AUTO_PLAY. */
        class S_DAY_SERVER_BOSS_AUTO_PLAY implements IS_DAY_SERVER_BOSS_AUTO_PLAY {

            /**
             * Constructs a new S_DAY_SERVER_BOSS_AUTO_PLAY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAY_SERVER_BOSS_AUTO_PLAY);

            /** S_DAY_SERVER_BOSS_AUTO_PLAY bossId. */
            public bossId: number;

            /** S_DAY_SERVER_BOSS_AUTO_PLAY autoType. */
            public autoType: number;

            /**
             * Encodes the specified S_DAY_SERVER_BOSS_AUTO_PLAY message. Does not implicitly {@link com.message.S_DAY_SERVER_BOSS_AUTO_PLAY.verify|verify} messages.
             * @param message S_DAY_SERVER_BOSS_AUTO_PLAY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAY_SERVER_BOSS_AUTO_PLAY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAY_SERVER_BOSS_AUTO_PLAY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAY_SERVER_BOSS_AUTO_PLAY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAY_SERVER_BOSS_AUTO_PLAY;
        }

        /** Properties of a C_DAY_SERVER_BOSS_CHAT. */
        interface IC_DAY_SERVER_BOSS_CHAT {

            /** C_DAY_SERVER_BOSS_CHAT bossId */
            bossId?: (number|null);

            /** C_DAY_SERVER_BOSS_CHAT chatContent */
            chatContent?: (string|null);
        }

        /** Represents a C_DAY_SERVER_BOSS_CHAT. */
        class C_DAY_SERVER_BOSS_CHAT implements IC_DAY_SERVER_BOSS_CHAT {

            /**
             * Constructs a new C_DAY_SERVER_BOSS_CHAT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAY_SERVER_BOSS_CHAT);

            /** C_DAY_SERVER_BOSS_CHAT bossId. */
            public bossId: number;

            /** C_DAY_SERVER_BOSS_CHAT chatContent. */
            public chatContent: string;

            /**
             * Encodes the specified C_DAY_SERVER_BOSS_CHAT message. Does not implicitly {@link com.message.C_DAY_SERVER_BOSS_CHAT.verify|verify} messages.
             * @param message C_DAY_SERVER_BOSS_CHAT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAY_SERVER_BOSS_CHAT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAY_SERVER_BOSS_CHAT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAY_SERVER_BOSS_CHAT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAY_SERVER_BOSS_CHAT;
        }

        /** Properties of a S_DAY_SERVER_BOSS_CHAT. */
        interface IS_DAY_SERVER_BOSS_CHAT {

            /** S_DAY_SERVER_BOSS_CHAT bossId */
            bossId?: (number|null);

            /** S_DAY_SERVER_BOSS_CHAT chatContent */
            chatContent?: (string|null);
        }

        /** Represents a S_DAY_SERVER_BOSS_CHAT. */
        class S_DAY_SERVER_BOSS_CHAT implements IS_DAY_SERVER_BOSS_CHAT {

            /**
             * Constructs a new S_DAY_SERVER_BOSS_CHAT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAY_SERVER_BOSS_CHAT);

            /** S_DAY_SERVER_BOSS_CHAT bossId. */
            public bossId: number;

            /** S_DAY_SERVER_BOSS_CHAT chatContent. */
            public chatContent: string;

            /**
             * Encodes the specified S_DAY_SERVER_BOSS_CHAT message. Does not implicitly {@link com.message.S_DAY_SERVER_BOSS_CHAT.verify|verify} messages.
             * @param message S_DAY_SERVER_BOSS_CHAT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAY_SERVER_BOSS_CHAT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAY_SERVER_BOSS_CHAT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAY_SERVER_BOSS_CHAT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAY_SERVER_BOSS_CHAT;
        }

        /** Properties of a C_SLOT_WASH_INFO. */
        interface IC_SLOT_WASH_INFO {
        }

        /** Represents a C_SLOT_WASH_INFO. */
        class C_SLOT_WASH_INFO implements IC_SLOT_WASH_INFO {

            /**
             * Constructs a new C_SLOT_WASH_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SLOT_WASH_INFO);

            /**
             * Encodes the specified C_SLOT_WASH_INFO message. Does not implicitly {@link com.message.C_SLOT_WASH_INFO.verify|verify} messages.
             * @param message C_SLOT_WASH_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SLOT_WASH_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SLOT_WASH_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SLOT_WASH_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SLOT_WASH_INFO;
        }

        /** Properties of a S_SLOT_WASH_INFO. */
        interface IS_SLOT_WASH_INFO {

            /** S_SLOT_WASH_INFO allSlotWashInfo */
            allSlotWashInfo?: (com.message.IAllSlotWashInfo[]|null);
        }

        /** Represents a S_SLOT_WASH_INFO. */
        class S_SLOT_WASH_INFO implements IS_SLOT_WASH_INFO {

            /**
             * Constructs a new S_SLOT_WASH_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SLOT_WASH_INFO);

            /** S_SLOT_WASH_INFO allSlotWashInfo. */
            public allSlotWashInfo: com.message.IAllSlotWashInfo[];

            /**
             * Encodes the specified S_SLOT_WASH_INFO message. Does not implicitly {@link com.message.S_SLOT_WASH_INFO.verify|verify} messages.
             * @param message S_SLOT_WASH_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SLOT_WASH_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SLOT_WASH_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SLOT_WASH_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SLOT_WASH_INFO;
        }

        /** Properties of an AllSlotWashInfo. */
        interface IAllSlotWashInfo {

            /** AllSlotWashInfo formationIndex */
            formationIndex?: (number|null);

            /** AllSlotWashInfo WashInfo */
            WashInfo?: (com.message.IWashInfo[]|null);

            /** AllSlotWashInfo TempWashInfo */
            TempWashInfo?: (com.message.ITempWashInfo[]|null);

            /** AllSlotWashInfo washLevel */
            washLevel?: (number|null);

            /** AllSlotWashInfo washTimes */
            washTimes?: (number|null);

            /** AllSlotWashInfo washLuckeyLevel */
            washLuckeyLevel?: (number|null);

            /** AllSlotWashInfo washLuckeyExp */
            washLuckeyExp?: (number|null);
        }

        /** Represents an AllSlotWashInfo. */
        class AllSlotWashInfo implements IAllSlotWashInfo {

            /**
             * Constructs a new AllSlotWashInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IAllSlotWashInfo);

            /** AllSlotWashInfo formationIndex. */
            public formationIndex: number;

            /** AllSlotWashInfo WashInfo. */
            public WashInfo: com.message.IWashInfo[];

            /** AllSlotWashInfo TempWashInfo. */
            public TempWashInfo: com.message.ITempWashInfo[];

            /** AllSlotWashInfo washLevel. */
            public washLevel: number;

            /** AllSlotWashInfo washTimes. */
            public washTimes: number;

            /** AllSlotWashInfo washLuckeyLevel. */
            public washLuckeyLevel: number;

            /** AllSlotWashInfo washLuckeyExp. */
            public washLuckeyExp: number;

            /**
             * Encodes the specified AllSlotWashInfo message. Does not implicitly {@link com.message.AllSlotWashInfo.verify|verify} messages.
             * @param message AllSlotWashInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IAllSlotWashInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an AllSlotWashInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns AllSlotWashInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.AllSlotWashInfo;
        }

        /** Properties of a C_SLOT_UNLOCK_INDEX. */
        interface IC_SLOT_UNLOCK_INDEX {

            /** C_SLOT_UNLOCK_INDEX formationIndex */
            formationIndex?: (number|null);

            /** C_SLOT_UNLOCK_INDEX lockIndex */
            lockIndex?: (number|null);
        }

        /** Represents a C_SLOT_UNLOCK_INDEX. */
        class C_SLOT_UNLOCK_INDEX implements IC_SLOT_UNLOCK_INDEX {

            /**
             * Constructs a new C_SLOT_UNLOCK_INDEX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SLOT_UNLOCK_INDEX);

            /** C_SLOT_UNLOCK_INDEX formationIndex. */
            public formationIndex: number;

            /** C_SLOT_UNLOCK_INDEX lockIndex. */
            public lockIndex: number;

            /**
             * Encodes the specified C_SLOT_UNLOCK_INDEX message. Does not implicitly {@link com.message.C_SLOT_UNLOCK_INDEX.verify|verify} messages.
             * @param message C_SLOT_UNLOCK_INDEX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SLOT_UNLOCK_INDEX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SLOT_UNLOCK_INDEX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SLOT_UNLOCK_INDEX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SLOT_UNLOCK_INDEX;
        }

        /** Properties of a S_SLOT_UNLOCK_INDEX. */
        interface IS_SLOT_UNLOCK_INDEX {

            /** S_SLOT_UNLOCK_INDEX formationIndex */
            formationIndex?: (number|null);

            /** S_SLOT_UNLOCK_INDEX lockIndex */
            lockIndex?: (number|null);

            /** S_SLOT_UNLOCK_INDEX success */
            success?: (number|null);
        }

        /** Represents a S_SLOT_UNLOCK_INDEX. */
        class S_SLOT_UNLOCK_INDEX implements IS_SLOT_UNLOCK_INDEX {

            /**
             * Constructs a new S_SLOT_UNLOCK_INDEX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SLOT_UNLOCK_INDEX);

            /** S_SLOT_UNLOCK_INDEX formationIndex. */
            public formationIndex: number;

            /** S_SLOT_UNLOCK_INDEX lockIndex. */
            public lockIndex: number;

            /** S_SLOT_UNLOCK_INDEX success. */
            public success: number;

            /**
             * Encodes the specified S_SLOT_UNLOCK_INDEX message. Does not implicitly {@link com.message.S_SLOT_UNLOCK_INDEX.verify|verify} messages.
             * @param message S_SLOT_UNLOCK_INDEX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SLOT_UNLOCK_INDEX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SLOT_UNLOCK_INDEX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SLOT_UNLOCK_INDEX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SLOT_UNLOCK_INDEX;
        }

        /** Properties of a WashInfo. */
        interface IWashInfo {

            /** WashInfo unlockIndex */
            unlockIndex?: (number|null);

            /** WashInfo propType */
            propType?: (number|null);

            /** WashInfo propNum */
            propNum?: (number|null);

            /** WashInfo isLock */
            isLock?: (number|null);

            /** WashInfo quenching */
            quenching?: (number|null);

            /** WashInfo tempQeuenching */
            tempQeuenching?: (number|null);
        }

        /** Represents a WashInfo. */
        class WashInfo implements IWashInfo {

            /**
             * Constructs a new WashInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IWashInfo);

            /** WashInfo unlockIndex. */
            public unlockIndex: number;

            /** WashInfo propType. */
            public propType: number;

            /** WashInfo propNum. */
            public propNum: number;

            /** WashInfo isLock. */
            public isLock: number;

            /** WashInfo quenching. */
            public quenching: number;

            /** WashInfo tempQeuenching. */
            public tempQeuenching: number;

            /**
             * Encodes the specified WashInfo message. Does not implicitly {@link com.message.WashInfo.verify|verify} messages.
             * @param message WashInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IWashInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a WashInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns WashInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.WashInfo;
        }

        /** Properties of a TempWashInfo. */
        interface ITempWashInfo {

            /** TempWashInfo unlockIndex */
            unlockIndex?: (number|null);

            /** TempWashInfo propType */
            propType?: (number|null);

            /** TempWashInfo propNum */
            propNum?: (number|null);
        }

        /** Represents a TempWashInfo. */
        class TempWashInfo implements ITempWashInfo {

            /**
             * Constructs a new TempWashInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ITempWashInfo);

            /** TempWashInfo unlockIndex. */
            public unlockIndex: number;

            /** TempWashInfo propType. */
            public propType: number;

            /** TempWashInfo propNum. */
            public propNum: number;

            /**
             * Encodes the specified TempWashInfo message. Does not implicitly {@link com.message.TempWashInfo.verify|verify} messages.
             * @param message TempWashInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ITempWashInfo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a TempWashInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns TempWashInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.TempWashInfo;
        }

        /** Properties of a C_SLOT_WASH. */
        interface IC_SLOT_WASH {

            /** C_SLOT_WASH formationIndex */
            formationIndex?: (number|null);

            /** C_SLOT_WASH castLevel */
            castLevel?: (number|null);
        }

        /** Represents a C_SLOT_WASH. */
        class C_SLOT_WASH implements IC_SLOT_WASH {

            /**
             * Constructs a new C_SLOT_WASH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SLOT_WASH);

            /** C_SLOT_WASH formationIndex. */
            public formationIndex: number;

            /** C_SLOT_WASH castLevel. */
            public castLevel: number;

            /**
             * Encodes the specified C_SLOT_WASH message. Does not implicitly {@link com.message.C_SLOT_WASH.verify|verify} messages.
             * @param message C_SLOT_WASH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SLOT_WASH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SLOT_WASH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SLOT_WASH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SLOT_WASH;
        }

        /** Properties of a S_SLOT_WASH. */
        interface IS_SLOT_WASH {

            /** S_SLOT_WASH formationIndex */
            formationIndex?: (number|null);

            /** S_SLOT_WASH tempWashInfo */
            tempWashInfo?: (com.message.ITempWashInfo[]|null);

            /** S_SLOT_WASH success */
            success?: (number|null);

            /** S_SLOT_WASH washLevel */
            washLevel?: (number|null);

            /** S_SLOT_WASH washTimes */
            washTimes?: (number|null);

            /** S_SLOT_WASH washLuckeyLevel */
            washLuckeyLevel?: (number|null);

            /** S_SLOT_WASH washLuckeyExp */
            washLuckeyExp?: (number|null);
        }

        /** Represents a S_SLOT_WASH. */
        class S_SLOT_WASH implements IS_SLOT_WASH {

            /**
             * Constructs a new S_SLOT_WASH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SLOT_WASH);

            /** S_SLOT_WASH formationIndex. */
            public formationIndex: number;

            /** S_SLOT_WASH tempWashInfo. */
            public tempWashInfo: com.message.ITempWashInfo[];

            /** S_SLOT_WASH success. */
            public success: number;

            /** S_SLOT_WASH washLevel. */
            public washLevel: number;

            /** S_SLOT_WASH washTimes. */
            public washTimes: number;

            /** S_SLOT_WASH washLuckeyLevel. */
            public washLuckeyLevel: number;

            /** S_SLOT_WASH washLuckeyExp. */
            public washLuckeyExp: number;

            /**
             * Encodes the specified S_SLOT_WASH message. Does not implicitly {@link com.message.S_SLOT_WASH.verify|verify} messages.
             * @param message S_SLOT_WASH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SLOT_WASH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SLOT_WASH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SLOT_WASH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SLOT_WASH;
        }

        /** Properties of a C_SLOT_WASH_REPLACE. */
        interface IC_SLOT_WASH_REPLACE {

            /** C_SLOT_WASH_REPLACE formationIndex */
            formationIndex?: (number|null);
        }

        /** Represents a C_SLOT_WASH_REPLACE. */
        class C_SLOT_WASH_REPLACE implements IC_SLOT_WASH_REPLACE {

            /**
             * Constructs a new C_SLOT_WASH_REPLACE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SLOT_WASH_REPLACE);

            /** C_SLOT_WASH_REPLACE formationIndex. */
            public formationIndex: number;

            /**
             * Encodes the specified C_SLOT_WASH_REPLACE message. Does not implicitly {@link com.message.C_SLOT_WASH_REPLACE.verify|verify} messages.
             * @param message C_SLOT_WASH_REPLACE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SLOT_WASH_REPLACE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SLOT_WASH_REPLACE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SLOT_WASH_REPLACE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SLOT_WASH_REPLACE;
        }

        /** Properties of a S_SLOT_WASH_REPLACE. */
        interface IS_SLOT_WASH_REPLACE {

            /** S_SLOT_WASH_REPLACE formationIndex */
            formationIndex?: (number|null);

            /** S_SLOT_WASH_REPLACE WashInfo */
            WashInfo?: (com.message.IWashInfo[]|null);

            /** S_SLOT_WASH_REPLACE success */
            success?: (number|null);
        }

        /** Represents a S_SLOT_WASH_REPLACE. */
        class S_SLOT_WASH_REPLACE implements IS_SLOT_WASH_REPLACE {

            /**
             * Constructs a new S_SLOT_WASH_REPLACE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SLOT_WASH_REPLACE);

            /** S_SLOT_WASH_REPLACE formationIndex. */
            public formationIndex: number;

            /** S_SLOT_WASH_REPLACE WashInfo. */
            public WashInfo: com.message.IWashInfo[];

            /** S_SLOT_WASH_REPLACE success. */
            public success: number;

            /**
             * Encodes the specified S_SLOT_WASH_REPLACE message. Does not implicitly {@link com.message.S_SLOT_WASH_REPLACE.verify|verify} messages.
             * @param message S_SLOT_WASH_REPLACE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SLOT_WASH_REPLACE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SLOT_WASH_REPLACE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SLOT_WASH_REPLACE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SLOT_WASH_REPLACE;
        }

        /** Properties of a C_QUENCHING_SLOT. */
        interface IC_QUENCHING_SLOT {

            /** C_QUENCHING_SLOT formationIndex */
            formationIndex?: (number|null);

            /** C_QUENCHING_SLOT quenchingType */
            quenchingType?: (number|null);
        }

        /** Represents a C_QUENCHING_SLOT. */
        class C_QUENCHING_SLOT implements IC_QUENCHING_SLOT {

            /**
             * Constructs a new C_QUENCHING_SLOT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_QUENCHING_SLOT);

            /** C_QUENCHING_SLOT formationIndex. */
            public formationIndex: number;

            /** C_QUENCHING_SLOT quenchingType. */
            public quenchingType: number;

            /**
             * Encodes the specified C_QUENCHING_SLOT message. Does not implicitly {@link com.message.C_QUENCHING_SLOT.verify|verify} messages.
             * @param message C_QUENCHING_SLOT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_QUENCHING_SLOT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_QUENCHING_SLOT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_QUENCHING_SLOT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_QUENCHING_SLOT;
        }

        /** Properties of a S_QUENCHING_SLOT. */
        interface IS_QUENCHING_SLOT {

            /** S_QUENCHING_SLOT formationIndex */
            formationIndex?: (number|null);

            /** S_QUENCHING_SLOT qeuenchingInfo */
            qeuenchingInfo?: (com.message.ITempWashInfo[]|null);

            /** S_QUENCHING_SLOT tempQeuenchingInfo */
            tempQeuenchingInfo?: (com.message.ITempWashInfo[]|null);

            /** S_QUENCHING_SLOT success */
            success?: (number|null);
        }

        /** Represents a S_QUENCHING_SLOT. */
        class S_QUENCHING_SLOT implements IS_QUENCHING_SLOT {

            /**
             * Constructs a new S_QUENCHING_SLOT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_QUENCHING_SLOT);

            /** S_QUENCHING_SLOT formationIndex. */
            public formationIndex: number;

            /** S_QUENCHING_SLOT qeuenchingInfo. */
            public qeuenchingInfo: com.message.ITempWashInfo[];

            /** S_QUENCHING_SLOT tempQeuenchingInfo. */
            public tempQeuenchingInfo: com.message.ITempWashInfo[];

            /** S_QUENCHING_SLOT success. */
            public success: number;

            /**
             * Encodes the specified S_QUENCHING_SLOT message. Does not implicitly {@link com.message.S_QUENCHING_SLOT.verify|verify} messages.
             * @param message S_QUENCHING_SLOT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_QUENCHING_SLOT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_QUENCHING_SLOT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_QUENCHING_SLOT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_QUENCHING_SLOT;
        }

        /** Properties of a C_LOCK_INDEX. */
        interface IC_LOCK_INDEX {

            /** C_LOCK_INDEX formationIndex */
            formationIndex?: (number|null);

            /** C_LOCK_INDEX lockIndex */
            lockIndex?: (number|null);

            /** C_LOCK_INDEX lockstate */
            lockstate?: (number|null);
        }

        /** Represents a C_LOCK_INDEX. */
        class C_LOCK_INDEX implements IC_LOCK_INDEX {

            /**
             * Constructs a new C_LOCK_INDEX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_LOCK_INDEX);

            /** C_LOCK_INDEX formationIndex. */
            public formationIndex: number;

            /** C_LOCK_INDEX lockIndex. */
            public lockIndex: number;

            /** C_LOCK_INDEX lockstate. */
            public lockstate: number;

            /**
             * Encodes the specified C_LOCK_INDEX message. Does not implicitly {@link com.message.C_LOCK_INDEX.verify|verify} messages.
             * @param message C_LOCK_INDEX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_LOCK_INDEX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_LOCK_INDEX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_LOCK_INDEX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_LOCK_INDEX;
        }

        /** Properties of a S_LOCK_INDEX. */
        interface IS_LOCK_INDEX {

            /** S_LOCK_INDEX formationIndex */
            formationIndex?: (number|null);

            /** S_LOCK_INDEX lockIndex */
            lockIndex?: (number|null);

            /** S_LOCK_INDEX success */
            success?: (number|null);

            /** S_LOCK_INDEX lockstate */
            lockstate?: (number|null);
        }

        /** Represents a S_LOCK_INDEX. */
        class S_LOCK_INDEX implements IS_LOCK_INDEX {

            /**
             * Constructs a new S_LOCK_INDEX.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_LOCK_INDEX);

            /** S_LOCK_INDEX formationIndex. */
            public formationIndex: number;

            /** S_LOCK_INDEX lockIndex. */
            public lockIndex: number;

            /** S_LOCK_INDEX success. */
            public success: number;

            /** S_LOCK_INDEX lockstate. */
            public lockstate: number;

            /**
             * Encodes the specified S_LOCK_INDEX message. Does not implicitly {@link com.message.S_LOCK_INDEX.verify|verify} messages.
             * @param message S_LOCK_INDEX message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_LOCK_INDEX, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_LOCK_INDEX message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_LOCK_INDEX
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_LOCK_INDEX;
        }

        /** Properties of a C_SAVE_QUENCHING_SLOT. */
        interface IC_SAVE_QUENCHING_SLOT {

            /** C_SAVE_QUENCHING_SLOT formationIndex */
            formationIndex?: (number|null);
        }

        /** Represents a C_SAVE_QUENCHING_SLOT. */
        class C_SAVE_QUENCHING_SLOT implements IC_SAVE_QUENCHING_SLOT {

            /**
             * Constructs a new C_SAVE_QUENCHING_SLOT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_SAVE_QUENCHING_SLOT);

            /** C_SAVE_QUENCHING_SLOT formationIndex. */
            public formationIndex: number;

            /**
             * Encodes the specified C_SAVE_QUENCHING_SLOT message. Does not implicitly {@link com.message.C_SAVE_QUENCHING_SLOT.verify|verify} messages.
             * @param message C_SAVE_QUENCHING_SLOT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_SAVE_QUENCHING_SLOT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_SAVE_QUENCHING_SLOT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_SAVE_QUENCHING_SLOT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_SAVE_QUENCHING_SLOT;
        }

        /** Properties of a S_SAVE_QUENCHING_SLOT. */
        interface IS_SAVE_QUENCHING_SLOT {

            /** S_SAVE_QUENCHING_SLOT formationIndex */
            formationIndex?: (number|null);

            /** S_SAVE_QUENCHING_SLOT qeuenchingInfo */
            qeuenchingInfo?: (com.message.ITempWashInfo[]|null);

            /** S_SAVE_QUENCHING_SLOT success */
            success?: (number|null);
        }

        /** Represents a S_SAVE_QUENCHING_SLOT. */
        class S_SAVE_QUENCHING_SLOT implements IS_SAVE_QUENCHING_SLOT {

            /**
             * Constructs a new S_SAVE_QUENCHING_SLOT.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_SAVE_QUENCHING_SLOT);

            /** S_SAVE_QUENCHING_SLOT formationIndex. */
            public formationIndex: number;

            /** S_SAVE_QUENCHING_SLOT qeuenchingInfo. */
            public qeuenchingInfo: com.message.ITempWashInfo[];

            /** S_SAVE_QUENCHING_SLOT success. */
            public success: number;

            /**
             * Encodes the specified S_SAVE_QUENCHING_SLOT message. Does not implicitly {@link com.message.S_SAVE_QUENCHING_SLOT.verify|verify} messages.
             * @param message S_SAVE_QUENCHING_SLOT message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_SAVE_QUENCHING_SLOT, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_SAVE_QUENCHING_SLOT message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_SAVE_QUENCHING_SLOT
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_SAVE_QUENCHING_SLOT;
        }

        /** Properties of a SIGNIN_DAY_STATE. */
        interface ISIGNIN_DAY_STATE {

            /** SIGNIN_DAY_STATE day */
            day?: (number|null);

            /** SIGNIN_DAY_STATE stat */
            stat?: (number|null);
        }

        /** Represents a SIGNIN_DAY_STATE. */
        class SIGNIN_DAY_STATE implements ISIGNIN_DAY_STATE {

            /**
             * Constructs a new SIGNIN_DAY_STATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ISIGNIN_DAY_STATE);

            /** SIGNIN_DAY_STATE day. */
            public day: number;

            /** SIGNIN_DAY_STATE stat. */
            public stat: number;

            /**
             * Encodes the specified SIGNIN_DAY_STATE message. Does not implicitly {@link com.message.SIGNIN_DAY_STATE.verify|verify} messages.
             * @param message SIGNIN_DAY_STATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ISIGNIN_DAY_STATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a SIGNIN_DAY_STATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SIGNIN_DAY_STATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.SIGNIN_DAY_STATE;
        }

        /** Properties of a C_7DAYLOGIN_GETSTATE. */
        interface IC_7DAYLOGIN_GETSTATE {
        }

        /** Represents a C_7DAYLOGIN_GETSTATE. */
        class C_7DAYLOGIN_GETSTATE implements IC_7DAYLOGIN_GETSTATE {

            /**
             * Constructs a new C_7DAYLOGIN_GETSTATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_7DAYLOGIN_GETSTATE);

            /**
             * Encodes the specified C_7DAYLOGIN_GETSTATE message. Does not implicitly {@link com.message.C_7DAYLOGIN_GETSTATE.verify|verify} messages.
             * @param message C_7DAYLOGIN_GETSTATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_7DAYLOGIN_GETSTATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_7DAYLOGIN_GETSTATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_7DAYLOGIN_GETSTATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_7DAYLOGIN_GETSTATE;
        }

        /** Properties of a S_7DAYLOGIN_GETSTATE. */
        interface IS_7DAYLOGIN_GETSTATE {

            /** S_7DAYLOGIN_GETSTATE loginDay */
            loginDay?: (number|null);

            /** S_7DAYLOGIN_GETSTATE rewardDays */
            rewardDays?: (number[]|null);

            /** S_7DAYLOGIN_GETSTATE vipRewardDays */
            vipRewardDays?: (number[]|null);
        }

        /** Represents a S_7DAYLOGIN_GETSTATE. */
        class S_7DAYLOGIN_GETSTATE implements IS_7DAYLOGIN_GETSTATE {

            /**
             * Constructs a new S_7DAYLOGIN_GETSTATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_7DAYLOGIN_GETSTATE);

            /** S_7DAYLOGIN_GETSTATE loginDay. */
            public loginDay: number;

            /** S_7DAYLOGIN_GETSTATE rewardDays. */
            public rewardDays: number[];

            /** S_7DAYLOGIN_GETSTATE vipRewardDays. */
            public vipRewardDays: number[];

            /**
             * Encodes the specified S_7DAYLOGIN_GETSTATE message. Does not implicitly {@link com.message.S_7DAYLOGIN_GETSTATE.verify|verify} messages.
             * @param message S_7DAYLOGIN_GETSTATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_7DAYLOGIN_GETSTATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_7DAYLOGIN_GETSTATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_7DAYLOGIN_GETSTATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_7DAYLOGIN_GETSTATE;
        }

        /** Properties of a C_7DAYLOGIN_RECVREWARD. */
        interface IC_7DAYLOGIN_RECVREWARD {

            /** C_7DAYLOGIN_RECVREWARD rewardDay */
            rewardDay?: (number|null);

            /** C_7DAYLOGIN_RECVREWARD type */
            type?: (number|null);
        }

        /** Represents a C_7DAYLOGIN_RECVREWARD. */
        class C_7DAYLOGIN_RECVREWARD implements IC_7DAYLOGIN_RECVREWARD {

            /**
             * Constructs a new C_7DAYLOGIN_RECVREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_7DAYLOGIN_RECVREWARD);

            /** C_7DAYLOGIN_RECVREWARD rewardDay. */
            public rewardDay: number;

            /** C_7DAYLOGIN_RECVREWARD type. */
            public type: number;

            /**
             * Encodes the specified C_7DAYLOGIN_RECVREWARD message. Does not implicitly {@link com.message.C_7DAYLOGIN_RECVREWARD.verify|verify} messages.
             * @param message C_7DAYLOGIN_RECVREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_7DAYLOGIN_RECVREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_7DAYLOGIN_RECVREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_7DAYLOGIN_RECVREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_7DAYLOGIN_RECVREWARD;
        }

        /** Properties of a S_7DAYLOGIN_RECVREWARD. */
        interface IS_7DAYLOGIN_RECVREWARD {

            /** S_7DAYLOGIN_RECVREWARD rewardDay */
            rewardDay?: (number|null);

            /** S_7DAYLOGIN_RECVREWARD type */
            type?: (number|null);
        }

        /** Represents a S_7DAYLOGIN_RECVREWARD. */
        class S_7DAYLOGIN_RECVREWARD implements IS_7DAYLOGIN_RECVREWARD {

            /**
             * Constructs a new S_7DAYLOGIN_RECVREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_7DAYLOGIN_RECVREWARD);

            /** S_7DAYLOGIN_RECVREWARD rewardDay. */
            public rewardDay: number;

            /** S_7DAYLOGIN_RECVREWARD type. */
            public type: number;

            /**
             * Encodes the specified S_7DAYLOGIN_RECVREWARD message. Does not implicitly {@link com.message.S_7DAYLOGIN_RECVREWARD.verify|verify} messages.
             * @param message S_7DAYLOGIN_RECVREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_7DAYLOGIN_RECVREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_7DAYLOGIN_RECVREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_7DAYLOGIN_RECVREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_7DAYLOGIN_RECVREWARD;
        }

        /** Properties of a C_DAILY_SIGNIN_GETSTATE. */
        interface IC_DAILY_SIGNIN_GETSTATE {
        }

        /** Represents a C_DAILY_SIGNIN_GETSTATE. */
        class C_DAILY_SIGNIN_GETSTATE implements IC_DAILY_SIGNIN_GETSTATE {

            /**
             * Constructs a new C_DAILY_SIGNIN_GETSTATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAILY_SIGNIN_GETSTATE);

            /**
             * Encodes the specified C_DAILY_SIGNIN_GETSTATE message. Does not implicitly {@link com.message.C_DAILY_SIGNIN_GETSTATE.verify|verify} messages.
             * @param message C_DAILY_SIGNIN_GETSTATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAILY_SIGNIN_GETSTATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAILY_SIGNIN_GETSTATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAILY_SIGNIN_GETSTATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAILY_SIGNIN_GETSTATE;
        }

        /** Properties of a S_DAILY_SIGNIN_GETSTATE. */
        interface IS_DAILY_SIGNIN_GETSTATE {

            /** S_DAILY_SIGNIN_GETSTATE currentDay */
            currentDay?: (number|null);

            /** S_DAILY_SIGNIN_GETSTATE suppleSigninNum */
            suppleSigninNum?: (number|null);

            /** S_DAILY_SIGNIN_GETSTATE signDayReward */
            signDayReward?: (number[]|null);

            /** S_DAILY_SIGNIN_GETSTATE signinDayState */
            signinDayState?: (com.message.ISIGNIN_DAY_STATE[]|null);
        }

        /** Represents a S_DAILY_SIGNIN_GETSTATE. */
        class S_DAILY_SIGNIN_GETSTATE implements IS_DAILY_SIGNIN_GETSTATE {

            /**
             * Constructs a new S_DAILY_SIGNIN_GETSTATE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAILY_SIGNIN_GETSTATE);

            /** S_DAILY_SIGNIN_GETSTATE currentDay. */
            public currentDay: number;

            /** S_DAILY_SIGNIN_GETSTATE suppleSigninNum. */
            public suppleSigninNum: number;

            /** S_DAILY_SIGNIN_GETSTATE signDayReward. */
            public signDayReward: number[];

            /** S_DAILY_SIGNIN_GETSTATE signinDayState. */
            public signinDayState: com.message.ISIGNIN_DAY_STATE[];

            /**
             * Encodes the specified S_DAILY_SIGNIN_GETSTATE message. Does not implicitly {@link com.message.S_DAILY_SIGNIN_GETSTATE.verify|verify} messages.
             * @param message S_DAILY_SIGNIN_GETSTATE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAILY_SIGNIN_GETSTATE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAILY_SIGNIN_GETSTATE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAILY_SIGNIN_GETSTATE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAILY_SIGNIN_GETSTATE;
        }

        /** Properties of a C_DAILY_SIGNIN_SIGN. */
        interface IC_DAILY_SIGNIN_SIGN {

            /** C_DAILY_SIGNIN_SIGN signType */
            signType?: (number|null);

            /** C_DAILY_SIGNIN_SIGN signDay */
            signDay?: (number|null);
        }

        /** Represents a C_DAILY_SIGNIN_SIGN. */
        class C_DAILY_SIGNIN_SIGN implements IC_DAILY_SIGNIN_SIGN {

            /**
             * Constructs a new C_DAILY_SIGNIN_SIGN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAILY_SIGNIN_SIGN);

            /** C_DAILY_SIGNIN_SIGN signType. */
            public signType: number;

            /** C_DAILY_SIGNIN_SIGN signDay. */
            public signDay: number;

            /**
             * Encodes the specified C_DAILY_SIGNIN_SIGN message. Does not implicitly {@link com.message.C_DAILY_SIGNIN_SIGN.verify|verify} messages.
             * @param message C_DAILY_SIGNIN_SIGN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAILY_SIGNIN_SIGN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAILY_SIGNIN_SIGN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAILY_SIGNIN_SIGN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAILY_SIGNIN_SIGN;
        }

        /** Properties of a S_DAILY_SIGNIN_SIGN. */
        interface IS_DAILY_SIGNIN_SIGN {

            /** S_DAILY_SIGNIN_SIGN signType */
            signType?: (number|null);

            /** S_DAILY_SIGNIN_SIGN suppleSigninNum */
            suppleSigninNum?: (number|null);

            /** S_DAILY_SIGNIN_SIGN signDay */
            signDay?: (com.message.ISIGNIN_DAY_STATE|null);
        }

        /** Represents a S_DAILY_SIGNIN_SIGN. */
        class S_DAILY_SIGNIN_SIGN implements IS_DAILY_SIGNIN_SIGN {

            /**
             * Constructs a new S_DAILY_SIGNIN_SIGN.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAILY_SIGNIN_SIGN);

            /** S_DAILY_SIGNIN_SIGN signType. */
            public signType: number;

            /** S_DAILY_SIGNIN_SIGN suppleSigninNum. */
            public suppleSigninNum: number;

            /** S_DAILY_SIGNIN_SIGN signDay. */
            public signDay?: (com.message.ISIGNIN_DAY_STATE|null);

            /**
             * Encodes the specified S_DAILY_SIGNIN_SIGN message. Does not implicitly {@link com.message.S_DAILY_SIGNIN_SIGN.verify|verify} messages.
             * @param message S_DAILY_SIGNIN_SIGN message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAILY_SIGNIN_SIGN, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAILY_SIGNIN_SIGN message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAILY_SIGNIN_SIGN
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAILY_SIGNIN_SIGN;
        }

        /** Properties of a C_DAILY_SIGNIN_REWARD. */
        interface IC_DAILY_SIGNIN_REWARD {

            /** C_DAILY_SIGNIN_REWARD rewardDay */
            rewardDay?: (number|null);
        }

        /** Represents a C_DAILY_SIGNIN_REWARD. */
        class C_DAILY_SIGNIN_REWARD implements IC_DAILY_SIGNIN_REWARD {

            /**
             * Constructs a new C_DAILY_SIGNIN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_DAILY_SIGNIN_REWARD);

            /** C_DAILY_SIGNIN_REWARD rewardDay. */
            public rewardDay: number;

            /**
             * Encodes the specified C_DAILY_SIGNIN_REWARD message. Does not implicitly {@link com.message.C_DAILY_SIGNIN_REWARD.verify|verify} messages.
             * @param message C_DAILY_SIGNIN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_DAILY_SIGNIN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_DAILY_SIGNIN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_DAILY_SIGNIN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_DAILY_SIGNIN_REWARD;
        }

        /** Properties of a S_DAILY_SIGNIN_REWARD. */
        interface IS_DAILY_SIGNIN_REWARD {

            /** S_DAILY_SIGNIN_REWARD rewardDay */
            rewardDay?: (number|null);
        }

        /** Represents a S_DAILY_SIGNIN_REWARD. */
        class S_DAILY_SIGNIN_REWARD implements IS_DAILY_SIGNIN_REWARD {

            /**
             * Constructs a new S_DAILY_SIGNIN_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_DAILY_SIGNIN_REWARD);

            /** S_DAILY_SIGNIN_REWARD rewardDay. */
            public rewardDay: number;

            /**
             * Encodes the specified S_DAILY_SIGNIN_REWARD message. Does not implicitly {@link com.message.S_DAILY_SIGNIN_REWARD.verify|verify} messages.
             * @param message S_DAILY_SIGNIN_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_DAILY_SIGNIN_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_DAILY_SIGNIN_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_DAILY_SIGNIN_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_DAILY_SIGNIN_REWARD;
        }

        /** Properties of a C_GET_XIANMAI_INFO. */
        interface IC_GET_XIANMAI_INFO {
        }

        /** Represents a C_GET_XIANMAI_INFO. */
        class C_GET_XIANMAI_INFO implements IC_GET_XIANMAI_INFO {

            /**
             * Constructs a new C_GET_XIANMAI_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_INFO);

            /**
             * Encodes the specified C_GET_XIANMAI_INFO message. Does not implicitly {@link com.message.C_GET_XIANMAI_INFO.verify|verify} messages.
             * @param message C_GET_XIANMAI_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_INFO;
        }

        /** Properties of a S_GET_XIANMAI_INFO. */
        interface IS_GET_XIANMAI_INFO {

            /** S_GET_XIANMAI_INFO xianMaiId */
            xianMaiId?: (number|null);

            /** S_GET_XIANMAI_INFO techLevel */
            techLevel?: (number|null);

            /** S_GET_XIANMAI_INFO totalHour */
            totalHour?: (number|null);

            /** S_GET_XIANMAI_INFO sneakTimes */
            sneakTimes?: (number|null);

            /** S_GET_XIANMAI_INFO infos */
            infos?: (com.message.IXIAN_MAIN_INFO[]|null);

            /** S_GET_XIANMAI_INFO buyTimes */
            buyTimes?: (number|null);

            /** S_GET_XIANMAI_INFO playTimes */
            playTimes?: (number|null);
        }

        /** Represents a S_GET_XIANMAI_INFO. */
        class S_GET_XIANMAI_INFO implements IS_GET_XIANMAI_INFO {

            /**
             * Constructs a new S_GET_XIANMAI_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_INFO);

            /** S_GET_XIANMAI_INFO xianMaiId. */
            public xianMaiId: number;

            /** S_GET_XIANMAI_INFO techLevel. */
            public techLevel: number;

            /** S_GET_XIANMAI_INFO totalHour. */
            public totalHour: number;

            /** S_GET_XIANMAI_INFO sneakTimes. */
            public sneakTimes: number;

            /** S_GET_XIANMAI_INFO infos. */
            public infos: com.message.IXIAN_MAIN_INFO[];

            /** S_GET_XIANMAI_INFO buyTimes. */
            public buyTimes: number;

            /** S_GET_XIANMAI_INFO playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified S_GET_XIANMAI_INFO message. Does not implicitly {@link com.message.S_GET_XIANMAI_INFO.verify|verify} messages.
             * @param message S_GET_XIANMAI_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_INFO;
        }

        /** Properties of a XIAN_MAIN_INFO. */
        interface IXIAN_MAIN_INFO {

            /** XIAN_MAIN_INFO xianMaiId */
            xianMaiId?: (number|null);

            /** XIAN_MAIN_INFO playerId */
            playerId?: (number|Long|null);

            /** XIAN_MAIN_INFO playerName */
            playerName?: (string|null);

            /** XIAN_MAIN_INFO fightValue */
            fightValue?: (number|Long|null);

            /** XIAN_MAIN_INFO guildId */
            guildId?: (number|Long|null);

            /** XIAN_MAIN_INFO guildName */
            guildName?: (string|null);

            /** XIAN_MAIN_INFO beSneakTimes */
            beSneakTimes?: (number|null);

            /** XIAN_MAIN_INFO playerHeroId */
            playerHeroId?: (number|Long|null);

            /** XIAN_MAIN_INFO heroQuality */
            heroQuality?: (number|null);
        }

        /** Represents a XIAN_MAIN_INFO. */
        class XIAN_MAIN_INFO implements IXIAN_MAIN_INFO {

            /**
             * Constructs a new XIAN_MAIN_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IXIAN_MAIN_INFO);

            /** XIAN_MAIN_INFO xianMaiId. */
            public xianMaiId: number;

            /** XIAN_MAIN_INFO playerId. */
            public playerId: (number|Long);

            /** XIAN_MAIN_INFO playerName. */
            public playerName: string;

            /** XIAN_MAIN_INFO fightValue. */
            public fightValue: (number|Long);

            /** XIAN_MAIN_INFO guildId. */
            public guildId: (number|Long);

            /** XIAN_MAIN_INFO guildName. */
            public guildName: string;

            /** XIAN_MAIN_INFO beSneakTimes. */
            public beSneakTimes: number;

            /** XIAN_MAIN_INFO playerHeroId. */
            public playerHeroId: (number|Long);

            /** XIAN_MAIN_INFO heroQuality. */
            public heroQuality: number;

            /**
             * Encodes the specified XIAN_MAIN_INFO message. Does not implicitly {@link com.message.XIAN_MAIN_INFO.verify|verify} messages.
             * @param message XIAN_MAIN_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IXIAN_MAIN_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a XIAN_MAIN_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns XIAN_MAIN_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.XIAN_MAIN_INFO;
        }

        /** Properties of a C_GET_XIANMAI_PLAYER. */
        interface IC_GET_XIANMAI_PLAYER {

            /** C_GET_XIANMAI_PLAYER xianMaiId */
            xianMaiId?: (number|null);
        }

        /** Represents a C_GET_XIANMAI_PLAYER. */
        class C_GET_XIANMAI_PLAYER implements IC_GET_XIANMAI_PLAYER {

            /**
             * Constructs a new C_GET_XIANMAI_PLAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_PLAYER);

            /** C_GET_XIANMAI_PLAYER xianMaiId. */
            public xianMaiId: number;

            /**
             * Encodes the specified C_GET_XIANMAI_PLAYER message. Does not implicitly {@link com.message.C_GET_XIANMAI_PLAYER.verify|verify} messages.
             * @param message C_GET_XIANMAI_PLAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_PLAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_PLAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_PLAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_PLAYER;
        }

        /** Properties of a S_GET_XIANMAI_PLAYER. */
        interface IS_GET_XIANMAI_PLAYER {

            /** S_GET_XIANMAI_PLAYER xianMaiId */
            xianMaiId?: (number|null);

            /** S_GET_XIANMAI_PLAYER isSelf */
            isSelf?: (boolean|null);

            /** S_GET_XIANMAI_PLAYER addTimes */
            addTimes?: (number|null);

            /** S_GET_XIANMAI_PLAYER rewardBoxs */
            rewardBoxs?: (string|null);

            /** S_GET_XIANMAI_PLAYER leaveTime */
            leaveTime?: (number|Long|null);

            /** S_GET_XIANMAI_PLAYER maxSneak */
            maxSneak?: (number|null);

            /** S_GET_XIANMAI_PLAYER myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_XIANMAI_PLAYER beSneakTimes */
            beSneakTimes?: (number|null);
        }

        /** Represents a S_GET_XIANMAI_PLAYER. */
        class S_GET_XIANMAI_PLAYER implements IS_GET_XIANMAI_PLAYER {

            /**
             * Constructs a new S_GET_XIANMAI_PLAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_PLAYER);

            /** S_GET_XIANMAI_PLAYER xianMaiId. */
            public xianMaiId: number;

            /** S_GET_XIANMAI_PLAYER isSelf. */
            public isSelf: boolean;

            /** S_GET_XIANMAI_PLAYER addTimes. */
            public addTimes: number;

            /** S_GET_XIANMAI_PLAYER rewardBoxs. */
            public rewardBoxs: string;

            /** S_GET_XIANMAI_PLAYER leaveTime. */
            public leaveTime: (number|Long);

            /** S_GET_XIANMAI_PLAYER maxSneak. */
            public maxSneak: number;

            /** S_GET_XIANMAI_PLAYER myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** S_GET_XIANMAI_PLAYER beSneakTimes. */
            public beSneakTimes: number;

            /**
             * Encodes the specified S_GET_XIANMAI_PLAYER message. Does not implicitly {@link com.message.S_GET_XIANMAI_PLAYER.verify|verify} messages.
             * @param message S_GET_XIANMAI_PLAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_PLAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_PLAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_PLAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_PLAYER;
        }

        /** Properties of a C_GET_XIANMAI_ADDTIME. */
        interface IC_GET_XIANMAI_ADDTIME {

            /** C_GET_XIANMAI_ADDTIME xianMaiId */
            xianMaiId?: (number|null);
        }

        /** Represents a C_GET_XIANMAI_ADDTIME. */
        class C_GET_XIANMAI_ADDTIME implements IC_GET_XIANMAI_ADDTIME {

            /**
             * Constructs a new C_GET_XIANMAI_ADDTIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_ADDTIME);

            /** C_GET_XIANMAI_ADDTIME xianMaiId. */
            public xianMaiId: number;

            /**
             * Encodes the specified C_GET_XIANMAI_ADDTIME message. Does not implicitly {@link com.message.C_GET_XIANMAI_ADDTIME.verify|verify} messages.
             * @param message C_GET_XIANMAI_ADDTIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_ADDTIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_ADDTIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_ADDTIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_ADDTIME;
        }

        /** Properties of a S_GET_XIANMAI_ADDTIEM. */
        interface IS_GET_XIANMAI_ADDTIEM {

            /** S_GET_XIANMAI_ADDTIEM xianMaiId */
            xianMaiId?: (number|null);

            /** S_GET_XIANMAI_ADDTIEM addTimes */
            addTimes?: (number|null);

            /** S_GET_XIANMAI_ADDTIEM leaveTime */
            leaveTime?: (number|Long|null);

            /** S_GET_XIANMAI_ADDTIEM rewardBoxs */
            rewardBoxs?: (string|null);

            /** S_GET_XIANMAI_ADDTIEM buyTimes */
            buyTimes?: (number|null);

            /** S_GET_XIANMAI_ADDTIEM playTimes */
            playTimes?: (number|null);
        }

        /** Represents a S_GET_XIANMAI_ADDTIEM. */
        class S_GET_XIANMAI_ADDTIEM implements IS_GET_XIANMAI_ADDTIEM {

            /**
             * Constructs a new S_GET_XIANMAI_ADDTIEM.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_ADDTIEM);

            /** S_GET_XIANMAI_ADDTIEM xianMaiId. */
            public xianMaiId: number;

            /** S_GET_XIANMAI_ADDTIEM addTimes. */
            public addTimes: number;

            /** S_GET_XIANMAI_ADDTIEM leaveTime. */
            public leaveTime: (number|Long);

            /** S_GET_XIANMAI_ADDTIEM rewardBoxs. */
            public rewardBoxs: string;

            /** S_GET_XIANMAI_ADDTIEM buyTimes. */
            public buyTimes: number;

            /** S_GET_XIANMAI_ADDTIEM playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified S_GET_XIANMAI_ADDTIEM message. Does not implicitly {@link com.message.S_GET_XIANMAI_ADDTIEM.verify|verify} messages.
             * @param message S_GET_XIANMAI_ADDTIEM message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_ADDTIEM, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_ADDTIEM message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_ADDTIEM
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_ADDTIEM;
        }

        /** Properties of a C_GET_XIANMAI_GIVEUP. */
        interface IC_GET_XIANMAI_GIVEUP {

            /** C_GET_XIANMAI_GIVEUP xianMaiId */
            xianMaiId?: (number|null);
        }

        /** Represents a C_GET_XIANMAI_GIVEUP. */
        class C_GET_XIANMAI_GIVEUP implements IC_GET_XIANMAI_GIVEUP {

            /**
             * Constructs a new C_GET_XIANMAI_GIVEUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_GIVEUP);

            /** C_GET_XIANMAI_GIVEUP xianMaiId. */
            public xianMaiId: number;

            /**
             * Encodes the specified C_GET_XIANMAI_GIVEUP message. Does not implicitly {@link com.message.C_GET_XIANMAI_GIVEUP.verify|verify} messages.
             * @param message C_GET_XIANMAI_GIVEUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_GIVEUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_GIVEUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_GIVEUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_GIVEUP;
        }

        /** Properties of a S_GET_XIANMAI_GIVEUP. */
        interface IS_GET_XIANMAI_GIVEUP {

            /** S_GET_XIANMAI_GIVEUP xianMaiId */
            xianMaiId?: (number|null);

            /** S_GET_XIANMAI_GIVEUP itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_XIANMAI_GIVEUP. */
        class S_GET_XIANMAI_GIVEUP implements IS_GET_XIANMAI_GIVEUP {

            /**
             * Constructs a new S_GET_XIANMAI_GIVEUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_GIVEUP);

            /** S_GET_XIANMAI_GIVEUP xianMaiId. */
            public xianMaiId: number;

            /** S_GET_XIANMAI_GIVEUP itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_XIANMAI_GIVEUP message. Does not implicitly {@link com.message.S_GET_XIANMAI_GIVEUP.verify|verify} messages.
             * @param message S_GET_XIANMAI_GIVEUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_GIVEUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_GIVEUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_GIVEUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_GIVEUP;
        }

        /** Properties of a C_GET_XIANMAI_BOXREWARD. */
        interface IC_GET_XIANMAI_BOXREWARD {

            /** C_GET_XIANMAI_BOXREWARD xianMaiId */
            xianMaiId?: (number|null);

            /** C_GET_XIANMAI_BOXREWARD hours */
            hours?: (number|null);
        }

        /** Represents a C_GET_XIANMAI_BOXREWARD. */
        class C_GET_XIANMAI_BOXREWARD implements IC_GET_XIANMAI_BOXREWARD {

            /**
             * Constructs a new C_GET_XIANMAI_BOXREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_BOXREWARD);

            /** C_GET_XIANMAI_BOXREWARD xianMaiId. */
            public xianMaiId: number;

            /** C_GET_XIANMAI_BOXREWARD hours. */
            public hours: number;

            /**
             * Encodes the specified C_GET_XIANMAI_BOXREWARD message. Does not implicitly {@link com.message.C_GET_XIANMAI_BOXREWARD.verify|verify} messages.
             * @param message C_GET_XIANMAI_BOXREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_BOXREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_BOXREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_BOXREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_BOXREWARD;
        }

        /** Properties of a S_GET_XIANMAI_BOXREWARD. */
        interface IS_GET_XIANMAI_BOXREWARD {

            /** S_GET_XIANMAI_BOXREWARD xianMaiId */
            xianMaiId?: (number|null);

            /** S_GET_XIANMAI_BOXREWARD hours */
            hours?: (number|null);

            /** S_GET_XIANMAI_BOXREWARD leaveTime */
            leaveTime?: (number|Long|null);

            /** S_GET_XIANMAI_BOXREWARD rewardBoxs */
            rewardBoxs?: (string|null);

            /** S_GET_XIANMAI_BOXREWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_GET_XIANMAI_BOXREWARD. */
        class S_GET_XIANMAI_BOXREWARD implements IS_GET_XIANMAI_BOXREWARD {

            /**
             * Constructs a new S_GET_XIANMAI_BOXREWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_BOXREWARD);

            /** S_GET_XIANMAI_BOXREWARD xianMaiId. */
            public xianMaiId: number;

            /** S_GET_XIANMAI_BOXREWARD hours. */
            public hours: number;

            /** S_GET_XIANMAI_BOXREWARD leaveTime. */
            public leaveTime: (number|Long);

            /** S_GET_XIANMAI_BOXREWARD rewardBoxs. */
            public rewardBoxs: string;

            /** S_GET_XIANMAI_BOXREWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_GET_XIANMAI_BOXREWARD message. Does not implicitly {@link com.message.S_GET_XIANMAI_BOXREWARD.verify|verify} messages.
             * @param message S_GET_XIANMAI_BOXREWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_BOXREWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_BOXREWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_BOXREWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_BOXREWARD;
        }

        /** Properties of a C_GET_XIANMAI_ATTACK. */
        interface IC_GET_XIANMAI_ATTACK {

            /** C_GET_XIANMAI_ATTACK xianMaiId */
            xianMaiId?: (number|null);

            /** C_GET_XIANMAI_ATTACK beAttackId */
            beAttackId?: (number|Long|null);
        }

        /** Represents a C_GET_XIANMAI_ATTACK. */
        class C_GET_XIANMAI_ATTACK implements IC_GET_XIANMAI_ATTACK {

            /**
             * Constructs a new C_GET_XIANMAI_ATTACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_ATTACK);

            /** C_GET_XIANMAI_ATTACK xianMaiId. */
            public xianMaiId: number;

            /** C_GET_XIANMAI_ATTACK beAttackId. */
            public beAttackId: (number|Long);

            /**
             * Encodes the specified C_GET_XIANMAI_ATTACK message. Does not implicitly {@link com.message.C_GET_XIANMAI_ATTACK.verify|verify} messages.
             * @param message C_GET_XIANMAI_ATTACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_ATTACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_ATTACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_ATTACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_ATTACK;
        }

        /** Properties of a S_GET_XIANMAI_ATTACK. */
        interface IS_GET_XIANMAI_ATTACK {

            /** S_GET_XIANMAI_ATTACK xianMaiId */
            xianMaiId?: (number|null);

            /** S_GET_XIANMAI_ATTACK isFinish */
            isFinish?: (boolean|null);

            /** S_GET_XIANMAI_ATTACK buyTimes */
            buyTimes?: (number|null);

            /** S_GET_XIANMAI_ATTACK playTimes */
            playTimes?: (number|null);
        }

        /** Represents a S_GET_XIANMAI_ATTACK. */
        class S_GET_XIANMAI_ATTACK implements IS_GET_XIANMAI_ATTACK {

            /**
             * Constructs a new S_GET_XIANMAI_ATTACK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_ATTACK);

            /** S_GET_XIANMAI_ATTACK xianMaiId. */
            public xianMaiId: number;

            /** S_GET_XIANMAI_ATTACK isFinish. */
            public isFinish: boolean;

            /** S_GET_XIANMAI_ATTACK buyTimes. */
            public buyTimes: number;

            /** S_GET_XIANMAI_ATTACK playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified S_GET_XIANMAI_ATTACK message. Does not implicitly {@link com.message.S_GET_XIANMAI_ATTACK.verify|verify} messages.
             * @param message S_GET_XIANMAI_ATTACK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_ATTACK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_ATTACK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_ATTACK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_ATTACK;
        }

        /** Properties of a C_GET_XIANMAI_SNEAK. */
        interface IC_GET_XIANMAI_SNEAK {

            /** C_GET_XIANMAI_SNEAK xianMaiId */
            xianMaiId?: (number|null);

            /** C_GET_XIANMAI_SNEAK beAttackId */
            beAttackId?: (number|Long|null);
        }

        /** Represents a C_GET_XIANMAI_SNEAK. */
        class C_GET_XIANMAI_SNEAK implements IC_GET_XIANMAI_SNEAK {

            /**
             * Constructs a new C_GET_XIANMAI_SNEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_SNEAK);

            /** C_GET_XIANMAI_SNEAK xianMaiId. */
            public xianMaiId: number;

            /** C_GET_XIANMAI_SNEAK beAttackId. */
            public beAttackId: (number|Long);

            /**
             * Encodes the specified C_GET_XIANMAI_SNEAK message. Does not implicitly {@link com.message.C_GET_XIANMAI_SNEAK.verify|verify} messages.
             * @param message C_GET_XIANMAI_SNEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_SNEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_SNEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_SNEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_SNEAK;
        }

        /** Properties of a S_GET_XIANMAI_SNEAK. */
        interface IS_GET_XIANMAI_SNEAK {

            /** S_GET_XIANMAI_SNEAK xianMaiId */
            xianMaiId?: (number|null);

            /** S_GET_XIANMAI_SNEAK itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_GET_XIANMAI_SNEAK sneakTimes */
            sneakTimes?: (number|null);
        }

        /** Represents a S_GET_XIANMAI_SNEAK. */
        class S_GET_XIANMAI_SNEAK implements IS_GET_XIANMAI_SNEAK {

            /**
             * Constructs a new S_GET_XIANMAI_SNEAK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_SNEAK);

            /** S_GET_XIANMAI_SNEAK xianMaiId. */
            public xianMaiId: number;

            /** S_GET_XIANMAI_SNEAK itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_GET_XIANMAI_SNEAK sneakTimes. */
            public sneakTimes: number;

            /**
             * Encodes the specified S_GET_XIANMAI_SNEAK message. Does not implicitly {@link com.message.S_GET_XIANMAI_SNEAK.verify|verify} messages.
             * @param message S_GET_XIANMAI_SNEAK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_SNEAK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_SNEAK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_SNEAK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_SNEAK;
        }

        /** Properties of a C_GET_XIANMAI_LOGS. */
        interface IC_GET_XIANMAI_LOGS {

            /** C_GET_XIANMAI_LOGS isSelf */
            isSelf?: (boolean|null);
        }

        /** Represents a C_GET_XIANMAI_LOGS. */
        class C_GET_XIANMAI_LOGS implements IC_GET_XIANMAI_LOGS {

            /**
             * Constructs a new C_GET_XIANMAI_LOGS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_LOGS);

            /** C_GET_XIANMAI_LOGS isSelf. */
            public isSelf: boolean;

            /**
             * Encodes the specified C_GET_XIANMAI_LOGS message. Does not implicitly {@link com.message.C_GET_XIANMAI_LOGS.verify|verify} messages.
             * @param message C_GET_XIANMAI_LOGS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_LOGS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_LOGS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_LOGS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_LOGS;
        }

        /** Properties of a S_GET_XIANMAI_LOGS. */
        interface IS_GET_XIANMAI_LOGS {

            /** S_GET_XIANMAI_LOGS isSelf */
            isSelf?: (boolean|null);

            /** S_GET_XIANMAI_LOGS logs */
            logs?: (com.message.IXIAN_MAI_LOG[]|null);
        }

        /** Represents a S_GET_XIANMAI_LOGS. */
        class S_GET_XIANMAI_LOGS implements IS_GET_XIANMAI_LOGS {

            /**
             * Constructs a new S_GET_XIANMAI_LOGS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_LOGS);

            /** S_GET_XIANMAI_LOGS isSelf. */
            public isSelf: boolean;

            /** S_GET_XIANMAI_LOGS logs. */
            public logs: com.message.IXIAN_MAI_LOG[];

            /**
             * Encodes the specified S_GET_XIANMAI_LOGS message. Does not implicitly {@link com.message.S_GET_XIANMAI_LOGS.verify|verify} messages.
             * @param message S_GET_XIANMAI_LOGS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_LOGS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_LOGS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_LOGS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_LOGS;
        }

        /** Properties of a XIAN_MAI_LOG. */
        interface IXIAN_MAI_LOG {

            /** XIAN_MAI_LOG playerId */
            playerId?: (number|Long|null);

            /** XIAN_MAI_LOG playerName */
            playerName?: (string|null);

            /** XIAN_MAI_LOG bePlayerId */
            bePlayerId?: (number|Long|null);

            /** XIAN_MAI_LOG bePlayerName */
            bePlayerName?: (string|null);

            /** XIAN_MAI_LOG params */
            params?: (number|null);

            /** XIAN_MAI_LOG type */
            type?: (number|null);

            /** XIAN_MAI_LOG xianMaiId */
            xianMaiId?: (number|null);
        }

        /** Represents a XIAN_MAI_LOG. */
        class XIAN_MAI_LOG implements IXIAN_MAI_LOG {

            /**
             * Constructs a new XIAN_MAI_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IXIAN_MAI_LOG);

            /** XIAN_MAI_LOG playerId. */
            public playerId: (number|Long);

            /** XIAN_MAI_LOG playerName. */
            public playerName: string;

            /** XIAN_MAI_LOG bePlayerId. */
            public bePlayerId: (number|Long);

            /** XIAN_MAI_LOG bePlayerName. */
            public bePlayerName: string;

            /** XIAN_MAI_LOG params. */
            public params: number;

            /** XIAN_MAI_LOG type. */
            public type: number;

            /** XIAN_MAI_LOG xianMaiId. */
            public xianMaiId: number;

            /**
             * Encodes the specified XIAN_MAI_LOG message. Does not implicitly {@link com.message.XIAN_MAI_LOG.verify|verify} messages.
             * @param message XIAN_MAI_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IXIAN_MAI_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a XIAN_MAI_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns XIAN_MAI_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.XIAN_MAI_LOG;
        }

        /** Properties of a C_GET_XIANMAI_TEACH_UP. */
        interface IC_GET_XIANMAI_TEACH_UP {

            /** C_GET_XIANMAI_TEACH_UP teachLevel */
            teachLevel?: (number|null);
        }

        /** Represents a C_GET_XIANMAI_TEACH_UP. */
        class C_GET_XIANMAI_TEACH_UP implements IC_GET_XIANMAI_TEACH_UP {

            /**
             * Constructs a new C_GET_XIANMAI_TEACH_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_TEACH_UP);

            /** C_GET_XIANMAI_TEACH_UP teachLevel. */
            public teachLevel: number;

            /**
             * Encodes the specified C_GET_XIANMAI_TEACH_UP message. Does not implicitly {@link com.message.C_GET_XIANMAI_TEACH_UP.verify|verify} messages.
             * @param message C_GET_XIANMAI_TEACH_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_TEACH_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_TEACH_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_TEACH_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_TEACH_UP;
        }

        /** Properties of a S_GET_XIANMAI_TEACH_UP. */
        interface IS_GET_XIANMAI_TEACH_UP {

            /** S_GET_XIANMAI_TEACH_UP teachLevel */
            teachLevel?: (number|null);

            /** S_GET_XIANMAI_TEACH_UP totalTime */
            totalTime?: (number|null);
        }

        /** Represents a S_GET_XIANMAI_TEACH_UP. */
        class S_GET_XIANMAI_TEACH_UP implements IS_GET_XIANMAI_TEACH_UP {

            /**
             * Constructs a new S_GET_XIANMAI_TEACH_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_TEACH_UP);

            /** S_GET_XIANMAI_TEACH_UP teachLevel. */
            public teachLevel: number;

            /** S_GET_XIANMAI_TEACH_UP totalTime. */
            public totalTime: number;

            /**
             * Encodes the specified S_GET_XIANMAI_TEACH_UP message. Does not implicitly {@link com.message.S_GET_XIANMAI_TEACH_UP.verify|verify} messages.
             * @param message S_GET_XIANMAI_TEACH_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_TEACH_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_TEACH_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_TEACH_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_TEACH_UP;
        }

        /** Properties of a C_GET_XIANMAI_BUY_TIMES. */
        interface IC_GET_XIANMAI_BUY_TIMES {

            /** C_GET_XIANMAI_BUY_TIMES buyTimes */
            buyTimes?: (number|null);
        }

        /** Represents a C_GET_XIANMAI_BUY_TIMES. */
        class C_GET_XIANMAI_BUY_TIMES implements IC_GET_XIANMAI_BUY_TIMES {

            /**
             * Constructs a new C_GET_XIANMAI_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XIANMAI_BUY_TIMES);

            /** C_GET_XIANMAI_BUY_TIMES buyTimes. */
            public buyTimes: number;

            /**
             * Encodes the specified C_GET_XIANMAI_BUY_TIMES message. Does not implicitly {@link com.message.C_GET_XIANMAI_BUY_TIMES.verify|verify} messages.
             * @param message C_GET_XIANMAI_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XIANMAI_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XIANMAI_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XIANMAI_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XIANMAI_BUY_TIMES;
        }

        /** Properties of a S_GET_XIANMAI_BUY_TIMES. */
        interface IS_GET_XIANMAI_BUY_TIMES {

            /** S_GET_XIANMAI_BUY_TIMES buyTimes */
            buyTimes?: (number|null);

            /** S_GET_XIANMAI_BUY_TIMES playTimes */
            playTimes?: (number|null);
        }

        /** Represents a S_GET_XIANMAI_BUY_TIMES. */
        class S_GET_XIANMAI_BUY_TIMES implements IS_GET_XIANMAI_BUY_TIMES {

            /**
             * Constructs a new S_GET_XIANMAI_BUY_TIMES.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XIANMAI_BUY_TIMES);

            /** S_GET_XIANMAI_BUY_TIMES buyTimes. */
            public buyTimes: number;

            /** S_GET_XIANMAI_BUY_TIMES playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified S_GET_XIANMAI_BUY_TIMES message. Does not implicitly {@link com.message.S_GET_XIANMAI_BUY_TIMES.verify|verify} messages.
             * @param message S_GET_XIANMAI_BUY_TIMES message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XIANMAI_BUY_TIMES, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XIANMAI_BUY_TIMES message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XIANMAI_BUY_TIMES
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XIANMAI_BUY_TIMES;
        }

        /** Properties of a CROSS_C_GET_XIANMAI_INFO. */
        interface ICROSS_C_GET_XIANMAI_INFO {

            /** CROSS_C_GET_XIANMAI_INFO serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_XIANMAI_INFO playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_GET_XIANMAI_INFO. */
        class CROSS_C_GET_XIANMAI_INFO implements ICROSS_C_GET_XIANMAI_INFO {

            /**
             * Constructs a new CROSS_C_GET_XIANMAI_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_XIANMAI_INFO);

            /** CROSS_C_GET_XIANMAI_INFO serverId. */
            public serverId: number;

            /** CROSS_C_GET_XIANMAI_INFO playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_GET_XIANMAI_INFO message. Does not implicitly {@link com.message.CROSS_C_GET_XIANMAI_INFO.verify|verify} messages.
             * @param message CROSS_C_GET_XIANMAI_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_XIANMAI_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_XIANMAI_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_XIANMAI_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_XIANMAI_INFO;
        }

        /** Properties of a CROSS_S_GET_XIANMAI_INFO. */
        interface ICROSS_S_GET_XIANMAI_INFO {

            /** CROSS_S_GET_XIANMAI_INFO infos */
            infos?: (com.message.IXIAN_MAIN_INFO[]|null);

            /** CROSS_S_GET_XIANMAI_INFO playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GET_XIANMAI_INFO. */
        class CROSS_S_GET_XIANMAI_INFO implements ICROSS_S_GET_XIANMAI_INFO {

            /**
             * Constructs a new CROSS_S_GET_XIANMAI_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_XIANMAI_INFO);

            /** CROSS_S_GET_XIANMAI_INFO infos. */
            public infos: com.message.IXIAN_MAIN_INFO[];

            /** CROSS_S_GET_XIANMAI_INFO playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GET_XIANMAI_INFO message. Does not implicitly {@link com.message.CROSS_S_GET_XIANMAI_INFO.verify|verify} messages.
             * @param message CROSS_S_GET_XIANMAI_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_XIANMAI_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_XIANMAI_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_XIANMAI_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_XIANMAI_INFO;
        }

        /** Properties of a CROSS_C_GET_XIANMAI_PLAYER. */
        interface ICROSS_C_GET_XIANMAI_PLAYER {

            /** CROSS_C_GET_XIANMAI_PLAYER serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_XIANMAI_PLAYER playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_XIANMAI_PLAYER xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_C_GET_XIANMAI_PLAYER bePlayerId */
            bePlayerId?: (number|Long|null);

            /** CROSS_C_GET_XIANMAI_PLAYER type */
            type?: (number|null);
        }

        /** Represents a CROSS_C_GET_XIANMAI_PLAYER. */
        class CROSS_C_GET_XIANMAI_PLAYER implements ICROSS_C_GET_XIANMAI_PLAYER {

            /**
             * Constructs a new CROSS_C_GET_XIANMAI_PLAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_XIANMAI_PLAYER);

            /** CROSS_C_GET_XIANMAI_PLAYER serverId. */
            public serverId: number;

            /** CROSS_C_GET_XIANMAI_PLAYER playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_XIANMAI_PLAYER xianMaiId. */
            public xianMaiId: number;

            /** CROSS_C_GET_XIANMAI_PLAYER bePlayerId. */
            public bePlayerId: (number|Long);

            /** CROSS_C_GET_XIANMAI_PLAYER type. */
            public type: number;

            /**
             * Encodes the specified CROSS_C_GET_XIANMAI_PLAYER message. Does not implicitly {@link com.message.CROSS_C_GET_XIANMAI_PLAYER.verify|verify} messages.
             * @param message CROSS_C_GET_XIANMAI_PLAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_XIANMAI_PLAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_XIANMAI_PLAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_XIANMAI_PLAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_XIANMAI_PLAYER;
        }

        /** Properties of a CROSS_S_GET_XIANMAI_PLAYER. */
        interface ICROSS_S_GET_XIANMAI_PLAYER {

            /** CROSS_S_GET_XIANMAI_PLAYER playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_GET_XIANMAI_PLAYER xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_S_GET_XIANMAI_PLAYER leaveTime */
            leaveTime?: (number|Long|null);

            /** CROSS_S_GET_XIANMAI_PLAYER myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_S_GET_XIANMAI_PLAYER guildId */
            guildId?: (number|Long|null);

            /** CROSS_S_GET_XIANMAI_PLAYER guildName */
            guildName?: (string|null);

            /** CROSS_S_GET_XIANMAI_PLAYER bePlayerId */
            bePlayerId?: (number|Long|null);

            /** CROSS_S_GET_XIANMAI_PLAYER type */
            type?: (number|null);

            /** CROSS_S_GET_XIANMAI_PLAYER beSneakTimes */
            beSneakTimes?: (number|null);

            /** CROSS_S_GET_XIANMAI_PLAYER sneakTime */
            sneakTime?: (number|Long|null);

            /** CROSS_S_GET_XIANMAI_PLAYER addTimes */
            addTimes?: (number|null);
        }

        /** Represents a CROSS_S_GET_XIANMAI_PLAYER. */
        class CROSS_S_GET_XIANMAI_PLAYER implements ICROSS_S_GET_XIANMAI_PLAYER {

            /**
             * Constructs a new CROSS_S_GET_XIANMAI_PLAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_XIANMAI_PLAYER);

            /** CROSS_S_GET_XIANMAI_PLAYER playerId. */
            public playerId: (number|Long);

            /** CROSS_S_GET_XIANMAI_PLAYER xianMaiId. */
            public xianMaiId: number;

            /** CROSS_S_GET_XIANMAI_PLAYER leaveTime. */
            public leaveTime: (number|Long);

            /** CROSS_S_GET_XIANMAI_PLAYER myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /** CROSS_S_GET_XIANMAI_PLAYER guildId. */
            public guildId: (number|Long);

            /** CROSS_S_GET_XIANMAI_PLAYER guildName. */
            public guildName: string;

            /** CROSS_S_GET_XIANMAI_PLAYER bePlayerId. */
            public bePlayerId: (number|Long);

            /** CROSS_S_GET_XIANMAI_PLAYER type. */
            public type: number;

            /** CROSS_S_GET_XIANMAI_PLAYER beSneakTimes. */
            public beSneakTimes: number;

            /** CROSS_S_GET_XIANMAI_PLAYER sneakTime. */
            public sneakTime: (number|Long);

            /** CROSS_S_GET_XIANMAI_PLAYER addTimes. */
            public addTimes: number;

            /**
             * Encodes the specified CROSS_S_GET_XIANMAI_PLAYER message. Does not implicitly {@link com.message.CROSS_S_GET_XIANMAI_PLAYER.verify|verify} messages.
             * @param message CROSS_S_GET_XIANMAI_PLAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_XIANMAI_PLAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_XIANMAI_PLAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_XIANMAI_PLAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_XIANMAI_PLAYER;
        }

        /** Properties of a CROSS_C_XIANMAI_ADDTIME. */
        interface ICROSS_C_XIANMAI_ADDTIME {

            /** CROSS_C_XIANMAI_ADDTIME serverId */
            serverId?: (number|null);

            /** CROSS_C_XIANMAI_ADDTIME playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_XIANMAI_ADDTIME xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_C_XIANMAI_ADDTIME type */
            type?: (number|null);
        }

        /** Represents a CROSS_C_XIANMAI_ADDTIME. */
        class CROSS_C_XIANMAI_ADDTIME implements ICROSS_C_XIANMAI_ADDTIME {

            /**
             * Constructs a new CROSS_C_XIANMAI_ADDTIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_XIANMAI_ADDTIME);

            /** CROSS_C_XIANMAI_ADDTIME serverId. */
            public serverId: number;

            /** CROSS_C_XIANMAI_ADDTIME playerId. */
            public playerId: (number|Long);

            /** CROSS_C_XIANMAI_ADDTIME xianMaiId. */
            public xianMaiId: number;

            /** CROSS_C_XIANMAI_ADDTIME type. */
            public type: number;

            /**
             * Encodes the specified CROSS_C_XIANMAI_ADDTIME message. Does not implicitly {@link com.message.CROSS_C_XIANMAI_ADDTIME.verify|verify} messages.
             * @param message CROSS_C_XIANMAI_ADDTIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_XIANMAI_ADDTIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_XIANMAI_ADDTIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_XIANMAI_ADDTIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_XIANMAI_ADDTIME;
        }

        /** Properties of a CROSS_S_XIANMAI_ADDTIME. */
        interface ICROSS_S_XIANMAI_ADDTIME {

            /** CROSS_S_XIANMAI_ADDTIME playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_ADDTIME xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_S_XIANMAI_ADDTIME leaveTime */
            leaveTime?: (number|Long|null);

            /** CROSS_S_XIANMAI_ADDTIME bePlayerId */
            bePlayerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_ADDTIME type */
            type?: (number|null);
        }

        /** Represents a CROSS_S_XIANMAI_ADDTIME. */
        class CROSS_S_XIANMAI_ADDTIME implements ICROSS_S_XIANMAI_ADDTIME {

            /**
             * Constructs a new CROSS_S_XIANMAI_ADDTIME.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_XIANMAI_ADDTIME);

            /** CROSS_S_XIANMAI_ADDTIME playerId. */
            public playerId: (number|Long);

            /** CROSS_S_XIANMAI_ADDTIME xianMaiId. */
            public xianMaiId: number;

            /** CROSS_S_XIANMAI_ADDTIME leaveTime. */
            public leaveTime: (number|Long);

            /** CROSS_S_XIANMAI_ADDTIME bePlayerId. */
            public bePlayerId: (number|Long);

            /** CROSS_S_XIANMAI_ADDTIME type. */
            public type: number;

            /**
             * Encodes the specified CROSS_S_XIANMAI_ADDTIME message. Does not implicitly {@link com.message.CROSS_S_XIANMAI_ADDTIME.verify|verify} messages.
             * @param message CROSS_S_XIANMAI_ADDTIME message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_XIANMAI_ADDTIME, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_XIANMAI_ADDTIME message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_XIANMAI_ADDTIME
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_XIANMAI_ADDTIME;
        }

        /** Properties of a CROSS_C_XIANMAI_GIVEUP. */
        interface ICROSS_C_XIANMAI_GIVEUP {

            /** CROSS_C_XIANMAI_GIVEUP serverId */
            serverId?: (number|null);

            /** CROSS_C_XIANMAI_GIVEUP playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_XIANMAI_GIVEUP xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_C_XIANMAI_GIVEUP isSend */
            isSend?: (boolean|null);
        }

        /** Represents a CROSS_C_XIANMAI_GIVEUP. */
        class CROSS_C_XIANMAI_GIVEUP implements ICROSS_C_XIANMAI_GIVEUP {

            /**
             * Constructs a new CROSS_C_XIANMAI_GIVEUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_XIANMAI_GIVEUP);

            /** CROSS_C_XIANMAI_GIVEUP serverId. */
            public serverId: number;

            /** CROSS_C_XIANMAI_GIVEUP playerId. */
            public playerId: (number|Long);

            /** CROSS_C_XIANMAI_GIVEUP xianMaiId. */
            public xianMaiId: number;

            /** CROSS_C_XIANMAI_GIVEUP isSend. */
            public isSend: boolean;

            /**
             * Encodes the specified CROSS_C_XIANMAI_GIVEUP message. Does not implicitly {@link com.message.CROSS_C_XIANMAI_GIVEUP.verify|verify} messages.
             * @param message CROSS_C_XIANMAI_GIVEUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_XIANMAI_GIVEUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_XIANMAI_GIVEUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_XIANMAI_GIVEUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_XIANMAI_GIVEUP;
        }

        /** Properties of a CROSS_S_XIANMAI_GIVEUP. */
        interface ICROSS_S_XIANMAI_GIVEUP {

            /** CROSS_S_XIANMAI_GIVEUP playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_GIVEUP xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_S_XIANMAI_GIVEUP hadTime */
            hadTime?: (number|Long|null);

            /** CROSS_S_XIANMAI_GIVEUP isSend */
            isSend?: (boolean|null);

            /** CROSS_S_XIANMAI_GIVEUP sneakTime */
            sneakTime?: (number|Long|null);

            /** CROSS_S_XIANMAI_GIVEUP baseTime */
            baseTime?: (number|Long|null);
        }

        /** Represents a CROSS_S_XIANMAI_GIVEUP. */
        class CROSS_S_XIANMAI_GIVEUP implements ICROSS_S_XIANMAI_GIVEUP {

            /**
             * Constructs a new CROSS_S_XIANMAI_GIVEUP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_XIANMAI_GIVEUP);

            /** CROSS_S_XIANMAI_GIVEUP playerId. */
            public playerId: (number|Long);

            /** CROSS_S_XIANMAI_GIVEUP xianMaiId. */
            public xianMaiId: number;

            /** CROSS_S_XIANMAI_GIVEUP hadTime. */
            public hadTime: (number|Long);

            /** CROSS_S_XIANMAI_GIVEUP isSend. */
            public isSend: boolean;

            /** CROSS_S_XIANMAI_GIVEUP sneakTime. */
            public sneakTime: (number|Long);

            /** CROSS_S_XIANMAI_GIVEUP baseTime. */
            public baseTime: (number|Long);

            /**
             * Encodes the specified CROSS_S_XIANMAI_GIVEUP message. Does not implicitly {@link com.message.CROSS_S_XIANMAI_GIVEUP.verify|verify} messages.
             * @param message CROSS_S_XIANMAI_GIVEUP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_XIANMAI_GIVEUP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_XIANMAI_GIVEUP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_XIANMAI_GIVEUP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_XIANMAI_GIVEUP;
        }

        /** Properties of a CROSS_C_XIANMAI_LOGS. */
        interface ICROSS_C_XIANMAI_LOGS {

            /** CROSS_C_XIANMAI_LOGS serverId */
            serverId?: (number|null);

            /** CROSS_C_XIANMAI_LOGS playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_C_XIANMAI_LOGS. */
        class CROSS_C_XIANMAI_LOGS implements ICROSS_C_XIANMAI_LOGS {

            /**
             * Constructs a new CROSS_C_XIANMAI_LOGS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_XIANMAI_LOGS);

            /** CROSS_C_XIANMAI_LOGS serverId. */
            public serverId: number;

            /** CROSS_C_XIANMAI_LOGS playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_C_XIANMAI_LOGS message. Does not implicitly {@link com.message.CROSS_C_XIANMAI_LOGS.verify|verify} messages.
             * @param message CROSS_C_XIANMAI_LOGS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_XIANMAI_LOGS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_XIANMAI_LOGS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_XIANMAI_LOGS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_XIANMAI_LOGS;
        }

        /** Properties of a CROSS_S_XIANMAI_LOGS. */
        interface ICROSS_S_XIANMAI_LOGS {

            /** CROSS_S_XIANMAI_LOGS logs */
            logs?: (com.message.IXIAN_MAI_LOG[]|null);

            /** CROSS_S_XIANMAI_LOGS playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_XIANMAI_LOGS. */
        class CROSS_S_XIANMAI_LOGS implements ICROSS_S_XIANMAI_LOGS {

            /**
             * Constructs a new CROSS_S_XIANMAI_LOGS.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_XIANMAI_LOGS);

            /** CROSS_S_XIANMAI_LOGS logs. */
            public logs: com.message.IXIAN_MAI_LOG[];

            /** CROSS_S_XIANMAI_LOGS playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_XIANMAI_LOGS message. Does not implicitly {@link com.message.CROSS_S_XIANMAI_LOGS.verify|verify} messages.
             * @param message CROSS_S_XIANMAI_LOGS message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_XIANMAI_LOGS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_XIANMAI_LOGS message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_XIANMAI_LOGS
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_XIANMAI_LOGS;
        }

        /** Properties of a CROSS_S_XIANMAI_REWARD. */
        interface ICROSS_S_XIANMAI_REWARD {

            /** CROSS_S_XIANMAI_REWARD xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_S_XIANMAI_REWARD playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_REWARD hadTime */
            hadTime?: (number|Long|null);

            /** CROSS_S_XIANMAI_REWARD isSend */
            isSend?: (boolean|null);

            /** CROSS_S_XIANMAI_REWARD baseTime */
            baseTime?: (number|Long|null);
        }

        /** Represents a CROSS_S_XIANMAI_REWARD. */
        class CROSS_S_XIANMAI_REWARD implements ICROSS_S_XIANMAI_REWARD {

            /**
             * Constructs a new CROSS_S_XIANMAI_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_XIANMAI_REWARD);

            /** CROSS_S_XIANMAI_REWARD xianMaiId. */
            public xianMaiId: number;

            /** CROSS_S_XIANMAI_REWARD playerId. */
            public playerId: (number|Long);

            /** CROSS_S_XIANMAI_REWARD hadTime. */
            public hadTime: (number|Long);

            /** CROSS_S_XIANMAI_REWARD isSend. */
            public isSend: boolean;

            /** CROSS_S_XIANMAI_REWARD baseTime. */
            public baseTime: (number|Long);

            /**
             * Encodes the specified CROSS_S_XIANMAI_REWARD message. Does not implicitly {@link com.message.CROSS_S_XIANMAI_REWARD.verify|verify} messages.
             * @param message CROSS_S_XIANMAI_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_XIANMAI_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_XIANMAI_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_XIANMAI_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_XIANMAI_REWARD;
        }

        /** Properties of a CROSS_S_XIANMAI_GET. */
        interface ICROSS_S_XIANMAI_GET {

            /** CROSS_S_XIANMAI_GET xianMaiId */
            xianMaiId?: (number|null);

            /** CROSS_S_XIANMAI_GET playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_GET createTime */
            createTime?: (number|Long|null);

            /** CROSS_S_XIANMAI_GET isSend */
            isSend?: (boolean|null);

            /** CROSS_S_XIANMAI_GET type */
            type?: (number|null);
        }

        /** Represents a CROSS_S_XIANMAI_GET. */
        class CROSS_S_XIANMAI_GET implements ICROSS_S_XIANMAI_GET {

            /**
             * Constructs a new CROSS_S_XIANMAI_GET.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_XIANMAI_GET);

            /** CROSS_S_XIANMAI_GET xianMaiId. */
            public xianMaiId: number;

            /** CROSS_S_XIANMAI_GET playerId. */
            public playerId: (number|Long);

            /** CROSS_S_XIANMAI_GET createTime. */
            public createTime: (number|Long);

            /** CROSS_S_XIANMAI_GET isSend. */
            public isSend: boolean;

            /** CROSS_S_XIANMAI_GET type. */
            public type: number;

            /**
             * Encodes the specified CROSS_S_XIANMAI_GET message. Does not implicitly {@link com.message.CROSS_S_XIANMAI_GET.verify|verify} messages.
             * @param message CROSS_S_XIANMAI_GET message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_XIANMAI_GET, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_XIANMAI_GET message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_XIANMAI_GET
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_XIANMAI_GET;
        }

        /** Properties of a CROSS_S_XIANMAI_BATTLE_LOG. */
        interface ICROSS_S_XIANMAI_BATTLE_LOG {

            /** CROSS_S_XIANMAI_BATTLE_LOG playerId */
            playerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_BATTLE_LOG aplayerId */
            aplayerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_BATTLE_LOG aplayerName */
            aplayerName?: (string|null);

            /** CROSS_S_XIANMAI_BATTLE_LOG bePlayerId */
            bePlayerId?: (number|Long|null);

            /** CROSS_S_XIANMAI_BATTLE_LOG bePlayerName */
            bePlayerName?: (string|null);

            /** CROSS_S_XIANMAI_BATTLE_LOG params */
            params?: (number|null);

            /** CROSS_S_XIANMAI_BATTLE_LOG type */
            type?: (number|null);

            /** CROSS_S_XIANMAI_BATTLE_LOG xianMaiId */
            xianMaiId?: (number|null);
        }

        /** Represents a CROSS_S_XIANMAI_BATTLE_LOG. */
        class CROSS_S_XIANMAI_BATTLE_LOG implements ICROSS_S_XIANMAI_BATTLE_LOG {

            /**
             * Constructs a new CROSS_S_XIANMAI_BATTLE_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_XIANMAI_BATTLE_LOG);

            /** CROSS_S_XIANMAI_BATTLE_LOG playerId. */
            public playerId: (number|Long);

            /** CROSS_S_XIANMAI_BATTLE_LOG aplayerId. */
            public aplayerId: (number|Long);

            /** CROSS_S_XIANMAI_BATTLE_LOG aplayerName. */
            public aplayerName: string;

            /** CROSS_S_XIANMAI_BATTLE_LOG bePlayerId. */
            public bePlayerId: (number|Long);

            /** CROSS_S_XIANMAI_BATTLE_LOG bePlayerName. */
            public bePlayerName: string;

            /** CROSS_S_XIANMAI_BATTLE_LOG params. */
            public params: number;

            /** CROSS_S_XIANMAI_BATTLE_LOG type. */
            public type: number;

            /** CROSS_S_XIANMAI_BATTLE_LOG xianMaiId. */
            public xianMaiId: number;

            /**
             * Encodes the specified CROSS_S_XIANMAI_BATTLE_LOG message. Does not implicitly {@link com.message.CROSS_S_XIANMAI_BATTLE_LOG.verify|verify} messages.
             * @param message CROSS_S_XIANMAI_BATTLE_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_XIANMAI_BATTLE_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_XIANMAI_BATTLE_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_XIANMAI_BATTLE_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_XIANMAI_BATTLE_LOG;
        }

        /** Properties of a CROSS_C_XIANMAI_BATTLE_PLAYER. */
        interface ICROSS_C_XIANMAI_BATTLE_PLAYER {

            /** CROSS_C_XIANMAI_BATTLE_PLAYER serverId */
            serverId?: (number|null);

            /** CROSS_C_XIANMAI_BATTLE_PLAYER playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_XIANMAI_BATTLE_PLAYER myFighter */
            myFighter?: (com.message.IBattlePlayerMsg|null);
        }

        /** Represents a CROSS_C_XIANMAI_BATTLE_PLAYER. */
        class CROSS_C_XIANMAI_BATTLE_PLAYER implements ICROSS_C_XIANMAI_BATTLE_PLAYER {

            /**
             * Constructs a new CROSS_C_XIANMAI_BATTLE_PLAYER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_XIANMAI_BATTLE_PLAYER);

            /** CROSS_C_XIANMAI_BATTLE_PLAYER serverId. */
            public serverId: number;

            /** CROSS_C_XIANMAI_BATTLE_PLAYER playerId. */
            public playerId: (number|Long);

            /** CROSS_C_XIANMAI_BATTLE_PLAYER myFighter. */
            public myFighter?: (com.message.IBattlePlayerMsg|null);

            /**
             * Encodes the specified CROSS_C_XIANMAI_BATTLE_PLAYER message. Does not implicitly {@link com.message.CROSS_C_XIANMAI_BATTLE_PLAYER.verify|verify} messages.
             * @param message CROSS_C_XIANMAI_BATTLE_PLAYER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_XIANMAI_BATTLE_PLAYER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_XIANMAI_BATTLE_PLAYER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_XIANMAI_BATTLE_PLAYER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_XIANMAI_BATTLE_PLAYER;
        }

        /** Properties of a CROSS_C_GET_XIANMAI_TECH. */
        interface ICROSS_C_GET_XIANMAI_TECH {

            /** CROSS_C_GET_XIANMAI_TECH serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_XIANMAI_TECH playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_XIANMAI_TECH techLevel */
            techLevel?: (number|null);
        }

        /** Represents a CROSS_C_GET_XIANMAI_TECH. */
        class CROSS_C_GET_XIANMAI_TECH implements ICROSS_C_GET_XIANMAI_TECH {

            /**
             * Constructs a new CROSS_C_GET_XIANMAI_TECH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_XIANMAI_TECH);

            /** CROSS_C_GET_XIANMAI_TECH serverId. */
            public serverId: number;

            /** CROSS_C_GET_XIANMAI_TECH playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_XIANMAI_TECH techLevel. */
            public techLevel: number;

            /**
             * Encodes the specified CROSS_C_GET_XIANMAI_TECH message. Does not implicitly {@link com.message.CROSS_C_GET_XIANMAI_TECH.verify|verify} messages.
             * @param message CROSS_C_GET_XIANMAI_TECH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_XIANMAI_TECH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_XIANMAI_TECH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_XIANMAI_TECH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_XIANMAI_TECH;
        }

        /** Properties of a CROSS_S_GET_XIANMAI_TECH. */
        interface ICROSS_S_GET_XIANMAI_TECH {

            /** CROSS_S_GET_XIANMAI_TECH playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GET_XIANMAI_TECH. */
        class CROSS_S_GET_XIANMAI_TECH implements ICROSS_S_GET_XIANMAI_TECH {

            /**
             * Constructs a new CROSS_S_GET_XIANMAI_TECH.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_XIANMAI_TECH);

            /** CROSS_S_GET_XIANMAI_TECH playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GET_XIANMAI_TECH message. Does not implicitly {@link com.message.CROSS_S_GET_XIANMAI_TECH.verify|verify} messages.
             * @param message CROSS_S_GET_XIANMAI_TECH message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_XIANMAI_TECH, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_XIANMAI_TECH message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_XIANMAI_TECH
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_XIANMAI_TECH;
        }

        /** Properties of a CROSS_C_GET_XIANMAI_GUILD. */
        interface ICROSS_C_GET_XIANMAI_GUILD {

            /** CROSS_C_GET_XIANMAI_GUILD serverId */
            serverId?: (number|null);

            /** CROSS_C_GET_XIANMAI_GUILD playerId */
            playerId?: (number|Long|null);

            /** CROSS_C_GET_XIANMAI_GUILD guildId */
            guildId?: (number|Long|null);

            /** CROSS_C_GET_XIANMAI_GUILD name */
            name?: (string|null);
        }

        /** Represents a CROSS_C_GET_XIANMAI_GUILD. */
        class CROSS_C_GET_XIANMAI_GUILD implements ICROSS_C_GET_XIANMAI_GUILD {

            /**
             * Constructs a new CROSS_C_GET_XIANMAI_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_C_GET_XIANMAI_GUILD);

            /** CROSS_C_GET_XIANMAI_GUILD serverId. */
            public serverId: number;

            /** CROSS_C_GET_XIANMAI_GUILD playerId. */
            public playerId: (number|Long);

            /** CROSS_C_GET_XIANMAI_GUILD guildId. */
            public guildId: (number|Long);

            /** CROSS_C_GET_XIANMAI_GUILD name. */
            public name: string;

            /**
             * Encodes the specified CROSS_C_GET_XIANMAI_GUILD message. Does not implicitly {@link com.message.CROSS_C_GET_XIANMAI_GUILD.verify|verify} messages.
             * @param message CROSS_C_GET_XIANMAI_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_C_GET_XIANMAI_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_C_GET_XIANMAI_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_C_GET_XIANMAI_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_C_GET_XIANMAI_GUILD;
        }

        /** Properties of a CROSS_S_GET_XIANMAI_GUILD. */
        interface ICROSS_S_GET_XIANMAI_GUILD {

            /** CROSS_S_GET_XIANMAI_GUILD playerId */
            playerId?: (number|Long|null);
        }

        /** Represents a CROSS_S_GET_XIANMAI_GUILD. */
        class CROSS_S_GET_XIANMAI_GUILD implements ICROSS_S_GET_XIANMAI_GUILD {

            /**
             * Constructs a new CROSS_S_GET_XIANMAI_GUILD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.ICROSS_S_GET_XIANMAI_GUILD);

            /** CROSS_S_GET_XIANMAI_GUILD playerId. */
            public playerId: (number|Long);

            /**
             * Encodes the specified CROSS_S_GET_XIANMAI_GUILD message. Does not implicitly {@link com.message.CROSS_S_GET_XIANMAI_GUILD.verify|verify} messages.
             * @param message CROSS_S_GET_XIANMAI_GUILD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.ICROSS_S_GET_XIANMAI_GUILD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a CROSS_S_GET_XIANMAI_GUILD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CROSS_S_GET_XIANMAI_GUILD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.CROSS_S_GET_XIANMAI_GUILD;
        }

        /** Properties of a C_XIANG_MO_LU_INFO. */
        interface IC_XIANG_MO_LU_INFO {
        }

        /** Represents a C_XIANG_MO_LU_INFO. */
        class C_XIANG_MO_LU_INFO implements IC_XIANG_MO_LU_INFO {

            /**
             * Constructs a new C_XIANG_MO_LU_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XIANG_MO_LU_INFO);

            /**
             * Encodes the specified C_XIANG_MO_LU_INFO message. Does not implicitly {@link com.message.C_XIANG_MO_LU_INFO.verify|verify} messages.
             * @param message C_XIANG_MO_LU_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XIANG_MO_LU_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XIANG_MO_LU_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XIANG_MO_LU_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XIANG_MO_LU_INFO;
        }

        /** Properties of a S_XIANG_MO_LU_INFO. */
        interface IS_XIANG_MO_LU_INFO {

            /** S_XIANG_MO_LU_INFO days */
            days?: (com.message.IXIANG_MO_LU_DAY[]|null);
        }

        /** Represents a S_XIANG_MO_LU_INFO. */
        class S_XIANG_MO_LU_INFO implements IS_XIANG_MO_LU_INFO {

            /**
             * Constructs a new S_XIANG_MO_LU_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XIANG_MO_LU_INFO);

            /** S_XIANG_MO_LU_INFO days. */
            public days: com.message.IXIANG_MO_LU_DAY[];

            /**
             * Encodes the specified S_XIANG_MO_LU_INFO message. Does not implicitly {@link com.message.S_XIANG_MO_LU_INFO.verify|verify} messages.
             * @param message S_XIANG_MO_LU_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XIANG_MO_LU_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XIANG_MO_LU_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XIANG_MO_LU_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XIANG_MO_LU_INFO;
        }

        /** Properties of a XIANG_MO_LU_DAY. */
        interface IXIANG_MO_LU_DAY {

            /** XIANG_MO_LU_DAY days */
            days?: (number|null);

            /** XIANG_MO_LU_DAY types */
            types?: (com.message.IXIANG_MO_LU_TYPE[]|null);
        }

        /** Represents a XIANG_MO_LU_DAY. */
        class XIANG_MO_LU_DAY implements IXIANG_MO_LU_DAY {

            /**
             * Constructs a new XIANG_MO_LU_DAY.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IXIANG_MO_LU_DAY);

            /** XIANG_MO_LU_DAY days. */
            public days: number;

            /** XIANG_MO_LU_DAY types. */
            public types: com.message.IXIANG_MO_LU_TYPE[];

            /**
             * Encodes the specified XIANG_MO_LU_DAY message. Does not implicitly {@link com.message.XIANG_MO_LU_DAY.verify|verify} messages.
             * @param message XIANG_MO_LU_DAY message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IXIANG_MO_LU_DAY, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a XIANG_MO_LU_DAY message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns XIANG_MO_LU_DAY
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.XIANG_MO_LU_DAY;
        }

        /** Properties of a XIANG_MO_LU_TYPE. */
        interface IXIANG_MO_LU_TYPE {

            /** XIANG_MO_LU_TYPE showType */
            showType?: (number|null);

            /** XIANG_MO_LU_TYPE finishs */
            finishs?: (number[]|null);

            /** XIANG_MO_LU_TYPE rewards */
            rewards?: (number[]|null);

            /** XIANG_MO_LU_TYPE info */
            info?: (com.message.IXIANG_MO_LU_TASK_INFO[]|null);
        }

        /** Represents a XIANG_MO_LU_TYPE. */
        class XIANG_MO_LU_TYPE implements IXIANG_MO_LU_TYPE {

            /**
             * Constructs a new XIANG_MO_LU_TYPE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IXIANG_MO_LU_TYPE);

            /** XIANG_MO_LU_TYPE showType. */
            public showType: number;

            /** XIANG_MO_LU_TYPE finishs. */
            public finishs: number[];

            /** XIANG_MO_LU_TYPE rewards. */
            public rewards: number[];

            /** XIANG_MO_LU_TYPE info. */
            public info: com.message.IXIANG_MO_LU_TASK_INFO[];

            /**
             * Encodes the specified XIANG_MO_LU_TYPE message. Does not implicitly {@link com.message.XIANG_MO_LU_TYPE.verify|verify} messages.
             * @param message XIANG_MO_LU_TYPE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IXIANG_MO_LU_TYPE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a XIANG_MO_LU_TYPE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns XIANG_MO_LU_TYPE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.XIANG_MO_LU_TYPE;
        }

        /** Properties of a XIANG_MO_LU_TASK_INFO. */
        interface IXIANG_MO_LU_TASK_INFO {

            /** XIANG_MO_LU_TASK_INFO id */
            id?: (number|null);

            /** XIANG_MO_LU_TASK_INFO value */
            value?: (number|null);
        }

        /** Represents a XIANG_MO_LU_TASK_INFO. */
        class XIANG_MO_LU_TASK_INFO implements IXIANG_MO_LU_TASK_INFO {

            /**
             * Constructs a new XIANG_MO_LU_TASK_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IXIANG_MO_LU_TASK_INFO);

            /** XIANG_MO_LU_TASK_INFO id. */
            public id: number;

            /** XIANG_MO_LU_TASK_INFO value. */
            public value: number;

            /**
             * Encodes the specified XIANG_MO_LU_TASK_INFO message. Does not implicitly {@link com.message.XIANG_MO_LU_TASK_INFO.verify|verify} messages.
             * @param message XIANG_MO_LU_TASK_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IXIANG_MO_LU_TASK_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a XIANG_MO_LU_TASK_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns XIANG_MO_LU_TASK_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.XIANG_MO_LU_TASK_INFO;
        }

        /** Properties of a C_XIANG_MO_LU_REWARD. */
        interface IC_XIANG_MO_LU_REWARD {

            /** C_XIANG_MO_LU_REWARD day */
            day?: (number|null);

            /** C_XIANG_MO_LU_REWARD showType */
            showType?: (number|null);

            /** C_XIANG_MO_LU_REWARD taskId */
            taskId?: (number|null);
        }

        /** Represents a C_XIANG_MO_LU_REWARD. */
        class C_XIANG_MO_LU_REWARD implements IC_XIANG_MO_LU_REWARD {

            /**
             * Constructs a new C_XIANG_MO_LU_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XIANG_MO_LU_REWARD);

            /** C_XIANG_MO_LU_REWARD day. */
            public day: number;

            /** C_XIANG_MO_LU_REWARD showType. */
            public showType: number;

            /** C_XIANG_MO_LU_REWARD taskId. */
            public taskId: number;

            /**
             * Encodes the specified C_XIANG_MO_LU_REWARD message. Does not implicitly {@link com.message.C_XIANG_MO_LU_REWARD.verify|verify} messages.
             * @param message C_XIANG_MO_LU_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XIANG_MO_LU_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XIANG_MO_LU_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XIANG_MO_LU_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XIANG_MO_LU_REWARD;
        }

        /** Properties of a S_XIANG_MO_LU_REWARD. */
        interface IS_XIANG_MO_LU_REWARD {

            /** S_XIANG_MO_LU_REWARD day */
            day?: (number|null);

            /** S_XIANG_MO_LU_REWARD showType */
            showType?: (number|null);

            /** S_XIANG_MO_LU_REWARD taskId */
            taskId?: (number|null);

            /** S_XIANG_MO_LU_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_XIANG_MO_LU_REWARD. */
        class S_XIANG_MO_LU_REWARD implements IS_XIANG_MO_LU_REWARD {

            /**
             * Constructs a new S_XIANG_MO_LU_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XIANG_MO_LU_REWARD);

            /** S_XIANG_MO_LU_REWARD day. */
            public day: number;

            /** S_XIANG_MO_LU_REWARD showType. */
            public showType: number;

            /** S_XIANG_MO_LU_REWARD taskId. */
            public taskId: number;

            /** S_XIANG_MO_LU_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_XIANG_MO_LU_REWARD message. Does not implicitly {@link com.message.S_XIANG_MO_LU_REWARD.verify|verify} messages.
             * @param message S_XIANG_MO_LU_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XIANG_MO_LU_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XIANG_MO_LU_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XIANG_MO_LU_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XIANG_MO_LU_REWARD;
        }

        /** Properties of a S_XIANG_MO_LU_TASK. */
        interface IS_XIANG_MO_LU_TASK {

            /** S_XIANG_MO_LU_TASK day */
            day?: (number|null);

            /** S_XIANG_MO_LU_TASK showType */
            showType?: (number|null);

            /** S_XIANG_MO_LU_TASK task */
            task?: (com.message.IXIANG_MO_LU_TASK_INFO|null);
        }

        /** Represents a S_XIANG_MO_LU_TASK. */
        class S_XIANG_MO_LU_TASK implements IS_XIANG_MO_LU_TASK {

            /**
             * Constructs a new S_XIANG_MO_LU_TASK.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XIANG_MO_LU_TASK);

            /** S_XIANG_MO_LU_TASK day. */
            public day: number;

            /** S_XIANG_MO_LU_TASK showType. */
            public showType: number;

            /** S_XIANG_MO_LU_TASK task. */
            public task?: (com.message.IXIANG_MO_LU_TASK_INFO|null);

            /**
             * Encodes the specified S_XIANG_MO_LU_TASK message. Does not implicitly {@link com.message.S_XIANG_MO_LU_TASK.verify|verify} messages.
             * @param message S_XIANG_MO_LU_TASK message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XIANG_MO_LU_TASK, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XIANG_MO_LU_TASK message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XIANG_MO_LU_TASK
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XIANG_MO_LU_TASK;
        }

        /** Properties of a XUNBAO_LOG. */
        interface IXUNBAO_LOG {

            /** XUNBAO_LOG playerId */
            playerId?: (number|Long|null);

            /** XUNBAO_LOG playerName */
            playerName?: (string|null);

            /** XUNBAO_LOG itemId */
            itemId?: (number|null);

            /** XUNBAO_LOG itemNum */
            itemNum?: (number|null);
        }

        /** Represents a XUNBAO_LOG. */
        class XUNBAO_LOG implements IXUNBAO_LOG {

            /**
             * Constructs a new XUNBAO_LOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IXUNBAO_LOG);

            /** XUNBAO_LOG playerId. */
            public playerId: (number|Long);

            /** XUNBAO_LOG playerName. */
            public playerName: string;

            /** XUNBAO_LOG itemId. */
            public itemId: number;

            /** XUNBAO_LOG itemNum. */
            public itemNum: number;

            /**
             * Encodes the specified XUNBAO_LOG message. Does not implicitly {@link com.message.XUNBAO_LOG.verify|verify} messages.
             * @param message XUNBAO_LOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IXUNBAO_LOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a XUNBAO_LOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns XUNBAO_LOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.XUNBAO_LOG;
        }

        /** Properties of a C_XUNBAO_GET_RECORD. */
        interface IC_XUNBAO_GET_RECORD {
        }

        /** Represents a C_XUNBAO_GET_RECORD. */
        class C_XUNBAO_GET_RECORD implements IC_XUNBAO_GET_RECORD {

            /**
             * Constructs a new C_XUNBAO_GET_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_GET_RECORD);

            /**
             * Encodes the specified C_XUNBAO_GET_RECORD message. Does not implicitly {@link com.message.C_XUNBAO_GET_RECORD.verify|verify} messages.
             * @param message C_XUNBAO_GET_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_GET_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_GET_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_GET_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_GET_RECORD;
        }

        /** Properties of a S_XUNBAO_GET_RECORD. */
        interface IS_XUNBAO_GET_RECORD {

            /** S_XUNBAO_GET_RECORD xunbao_1_free */
            xunbao_1_free?: (number|null);

            /** S_XUNBAO_GET_RECORD xunbao_lucky_val */
            xunbao_lucky_val?: (number|null);

            /** S_XUNBAO_GET_RECORD xunbao_free_recoverTime */
            xunbao_free_recoverTime?: (number|Long|null);
        }

        /** Represents a S_XUNBAO_GET_RECORD. */
        class S_XUNBAO_GET_RECORD implements IS_XUNBAO_GET_RECORD {

            /**
             * Constructs a new S_XUNBAO_GET_RECORD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_GET_RECORD);

            /** S_XUNBAO_GET_RECORD xunbao_1_free. */
            public xunbao_1_free: number;

            /** S_XUNBAO_GET_RECORD xunbao_lucky_val. */
            public xunbao_lucky_val: number;

            /** S_XUNBAO_GET_RECORD xunbao_free_recoverTime. */
            public xunbao_free_recoverTime: (number|Long);

            /**
             * Encodes the specified S_XUNBAO_GET_RECORD message. Does not implicitly {@link com.message.S_XUNBAO_GET_RECORD.verify|verify} messages.
             * @param message S_XUNBAO_GET_RECORD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_GET_RECORD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_GET_RECORD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_GET_RECORD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_GET_RECORD;
        }

        /** Properties of a C_XUNBAO_START. */
        interface IC_XUNBAO_START {

            /** C_XUNBAO_START xunbao_type */
            xunbao_type?: (number|null);
        }

        /** Represents a C_XUNBAO_START. */
        class C_XUNBAO_START implements IC_XUNBAO_START {

            /**
             * Constructs a new C_XUNBAO_START.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_START);

            /** C_XUNBAO_START xunbao_type. */
            public xunbao_type: number;

            /**
             * Encodes the specified C_XUNBAO_START message. Does not implicitly {@link com.message.C_XUNBAO_START.verify|verify} messages.
             * @param message C_XUNBAO_START message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_START, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_START message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_START
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_START;
        }

        /** Properties of a S_XUNBAO_START. */
        interface IS_XUNBAO_START {

            /** S_XUNBAO_START xunbao_lucky_val */
            xunbao_lucky_val?: (number|null);

            /** S_XUNBAO_START reward */
            reward?: (com.message.IItemMsg[]|null);

            /** S_XUNBAO_START rewardIdList */
            rewardIdList?: (number[]|null);

            /** S_XUNBAO_START recoverTime */
            recoverTime?: (number|Long|null);
        }

        /** Represents a S_XUNBAO_START. */
        class S_XUNBAO_START implements IS_XUNBAO_START {

            /**
             * Constructs a new S_XUNBAO_START.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_START);

            /** S_XUNBAO_START xunbao_lucky_val. */
            public xunbao_lucky_val: number;

            /** S_XUNBAO_START reward. */
            public reward: com.message.IItemMsg[];

            /** S_XUNBAO_START rewardIdList. */
            public rewardIdList: number[];

            /** S_XUNBAO_START recoverTime. */
            public recoverTime: (number|Long);

            /**
             * Encodes the specified S_XUNBAO_START message. Does not implicitly {@link com.message.S_XUNBAO_START.verify|verify} messages.
             * @param message S_XUNBAO_START message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_START, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_START message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_START
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_START;
        }

        /** Properties of a C_XUNBAO_GETLOG. */
        interface IC_XUNBAO_GETLOG {
        }

        /** Represents a C_XUNBAO_GETLOG. */
        class C_XUNBAO_GETLOG implements IC_XUNBAO_GETLOG {

            /**
             * Constructs a new C_XUNBAO_GETLOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_GETLOG);

            /**
             * Encodes the specified C_XUNBAO_GETLOG message. Does not implicitly {@link com.message.C_XUNBAO_GETLOG.verify|verify} messages.
             * @param message C_XUNBAO_GETLOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_GETLOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_GETLOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_GETLOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_GETLOG;
        }

        /** Properties of a S_XUNBAO_GETLOG. */
        interface IS_XUNBAO_GETLOG {

            /** S_XUNBAO_GETLOG xunbaoLog */
            xunbaoLog?: (com.message.IXUNBAO_LOG[]|null);
        }

        /** Represents a S_XUNBAO_GETLOG. */
        class S_XUNBAO_GETLOG implements IS_XUNBAO_GETLOG {

            /**
             * Constructs a new S_XUNBAO_GETLOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_GETLOG);

            /** S_XUNBAO_GETLOG xunbaoLog. */
            public xunbaoLog: com.message.IXUNBAO_LOG[];

            /**
             * Encodes the specified S_XUNBAO_GETLOG message. Does not implicitly {@link com.message.S_XUNBAO_GETLOG.verify|verify} messages.
             * @param message S_XUNBAO_GETLOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_GETLOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_GETLOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_GETLOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_GETLOG;
        }

        /** Properties of a C_XUNBAO_NEW_GET_INFO. */
        interface IC_XUNBAO_NEW_GET_INFO {

            /** C_XUNBAO_NEW_GET_INFO type */
            type?: (number|null);
        }

        /** Represents a C_XUNBAO_NEW_GET_INFO. */
        class C_XUNBAO_NEW_GET_INFO implements IC_XUNBAO_NEW_GET_INFO {

            /**
             * Constructs a new C_XUNBAO_NEW_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_NEW_GET_INFO);

            /** C_XUNBAO_NEW_GET_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_XUNBAO_NEW_GET_INFO message. Does not implicitly {@link com.message.C_XUNBAO_NEW_GET_INFO.verify|verify} messages.
             * @param message C_XUNBAO_NEW_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_NEW_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_NEW_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_NEW_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_NEW_GET_INFO;
        }

        /** Properties of a S_XUNBAO_NEW_GET_INFO. */
        interface IS_XUNBAO_NEW_GET_INFO {

            /** S_XUNBAO_NEW_GET_INFO type */
            type?: (number|null);

            /** S_XUNBAO_NEW_GET_INFO freeTimes */
            freeTimes?: (number|null);

            /** S_XUNBAO_NEW_GET_INFO recoverTime */
            recoverTime?: (number|Long|null);

            /** S_XUNBAO_NEW_GET_INFO totalTimes */
            totalTimes?: (number|null);

            /** S_XUNBAO_NEW_GET_INFO hasTen */
            hasTen?: (boolean|null);
        }

        /** Represents a S_XUNBAO_NEW_GET_INFO. */
        class S_XUNBAO_NEW_GET_INFO implements IS_XUNBAO_NEW_GET_INFO {

            /**
             * Constructs a new S_XUNBAO_NEW_GET_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_NEW_GET_INFO);

            /** S_XUNBAO_NEW_GET_INFO type. */
            public type: number;

            /** S_XUNBAO_NEW_GET_INFO freeTimes. */
            public freeTimes: number;

            /** S_XUNBAO_NEW_GET_INFO recoverTime. */
            public recoverTime: (number|Long);

            /** S_XUNBAO_NEW_GET_INFO totalTimes. */
            public totalTimes: number;

            /** S_XUNBAO_NEW_GET_INFO hasTen. */
            public hasTen: boolean;

            /**
             * Encodes the specified S_XUNBAO_NEW_GET_INFO message. Does not implicitly {@link com.message.S_XUNBAO_NEW_GET_INFO.verify|verify} messages.
             * @param message S_XUNBAO_NEW_GET_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_NEW_GET_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_NEW_GET_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_NEW_GET_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_NEW_GET_INFO;
        }

        /** Properties of a C_XUNBAO_NEW_START. */
        interface IC_XUNBAO_NEW_START {

            /** C_XUNBAO_NEW_START type */
            type?: (number|null);

            /** C_XUNBAO_NEW_START nums */
            nums?: (number|null);
        }

        /** Represents a C_XUNBAO_NEW_START. */
        class C_XUNBAO_NEW_START implements IC_XUNBAO_NEW_START {

            /**
             * Constructs a new C_XUNBAO_NEW_START.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_NEW_START);

            /** C_XUNBAO_NEW_START type. */
            public type: number;

            /** C_XUNBAO_NEW_START nums. */
            public nums: number;

            /**
             * Encodes the specified C_XUNBAO_NEW_START message. Does not implicitly {@link com.message.C_XUNBAO_NEW_START.verify|verify} messages.
             * @param message C_XUNBAO_NEW_START message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_NEW_START, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_NEW_START message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_NEW_START
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_NEW_START;
        }

        /** Properties of a S_XUNBAO_NEW_START. */
        interface IS_XUNBAO_NEW_START {

            /** S_XUNBAO_NEW_START type */
            type?: (number|null);

            /** S_XUNBAO_NEW_START itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_XUNBAO_NEW_START. */
        class S_XUNBAO_NEW_START implements IS_XUNBAO_NEW_START {

            /**
             * Constructs a new S_XUNBAO_NEW_START.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_NEW_START);

            /** S_XUNBAO_NEW_START type. */
            public type: number;

            /** S_XUNBAO_NEW_START itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_XUNBAO_NEW_START message. Does not implicitly {@link com.message.S_XUNBAO_NEW_START.verify|verify} messages.
             * @param message S_XUNBAO_NEW_START message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_NEW_START, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_NEW_START message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_NEW_START
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_NEW_START;
        }

        /** Properties of a C_XUNBAO_NEW_GETLOG. */
        interface IC_XUNBAO_NEW_GETLOG {

            /** C_XUNBAO_NEW_GETLOG type */
            type?: (number|null);
        }

        /** Represents a C_XUNBAO_NEW_GETLOG. */
        class C_XUNBAO_NEW_GETLOG implements IC_XUNBAO_NEW_GETLOG {

            /**
             * Constructs a new C_XUNBAO_NEW_GETLOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_NEW_GETLOG);

            /** C_XUNBAO_NEW_GETLOG type. */
            public type: number;

            /**
             * Encodes the specified C_XUNBAO_NEW_GETLOG message. Does not implicitly {@link com.message.C_XUNBAO_NEW_GETLOG.verify|verify} messages.
             * @param message C_XUNBAO_NEW_GETLOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_NEW_GETLOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_NEW_GETLOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_NEW_GETLOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_NEW_GETLOG;
        }

        /** Properties of a S_XUNBAO_NEW_GETLOG. */
        interface IS_XUNBAO_NEW_GETLOG {

            /** S_XUNBAO_NEW_GETLOG type */
            type?: (number|null);

            /** S_XUNBAO_NEW_GETLOG xunbaoLog */
            xunbaoLog?: (com.message.IXUNBAO_LOG[]|null);
        }

        /** Represents a S_XUNBAO_NEW_GETLOG. */
        class S_XUNBAO_NEW_GETLOG implements IS_XUNBAO_NEW_GETLOG {

            /**
             * Constructs a new S_XUNBAO_NEW_GETLOG.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_NEW_GETLOG);

            /** S_XUNBAO_NEW_GETLOG type. */
            public type: number;

            /** S_XUNBAO_NEW_GETLOG xunbaoLog. */
            public xunbaoLog: com.message.IXUNBAO_LOG[];

            /**
             * Encodes the specified S_XUNBAO_NEW_GETLOG message. Does not implicitly {@link com.message.S_XUNBAO_NEW_GETLOG.verify|verify} messages.
             * @param message S_XUNBAO_NEW_GETLOG message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_NEW_GETLOG, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_NEW_GETLOG message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_NEW_GETLOG
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_NEW_GETLOG;
        }

        /** Properties of a C_GET_XUNBAO_NEW_SCORE. */
        interface IC_GET_XUNBAO_NEW_SCORE {
        }

        /** Represents a C_GET_XUNBAO_NEW_SCORE. */
        class C_GET_XUNBAO_NEW_SCORE implements IC_GET_XUNBAO_NEW_SCORE {

            /**
             * Constructs a new C_GET_XUNBAO_NEW_SCORE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_XUNBAO_NEW_SCORE);

            /**
             * Encodes the specified C_GET_XUNBAO_NEW_SCORE message. Does not implicitly {@link com.message.C_GET_XUNBAO_NEW_SCORE.verify|verify} messages.
             * @param message C_GET_XUNBAO_NEW_SCORE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_XUNBAO_NEW_SCORE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_XUNBAO_NEW_SCORE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_XUNBAO_NEW_SCORE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_XUNBAO_NEW_SCORE;
        }

        /** Properties of a S_GET_XUNBAO_NEW_SCORE. */
        interface IS_GET_XUNBAO_NEW_SCORE {

            /** S_GET_XUNBAO_NEW_SCORE score */
            score?: (number|null);

            /** S_GET_XUNBAO_NEW_SCORE ids */
            ids?: (number[]|null);
        }

        /** Represents a S_GET_XUNBAO_NEW_SCORE. */
        class S_GET_XUNBAO_NEW_SCORE implements IS_GET_XUNBAO_NEW_SCORE {

            /**
             * Constructs a new S_GET_XUNBAO_NEW_SCORE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_XUNBAO_NEW_SCORE);

            /** S_GET_XUNBAO_NEW_SCORE score. */
            public score: number;

            /** S_GET_XUNBAO_NEW_SCORE ids. */
            public ids: number[];

            /**
             * Encodes the specified S_GET_XUNBAO_NEW_SCORE message. Does not implicitly {@link com.message.S_GET_XUNBAO_NEW_SCORE.verify|verify} messages.
             * @param message S_GET_XUNBAO_NEW_SCORE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_XUNBAO_NEW_SCORE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_XUNBAO_NEW_SCORE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_XUNBAO_NEW_SCORE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_XUNBAO_NEW_SCORE;
        }

        /** Properties of a C_XUNBAO_NEW_CHANGE_HERO. */
        interface IC_XUNBAO_NEW_CHANGE_HERO {

            /** C_XUNBAO_NEW_CHANGE_HERO id */
            id?: (number|null);

            /** C_XUNBAO_NEW_CHANGE_HERO heroId */
            heroId?: (number|null);
        }

        /** Represents a C_XUNBAO_NEW_CHANGE_HERO. */
        class C_XUNBAO_NEW_CHANGE_HERO implements IC_XUNBAO_NEW_CHANGE_HERO {

            /**
             * Constructs a new C_XUNBAO_NEW_CHANGE_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_NEW_CHANGE_HERO);

            /** C_XUNBAO_NEW_CHANGE_HERO id. */
            public id: number;

            /** C_XUNBAO_NEW_CHANGE_HERO heroId. */
            public heroId: number;

            /**
             * Encodes the specified C_XUNBAO_NEW_CHANGE_HERO message. Does not implicitly {@link com.message.C_XUNBAO_NEW_CHANGE_HERO.verify|verify} messages.
             * @param message C_XUNBAO_NEW_CHANGE_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_NEW_CHANGE_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_NEW_CHANGE_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_NEW_CHANGE_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_NEW_CHANGE_HERO;
        }

        /** Properties of a S_XUNBAO_NEW_CHANGE_HERO. */
        interface IS_XUNBAO_NEW_CHANGE_HERO {

            /** S_XUNBAO_NEW_CHANGE_HERO id */
            id?: (number|null);

            /** S_XUNBAO_NEW_CHANGE_HERO heroId */
            heroId?: (number|null);
        }

        /** Represents a S_XUNBAO_NEW_CHANGE_HERO. */
        class S_XUNBAO_NEW_CHANGE_HERO implements IS_XUNBAO_NEW_CHANGE_HERO {

            /**
             * Constructs a new S_XUNBAO_NEW_CHANGE_HERO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_NEW_CHANGE_HERO);

            /** S_XUNBAO_NEW_CHANGE_HERO id. */
            public id: number;

            /** S_XUNBAO_NEW_CHANGE_HERO heroId. */
            public heroId: number;

            /**
             * Encodes the specified S_XUNBAO_NEW_CHANGE_HERO message. Does not implicitly {@link com.message.S_XUNBAO_NEW_CHANGE_HERO.verify|verify} messages.
             * @param message S_XUNBAO_NEW_CHANGE_HERO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_NEW_CHANGE_HERO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_NEW_CHANGE_HERO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_NEW_CHANGE_HERO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_NEW_CHANGE_HERO;
        }

        /** Properties of a C_XUNBAO_WHEEL_INFO. */
        interface IC_XUNBAO_WHEEL_INFO {

            /** C_XUNBAO_WHEEL_INFO wheelType */
            wheelType?: (number|null);
        }

        /** Represents a C_XUNBAO_WHEEL_INFO. */
        class C_XUNBAO_WHEEL_INFO implements IC_XUNBAO_WHEEL_INFO {

            /**
             * Constructs a new C_XUNBAO_WHEEL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_WHEEL_INFO);

            /** C_XUNBAO_WHEEL_INFO wheelType. */
            public wheelType: number;

            /**
             * Encodes the specified C_XUNBAO_WHEEL_INFO message. Does not implicitly {@link com.message.C_XUNBAO_WHEEL_INFO.verify|verify} messages.
             * @param message C_XUNBAO_WHEEL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_WHEEL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_WHEEL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_WHEEL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_WHEEL_INFO;
        }

        /** Properties of a S_XUNBAO_WHEEL_INFO. */
        interface IS_XUNBAO_WHEEL_INFO {

            /** S_XUNBAO_WHEEL_INFO wheelType */
            wheelType?: (number|null);

            /** S_XUNBAO_WHEEL_INFO luckValue */
            luckValue?: (number|null);

            /** S_XUNBAO_WHEEL_INFO playTimes */
            playTimes?: (number|null);

            /** S_XUNBAO_WHEEL_INFO hadRewards */
            hadRewards?: (string|null);

            /** S_XUNBAO_WHEEL_INFO xunbaoLog */
            xunbaoLog?: (com.message.IXUNBAO_LOG[]|null);
        }

        /** Represents a S_XUNBAO_WHEEL_INFO. */
        class S_XUNBAO_WHEEL_INFO implements IS_XUNBAO_WHEEL_INFO {

            /**
             * Constructs a new S_XUNBAO_WHEEL_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_WHEEL_INFO);

            /** S_XUNBAO_WHEEL_INFO wheelType. */
            public wheelType: number;

            /** S_XUNBAO_WHEEL_INFO luckValue. */
            public luckValue: number;

            /** S_XUNBAO_WHEEL_INFO playTimes. */
            public playTimes: number;

            /** S_XUNBAO_WHEEL_INFO hadRewards. */
            public hadRewards: string;

            /** S_XUNBAO_WHEEL_INFO xunbaoLog. */
            public xunbaoLog: com.message.IXUNBAO_LOG[];

            /**
             * Encodes the specified S_XUNBAO_WHEEL_INFO message. Does not implicitly {@link com.message.S_XUNBAO_WHEEL_INFO.verify|verify} messages.
             * @param message S_XUNBAO_WHEEL_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_WHEEL_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_WHEEL_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_WHEEL_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_WHEEL_INFO;
        }

        /** Properties of a C_XUNBAO_WHEEL_START. */
        interface IC_XUNBAO_WHEEL_START {

            /** C_XUNBAO_WHEEL_START wheelType */
            wheelType?: (number|null);

            /** C_XUNBAO_WHEEL_START playTimes */
            playTimes?: (number|null);
        }

        /** Represents a C_XUNBAO_WHEEL_START. */
        class C_XUNBAO_WHEEL_START implements IC_XUNBAO_WHEEL_START {

            /**
             * Constructs a new C_XUNBAO_WHEEL_START.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_WHEEL_START);

            /** C_XUNBAO_WHEEL_START wheelType. */
            public wheelType: number;

            /** C_XUNBAO_WHEEL_START playTimes. */
            public playTimes: number;

            /**
             * Encodes the specified C_XUNBAO_WHEEL_START message. Does not implicitly {@link com.message.C_XUNBAO_WHEEL_START.verify|verify} messages.
             * @param message C_XUNBAO_WHEEL_START message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_WHEEL_START, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_WHEEL_START message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_WHEEL_START
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_WHEEL_START;
        }

        /** Properties of a S_XUNBAO_WHEEL_START. */
        interface IS_XUNBAO_WHEEL_START {

            /** S_XUNBAO_WHEEL_START wheelType */
            wheelType?: (number|null);

            /** S_XUNBAO_WHEEL_START playTimes */
            playTimes?: (number|null);

            /** S_XUNBAO_WHEEL_START rewardId */
            rewardId?: (number|null);

            /** S_XUNBAO_WHEEL_START itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_XUNBAO_WHEEL_START luckValue */
            luckValue?: (number|null);

            /** S_XUNBAO_WHEEL_START playTotalTimes */
            playTotalTimes?: (number|null);

            /** S_XUNBAO_WHEEL_START xunbaoLog */
            xunbaoLog?: (com.message.IXUNBAO_LOG[]|null);
        }

        /** Represents a S_XUNBAO_WHEEL_START. */
        class S_XUNBAO_WHEEL_START implements IS_XUNBAO_WHEEL_START {

            /**
             * Constructs a new S_XUNBAO_WHEEL_START.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_WHEEL_START);

            /** S_XUNBAO_WHEEL_START wheelType. */
            public wheelType: number;

            /** S_XUNBAO_WHEEL_START playTimes. */
            public playTimes: number;

            /** S_XUNBAO_WHEEL_START rewardId. */
            public rewardId: number;

            /** S_XUNBAO_WHEEL_START itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_XUNBAO_WHEEL_START luckValue. */
            public luckValue: number;

            /** S_XUNBAO_WHEEL_START playTotalTimes. */
            public playTotalTimes: number;

            /** S_XUNBAO_WHEEL_START xunbaoLog. */
            public xunbaoLog: com.message.IXUNBAO_LOG[];

            /**
             * Encodes the specified S_XUNBAO_WHEEL_START message. Does not implicitly {@link com.message.S_XUNBAO_WHEEL_START.verify|verify} messages.
             * @param message S_XUNBAO_WHEEL_START message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_WHEEL_START, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_WHEEL_START message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_WHEEL_START
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_WHEEL_START;
        }

        /** Properties of a C_XUNBAO_WHEEL_REWARD. */
        interface IC_XUNBAO_WHEEL_REWARD {

            /** C_XUNBAO_WHEEL_REWARD wheelType */
            wheelType?: (number|null);

            /** C_XUNBAO_WHEEL_REWARD rewardId */
            rewardId?: (number|null);
        }

        /** Represents a C_XUNBAO_WHEEL_REWARD. */
        class C_XUNBAO_WHEEL_REWARD implements IC_XUNBAO_WHEEL_REWARD {

            /**
             * Constructs a new C_XUNBAO_WHEEL_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_XUNBAO_WHEEL_REWARD);

            /** C_XUNBAO_WHEEL_REWARD wheelType. */
            public wheelType: number;

            /** C_XUNBAO_WHEEL_REWARD rewardId. */
            public rewardId: number;

            /**
             * Encodes the specified C_XUNBAO_WHEEL_REWARD message. Does not implicitly {@link com.message.C_XUNBAO_WHEEL_REWARD.verify|verify} messages.
             * @param message C_XUNBAO_WHEEL_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_XUNBAO_WHEEL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_XUNBAO_WHEEL_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_XUNBAO_WHEEL_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_XUNBAO_WHEEL_REWARD;
        }

        /** Properties of a S_XUNBAO_WHEEL_REWARD. */
        interface IS_XUNBAO_WHEEL_REWARD {

            /** S_XUNBAO_WHEEL_REWARD wheelType */
            wheelType?: (number|null);

            /** S_XUNBAO_WHEEL_REWARD rewardId */
            rewardId?: (number|null);

            /** S_XUNBAO_WHEEL_REWARD hadRewards */
            hadRewards?: (string|null);

            /** S_XUNBAO_WHEEL_REWARD itemList */
            itemList?: (com.message.IItemListMsg|null);

            /** S_XUNBAO_WHEEL_REWARD luckValue */
            luckValue?: (number|null);
        }

        /** Represents a S_XUNBAO_WHEEL_REWARD. */
        class S_XUNBAO_WHEEL_REWARD implements IS_XUNBAO_WHEEL_REWARD {

            /**
             * Constructs a new S_XUNBAO_WHEEL_REWARD.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_XUNBAO_WHEEL_REWARD);

            /** S_XUNBAO_WHEEL_REWARD wheelType. */
            public wheelType: number;

            /** S_XUNBAO_WHEEL_REWARD rewardId. */
            public rewardId: number;

            /** S_XUNBAO_WHEEL_REWARD hadRewards. */
            public hadRewards: string;

            /** S_XUNBAO_WHEEL_REWARD itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /** S_XUNBAO_WHEEL_REWARD luckValue. */
            public luckValue: number;

            /**
             * Encodes the specified S_XUNBAO_WHEEL_REWARD message. Does not implicitly {@link com.message.S_XUNBAO_WHEEL_REWARD.verify|verify} messages.
             * @param message S_XUNBAO_WHEEL_REWARD message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_XUNBAO_WHEEL_REWARD, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_XUNBAO_WHEEL_REWARD message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_XUNBAO_WHEEL_REWARD
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_XUNBAO_WHEEL_REWARD;
        }

        /** Properties of a C_GET_ZHEN_FA_INFO. */
        interface IC_GET_ZHEN_FA_INFO {

            /** C_GET_ZHEN_FA_INFO type */
            type?: (number|null);
        }

        /** Represents a C_GET_ZHEN_FA_INFO. */
        class C_GET_ZHEN_FA_INFO implements IC_GET_ZHEN_FA_INFO {

            /**
             * Constructs a new C_GET_ZHEN_FA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_GET_ZHEN_FA_INFO);

            /** C_GET_ZHEN_FA_INFO type. */
            public type: number;

            /**
             * Encodes the specified C_GET_ZHEN_FA_INFO message. Does not implicitly {@link com.message.C_GET_ZHEN_FA_INFO.verify|verify} messages.
             * @param message C_GET_ZHEN_FA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_GET_ZHEN_FA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_GET_ZHEN_FA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_GET_ZHEN_FA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_GET_ZHEN_FA_INFO;
        }

        /** Properties of a S_GET_ZHEN_FA_INFO. */
        interface IS_GET_ZHEN_FA_INFO {

            /** S_GET_ZHEN_FA_INFO type */
            type?: (number|null);

            /** S_GET_ZHEN_FA_INFO zhenfaInfo */
            zhenfaInfo?: (com.message.IZhenfaMsg[]|null);

            /** S_GET_ZHEN_FA_INFO fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a S_GET_ZHEN_FA_INFO. */
        class S_GET_ZHEN_FA_INFO implements IS_GET_ZHEN_FA_INFO {

            /**
             * Constructs a new S_GET_ZHEN_FA_INFO.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_GET_ZHEN_FA_INFO);

            /** S_GET_ZHEN_FA_INFO type. */
            public type: number;

            /** S_GET_ZHEN_FA_INFO zhenfaInfo. */
            public zhenfaInfo: com.message.IZhenfaMsg[];

            /** S_GET_ZHEN_FA_INFO fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified S_GET_ZHEN_FA_INFO message. Does not implicitly {@link com.message.S_GET_ZHEN_FA_INFO.verify|verify} messages.
             * @param message S_GET_ZHEN_FA_INFO message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_GET_ZHEN_FA_INFO, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_GET_ZHEN_FA_INFO message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_GET_ZHEN_FA_INFO
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_GET_ZHEN_FA_INFO;
        }

        /** Properties of a ZhenfaMsg. */
        interface IZhenfaMsg {

            /** ZhenfaMsg subType */
            subType?: (number|null);

            /** ZhenfaMsg stage */
            stage?: (number|null);
        }

        /** Represents a ZhenfaMsg. */
        class ZhenfaMsg implements IZhenfaMsg {

            /**
             * Constructs a new ZhenfaMsg.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IZhenfaMsg);

            /** ZhenfaMsg subType. */
            public subType: number;

            /** ZhenfaMsg stage. */
            public stage: number;

            /**
             * Encodes the specified ZhenfaMsg message. Does not implicitly {@link com.message.ZhenfaMsg.verify|verify} messages.
             * @param message ZhenfaMsg message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IZhenfaMsg, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a ZhenfaMsg message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ZhenfaMsg
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.ZhenfaMsg;
        }

        /** Properties of a C_ZHEN_FA_STAR_UP. */
        interface IC_ZHEN_FA_STAR_UP {

            /** C_ZHEN_FA_STAR_UP type */
            type?: (number|null);

            /** C_ZHEN_FA_STAR_UP subType */
            subType?: (number|null);
        }

        /** Represents a C_ZHEN_FA_STAR_UP. */
        class C_ZHEN_FA_STAR_UP implements IC_ZHEN_FA_STAR_UP {

            /**
             * Constructs a new C_ZHEN_FA_STAR_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ZHEN_FA_STAR_UP);

            /** C_ZHEN_FA_STAR_UP type. */
            public type: number;

            /** C_ZHEN_FA_STAR_UP subType. */
            public subType: number;

            /**
             * Encodes the specified C_ZHEN_FA_STAR_UP message. Does not implicitly {@link com.message.C_ZHEN_FA_STAR_UP.verify|verify} messages.
             * @param message C_ZHEN_FA_STAR_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ZHEN_FA_STAR_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ZHEN_FA_STAR_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ZHEN_FA_STAR_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ZHEN_FA_STAR_UP;
        }

        /** Properties of a S_ZHEN_FA_STAR_UP. */
        interface IS_ZHEN_FA_STAR_UP {

            /** S_ZHEN_FA_STAR_UP type */
            type?: (number|null);

            /** S_ZHEN_FA_STAR_UP subType */
            subType?: (number|null);

            /** S_ZHEN_FA_STAR_UP stage */
            stage?: (number|null);

            /** S_ZHEN_FA_STAR_UP fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a S_ZHEN_FA_STAR_UP. */
        class S_ZHEN_FA_STAR_UP implements IS_ZHEN_FA_STAR_UP {

            /**
             * Constructs a new S_ZHEN_FA_STAR_UP.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ZHEN_FA_STAR_UP);

            /** S_ZHEN_FA_STAR_UP type. */
            public type: number;

            /** S_ZHEN_FA_STAR_UP subType. */
            public subType: number;

            /** S_ZHEN_FA_STAR_UP stage. */
            public stage: number;

            /** S_ZHEN_FA_STAR_UP fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified S_ZHEN_FA_STAR_UP message. Does not implicitly {@link com.message.S_ZHEN_FA_STAR_UP.verify|verify} messages.
             * @param message S_ZHEN_FA_STAR_UP message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ZHEN_FA_STAR_UP, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ZHEN_FA_STAR_UP message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ZHEN_FA_STAR_UP
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ZHEN_FA_STAR_UP;
        }

        /** Properties of a C_ZHEN_FA_USE. */
        interface IC_ZHEN_FA_USE {

            /** C_ZHEN_FA_USE type */
            type?: (number|null);
        }

        /** Represents a C_ZHEN_FA_USE. */
        class C_ZHEN_FA_USE implements IC_ZHEN_FA_USE {

            /**
             * Constructs a new C_ZHEN_FA_USE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ZHEN_FA_USE);

            /** C_ZHEN_FA_USE type. */
            public type: number;

            /**
             * Encodes the specified C_ZHEN_FA_USE message. Does not implicitly {@link com.message.C_ZHEN_FA_USE.verify|verify} messages.
             * @param message C_ZHEN_FA_USE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ZHEN_FA_USE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ZHEN_FA_USE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ZHEN_FA_USE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ZHEN_FA_USE;
        }

        /** Properties of a S_ZHEN_FA_USE. */
        interface IS_ZHEN_FA_USE {

            /** S_ZHEN_FA_USE type */
            type?: (number|null);

            /** S_ZHEN_FA_USE fightValue */
            fightValue?: (number|Long|null);
        }

        /** Represents a S_ZHEN_FA_USE. */
        class S_ZHEN_FA_USE implements IS_ZHEN_FA_USE {

            /**
             * Constructs a new S_ZHEN_FA_USE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ZHEN_FA_USE);

            /** S_ZHEN_FA_USE type. */
            public type: number;

            /** S_ZHEN_FA_USE fightValue. */
            public fightValue: (number|Long);

            /**
             * Encodes the specified S_ZHEN_FA_USE message. Does not implicitly {@link com.message.S_ZHEN_FA_USE.verify|verify} messages.
             * @param message S_ZHEN_FA_USE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ZHEN_FA_USE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ZHEN_FA_USE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ZHEN_FA_USE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ZHEN_FA_USE;
        }

        /** Properties of a C_ZHEN_FA_MASTER. */
        interface IC_ZHEN_FA_MASTER {
        }

        /** Represents a C_ZHEN_FA_MASTER. */
        class C_ZHEN_FA_MASTER implements IC_ZHEN_FA_MASTER {

            /**
             * Constructs a new C_ZHEN_FA_MASTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ZHEN_FA_MASTER);

            /**
             * Encodes the specified C_ZHEN_FA_MASTER message. Does not implicitly {@link com.message.C_ZHEN_FA_MASTER.verify|verify} messages.
             * @param message C_ZHEN_FA_MASTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ZHEN_FA_MASTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ZHEN_FA_MASTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ZHEN_FA_MASTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ZHEN_FA_MASTER;
        }

        /** Properties of a S_ZHEN_FA_MASTER. */
        interface IS_ZHEN_FA_MASTER {

            /** S_ZHEN_FA_MASTER star */
            star?: (number|null);
        }

        /** Represents a S_ZHEN_FA_MASTER. */
        class S_ZHEN_FA_MASTER implements IS_ZHEN_FA_MASTER {

            /**
             * Constructs a new S_ZHEN_FA_MASTER.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ZHEN_FA_MASTER);

            /** S_ZHEN_FA_MASTER star. */
            public star: number;

            /**
             * Encodes the specified S_ZHEN_FA_MASTER message. Does not implicitly {@link com.message.S_ZHEN_FA_MASTER.verify|verify} messages.
             * @param message S_ZHEN_FA_MASTER message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ZHEN_FA_MASTER, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ZHEN_FA_MASTER message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ZHEN_FA_MASTER
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ZHEN_FA_MASTER;
        }

        /** Properties of a C_ZHEN_FA_RELIVE. */
        interface IC_ZHEN_FA_RELIVE {

            /** C_ZHEN_FA_RELIVE type */
            type?: (number|null);
        }

        /** Represents a C_ZHEN_FA_RELIVE. */
        class C_ZHEN_FA_RELIVE implements IC_ZHEN_FA_RELIVE {

            /**
             * Constructs a new C_ZHEN_FA_RELIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IC_ZHEN_FA_RELIVE);

            /** C_ZHEN_FA_RELIVE type. */
            public type: number;

            /**
             * Encodes the specified C_ZHEN_FA_RELIVE message. Does not implicitly {@link com.message.C_ZHEN_FA_RELIVE.verify|verify} messages.
             * @param message C_ZHEN_FA_RELIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IC_ZHEN_FA_RELIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C_ZHEN_FA_RELIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C_ZHEN_FA_RELIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.C_ZHEN_FA_RELIVE;
        }

        /** Properties of a S_ZHEN_FA_RELIVE. */
        interface IS_ZHEN_FA_RELIVE {

            /** S_ZHEN_FA_RELIVE type */
            type?: (number|null);

            /** S_ZHEN_FA_RELIVE zhenfaInfo */
            zhenfaInfo?: (com.message.IZhenfaMsg[]|null);

            /** S_ZHEN_FA_RELIVE masterStar */
            masterStar?: (number|null);

            /** S_ZHEN_FA_RELIVE itemList */
            itemList?: (com.message.IItemListMsg|null);
        }

        /** Represents a S_ZHEN_FA_RELIVE. */
        class S_ZHEN_FA_RELIVE implements IS_ZHEN_FA_RELIVE {

            /**
             * Constructs a new S_ZHEN_FA_RELIVE.
             * @param [properties] Properties to set
             */
            constructor(properties?: com.message.IS_ZHEN_FA_RELIVE);

            /** S_ZHEN_FA_RELIVE type. */
            public type: number;

            /** S_ZHEN_FA_RELIVE zhenfaInfo. */
            public zhenfaInfo: com.message.IZhenfaMsg[];

            /** S_ZHEN_FA_RELIVE masterStar. */
            public masterStar: number;

            /** S_ZHEN_FA_RELIVE itemList. */
            public itemList?: (com.message.IItemListMsg|null);

            /**
             * Encodes the specified S_ZHEN_FA_RELIVE message. Does not implicitly {@link com.message.S_ZHEN_FA_RELIVE.verify|verify} messages.
             * @param message S_ZHEN_FA_RELIVE message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: com.message.IS_ZHEN_FA_RELIVE, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S_ZHEN_FA_RELIVE message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S_ZHEN_FA_RELIVE
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): com.message.S_ZHEN_FA_RELIVE;
        }
    }
}
